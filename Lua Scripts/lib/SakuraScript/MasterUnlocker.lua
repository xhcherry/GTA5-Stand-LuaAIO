----function
function GET_MP_INDEX()
    --[[ local IntPTR = memory.alloc_int()
    STATS.STAT_GET_INT(util.joaat("MPPLY_LAST_MP_CHAR"), IntPTR, -1)
    return "MP" .. memory.read_int(IntPTR) ]]
    return "MP" .. util.get_char_slot()
end
function ADD_MP_INDEX(stat)
    local Exceptions = {
        "MP_CHAR_STAT_RALLY_ANIM",
        "MP_CHAR_ARMOUR_1_COUNT",
        "MP_CHAR_ARMOUR_2_COUNT",
        "MP_CHAR_ARMOUR_3_COUNT",
        "MP_CHAR_ARMOUR_4_COUNT",
        "MP_CHAR_ARMOUR_5_COUNT",
    }
    for _, exception in pairs(Exceptions) do
        if stat == exception then
            return GET_MP_INDEX() .. "_" .. stat
        end
    end
    if not string.contains(stat, "MP_") and not string.contains(stat, "MPPLY_") then
        return GET_MP_INDEX() .. "_" .. stat
    end
    return stat
end

----SATA
function STAT_SET_INT(Stat, Value)
    STATS.STAT_SET_INT(util.joaat(ADD_MP_INDEX(Stat)), Value, true)
end
function STAT_SET_BOOL(stat, value)
    STATS.STAT_SET_BOOL(util.joaat(ADD_MP_INDEX(stat)), value, true)
end
function STAT_SET_STRING(stat, value)
    STATS.STAT_SET_STRING(util.joaat(ADD_MP_INDEX(stat)), value, true)
end
function STAT_GET_INT(Stat)
    local IntPTR = memory.alloc_int()
    STATS.STAT_GET_INT(util.joaat(ADD_MP_INDEX(Stat)), IntPTR, -1)
    return memory.read_int(IntPTR)
end
function STAT_GET_FLOAT(stat)
    local FloatPTR = memory.alloc_int()
    STATS.STAT_GET_FLOAT(util.joaat(ADD_MP_INDEX(stat)), FloatPTR, -1)
    return tonumber(string.format("%.3f", memory.read_float(FloatPTR)))
end
function STAT_GET_STRING(stat)
    return STATS.STAT_GET_STRING(util.joaat(ADD_MP_INDEX(stat)), -1)
end
function STAT_GET_BOOL(stat)
    if STAT_GET_INT(stat) ~= 0 then
        return true
    else
        return false
    end
end
function STAT_SET_BOOL(stat, value)
    STATS.STAT_SET_BOOL(util.joaat(ADD_MP_INDEX(stat)), value, true)
end
function STAT_SET_MASKED_INT(stat, value1, value2)
    STATS.STAT_SET_MASKED_INT(util.joaat(ADD_MP_INDEX(stat)), value1, value2, 8, true)
end

function SET_PACKED_STAT_BOOL_CODE(stat, value)
    STATS.SET_PACKED_STAT_BOOL_CODE(stat, value, util.get_char_slot())
end
function GET_PACKED_STAT_BOOL_CODE(stat)
    STATS.GET_PACKED_STAT_BOOL_CODE(stat, util.get_char_slot())
end

----GLOBAL
function SET_INT_GLOBAL(Global, Value)
    memory.write_int(memory.script_global(Global), Value)
end
function SET_INT_TUNABLE_GLOBAL(hash, value)
    memory.write_int(memory.script_global(262145 + memory.tunable_offset(hash)), value)
end
function SET_FLOAT_GLOBAL(global, value)
    memory.write_float(memory.script_global(global), value)
end
function GLOBAL_SET_BIT(global, bit)
    local addr = memory.script_global(global)
    memory.write_int(addr, SET_BIT(memory.read_int(addr), bit))
end
function GLOBAL_SET_BOOL(global, value)
    memory.write_int(memory.script_global(global), value and 1 or 0)
end
function GLOBAL_CLEAR_BIT(global, bit)
    local addr = memory.script_global(global)
    memory.write_int(addr, CLEAR_BIT(memory.read_int(addr), bit))
end
function GET_INT_GLOBAL(global)
    return memory.read_int(memory.script_global(global))
end

----LOCAL
function SET_INT_LOCAL(Script, Local, Value)
    if memory.script_local(Script, Local) ~= 0 then
        memory.write_int(memory.script_local(Script, Local), Value)
    end
end
function SET_FLOAT_LOCAL(Script, Local, Value)
    if memory.script_local(Script, Local) ~= 0 then
        memory.write_float(memory.script_local(Script, Local), Value)
    end
end
function SET_LOCAL_BIT(script, script_local, bit)
    if memory.script_local(script, script_local) ~= 0 then
        local Addr = memory.script_local(script, script_local)
        memory.write_int(Addr, SET_BIT(memory.read_int(Addr), bit))
    end
end
function GET_INT_LOCAL(Script, Local)
    if memory.script_local(Script, Local) ~= 0 then
        local Value = memory.read_int(memory.script_local(Script, Local))
        if Value ~= nil then
            return Value
        end
    end
end










----main
local Unlocker_list = menu.list(Recovery_list, "解锁大师", {}, "")
    local unlocker_DLC = menu.list(Unlocker_list, "DLC内容", {}, "")
        menu.action(unlocker_DLC, "竞技场战争 DLC", {}, "解锁所有竞技场战争奖杯和玩具", function()
            STAT_SET_INT("ARN_BS_TRINKET_TICKERS", -1)
            STAT_SET_INT("ARN_BS_TRINKET_SAVED", -1)
            STAT_SET_INT("AWD_WATCH_YOUR_STEP", 50)
            STAT_SET_INT("AWD_TOWER_OFFENSE", 50)
            STAT_SET_INT("AWD_READY_FOR_WAR", 50)
            STAT_SET_INT("AWD_THROUGH_A_LENS", 50)
            STAT_SET_INT("AWD_SPINNER", 50)
            STAT_SET_INT("AWD_YOUMEANBOOBYTRAPS", 50)
            STAT_SET_INT("AWD_MASTER_BANDITO", 50)
            STAT_SET_INT("AWD_SITTING_DUCK", 50)
            STAT_SET_INT("AWD_CROWDPARTICIPATION", 50)
            STAT_SET_INT("AWD_KILL_OR_BE_KILLED", 50)
            STAT_SET_INT("AWD_MASSIVE_SHUNT", 50)
            STAT_SET_INT("AWD_YOURE_OUTTA_HERE", 200)
            STAT_SET_INT("AWD_WEVE_GOT_ONE", 50)
            STAT_SET_INT("AWD_ARENA_WAGEWORKER", 1000000)
            STAT_SET_INT("AWD_TIME_SERVED", 1000)
            STAT_SET_INT("AWD_TOP_SCORE", 55000)
            STAT_SET_INT("AWD_CAREER_WINNER", 1000)
            STAT_SET_INT("ARENAWARS_SP", 209)
            STAT_SET_INT("ARENAWARS_SKILL_LEVEL", 20)
            STAT_SET_INT("ARENAWARS_SP_LIFETIME", 209)
            STAT_SET_INT("ARENAWARS_AP_TIER", 1000)
            STAT_SET_INT("ARENAWARS_AP_LIFETIME", 47551850)
            STAT_SET_INT("ARENAWARS_CARRER_UNLK", 44)
            STAT_SET_INT("ARN_W_THEME_SCIFI", 1000)
            STAT_SET_INT("ARN_W_THEME_APOC", 1000)
            STAT_SET_INT("ARN_W_THEME_CONS", 1000)
            STAT_SET_INT("ARN_W_PASS_THE_BOMB", 1000)
            STAT_SET_INT("ARN_W_DETONATION", 1000)
            STAT_SET_INT("ARN_W_ARCADE_RACE", 1000)
            STAT_SET_INT("ARN_W_CTF", 1000)
            STAT_SET_INT("ARN_W_TAG_TEAM", 1000)
            STAT_SET_INT("ARN_W_DESTR_DERBY", 1000)
            STAT_SET_INT("ARN_W_CARNAGE", 1000)
            STAT_SET_INT("ARN_W_MONSTER_JAM", 1000)
            STAT_SET_INT("ARN_W_GAMES_MASTERS", 1000)
            STAT_SET_INT("ARN_L_PASS_THE_BOMB", 500)
            STAT_SET_INT("ARN_L_DETONATION", 500)
            STAT_SET_INT("ARN_L_ARCADE_RACE", 500)
            STAT_SET_INT("ARN_L_CTF", 500)
            STAT_SET_INT("ARN_L_TAG_TEAM", 500)
            STAT_SET_INT("ARN_L_DESTR_DERBY", 500)
            STAT_SET_INT("ARN_L_CARNAGE", 500)
            STAT_SET_INT("ARN_L_MONSTER_JAM", 500)
            STAT_SET_INT("ARN_L_GAMES_MASTERS", 500)
            STAT_SET_INT("NUMBER_OF_CHAMP_BOUGHT", 1000)
            STAT_SET_INT("ARN_SPECTATOR_KILLS", 1000)
            STAT_SET_INT("ARN_LIFETIME_KILLS", 1000)
            STAT_SET_INT("ARN_LIFETIME_DEATHS", 500)
            STAT_SET_INT("ARENAWARS_CARRER_WINS", 1000)
            STAT_SET_INT("ARENAWARS_CARRER_WINT", 1000)
            STAT_SET_INT("ARENAWARS_MATCHES_PLYD", 1000)
            STAT_SET_INT("ARENAWARS_MATCHES_PLYDT", 1000)
            STAT_SET_INT("ARN_SPEC_BOX_TIME_MS", 86400000)
            STAT_SET_INT("ARN_SPECTATOR_DRONE", 1000)
            STAT_SET_INT("ARN_SPECTATOR_CAMS", 1000)
            STAT_SET_INT("ARN_SMOKE", 1000)
            STAT_SET_INT("ARN_DRINK", 1000)
            STAT_SET_INT("ARN_VEH_MONSTER", 31000)
            STAT_SET_INT("ARN_VEH_MONSTER", 41000)
            STAT_SET_INT("ARN_VEH_MONSTER", 51000)
            STAT_SET_INT("ARN_VEH_CERBERUS", 1000)
            STAT_SET_INT("ARN_VEH_CERBERUS2", 1000)
            STAT_SET_INT("ARN_VEH_CERBERUS3", 1000)
            STAT_SET_INT("ARN_VEH_BRUISER", 1000)
            STAT_SET_INT("ARN_VEH_BRUISER2", 1000)
            STAT_SET_INT("ARN_VEH_BRUISER3", 1000)
            STAT_SET_INT("ARN_VEH_SLAMVAN4", 1000)
            STAT_SET_INT("ARN_VEH_SLAMVAN5", 1000)
            STAT_SET_INT("ARN_VEH_SLAMVAN6", 1000)
            STAT_SET_INT("ARN_VEH_BRUTUS", 1000)
            STAT_SET_INT("ARN_VEH_BRUTUS2", 1000)
            STAT_SET_INT("ARN_VEH_BRUTUS3", 1000)
            STAT_SET_INT("ARN_VEH_SCARAB", 1000)
            STAT_SET_INT("ARN_VEH_SCARAB2", 1000)
            STAT_SET_INT("ARN_VEH_SCARAB3", 1000)
            STAT_SET_INT("ARN_VEH_DOMINATOR4", 1000)
            STAT_SET_INT("ARN_VEH_DOMINATOR5", 1000)
            STAT_SET_INT("ARN_VEH_DOMINATOR6", 1000)
            STAT_SET_INT("ARN_VEH_IMPALER2", 1000)
            STAT_SET_INT("ARN_VEH_IMPALER3", 1000)
            STAT_SET_INT("ARN_VEH_IMPALER4", 1000)
            STAT_SET_INT("ARN_VEH_ISSI4", 1000)
            STAT_SET_INT("ARN_VEH_ISSI5", 1000)
            STAT_SET_INT("ARN_VEH_ISSI", 61000)
            STAT_SET_INT("ARN_VEH_IMPERATOR", 1000)
            STAT_SET_INT("ARN_VEH_IMPERATOR2", 1000)
            STAT_SET_INT("ARN_VEH_IMPERATOR3", 1000)
            STAT_SET_INT("ARN_VEH_ZR380", 1000)
            STAT_SET_INT("ARN_VEH_ZR3802", 1000)
            STAT_SET_INT("ARN_VEH_ZR3803", 1000)
            STAT_SET_INT("ARN_VEH_DEATHBIKE", 1000)
            STAT_SET_INT("ARN_VEH_DEATHBIKE2", 1000)
            STAT_SET_INT("ARN_VEH_DEATHBIKE3", 1000)
            STAT_SET_BOOL("AWD_BEGINNER", true)
            STAT_SET_BOOL("AWD_FIELD_FILLER", true)
            STAT_SET_BOOL("AWD_ARMCHAIR_RACER", true)
            STAT_SET_BOOL("AWD_LEARNER", true)
            STAT_SET_BOOL("AWD_SUNDAY_DRIVER", true)
            STAT_SET_BOOL("AWD_THE_ROOKIE", true)
            STAT_SET_BOOL("AWD_BUMP_AND_RUN", true)
            STAT_SET_BOOL("AWD_GEAR_HEAD", true)
            STAT_SET_BOOL("AWD_DOOR_SLAMMER", true)
            STAT_SET_BOOL("AWD_HOT_LAP", true)
            STAT_SET_BOOL("AWD_ARENA_AMATEUR", true)
            STAT_SET_BOOL("AWD_PAINT_TRADER", true)
            STAT_SET_BOOL("AWD_SHUNTER", true)
            STAT_SET_BOOL("AWD_JOCK", true)
            STAT_SET_BOOL("AWD_WARRIOR", true)
            STAT_SET_BOOL("AWD_T_BONE", true)
            STAT_SET_BOOL("AWD_MAYHEM", true)
            STAT_SET_BOOL("AWD_WRECKER", true)
            STAT_SET_BOOL("AWD_CRASH_COURSE", true)
            STAT_SET_BOOL("AWD_ARENA_LEGEND", true)
            STAT_SET_BOOL("AWD_PEGASUS", true)
            STAT_SET_BOOL("AWD_UNSTOPPABLE", true)
            STAT_SET_BOOL("AWD_CONTACT_SPORT", true)
        end)
        menu.action(unlocker_DLC, '2020夏日特辑DLC', {}, "", function()
            STAT_SET_BOOL("AWD_KINGOFQUB3D", true)
            STAT_SET_BOOL("AWD_QUBISM", true)
            STAT_SET_BOOL("AWD_QUIBITS", true)
            STAT_SET_BOOL("AWD_GODOFQUB3D", true)
            STAT_SET_BOOL("AWD_GOFOR11TH", true)
            STAT_SET_BOOL("AWD_ELEVENELEVEN", true)
        end)
        menu.action(unlocker_DLC, "洛圣都车友会解锁奖章", {}, "", function()
            STAT_SET_INT("AWD_CAR_CLUB_MEM", 100)
            STAT_SET_INT("AWD_SPRINTRACER", 50)
            STAT_SET_INT("AWD_STREETRACER", 50)
            STAT_SET_INT("AWD_PURSUITRACER", 50)
            STAT_SET_INT("AWD_TEST_CAR", 240)
            STAT_SET_INT("AWD_AUTO_SHOP", 50)
            STAT_SET_INT("AWD_CAR_EXPORT", 100)
            STAT_SET_INT("AWD_GROUNDWORK", 40)
            STAT_SET_INT("AWD_ROBBERY_CONTRACT", 100)
            STAT_SET_INT("AWD_FACES_OF_DEATH", 100)
            STAT_SET_BOOL("AWD_CAR_CLUB", true)
            STAT_SET_BOOL("AWD_PRO_CAR_EXPORT", true)
            STAT_SET_BOOL("AWD_UNION_DEPOSITORY", true)
            STAT_SET_BOOL("AWD_MILITARY_CONVOY", true)
            STAT_SET_BOOL("AWD_FLEECA_BANK", true)
            STAT_SET_BOOL("AWD_FREIGHT_TRAIN", true)
            STAT_SET_BOOL("AWD_BOLINGBROKE_ASS", true)
            STAT_SET_BOOL("AWD_IAA_RAID", true)
            STAT_SET_BOOL("AWD_METH_JOB", true)
            STAT_SET_BOOL("AWD_BUNKER_RAID", true)
            STAT_SET_BOOL("AWD_STRAIGHT_TO_VIDEO", true)
            STAT_SET_BOOL("AWD_MONKEY_C_MONKEY_DO", true)
            STAT_SET_BOOL("AWD_TRAINED_TO_KILL", true)
            STAT_SET_BOOL("AWD_DIRECTOR", true)
        end)

    local UNLOCKER_BUILDING = menu.list(unlocker_DLC, "建筑设施", {}, "")
        menu.action(UNLOCKER_BUILDING, "跳过夜总会前置", {}, "跳过当你第一次购买夜总会后的前置任务: 设备, 员工, 接DJ", function() -- https://www.unknowncheats.me/forum/3735297-post3416.html
            SET_PACKED_STAT_BOOL_CODE(18161, true)
            SET_PACKED_STAT_BOOL_CODE(22067, true)
            SET_PACKED_STAT_BOOL_CODE(22068, true)
        end)
        menu.action(UNLOCKER_BUILDING, "致幻剂实验室设备升级", {}, "", function() -- https://www.unknowncheats.me/forum/3631045-post2754.html
            STAT_SET_INT("AWD_CALLME", 10)
        end)
        menu.action(UNLOCKER_BUILDING, "解锁地堡外星人彩蛋", {}, "", function()
            STAT_SET_INT("LFETIME_BIKER_BUY_COMPLET5", 600)
            STAT_SET_INT("LFETIME_BIKER_BUY_UNDERTA5", 600)
        end)
        menu.action(UNLOCKER_BUILDING, "解锁全部游艇任务", {}, "", function()
            STAT_SET_INT("YACHT_MISSION_PROG", 0)
            STAT_SET_INT("YACHT_MISSION_FLOW", 21845)
            STAT_SET_INT("CASINO_DECORATION_GIFT_1", -1)
        end)

        menu.action(UNLOCKER_BUILDING, "解锁 夜总会奖章", {}, "", function()
            STAT_SET_INT("AWD_DANCE_TO_SOLOMUN", 120)
            STAT_SET_INT("AWD_DANCE_TO_TALEOFUS", 120)
            STAT_SET_INT("AWD_DANCE_TO_DIXON", 120)
            STAT_SET_INT("AWD_DANCE_TO_BLKMAD", 120)
            STAT_SET_INT("AWD_CLUB_DRUNK", 200)
            STAT_SET_INT("NIGHTCLUB_VIP_APPEAR", 700)
            STAT_SET_INT("NIGHTCLUB_JOBS_DONE", 700)
            STAT_SET_INT("NIGHTCLUB_EARNINGS", 20721002)
            STAT_SET_INT("HUB_SALES_COMPLETED", 1001)
            STAT_SET_INT("HUB_EARNINGS", 320721002)
            STAT_SET_INT("DANCE_COMBO_DURATION_MINS", 3600000)
            STAT_SET_INT("NIGHTCLUB_PLAYER_APPEAR", 9506)
            STAT_SET_INT("LIFETIME_HUB_GOODS_SOLD", 784672)
            STAT_SET_INT("LIFETIME_HUB_GOODS_MADE", 507822)
            STAT_SET_INT("DANCEPERFECTOWNCLUB", 120)
            STAT_SET_INT("NUMUNIQUEPLYSINCLUB", 120)
            STAT_SET_INT("DANCETODIFFDJS", 4)
            STAT_SET_INT("NIGHTCLUB_HOTSPOT_TIME_MS", 3600000)
            STAT_SET_INT("NIGHTCLUB_CONT_TOTAL", 20)
            STAT_SET_INT("NIGHTCLUB_CONT_MISSION", -1)
            STAT_SET_INT("CLUB_CONTRABAND_MISSION", 1000)
            STAT_SET_INT("HUB_CONTRABAND_MISSION", 1000)
            STAT_SET_BOOL("AWD_CLUB_HOTSPOT", true)
            STAT_SET_BOOL("AWD_CLUB_CLUBBER", true)
            STAT_SET_BOOL("AWD_CLUB_COORD", true)
        end)
        menu.action(UNLOCKER_BUILDING, "解锁游戏厅奖章", {}, "包含了奖章、玩具和衣服", function()
            STAT_SET_INT("AWD_PREPARATION", 40)
            STAT_SET_INT("AWD_ASLEEPONJOB", 20)
            STAT_SET_INT("AWD_DAICASHCRAB", 100000)
            STAT_SET_INT("AWD_BIGBRO", 40)
            STAT_SET_INT("AWD_SHARPSHOOTER", 40)
            STAT_SET_INT("AWD_RACECHAMP", 40)
            STAT_SET_INT("AWD_BATSWORD", 1000000)
            STAT_SET_INT("AWD_COINPURSE", 950000)
            STAT_SET_INT("AWD_ASTROCHIMP", 3000000)
            STAT_SET_INT("AWD_MASTERFUL", 40000)
            STAT_SET_INT("SCGW_NUM_WINS_GANG_0", 50)
            STAT_SET_INT("SCGW_NUM_WINS_GANG_1", 50)
            STAT_SET_INT("SCGW_NUM_WINS_GANG_2", 50)
            STAT_SET_INT("SCGW_NUM_WINS_GANG_3", 50)
            STAT_SET_INT("CH_ARC_CAB_CLAW_TROPHY", -1)
            STAT_SET_INT("CH_ARC_CAB_LOVE_TROPHY", -1)
            STAT_SET_INT("IAP_MAX_MOON_DIST", INT_MAX)
            STAT_SET_INT("IAP_SCORE_0", 69644)
            STAT_SET_INT("IAP_SCORE_1", 50333)
            STAT_SET_INT("IAP_SCORE_2", 63512)
            STAT_SET_INT("IAP_SCORE_3", 46136)
            STAT_SET_INT("IAP_SCORE_4", 21638)
            STAT_SET_INT("IAP_SCORE_5", 2133)
            STAT_SET_INT("IAP_SCORE_6", 1215)
            STAT_SET_INT("IAP_SCORE_7", 2444)
            STAT_SET_INT("IAP_SCORE_8", 38023)
            STAT_SET_INT("IAP_SCORE_9", 2233)
            STAT_SET_INT("SCGW_SCORE_1", 50)
            STAT_SET_INT("SCGW_SCORE_2", 50)
            STAT_SET_INT("SCGW_SCORE_3", 50)
            STAT_SET_INT("SCGW_SCORE_4", 50)
            STAT_SET_INT("SCGW_SCORE_5", 50)
            STAT_SET_INT("SCGW_SCORE_6", 50)
            STAT_SET_INT("SCGW_SCORE_7", 50)
            STAT_SET_INT("SCGW_SCORE_8", 50)
            STAT_SET_INT("SCGW_SCORE_9", 50)

            for i = 0, 9 do
                STAT_SET_INT("IAP_INITIALS_" .. i, 50)
                STAT_SET_INT("DG_DEFENDER_INITIALS_" .. i, 69644)
                STAT_SET_INT("DG_DEFENDER_SCORE_" .. i, 50)
                STAT_SET_INT("DG_MONKEY_INITIALS_" .. i, 69644)
                STAT_SET_INT("DG_MONKEY_SCORE_" .. i, 50)
                STAT_SET_INT("DG_PENETRATOR_INITIALS_" .. i, 69644)
                STAT_SET_INT("DG_PENETRATOR_SCORE_" .. i, 50)
                STAT_SET_INT("GGSM_INITIALS_" .. i, 69644)
                STAT_SET_INT("GGSM_SCORE_" .. i, 50)
                STAT_SET_INT("TWR_INITIALS_" .. i, 69644)
                STAT_SET_INT("TWR_SCORE_" .. i, 50)
            end

            STAT_SET_BOOL("AWD_SCOPEOUT", true)
            STAT_SET_BOOL("AWD_CREWEDUP", true)
            STAT_SET_BOOL("AWD_MOVINGON", true)
            STAT_SET_BOOL("AWD_PROMOCAMP", true)
            STAT_SET_BOOL("AWD_GUNMAN", true)
            STAT_SET_BOOL("AWD_SMASHNGRAB", true)
            STAT_SET_BOOL("AWD_INPLAINSI", true)
            STAT_SET_BOOL("AWD_UNDETECTED", true)
            STAT_SET_BOOL("AWD_ALLROUND", true)
            STAT_SET_BOOL("AWD_ELITETHEIF", true)
            STAT_SET_BOOL("AWD_PRO", true)
            STAT_SET_BOOL("AWD_SUPPORTACT", true)
            STAT_SET_BOOL("AWD_SHAFTED", true)
            STAT_SET_BOOL("AWD_COLLECTOR", true)
            STAT_SET_BOOL("AWD_DEADEYE", true)
            STAT_SET_BOOL("AWD_PISTOLSATDAWN", true)
            STAT_SET_BOOL("AWD_TRAFFICAVOI", true)
            STAT_SET_BOOL("AWD_CANTCATCHBRA", true)
            STAT_SET_BOOL("AWD_WIZHARD", true)
            STAT_SET_BOOL("AWD_APEESCAPE", true)
            STAT_SET_BOOL("AWD_MONKEYKIND", true)
            STAT_SET_BOOL("AWD_AQUAAPE", true)
            STAT_SET_BOOL("AWD_KEEPFAITH", true)
            STAT_SET_BOOL("AWD_TRUELOVE", true)
            STAT_SET_BOOL("AWD_NEMESIS", true)
            STAT_SET_BOOL("AWD_FRIENDZONED", true)
            STAT_SET_BOOL("IAP_CHALLENGE_0", true)
            STAT_SET_BOOL("IAP_CHALLENGE_1", true)
            STAT_SET_BOOL("IAP_CHALLENGE_2", true)
            STAT_SET_BOOL("IAP_CHALLENGE_3", true)
            STAT_SET_BOOL("IAP_CHALLENGE_4", true)
            STAT_SET_BOOL("IAP_GOLD_TANK", true)
            STAT_SET_BOOL("SCGW_WON_NO_DEATHS", true)
        end)

        menu.action(UNLOCKER_BUILDING, "办公室/摩托帮 满地钱", {}, "点击后再出售一个以上的板条箱或载具货物,出售完成后更换战局即可(满地钱需要账号有2000万以上)", function()
            STAT_SET_INT("LIFETIME_BUY_COMPLETE", 1000)
            STAT_SET_INT("LIFETIME_BUY_UNDERTAKEN", 1000)
            STAT_SET_INT("LIFETIME_SELL_COMPLETE", 1000)
            STAT_SET_INT("LIFETIME_SELL_UNDERTAKEN", 1000)
            STAT_SET_INT("LIFETIME_CONTRA_EARNINGS", 20000000)
            STAT_SET_INT("LIFETIME_BIKER_BUY_COMPLET", 1000)
            STAT_SET_INT("LIFETIME_BIKER_BUY_UNDERTA", 1000)
            STAT_SET_INT("LIFETIME_BIKER_SELL_COMPLET", 1000)
            STAT_SET_INT("LIFETIME_BIKER_SELL_UNDERTA", 1000)
            STAT_SET_INT("LIFETIME_BKR_SELL_EARNINGS0", 20000000)

            for i = 1, 5 do
                STAT_SET_INT("LIFETIME_BIKER_BUY_COMPLET" .. i, 1000)
                STAT_SET_INT("LIFETIME_BIKER_BUY_UNDERTA" .. i, 1000)
                STAT_SET_INT("LIFETIME_BIKER_SELL_COMPLET" .. i, 1000)
                STAT_SET_INT("LIFETIME_BIKER_SELL_UNDERTA" .. i, 1000)
                STAT_SET_INT("LIFETIME_BKR_SELL_EARNINGS" .. i, 20000000)
            end
        end)

    local UNLOCKER_HEISTS = menu.list(Unlocker_list, "解锁抢劫内容", {}, "解锁之前不能解锁的和抢劫有关的东西")
        menu.action(UNLOCKER_HEISTS, "佩里科岛抢劫", {}, "", function()
            STAT_SET_INT("AWD_LOSTANDFOUND", 500000)
            STAT_SET_INT("AWD_SUNSET", 1800000)
            STAT_SET_INT("AWD_TREASURE_HUNTER", 1000000)
            STAT_SET_INT("AWD_WRECK_DIVING", 1000000)
            STAT_SET_INT("AWD_KEINEMUSIK", 1800000)
            STAT_SET_INT("AWD_PALMS_TRAX", 1800000)
            STAT_SET_INT("AWD_MOODYMANN", 1800000)
            STAT_SET_INT("AWD_FILL_YOUR_BAGS", 1000000000)
            STAT_SET_INT("AWD_WELL_PREPARED", 80)
            STAT_SET_INT("H4_H4_DJ_MISSIONS", -1)
            STAT_SET_BOOL("AWD_INTELGATHER", true)
            STAT_SET_BOOL("AWD_COMPOUNDINFILT", true)
            STAT_SET_BOOL("AWD_LOOT_FINDER", true)
            STAT_SET_BOOL("AWD_MAX_DISRUPT", true)
            STAT_SET_BOOL("AWD_THE_ISLAND_HEIST", true)
            STAT_SET_BOOL("AWD_GOING_ALONE", true)
            STAT_SET_BOOL("AWD_TEAM_WORK", true)
            STAT_SET_BOOL("AWD_MIXING_UP", true)
            STAT_SET_BOOL("AWD_PRO_THIEF", true)
            STAT_SET_BOOL("AWD_CAT_BURGLAR", true)
            STAT_SET_BOOL("AWD_ONE_OF_THEM", true)
            STAT_SET_BOOL("AWD_GOLDEN_GUN", true)
            STAT_SET_BOOL("AWD_ELITE_THIEF", true)
            STAT_SET_BOOL("AWD_PROFESSIONAL", true)
            STAT_SET_BOOL("AWD_HELPING_OUT", true)
            STAT_SET_BOOL("AWD_COURIER", true)
            STAT_SET_BOOL("AWD_PARTY_VIBES", true)
            STAT_SET_BOOL("AWD_HELPING_HAND", true)
            STAT_SET_BOOL("AWD_ELEVENELEVEN", true)
            STAT_SET_BOOL("COMPLETE_H4_F_USING_VETIR", true)
            STAT_SET_BOOL("COMPLETE_H4_F_USING_LONGFIN", true)
            STAT_SET_BOOL("COMPLETE_H4_F_USING_ANNIH", true)
            STAT_SET_BOOL("COMPLETE_H4_F_USING_ALKONOS", true)
            STAT_SET_BOOL("COMPLETE_H4_F_USING_PATROLB", true)
        end)
        menu.action(UNLOCKER_HEISTS, "名钻赌场抢劫", {}, "", function()
            STAT_SET_INT("CAS_HEIST_NOTS", -1)
            STAT_SET_INT("CH_ARC_CAB_CLAW_TROPHY", -1)
            STAT_SET_INT("CH_ARC_CAB_LOVE_TROPHY", -1)
            STAT_SET_INT("SIGNAL_JAMMERS_COLLECTED", 50)
            STAT_SET_INT("AWD_ODD_JOBS", 52)
            STAT_SET_INT("AWD_PREPARATION", 40)
            STAT_SET_INT("AWD_ASLEEPONJOB", 20)
            STAT_SET_INT("AWD_DAICASHCRAB", 100000)
            STAT_SET_INT("AWD_BIGBRO", 40)
            STAT_SET_INT("AWD_SHARPSHOOTER", 40)
            STAT_SET_INT("AWD_RACECHAMP", 40)
            STAT_SET_INT("AWD_BATSWORD", 1000000)
            STAT_SET_INT("AWD_COINPURSE", 950000)
            STAT_SET_INT("AWD_ASTROCHIMP", 3000000)
            STAT_SET_INT("AWD_MASTERFUL", 40000)
            STAT_SET_INT("H3_BOARD_DIALOGUE0", -1)
            STAT_SET_INT("H3_BOARD_DIALOGUE1", -1)
            STAT_SET_INT("H3_BOARD_DIALOGUE2", -1)
            STAT_SET_INT("H3_VEHICLESUSED", -1)
            STAT_SET_BOOL("AWD_FIRST_TIME1", true)
            STAT_SET_BOOL("AWD_FIRST_TIME2", true)
            STAT_SET_BOOL("AWD_FIRST_TIME3", true)
            STAT_SET_BOOL("AWD_FIRST_TIME4", true)
            STAT_SET_BOOL("AWD_FIRST_TIME5", true)
            STAT_SET_BOOL("AWD_FIRST_TIME6", true)
            STAT_SET_BOOL("AWD_ALL_IN_ORDER", true)
            STAT_SET_BOOL("AWD_SUPPORTING_ROLE", true)
            STAT_SET_BOOL("AWD_LEADER", true)
            STAT_SET_BOOL("AWD_ODD_JOBS", true)
            STAT_SET_BOOL("AWD_SURVIVALIST", true)
            STAT_SET_BOOL("AWD_SCOPEOUT", true)
            STAT_SET_BOOL("AWD_CREWEDUP", true)
            STAT_SET_BOOL("AWD_MOVINGON", true)
            STAT_SET_BOOL("AWD_PROMOCAMP", true)
            STAT_SET_BOOL("AWD_GUNMAN", true)
            STAT_SET_BOOL("AWD_SMASHNGRAB", true)
            STAT_SET_BOOL("AWD_INPLAINSI", true)
            STAT_SET_BOOL("AWD_UNDETECTED", true)
            STAT_SET_BOOL("AWD_ALLROUND", true)
            STAT_SET_BOOL("AWD_ELITETHEIF", true)
            STAT_SET_BOOL("AWD_PRO", true)
            STAT_SET_BOOL("AWD_SUPPORTACT", true)
            STAT_SET_BOOL("AWD_SHAFTED", true)
            STAT_SET_BOOL("AWD_COLLECTOR", true)
            STAT_SET_BOOL("AWD_DEADEYE", true)
            STAT_SET_BOOL("AWD_PISTOLSATDAWN", true)
            STAT_SET_BOOL("AWD_TRAFFICAVOI", true)
            STAT_SET_BOOL("AWD_CANTCATCHBRA", true)
            STAT_SET_BOOL("AWD_WIZHARD", true)
            STAT_SET_BOOL("AWD_APEESCAPE", true)
            STAT_SET_BOOL("AWD_MONKEYKIND", true)
            STAT_SET_BOOL("AWD_AQUAAPE", true)
            STAT_SET_BOOL("AWD_KEEPFAITH", true)
            STAT_SET_BOOL("AWD_TRUELOVE", true)
            STAT_SET_BOOL("AWD_NEMESIS", true)
            STAT_SET_BOOL("AWD_FRIENDZONED", true)
            STAT_SET_BOOL("VCM_FLOW_CS_RSC_SEEN", true)
            STAT_SET_BOOL("VCM_FLOW_CS_BWL_SEEN", true)
            STAT_SET_BOOL("VCM_FLOW_CS_MTG_SEEN", true)
            STAT_SET_BOOL("VCM_FLOW_CS_OIL_SEEN", true)
            STAT_SET_BOOL("VCM_FLOW_CS_DEF_SEEN", true)
            STAT_SET_BOOL("VCM_FLOW_CS_FIN_SEEN", true)
            STAT_SET_BOOL("CAS_VEHICLE_REWARD", false)
            STAT_SET_BOOL("HELP_FURIA", true)
            STAT_SET_BOOL("HELP_MINITAN", true)
            STAT_SET_BOOL("HELP_YOSEMITE2", true)
            STAT_SET_BOOL("HELP_ZHABA", true)
            STAT_SET_BOOL("HELP_IMORGEN", true)
            STAT_SET_BOOL("HELP_SULTAN2", true)
            STAT_SET_BOOL("HELP_VAGRANT", true)
            STAT_SET_BOOL("HELP_VSTR", true)
            STAT_SET_BOOL("HELP_STRYDER", true)
            STAT_SET_BOOL("HELP_SUGOI", true)
            STAT_SET_BOOL("HELP_KANJO", true)
            STAT_SET_BOOL("HELP_FORMULA", true)
            STAT_SET_BOOL("HELP_FORMULA2", true)
            STAT_SET_BOOL("HELP_JB7002", true)
        end)
        menu.action(UNLOCKER_HEISTS, "末日豪劫", {}, "", function()
            STAT_SET_INT("GANGOPS_FM_MISSION_PROG", -1)
            STAT_SET_INT("GANGOPS_FLOW_MISSION_PROG", -1)
            STAT_SET_INT("MPPLY_GANGOPS_ALLINORDER", 100)
            STAT_SET_INT("MPPLY_GANGOPS_LOYALTY", 100)
            STAT_SET_INT("MPPLY_GANGOPS_CRIMMASMD", 100)
            STAT_SET_INT("MPPLY_GANGOPS_LOYALTY2", 100)
            STAT_SET_INT("MPPLY_GANGOPS_LOYALTY3", 100)
            STAT_SET_INT("MPPLY_GANGOPS_CRIMMASMD2", 100)
            STAT_SET_INT("MPPLY_GANGOPS_CRIMMASMD3", 100)
            STAT_SET_INT("MPPLY_GANGOPS_SUPPORT", 100)
            STAT_SET_INT("CR_GANGOP_MORGUE", 10)
            STAT_SET_INT("CR_GANGOP_DELUXO", 10)
            STAT_SET_INT("CR_GANGOP_SERVERFARM", 10)
            STAT_SET_INT("CR_GANGOP_IAABASE_FIN", 10)
            STAT_SET_INT("CR_GANGOP_STEALOSPREY", 10)
            STAT_SET_INT("CR_GANGOP_FOUNDRY", 10)
            STAT_SET_INT("CR_GANGOP_RIOTVAN", 10)
            STAT_SET_INT("CR_GANGOP_SUBMARINECAR", 10)
            STAT_SET_INT("CR_GANGOP_SUBMARINE_FIN", 10)
            STAT_SET_INT("CR_GANGOP_PREDATOR", 10)
            STAT_SET_INT("CR_GANGOP_BMLAUNCHER", 10)
            STAT_SET_INT("CR_GANGOP_BCCUSTOM", 10)
            STAT_SET_INT("CR_GANGOP_STEALTHTANKS", 10)
            STAT_SET_INT("CR_GANGOP_SPYPLANE", 10)
            STAT_SET_INT("CR_GANGOP_FINALE", 10)
            STAT_SET_INT("CR_GANGOP_FINALE_P2", 10)
            STAT_SET_INT("CR_GANGOP_FINALE_P3", 10)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_IAA", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_SUBMARINE", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_MISSILE", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_ALLINORDER", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_LOYALTY", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_LOYALTY2", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_LOYALTY3", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_CRIMMASMD", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_CRIMMASMD2", true)
            STAT_SET_BOOL("MPPLY_AWD_GANGOPS_CRIMMASMD3", true)
        end)
        menu.action(UNLOCKER_HEISTS, "公寓抢劫", {}, "", function()
            STAT_SET_INT("AWD_FINISH_HEISTS", 900)
            STAT_SET_INT("MPPLY_WIN_GOLD_MEDAL_HEISTS", 900)
            STAT_SET_INT("AWD_DO_HEIST_AS_MEMBER", 900)
            STAT_SET_INT("AWD_DO_HEIST_AS_THE_LEADER", 900)
            STAT_SET_INT("AWD_FINISH_HEIST_SETUP_JOB", 900)
            STAT_SET_INT("AWD_FINISH_HEIST", 900)
            STAT_SET_INT("HEIST_COMPLETION", 900)
            STAT_SET_INT("HEISTS_ORGANISED", 900)
            STAT_SET_INT("AWD_CONTROL_CROWDS", 900)
            STAT_SET_INT("AWD_WIN_GOLD_MEDAL_HEISTS", 900)
            STAT_SET_INT("AWD_COMPLETE_HEIST_NOT_DIE", 900)
            STAT_SET_INT("HEIST_START", 900)
            STAT_SET_INT("HEIST_END", 900)
            STAT_SET_INT("CUTSCENE_MID_PRISON", 900)
            STAT_SET_INT("CUTSCENE_MID_HUMANE", 900)
            STAT_SET_INT("CUTSCENE_MID_NARC", 900)
            STAT_SET_INT("CUTSCENE_MID_ORNATE", 900)
            STAT_SET_INT("CR_FLEECA_PREP_1", 5000)
            STAT_SET_INT("CR_FLEECA_PREP_2", 5000)
            STAT_SET_INT("CR_FLEECA_FINALE", 5000)
            STAT_SET_INT("CR_PRISON_PLANE", 5000)
            STAT_SET_INT("CR_PRISON_BUS", 5000)
            STAT_SET_INT("CR_PRISON_STATION", 5000)
            STAT_SET_INT("CR_PRISON_UNFINISHED_BIZ", 5000)
            STAT_SET_INT("CR_PRISON_FINALE", 5000)
            STAT_SET_INT("CR_HUMANE_KEY_CODES", 5000)
            STAT_SET_INT("CR_HUMANE_ARMORDILLOS", 5000)
            STAT_SET_INT("CR_HUMANE_EMP", 5000)
            STAT_SET_INT("CR_HUMANE_VALKYRIE", 5000)
            STAT_SET_INT("CR_HUMANE_FINALE", 5000)
            STAT_SET_INT("CR_NARC_COKE", 5000)
            STAT_SET_INT("CR_NARC_TRASH_TRUCK", 5000)
            STAT_SET_INT("CR_NARC_BIKERS", 5000)
            STAT_SET_INT("CR_NARC_WEED", 5000)
            STAT_SET_INT("CR_NARC_STEAL_METH", 5000)
            STAT_SET_INT("CR_NARC_FINALE", 5000)
            STAT_SET_INT("CR_PACIFIC_TRUCKS", 5000)
            STAT_SET_INT("CR_PACIFIC_WITSEC", 5000)
            STAT_SET_INT("CR_PACIFIC_HACK", 5000)
            STAT_SET_INT("CR_PACIFIC_BIKES", 5000)
            STAT_SET_INT("CR_PACIFIC_CONVOY", 5000)
            STAT_SET_INT("CR_PACIFIC_FINALE", 5000)
            STAT_SET_INT("MPPLY_HEIST_ACH_TRACKER", -1)
            STAT_SET_BOOL("MPPLY_AWD_COMPLET_HEIST_MEM", true)
            STAT_SET_BOOL("MPPLY_AWD_COMPLET_HEIST_1STPER", true)
            STAT_SET_BOOL("MPPLY_AWD_FLEECA_FIN", true)
            STAT_SET_BOOL("MPPLY_AWD_HST_ORDER", true)
            STAT_SET_BOOL("MPPLY_AWD_HST_SAME_TEAM", true)
            STAT_SET_BOOL("MPPLY_AWD_HST_ULT_CHAL", true)
            STAT_SET_BOOL("MPPLY_AWD_HUMANE_FIN", true)
            STAT_SET_BOOL("MPPLY_AWD_PACIFIC_FIN", true)
            STAT_SET_BOOL("MPPLY_AWD_PRISON_FIN", true)
            STAT_SET_BOOL("MPPLY_AWD_SERIESA_FIN", true)
            STAT_SET_BOOL("AWD_FINISH_HEIST_NO_DAMAGE", true)
            STAT_SET_BOOL("AWD_SPLIT_HEIST_TAKE_EVENLY", true)
            STAT_SET_BOOL("AWD_ALL_ROLES_HEIST", true)
            STAT_SET_BOOL("AWD_MATCHING_OUTFIT_HEIST", true)
            STAT_SET_BOOL("HEIST_PLANNING_DONE_PRINT", true)
            STAT_SET_BOOL("HEIST_PLANNING_DONE_HELP_0", true)
            STAT_SET_BOOL("HEIST_PLANNING_DONE_HELP_1", true)
            STAT_SET_BOOL("HEIST_PRE_PLAN_DONE_HELP_0", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_FINALE", true)
            STAT_SET_BOOL("HEIST_IS_TUTORIAL", false)
            STAT_SET_BOOL("HEIST_STRAND_INTRO_DONE", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_ORNATE", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_PRISON", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_BIOLAB", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_NARCOTIC", true)
            STAT_SET_BOOL("HEIST_CUTS_DONE_TUTORIAL", true)
            STAT_SET_BOOL("HEIST_AWARD_DONE_PREP", true)
            STAT_SET_BOOL("HEIST_AWARD_BOUGHT_IN", true)
        end)
        menu.action(UNLOCKER_HEISTS, "事务所合同", {}, "", function()
            STAT_SET_INT("AWD_CONTRACTOR", 50)
            STAT_SET_INT("AWD_COLD_CALLER", 50)
            STAT_SET_INT("AWD_PRODUCER", 60)
            STAT_SET_INT("FIXERTELEPHONEHITSCOMPL", 10)
            STAT_SET_INT("PAYPHONE_BONUS_KILL_METHOD", 10)
            STAT_SET_INT("FIXER_COUNT", 501)
            STAT_SET_INT("FIXER_SC_VEH_RECOVERED", 501)
            STAT_SET_INT("FIXER_SC_VAL_RECOVERED", 501)
            STAT_SET_INT("FIXER_SC_GANG_TERMINATED", 501)
            STAT_SET_INT("FIXER_SC_VIP_RESCUED", 501)
            STAT_SET_INT("FIXER_SC_ASSETS_PROTECTED", 501)
            STAT_SET_INT("FIXER_SC_EQ_DESTROYED", 501)
            STAT_SET_INT("FIXER_EARNINGS", 300000)
            STAT_SET_BOOL("AWD_TEEING_OFF", true)
            STAT_SET_BOOL("AWD_PARTY_NIGHT", true)
            STAT_SET_BOOL("AWD_BILLIONAIRE_GAMES", true)
            STAT_SET_BOOL("AWD_HOOD_PASS", true)
            STAT_SET_BOOL("AWD_STUDIO_TOUR", true)
            STAT_SET_BOOL("AWD_DONT_MESS_DRE", true)
            STAT_SET_BOOL("AWD_BACKUP", true)
            STAT_SET_BOOL("AWD_SHORTFRANK_1", true)
            STAT_SET_BOOL("AWD_SHORTFRANK_2", true)
            STAT_SET_BOOL("AWD_SHORTFRANK_3", true)
            STAT_SET_BOOL("AWD_CONTR_KILLER", true)
            STAT_SET_BOOL("AWD_DOGS_BEST_FRIEND", true)
            STAT_SET_BOOL("AWD_MUSIC_STUDIO", true)
            STAT_SET_BOOL("AWD_SHORTLAMAR_1", true)
            STAT_SET_BOOL("AWD_SHORTLAMAR_2", true)
            STAT_SET_BOOL("AWD_SHORTLAMAR_3", true)
            STAT_SET_BOOL("BS_FRANKLIN_DIALOGUE_0", true)
            STAT_SET_BOOL("BS_FRANKLIN_DIALOGUE_1", true)
            STAT_SET_BOOL("BS_FRANKLIN_DIALOGUE_2", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_SETUP", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_STRAND", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_PARTY", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_PARTY_2", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_PARTY_F", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_BILL", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_BILL_2", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_BILL_F", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_HOOD", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_HOOD_2", true)
            STAT_SET_BOOL("BS_IMANI_D_APP_HOOD_F", true)
        end)

    menu.action(Unlocker_list, "解锁所有联系人", {}, "", function()
        STAT_SET_INT("FM_ACT_PHN", -1)
        STAT_SET_INT("FM_VEH_TX1", -1)
        STAT_SET_INT("FM_CUT_DONE", -1)
        STAT_SET_INT("FM_CUT_DONE_2", -1)

        for i = 2, 9 do
            STAT_SET_INT("FM_ACT_PH" .. i, -1)
        end
    end)

    --解锁节日的内容
    local HolidayContent = menu.list(Unlocker_list, "解锁节日的内容", {}, "")
        menu.textslider(HolidayContent, "解锁南瓜灯(给糖或捣蛋)收藏品", {}, "", {"解锁","清除"}, function (index)
            local toggle = (index==1) and true or false
            for i = 34252, 34261 do
				SET_PACKED_STAT_BOOL_CODE(i, toggle)
			end
        end)

        local XMAS_FEATURES = menu.list(HolidayContent, "解锁圣诞节内容", {}, "")
            menu.action(XMAS_FEATURES, "解锁圣诞服装", {}, "", function()
                for i = 1, 20 do
                    STAT_SET_INT("MPPLY_XMASLIVERIES" .. i, -1)
                end
            end)
            menu.action(XMAS_FEATURES, "解锁线上载具圣诞涂装", {}, "", function()
                STAT_SET_INT("MPPLY_XMASLIVERIES0", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES1", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES2", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES3", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES4", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES5", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES6", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES7", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES8", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES9", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES10", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES11", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES12", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES13", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES14", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES15", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES16", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES17", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES18", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES19", -1)
                STAT_SET_INT("MPPLY_XMASLIVERIES20", -1)
            end)

    local UNLOCKER_SHIRT_HAT = menu.list(Unlocker_list, "解锁服装", {}, "")
        menu.action(UNLOCKER_SHIRT_HAT, "解锁大量帽子和衬衫", {}, "包括大量服装", function()
            for i = 31768, 32273 do
                SET_PACKED_STAT_BOOL_CODE(i, true) -- Found by me in freemode.c, https://www.unknowncheats.me/forum/3196991-post328.html
            end
            -- https://www.unknowncheats.me/forum/3704307-post121.html
            SET_PACKED_STAT_BOOL_CODE(15408, true) -- Black Shrewsbury Cap
            SET_PACKED_STAT_BOOL_CODE(34510, true) -- Glow Believe Backwards Cap
            SET_PACKED_STAT_BOOL_CODE(34509, true) -- Black Believe Backwards Cap
            SET_PACKED_STAT_BOOL_CODE(34508, true) -- Gray Believe Backwards Cap
            SET_PACKED_STAT_BOOL_CODE(34375, true) -- Black LD Organics Forwards Cap
            SET_PACKED_STAT_BOOL_CODE(27087, true) -- Unicorn
            SET_PACKED_STAT_BOOL_CODE(34372, true) -- Horror Pumpkin
            SET_PACKED_STAT_BOOL_CODE(27088, true) -- Gingerbread
            SET_PACKED_STAT_BOOL_CODE(34378, true) -- Junk Energy Drink Chute Bag
            SET_PACKED_STAT_BOOL_CODE(32275, true) -- Circoloco Tee
            SET_PACKED_STAT_BOOL_CODE(32316, true) -- Marathon Hoodie
            SET_PACKED_STAT_BOOL_CODE(34507, true) -- White UFO Boxer Shorts
            SET_PACKED_STAT_BOOL_CODE(34506, true) -- Green UFO Boxer Shorts
            SET_PACKED_STAT_BOOL_CODE(89, true) -- Rockstar V Neck
            SET_PACKED_STAT_BOOL_CODE(87, true) -- Red Skull V Neck 
            SET_PACKED_STAT_BOOL_CODE(36809, true) -- All Type of 'Nemesis' Tees
            SET_PACKED_STAT_BOOL_CODE(22176, true) -- White Solomun Tee
            SET_PACKED_STAT_BOOL_CODE(22192, true) -- Tale Of Us Black Box Tee
            SET_PACKED_STAT_BOOL_CODE(16008, true) -- White Dixon Repeated Logo Tee
            SET_PACKED_STAT_BOOL_CODE(16009, true) -- The Black Madonna Star Tee
            SET_PACKED_STAT_BOOL_CODE(22172, true) -- Black Solomun Yellow Logo Tee
            SET_PACKED_STAT_BOOL_CODE(22170, true) -- Black Tale Of Us Emb. Tee
            SET_PACKED_STAT_BOOL_CODE(22162, true) -- Black Dixon Wilderness Tee
            SET_PACKED_STAT_BOOL_CODE(22150, true) -- Black The Black Madonna Emb. Tee
            SET_PACKED_STAT_BOOL_CODE(30702, true) -- Blue Keinemusik Tee
            SET_PACKED_STAT_BOOL_CODE(30701, true) -- Moodymann Tee
            SET_PACKED_STAT_BOOL_CODE(30699, true) -- Palms Trax LS Tee
            SET_PACKED_STAT_BOOL_CODE(34380, true) -- Pumpkin Tee 
            SET_PACKED_STAT_BOOL_CODE(3613, true) -- Elitas T-shirt
            SET_PACKED_STAT_BOOL_CODE(3781, true) -- Elite Lousy T-shirt
            SET_PACKED_STAT_BOOL_CODE(3780, true) -- Elite Challenge T-Shirt
            SET_PACKED_STAT_BOOL_CODE(3779, true) -- Showroom T-shirt
            SET_PACKED_STAT_BOOL_CODE(3778, true) -- Shot Caller T-shirt
            SET_PACKED_STAT_BOOL_CODE(3777, true) -- One Man Army T-shirt
            SET_PACKED_STAT_BOOL_CODE(3776, true) -- Psycho Killer T-shirt
            SET_PACKED_STAT_BOOL_CODE(3775, true) -- Decorated T-shirt
            SET_PACKED_STAT_BOOL_CODE(3774, true) -- Can't Touch This T-shirt
            SET_PACKED_STAT_BOOL_CODE(3773, true) -- Asshole T-shirt
            SET_PACKED_STAT_BOOL_CODE(3771, true) -- For Hire T-shirt
            SET_PACKED_STAT_BOOL_CODE(3770, true) -- Death Defying T-shirt
            SET_PACKED_STAT_BOOL_CODE(113, true) -- I Heart LC T-shirt
            SET_PACKED_STAT_BOOL_CODE(7551, true) -- DCTL T-Shirt
            SET_PACKED_STAT_BOOL_CODE(9374, true) -- R* Crosswalk Tee
            SET_PACKED_STAT_BOOL_CODE(9385, true) -- Crosswalk Tee
            SET_PACKED_STAT_BOOL_CODE(15402, true) -- White Ammu-Nation Tee
            SET_PACKED_STAT_BOOL_CODE(15392, true) -- Black Coil Hoodie
            SET_PACKED_STAT_BOOL_CODE(42166, true) --烟花渔夫帽
        end)
        menu.action(UNLOCKER_SHIRT_HAT, "解锁蛇皇T恤", {}, "", function()
            STAT_SET_INT("DCTL_WINS", 500)
            STAT_SET_INT("DCTL_PLAY_COUNT", 750)
        end)
        menu.action(UNLOCKER_SHIRT_HAT, "解锁古奇服装", {}, "", function()
            SET_PACKED_STAT_BOOL_CODE(34761, true)
        end)
        menu.action(UNLOCKER_SHIRT_HAT, "解锁雪人服装", {}, "", function()
            SET_PACKED_STAT_BOOL_CODE(36776, true)
            HUD.BEGIN_TEXT_COMMAND_THEFEED_POST("SNOWOUTUN0")
			HUD.END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU("CLOTHES_UNLOCK", 7, "SNOWOUTUN0", 1)
        end)

    local UNLOCKER_TATTOO = menu.list(Unlocker_list, "解锁纹身", {}, "", function(); end)
        menu.action(UNLOCKER_TATTOO, "解锁大量纹身", {}, "", function()
            -- https://www.unknowncheats.me/forum/3252891-post942.html
            STAT_SET_INT("AWD_CAR_BOMBS_ENEMY_KILLS", 25) -- Trust No One
            STAT_SET_INT("AWD_HOLD_UP_SHOPS", 20) -- Clown, Clown and Gun, Clown Dual Wield & Clown Dual Wield Dollar
            STAT_SET_INT("AWD_FMBBETWIN", 50000) -- Hustler
            STAT_SET_INT("AWD_100_HEADSHOTS", 500) -- Skull
            STAT_SET_INT("AWD_FM_DM_WINS", 50) -- Burning Heart
            STAT_SET_INT("AWD_RACES_WON", 50) -- Racing Brunette
            STAT_SET_INT("AWD_FMREVENGEKILLSDM", 50) -- Dragon and Dagger
            STAT_SET_INT("AWD_FM_DM_TOTALKILLS", 500) -- Melting Skull
            STAT_SET_INT("LAP_DANCED_BOUGHT", 25) -- Hottie
            STAT_SET_INT("AWD_FM_TDM_MVP", 50) -- Grim Reaper
            STAT_SET_INT("AWD_FMKILLBOUNTY", 25) -- Skull and Sword
            STAT_SET_INT("SNIPERRFL_ENEMY_KILLS", 100) -- Broken Skull
            STAT_SET_BOOL("AWD_FMWINEVERYGAMEMODE", true) -- Angel
            STAT_SET_BOOL("AWD_FMMOSTKILLSSURVIVE", true) -- The Wages of Sin
            STAT_SET_BOOL("AWD_FMRACEWORLDRECHOLDER", true) -- Racing Blonde
            STAT_SET_BOOL("AWD_FMATTGANGHQ", true) -- Grim Reaper Smoking Gun
            STAT_SET_BOOL("AWD_FMKILL3ANDWINGTARACE", true) -- Ride or Die
            STAT_SET_BOOL("AWD_FMKILLSTREAKSDM", true) -- Flaming Skull

            -- https://www.unknowncheats.me/forum/3647348-post2928.html
            STAT_SET_INT("KILLS_PLAYERS", 250) -- Blank Scroll
            STAT_SET_INT("KILLS_PLAYERS", 500) -- Embellished Scroll
            STAT_SET_INT("KILLS_PLAYERS", 1000) -- Seven Deadly Sins
            STAT_SET_BOOL("AWD_FMFULLYMODDEDCAR", true) -- Los Santos Customs

            -- https://www.unknowncheats.me/forum/3662516-post2964.html
            SET_PACKED_STAT_BOOL_CODE(15887, true) -- Lucky 7s Tattoo - Male
            SET_PACKED_STAT_BOOL_CODE(15894, true) -- The Royals Tattoo - Male
            SET_PACKED_STAT_BOOL_CODE(15898, true) -- Lucky 7s Tattoo - Female
            SET_PACKED_STAT_BOOL_CODE(15905, true) -- The Royals Tattoo - Female
        end)
        menu.action(UNLOCKER_TATTOO, "外星人全能之眼纹身(光明会)", {}, "切换战局生效", function()
            SET_PACKED_STAT_BOOL_CODE(15737, true) -- Male
            SET_PACKED_STAT_BOOL_CODE(15748, true) -- Female
            STAT_SET_INT("TATTOO_FM_CURRENT_32", -1)
        end)

    local unlocker_vehicle = menu.list(Unlocker_list, "解锁载具", {}, "")
        menu.action(unlocker_vehicle, "解锁载具批发价", {}, "部分载具", function()
            STAT_SET_INT("GANGOPS_FLOW_BITSET_MISS0", -1)
            STAT_SET_INT("LFETIME_HANGAR_BUY_UNDETAK", 42)
            STAT_SET_INT("LFETIME_HANGAR_BUY_COMPLET", 42)
            STAT_SET_INT("AT_FLOW_IMPEXP_NUM", 32)
            STAT_SET_INT("AT_FLOW_VEHICLE_BS", -1)
            STAT_SET_INT("WVM_FLOW_VEHICLE_BS", -1)
            STAT_SET_INT("H3_BOARD_DIALOGUE0", -1)
            STAT_SET_INT("H3_BOARD_DIALOGUE1", -1)
            STAT_SET_INT("H3_BOARD_DIALOGUE2", -1)
            STAT_SET_INT("H3_VEHICLESUSED", -1)
            STAT_SET_INT("WAM_FLOW_VEHICLE_BS", -1)
            STAT_SET_BOOL("HELP_VETO", true)
            STAT_SET_BOOL("HELP_VETO2", true)
            STAT_SET_BOOL("HELP_ITALIRSX", true)
            STAT_SET_BOOL("HELP_BRIOSO2", true)
            STAT_SET_BOOL("HELP_MANCHEZ2", true)
            STAT_SET_BOOL("HELP_SLAMTRUCK", true)
            STAT_SET_BOOL("HELP_VETIR", true)
            STAT_SET_BOOL("HELP_SQUADDIE", true)
            STAT_SET_BOOL("HELP_DINGY5", true)
            STAT_SET_BOOL("HELP_VERUS", true)
            STAT_SET_BOOL("HELP_WEEVIL", true)
            STAT_SET_BOOL("HELP_VEHUNTUNER", true)
            STAT_SET_BOOL("FIXER_VEH_HELP", true)
            STAT_SET_BOOL("HELP_DOMINATOR7", true)
            STAT_SET_BOOL("HELP_JESTER4", true)
            STAT_SET_BOOL("HELP_FUTO2", true)
            STAT_SET_BOOL("HELP_DOMINATOR8", true)
            STAT_SET_BOOL("HELP_PREVION", true)
            STAT_SET_BOOL("HELP_GROWLER", true)
            STAT_SET_BOOL("HELP_COMET6", true)
            STAT_SET_BOOL("HELP_VECTRE", true)
            STAT_SET_BOOL("HELP_SULTAN3", true)
            STAT_SET_BOOL("HELP_CYPHER", true)
        end)
        menu.action(unlocker_vehicle, "出租车制服", {}, "市区出租车公司的制服", function() -- https://www.unknowncheats.me/forum/3630202-post2734.html
            STAT_SET_INT("AWD_TAXIDRIVER", 100)
        end)
        menu.action(unlocker_vehicle, "解锁圣太郎", {}, "", function()
            STAT_SET_INT("CRDEADLINE", -1)
        end)

    local unlocker_weapon = menu.list(Unlocker_list, "解锁特殊武器&涂饰", {}, "")
        menu.action(unlocker_weapon, "石斧", {}, "", function()
            STAT_SET_MASKED_INT("MP_NGDLCPSTAT_INT0", 5, 16)
            STAT_SET_BOOL("MPPLY_MELEECHLENGECOMPLETED", true)
        end)
        menu.action(unlocker_weapon, "双动式左轮手枪", {}, "", function()
            STAT_SET_MASKED_INT("GANGOPSPSTAT_INT102", 3, 24)
            STAT_SET_BOOL("MPPLY_HEADSHOTCHLENGECOMPLETED", true)
        end)
        menu.action(unlocker_weapon, "海军左轮手枪", {}, "", function()
            STAT_SET_BOOL("MPPLY_NAVYREVOLVERCOMPLETED", true)
        end)
        menu.action(unlocker_weapon, "陶瓷手枪", {}, "", function()
            STAT_SET_INT("CAS_HEIST_FLOW", 4096)
        end)
        menu.action(unlocker_weapon, "拐杖糖", {}, "", function()
            SET_PACKED_STAT_BOOL_CODE(42249, true)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PLAYER.PLAYER_PED_ID(), util.joaat("WEAPON_CANDYCANE"), 9999, false)
        end)
        menu.action(unlocker_weapon, "雪球发射器", {}, "", function()
            SET_PACKED_STAT_BOOL_CODE(42148, true)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PLAYER.PLAYER_PED_ID(), util.joaat("WEAPON_SNOWLAUNCHER"), 9999, false)
        end)
        menu.action(unlocker_weapon, "移除危害性汽油桶", {}, "", function()
            WEAPON.REMOVE_WEAPON_FROM_PED(PLAYER.PLAYER_PED_ID(), util.joaat("WEAPON_HAZARDCAN"))
            STAT_SET_INT("HAZARDCAN_FM_AMMO_CURRENT", 0)
        end)
        menu.action(unlocker_weapon, "雪人涂饰", {}, "战斗手枪雪人涂饰", function()
            SET_PACKED_STAT_BOOL_CODE(42068, true)
        end)
        menu.action(unlocker_weapon, "圣诞老人帮手涂饰", {}, "重型狙击步枪圣诞老人帮手涂饰", function()
            SET_PACKED_STAT_BOOL_CODE(42069, true)
        end)
        menu.action(unlocker_weapon, "骷髅头圣诞老人涂饰", {}, "特制卡宾步枪骷髅头圣诞老人涂饰", function()
            STAT_SET_INT(-76485593, 5)
            SET_PACKED_STAT_BOOL_CODE(42122, true)
        end)

    menu.action(Unlocker_list, "解锁性感火辣奖章(香草独角兽)", {}, "", function()
        for i = 0, 25, 5 do
            STAT_SET_INT("LAP_DANCED_BOUGHT", i)
        end
        STAT_SET_INT("PROSTITUTES_FREQUENTED", 1000)
    end)
    menu.action(Unlocker_list, "解锁所有", {}, "", function()
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STAM"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STRN"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_LUNG"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_DRIV"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_FLY"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_SHO"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STL"), 100, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP0_AWD_FMRACEWORLDRECHOLDER"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_ENEMYDRIVEBYKILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_USJS_COMPLETED"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_USJS_FOUND"), 50, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP0_AWD_FMWINALLRACEMODES"), 1, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP0_AWD_FMWINEVERYGAMEMODE"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_DB_PLAYER_KILLS"), 1000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_KILLS_PLAYERS"), 1000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FMHORDWAVESSURVIVE"), 21, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_CAR_BOMBS_ENEMY_KILLS"), 25, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_TDM_MVP"), 60, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_HOLD_UP_SHOPS"), 20, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_RACES_WON"), 101, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_NO_ARMWRESTLING_WINS"), 21, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP0_AWD_FMATTGANGHQ"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FMBBETWIN"), 50000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_DM_WINS"), 51, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP0_AWD_FMFULLYMODDEDCAR"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_DM_TOTALKILLS"), 500, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_DM_TOTAL_DEATHS"), 412, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TIMES_FINISH_DM_TOP_3"), 36, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_PLAYER_HEADSHOTS"), 623, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_DM_WINS"), 63, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_TDM_WINS"), 13, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_GTA_RACES_WON"), 12, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_GOLF_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_TG_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_RT_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_CT_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_GRAN_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_FM_TENNIS_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TENNIS_MATCHES_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TOTAL_TDEATHMATCH_WON"), 63, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TOTAL_RACES_WON"), 101, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TOTAL_DEATHMATCH_LOST"), 23, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MPPLY_TOTAL_RACES_LOST"), 36, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_25_KILLS_STICKYBOMBS"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_50_KILLS_GRENADES"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_GRENADE_ENEMY_KILLS"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_AWD_20_KILLS_MELEE"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MOLOTOV_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CMBTPISTOL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_PISTOL50_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_APPISTOL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MICROSMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_ASLTSMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_ASLTRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CRBNRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_ADVRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CMBTMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_ASLTMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_PUMP_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SAWNOFF_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_BULLPUP_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_ASLTSHTGN_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SNIPERRFL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HVYSNIPER_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_GRNLAUNCH_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_RPG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MINIGUNS_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_GRENADE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SMKGRENADE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_STKYBMB_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_MOLOTOV_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_JBIB_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_LEGS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_FEET_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_BERD_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_8"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_9"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_PROPS_10"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_OUTFIT"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_HAIR_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_JBIB_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_LEGS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_FEET_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_BERD_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_8"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_9"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_PROPS_10"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_OUTFIT"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_TORSO"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_SPECIAL2_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_DECL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_TEETH"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_TEETH_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_AVAILABLE_TEETH_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_TORSO"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_SPECIAL2_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_DECL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_CLTHS_ACQUIRED_TEETH"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STAM"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STRN"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_LUNG"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_DRIV"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_FLY"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_SHO"), 100, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STL"), 100, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP1_AWD_FMRACEWORLDRECHOLDER"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_ENEMYDRIVEBYKILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_USJS_COMPLETED"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_USJS_FOUND"), 50, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP1_AWD_FMWINALLRACEMODES"), 1, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP1_AWD_FMWINEVERYGAMEMODE"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_DB_PLAYER_KILLS"), 1000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_KILLS_PLAYERS"), 1000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FMHORDWAVESSURVIVE"), 21, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_CAR_BOMBS_ENEMY_KILLS"), 25, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_TDM_MVP"), 60, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_HOLD_UP_SHOPS"), 20, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_RACES_WON"), 101, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_NO_ARMWRESTLING_WINS"), 21, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP1_AWD_FMATTGANGHQ"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FMBBETWIN"), 50000, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_DM_WINS"), 51, 1)
        STATS.STAT_SET_BOOL(MISC.GET_HASH_KEY("MP1_AWD_FMFULLYMODDEDCAR"), 1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_DM_TOTALKILLS"), 500, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_DM_TOTAL_DEATHS"), 412, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TIMES_FINISH_DM_TOP_3"), 36, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_PLAYER_HEADSHOTS"), 623, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_DM_WINS"), 63, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_TDM_WINS"), 13, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_GTA_RACES_WON"), 12, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_GOLF_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_SHOOTRANG_TG_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_SHOOTRANG_RT_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_SHOOTRANG_CT_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_SHOOTRANG_GRAN_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_FM_TENNIS_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TENNIS_MATCHES_WON"), 2, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TOTAL_TDEATHMATCH_WON"), 63, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TOTAL_RACES_WON"), 101, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TOTAL_DEATHMATCH_LOST"), 23, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MPPLY_TOTAL_RACES_LOST"), 36, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_25_KILLS_STICKYBOMBS"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_50_KILLS_GRENADES"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_GRENADE_ENEMY_KILLS"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_AWD_20_KILLS_MELEE"), 50, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MOLOTOV_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CMBTPISTOL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_PISTOL50_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_APPISTOL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MICROSMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_ASLTSMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_ASLTRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CRBNRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_ADVRIFLE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CMBTMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_ASLTMG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_PUMP_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SAWNOFF_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_BULLPUP_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_ASLTSHTGN_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SNIPERRFL_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HVYSNIPER_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_GRNLAUNCH_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_RPG_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MINIGUNS_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_GRENADE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SMKGRENADE_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_STKYBMB_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_MOLOTOV_ENEMY_KILLS"), 600, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_HAIR_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_JBIB_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_LEGS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_FEET_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_BERD_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_8"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_9"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_PROPS_10"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_OUTFIT"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_5"), -1, 1);
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_HAIR_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_JBIB_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_6"), -1, 1);
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_LEGS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_FEET_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_BERD_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_8"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_9"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_PROPS_10"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_OUTFIT"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_TORSO"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_SPECIAL2_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_DECL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_TEETH"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_TEETH_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_AVAILABLE_TEETH_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_TORSO"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_3"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_4"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_5"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_6"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL_7"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL2"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_SPECIAL2_1"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_DECL"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_CLTHS_ACQUIRED_TEETH"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_REV_DA_IN_POSSESSION"), -1, 1)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STAM"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STRN"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_LUNG"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_DRIV"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_FLY"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_SHO"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_SCRIPT_INCREASE_STL"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STAM"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STRN"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_LUNG"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_DRIV"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_FLY"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_SHO"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_SCRIPT_INCREASE_STL"), 100, 0)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MPPLY_VEHICLE_ID_ADMIN_WEB"), 117401876, 1)
    end)